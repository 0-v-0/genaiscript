{"sha":"d880aac54d2ca72485e058e5401e6c9d2eeecc2f8b3df8bc4591d88a76454198","key":{"template":{"id":"lza_file_analysis_targets_deployment","title":"LZA File Analysis - Targets and Deployment"},"fragment":{"fullId":"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep.gpspec.md:0:0","hash":"17f62bed94c81887"}},"val":{"creationTime":"2024-01-19T06:30:34.506Z","cacheTime":"2024-01-19T06:34:09.652Z","response":{"prompt":{"system":"---\nYou are concise. Answer in markdown.\n\n\n---\nWhen generating or updating files you will use the following syntax:\n\nFile ./file1.ts:\n```\nWhat goes in\n./file1.ts.\n```\n\nFile ./file1.py:\n```\nWhat goes in\n./file1.py.\n```\n\nFile /path_to_file/file2.md:\n`````\nWhat goes in\n/path_to_file/file2.md.\n`````\n\nMake sure to use precisely ``` to guard file code sections.\n\nMake sure to use precisely ````` to guard file markdown sections.\n\nUse full path of filename in code section header.\n\nIf a file does not have changes, do not regenerate.\n\n\n---\n\n---\nAnswer in JSON format.\n\n\n","user":"# Context\nYou are a Azure Bicep language expert.\nYou will analyze the contents of SPEC files from a git repository of a Microsoft Azure Landing Zone Accelerator (LZA) for an enterprise software company. The user will share a file and its dependencies for you to analyze.\n\n# Objective\nDetermine what actions the SPEC files will take on Azure and identify the target services or cloud components impacted.\n\n# Definitions\n## Action\nSomething being done by the SPEC file or its dependencies when used. Understanding the Action requires understanding the purpose of the script and its dependencies which requires deeper analysis than just describing the basic implementation of the name or steps in the script. The Action is the *why* of the script, not the *how*.\n\n## Target\nSpecific Azure service or cloud component that will be impacted by the Action. Example Targets include Application Insights, Application Gateway, Virtual Machines, and GitHub but could even include other clouds or custom components.\n\n## Deployed\nAny cloud resource that is deployed after this file is used that was not present before this file was used. Cloud resources that were already deployed before this file was used are not considered Deployed, and any cloud resources that are *always* deleted after this file is used are not considered Deployed.\n\n# Guidance on Actions\nIt is important to explain *why* the Action is being taken and *what* is being done in your description of the Action. Describing the purpose of the Action requires that you understand the value of the performed step. When you write the description of the Action, you should explain *why* and *what* is being done rather than just describing the implementation. For example, a script that clones a git repo doesn't exist to clone a git repo. It exists to download the source code that does something. Your description of the Action should explain what the script is doing with the source code that it downloads with as much detail as you can infer from the provided file contents.\n\n# SourceFile\nYou will be provided with the contents of the file to analyze as well as its dependencies to help you understand what the file is doing.\nIf you are missing a module in the bicep file, use fs_read_file to add the module to the prompt. Ignore .jsonc file references.\n\nIn Bicep, you can use the following syntax to include a module in your file (for example policy-definition.bicep):\n\n```bicep\nmodule policyDefinition 'policy-definition.bicep' = ...\n```\n\n### Source File Guidance\nWhen you generate the JSON response, you will need to include the file path from the file that generated the action or issue in the SourceFile fields.\n\n# Task\n1. Review the Azure file and its dependencies that the user uploads\n2. Perform a very careful analysis of all the file contents that you receive to really understand what is happening\n3. Develop a lengthy list of actions that are being performed by the file and its dependencies. Make sure that you understand what is being done and why it is being done in creating this list using the approach from \"Guidance on Actions\" above.\n4. Double check your list of actions to make sure that you have a complete list of actions and add any that you missed\n5. Organize the actions by the target services or cloud components that are impacted by the actions\n6. Identify any cloud resources that are deployed after this file is used that were not present before this file was used and add them to the \"Deployed\" list. If nothing that you find directly within the provided file content meets this criteria, please leave the list empty.\n7. Return a JSON object using the following format\n## Response format\n```json\n{\n    \"Targets\": {\n        \"Target1\": [\n            {\n                \"SourceFile\": \"file path of the file that is taking Action1 on Target1\",\n                \"Action\": \"Action1 on Target1 Description\"\n            },\n            ...\n        ],\n        \"Target2\": [\n            {\n                \"SourceFile\": \"file path of the file that is taking Action1 on Target2\",\n                \"Action\": \"Action1 on Target2 Description\"\n            },\n            ...\n        ],\n        ...\n    },\n    \"Deployed\": [\n        {\n            \"SourceFile\": \"file path of the file that is deploying this Deployed resource\",\n            \"resource\": \"Deployed Resource 1\",\n            \"parameters\": {\n                \"sku\": \"sku for Deployed Resource 1\",\n                ...\n            }\n        },\n        ...\n    ]\n}\n```\n\n## Example Response\n```json\n{\n    \"Targets\": {\n        \"Application Insights\": [\n            {\n                \"SourceFile\": \"./LZA/ExampleEnterprise/src/scenarios/cost-management/deploy-custom-erp.bicep\",\n                \"Action\": \"Create Application Insights instance on Azure and connect it to the application that was provisioned on the Virtual Machine in East US\"\n            }\n        ],\n        \"Virtual Machines\": [\n            {\n                \"SourceFile\": \"./LZA/ExampleEnterprise/src/scenarios/cost-management/deploy-custom-erp.bicep\",\n                \"Action\": \"Create a Virtual Machine in East US 2 with the latest version of Ubuntu\"\n            }\n        ],\n        \"Azure Policy\": [\n            {\n                \"SourceFile\": \"./LZA/ExampleEnterprise/src/scenarios/cost-management/erp-policy.bicep\",\n                \"Action\": \"Create an Azure Policy that requires all Virtual Machines to have a tag with the value 'Environment' set to 'Development,' 'Staging,' or 'Production'\"\n            }\n        ]\n    },\n    \"Deployed\": [\n        {\n            \"SourceFile\": \"./LZA/ExampleEnterprise/src/scenarios/cost-management/deploy-custom-erp.bicep\",\n            \"resource\": \"Virtual Machine\",\n            \"parameters\": {\n                \"sku\": \"B32s v2\"\n            }\n        },\n        {\n            \"SourceFile\": \"./LZA/ExampleEnterprise/src/scenarios/cost-management/app-insights.bicep\",\n            \"resource\": \"Azure Monitor\",\n            \"parameters\": {\n                \"Application Insights\": {\n                    \"Application_Type\": \"web\",\n                    \"Request_Source\": \"rest\",\n                    \"publicNetworkAccessForIngestion\": \"Enabled\",\n                    \"publicNetworkAccessForQuery\": \"Enabled\",\n                    \"RetentionInDays\": 30,\n                    \"SamplingPercentage\": 100\n                },\n                \"logAnalyticsRetention\": \"30 days\",\n            },\n        }\n    ]\n}\n```\n\nSPECS:\n``` file=aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\n// ------------------\n//    PARAMETERS\n// ------------------\n\n@description('The location where the resources will be created.')\nparam location string\n\n@description('The name of the Container Registry that will be allow-listed by the policy.')\nparam containerRegistryName string\n\nvar namingRules = json(loadTextContent('../../../../../../shared/bicep/naming/naming-rules.jsonc'))\n\n// Azure Container Apps Built-in Policy Definitions: https://learn.microsoft.com/azure/container-apps/policy-reference#policy-definitions\nvar builtInPolicies = [  \n  {\n    name: 'authentication-should-be-enabled-on-container-apps'\n    definition: {\n      properties: {\n        displayName: 'Authentication should be enabled on container apps'\n        description: 'Container Apps Authentication is a feature that can prevent anonymous HTTP requests from reaching the Container App, or authenticate those that have tokens before they reach the Container App'\n      }\n    }\n    parameters: {\n      effect: {\n        value: 'AuditIfNotExists'\n      }\n    }\n    policyDefinitionId: '/providers/Microsoft.Authorization/policyDefinitions/2b585559-a78e-4cc4-b1aa-fb169d2f6b96'\n  }\n  {\n    name: 'container-app-environments-should-use-network-injection'\n    definition: {\n      properties: {\n        displayName: 'Container App environments should use network injection'\n        description: 'Container Apps environments should use virtual network injection to: 1.Isolate Container Apps from the public internet 2.Enable network integration with resources on-premises or in other Azure virtual networks 3.Achieve more granular control over network traffic flowing to and from the environment'    \n      }\n    }\n    parameters: {\n      effect: {\n        value: 'Audit'\n      }\n    }\n    policyDefinitionId: '/providers/Microsoft.Authorization/policyDefinitions/8b346db6-85af-419b-8557-92cee2c0f9bb'\n  }\n  {\n    name: 'container-app-should-configure-with-volume-mount'\n    definition: {\n      properties: {\n        displayName: 'Container App should configure with volume mount'\n        description: 'Enforce the use of volume mounts for Container Apps to ensure availability of persistent storage capacity'    \n      }\n    }\n    parameters: {\n      effect: {\n        value: 'Audit'\n      }\n    }\n    policyDefinitionId: '/providers/Microsoft.Authorization/policyDefinitions/7c9f3fbb-739d-4844-8e42-97e3be6450e0'\n  }\n  {\n    name: 'container-app-should-disable-public-network-access'\n    definition: {\n      properties: {\n        displayName: 'Container Apps environment should disable public network access'\n        description: 'Disable public network access to improve security by exposing the Container Apps environment through an internal load balancer. This removes the need for a public IP address and prevents internet access to all Container Apps within the environment.'    \n      }\n    }\n    parameters: {\n      effect: {\n        value: 'Audit'\n      }\n    }\n    policyDefinitionId: '/providers/Microsoft.Authorization/policyDefinitions/d074ddf8-01a5-4b5e-a2b8-964aed452c0a'\n  }\n  {\n    name: 'container-apps-should-disable-external-network-access'\n    definition: {\n      properties: {\n        displayName: 'Container Apps should disable external network access'\n        description: 'Disable external network access to your Container Apps by enforcing internal-only ingress. This will ensure inbound communication for Container Apps is limited to callers within the Container Apps environment'    \n      }\n    }\n    parameters: {\n      effect: {\n        value: 'Audit'\n      }\n    }\n    policyDefinitionId: '/providers/Microsoft.Authorization/policyDefinitions/783ea2a8-b8fd-46be-896a-9ae79643a0b1'\n  }\n  {\n    name: 'containerapps-should-only-be-accessible-over-HTTPS'\n    definition: {\n      properties: {\n        displayName: 'Container Apps should only be accessible over HTTPS'\n        description: 'Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks. Disabling \"allowInsecur\" will result in the automatic redirection of requests from HTTP to HTTPS connections for container apps.'    \n      }\n    }\n    parameters: {\n      effect: {\n        value: 'Audit'\n      }\n    }\n    policyDefinitionId: '/providers/Microsoft.Authorization/policyDefinitions/0e80e269-43a4-4ae9-b5bc-178126b8a5cb'\n  }\n  {\n    name: 'managed-identity-should-be-enabled'\n    definition: {\n      properties: {\n        displayName: 'Managed Identity should be enabled for Container Apps'\n        description: 'Enforcing managed identity ensures Container Apps can securely authenticate to any resource that supports Azure AD authentication'    \n      }\n    }\n    parameters: {\n      effect: {\n        value: 'Audit'\n      }\n    }\n    policyDefinitionId: '/providers/Microsoft.Authorization/policyDefinitions/b874ab2d-72dd-47f1-8cb5-4a306478a4e7'\n  }\n  \n]\n\n// credits: https://techcommunity.microsoft.com/t5/fasttrack-for-azure/azure-policy-for-azure-container-apps-yes-please/ba-p/3775200\n// https://github.com/Azure-Samples/aca-azure-policy/tree/main\nvar customPolicies = [\n  {\n    name: 'aca-allowed-container-registries'\n    definition: json(loadTextContent('policy-definitions/aca-allowed-container-registries.json'))\n    parameters: {\n      listOfAllowedContainerRegistries: {\n        value: [\n          'mcr.microsoft.com'\n          'docker.io'\n          'ghcr.io'\n          '${containerRegistryName}.azurecr.io'\n        ]\n      }\n      effect: {\n        value: 'Audit'\n      }\n    }\n  }\n  {\n    name: 'aca-replica-count'\n    definition: json(loadTextContent('policy-definitions/aca-replica-count.json'))\n    parameters: {\n      minReplicas: {\n        value: 0\n      }\n      maxReplicas: {\n        value: 30\n      }\n      effect: {\n        value: 'Audit'\n      }\n    }\n    identity: false\n  }\n  {\n    name: 'aca-no-liveness-probes'\n    definition: json(loadTextContent('policy-definitions/aca-no-liveness-probes.json'))\n    parameters: {\n      effect: {\n        value: 'Audit'\n      }\n    }\n    identity: false\n  }\n  {\n    name: 'aca-no-readiness-probes'\n    definition: json(loadTextContent('policy-definitions/aca-no-readiness-probes.json'))\n    parameters: {\n      effect: {\n        value: 'Audit'\n      }\n    }\n    identity: false\n  }\n  {\n    name: 'aca-no-startup-probes'\n    definition: json(loadTextContent('policy-definitions/aca-no-startup-probes.json'))\n    parameters: {\n      effect: {\n        value: 'Audit'\n      }\n    }\n    identity: false\n  }\n  {\n    name: 'aca-required-cpu-and-memory'\n    definition: json(loadTextContent('policy-definitions/aca-required-cpu-and-memory.json'))\n    parameters: {\n      maxCpu: {\n        value: '1.0'\n      }\n      maxMemory: {\n        value: '2.5'\n      }\n      effect: {\n        value: 'Audit'\n      }\n    }\n    identity: false\n  }\n  {\n    name: 'aca-no-monitoring'\n    definition: json(loadTextContent('policy-definitions/aca-no-monitoring.json'))\n    parameters: {\n      effect: {\n        value: 'Audit'\n      }\n    }\n    identity: false\n  }\n]\n\nmodule builtInPolicyAssignment 'policy-assignment.bicep' = [for (policy, i) in builtInPolicies: {\n  name: 'poAssign_${take(policy.name, 40)}'\n  params: {    \n    location: location\n    policy: policy\n    policyDefinitionId: policy.policyDefinitionId    \n  }  \n}]\n\n\n// resource policyDefinition 'Microsoft.Authorization/policyDefinitions@2021-06-01' = [for policy in customPolicies: {\n//   name: guid(policy.name)\n//   properties: {\n//     description: policy.definition.properties.description\n//     displayName: policy.definition.properties.displayName\n//     metadata: policy.definition.properties.metadata\n//     mode: policy.definition.properties.mode\n//     parameters: policy.definition.properties.parameters\n//     policyType: policy.definition.properties.policyType\n//     policyRule: policy.definition.properties.policyRule\n//   }\n// }]\n\nmodule policyDefinition 'policy-definition.bicep' = [for policy in customPolicies: {\n  name: 'poDef_${namingRules.regionAbbreviations[toLower(location)]}_${guid(policy.name)}'\n  scope: subscription()\n  params: {\n    policy: policy\n  }\n}]\n\nmodule customPolicyAssignment 'policy-assignment.bicep' = [for (policy, i) in customPolicies: {\n  name: 'poAssign_${take(policy.name, 40)}'\n  params: {    \n    location: location\n    policy: policy\n    policyDefinitionId: policyDefinition[i].outputs.policyDefinitionId  \n  } \n  dependsOn: [\n    policyDefinition\n  ] \n}]\n```\n\n"},"edits":[{"label":"Create /workspaces/coarch/applications/lza/aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep.lza_file_analysis_targets_deployment.json","filename":"/workspaces/coarch/applications/lza/aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep.lza_file_analysis_targets_deployment.json","type":"createfile","text":"\n{\n    \"Targets\": {\n        \"Azure Container Apps\": [\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit the configuration of Container Apps to ensure authentication is enabled, preventing anonymous HTTP requests.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container App environments to verify the use of network injection for isolation and granular network traffic control.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to enforce the configuration with volume mounts for persistent storage capacity.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps environments to ensure public network access is disabled for improved security.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to ensure external network access is disabled, enforcing internal-only ingress.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to ensure they are only accessible over HTTPS, redirecting HTTP requests to HTTPS.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to verify that Managed Identity is enabled for secure Azure AD authentication.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to restrict the list of allowed container registries, ensuring compliance with organizational standards.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to ensure the replica count is within the specified range for scalability and resource management.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to ensure liveness, readiness, and startup probes are not configured, as per organizational policies.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to ensure CPU and memory resource limits are within the specified maximums for cost control.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to verify that monitoring is not enabled, adhering to the organizational security and compliance requirements.\"\n            }\n        ],\n        \"Azure Policy\": [\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Define and assign custom Azure Policies for Container Apps to enforce organizational standards and compliance.\"\n            }\n        ]\n    },\n    \"Deployed\": []\n}","overwrite":true}],"annotations":[],"changelogs":[],"fileEdits":{"/workspaces/coarch/applications/lza/aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep.lza_file_analysis_targets_deployment.json":{"before":null,"after":"\n{\n    \"Targets\": {\n        \"Azure Container Apps\": [\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit the configuration of Container Apps to ensure authentication is enabled, preventing anonymous HTTP requests.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container App environments to verify the use of network injection for isolation and granular network traffic control.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to enforce the configuration with volume mounts for persistent storage capacity.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps environments to ensure public network access is disabled for improved security.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to ensure external network access is disabled, enforcing internal-only ingress.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to ensure they are only accessible over HTTPS, redirecting HTTP requests to HTTPS.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to verify that Managed Identity is enabled for secure Azure AD authentication.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to restrict the list of allowed container registries, ensuring compliance with organizational standards.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to ensure the replica count is within the specified range for scalability and resource management.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to ensure liveness, readiness, and startup probes are not configured, as per organizational policies.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to ensure CPU and memory resource limits are within the specified maximums for cost control.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to verify that monitoring is not enabled, adhering to the organizational security and compliance requirements.\"\n            }\n        ],\n        \"Azure Policy\": [\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Define and assign custom Azure Policies for Container Apps to enforce organizational standards and compliance.\"\n            }\n        ]\n    },\n    \"Deployed\": []\n}"}},"trace":"## lza_file_analysis_targets_deployment\n\n\n\n<details id=\"🤖-automation\"><summary>\n🤖 automation\n</summary>\n\nThis operation can be run from the command line:\n\n```bash\nnode .gptools/gptools.js run lza_file_analysis_targets_deployment aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep --apply-edits\n```\n\n-   You will need to install [Node.js](https://nodejs.org/en/).\n-   Configure the OpenAI token in environment variables (run `node .gptools/gptools help keys` for help).\n-   The `.gptools/gptools.js` is written by the Visual Studio Code extension automatically.\n-   Run `node .gptools/gptools help run` for the full list of options.\n\n</details>\n\n\n\n<details id=\"🔤-console-output\"><summary>\n🔤 console output\n</summary>\n\n> use `console.log()` from gptool.js files`\n\n</details>\n\n\n\n<details id=\"🎰-variables\"><summary>\n🎰 variables\n</summary>\n\n> Variables are referenced through `env.NAME` in prompts.\n-   env.**error**: `ERROR-QPKIOY`\n-   -   env.**file**\n\n```js\n{ filename: \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/mo\"...,\nlabel: \"current\",\ncontent: \"# Specification\\n\\n-   [policy-definition.module.bicep](./poli\"... }\n```\n-   -   env.**links**\n\n```js\n[ { label: \"policy-definition.module.bicep\",\n  filename: \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/mo\"...,\n  content: \"// ------------------\\n//    PARAMETERS\\n// ------------------\"... } ]\n```\n-   -   env.**parents**\n\n```js\n[  ]\n```\n-   -   env.**fence**\n\n``````markdown\n```\n``````\n-   -   env.**markdownFence**\n\n``````markdown\n`````\n``````\n-   -   env.**promptOptions**\n\n```js\n{  }\n```\n-   -   env.**vars**\n\n```js\n{  }\n```\n-   -   env.**functions**\n\n```js\n[  ]\n```\n-   -   env.**template**\n\n```js\n{ id: \"lza_file_analysis_targets_deployment\",\ntitle: \"LZA File Analysis - Targets and Deployment\",\ndescription: \"Analyze the contents of SPEC files from a git repository of \"... }\n```\n-   -   env.**chat**\n\n```js\n{ history: [  ],\nprompt: \"\" }\n```\n\n</details>\n\n\n\n<details id=\"👾-system-gptools\"><summary>\n👾 system gptools\n</summary>\n\n### `system` source\n\n\n```js\nsystem({ title: \"Markdown system prompt\" })\n$`You are concise. Answer in markdown.`\n```\n#### expanded\n\n\n``````markdown\nYou are concise. Answer in markdown.\n``````\n### `system.files` source\n\n\n```js\nsystem({\n    title: \"File generation\",\n    description: \"Teaches the file format supported by GPTools\",\n})\n\nconst folder =\n    env.vars[\"outputFolder\"] || env.template.outputFolder\n$`When generating or updating files you will use the following syntax:`\n\ndef(\n    `File ${folder || \".\"}/file1.ts`,\n    `What goes in\\n${folder || \".\"}/file1.ts.`,\n    { language: \"typescript\" }\n)\ndef(\n    `File ${folder || \".\"}/file1.py`,\n    `What goes in\\n${folder || \".\"}/file1.py.`,\n    { language: \"python\" }\n)\ndef(\n    `File /path_to_file/file2.md`,\n    `What goes in\\n/path_to_file/file2.md.`,\n    { language: \"markdown\" }\n)\n\n$`Make sure to use precisely ${env.fence} to guard file code sections.`\n$`Make sure to use precisely ${env.markdownFence} to guard file markdown sections.`\n$`Use full path of filename in code section header.`\nif (folder) $`When generating new files, place files in folder \"${folder}\".`\n$`If a file does not have changes, do not regenerate.`\n```\n#### expanded\n\n\n``````markdown\nWhen generating or updating files you will use the following syntax:\n\nFile ./file1.ts:\n```\nWhat goes in\n./file1.ts.\n```\n\nFile ./file1.py:\n```\nWhat goes in\n./file1.py.\n```\n\nFile /path_to_file/file2.md:\n`````\nWhat goes in\n/path_to_file/file2.md.\n`````\n\nMake sure to use precisely ``` to guard file code sections.\n\nMake sure to use precisely ````` to guard file markdown sections.\n\nUse full path of filename in code section header.\n\nIf a file does not have changes, do not regenerate.\n``````\n### `system.fs` source\n\n\n```js\nsystem({\n    title: \"File System functions\",\n    description: \"Functions to surface file system operations.\"\n})\n\ndefFunction(\n    \"fs_find_files\",\n    \"Finds file matching a glob pattern.\",\n    {\n        \"type\": \"object\",\n        \"properties\": {\n            \"glob\": {\n                \"type\": \"string\",\n                \"description\": \"Search path.\",\n            },\n        },\n        \"required\": [\"glob\"],\n    },\n    async (args) => {\n        const { context, glob } = args\n        const res = await context.host.findFiles(glob)\n        return res.join(\"\\n\")\n    }\n)\n\ndefFunction(\n    \"fs_read_file\",\n    \"Reads a file as text from the file system.\",\n    {\n        \"type\": \"object\",\n        \"properties\": {\n            \"filename\": {\n                \"type\": \"string\",\n                \"description\": \"Path of the file to load, relative to the workspace.\",\n            },\n            \"linestart\": {\n                \"type\": \"integer\",\n                \"description\": \"Line number (1-based) to start reading from.\",\n            },\n            \"lineend\": {\n                \"type\": \"integer\",\n                \"description\": \"Line number (1-based) to end reading at.\",\n            },\n        },\n        \"required\": [\"filename\"],\n    },\n    async (args) => {\n        let { context, filename, linestart, lineend } = args\n        linestart = parseInt(linestart) - 1\n        lineend = parseInt(lineend)\n        if (!/^\\//.test(filename)) filename = \"workspace://./\" + filename\n        debugger\n        let res = await context.host.readText(filename)\n        if (!isNaN(linestart) && !isNaN(lineend)) {\n            const lines = res.split(\"\\n\")\n            res = lines.slice(linestart, lineend).join(\"\\n\")\n        }\n        return res\n    }\n)\n```\n#### expanded\n\n\n``````markdown\n\n``````\n### `system.json` source\n\n\n```js\nsystem({ title: \"JSON system prompt\", responseType: \"json_object\" })\n$`Answer in JSON format.`\n```\n#### expanded\n\n\n``````markdown\nAnswer in JSON format.\n``````\n\n</details>\n\n\n\n<details id=\"📜-gptool-source\"><summary>\n📜 gptool source\n</summary>\n\n\n```js\ngptool({\n    title: \"LZA File Analysis - Targets and Deployment\",    \n    description: \"Analyze the contents of SPEC files from a git repository of a Microsoft Azure Landing Zone Accelerator (LZA) for an enterprise software company. The user will share a file and its dependencies for you to analyze.\",\n    categories: [\"Azure Landing Zone\"],\n    system: [\"system\", \"system.files\", \"system.fs\", \"system.json\"],\n    model: \"gpt-4\"\n})\n\n// use $ to output formatted text to the prompt\n$`# Context\nYou are a Azure Bicep language expert.\nYou will analyze the contents of SPEC files from a git repository of a Microsoft Azure Landing Zone Accelerator (LZA) for an enterprise software company. The user will share a file and its dependencies for you to analyze.\n\n# Objective\nDetermine what actions the SPEC files will take on Azure and identify the target services or cloud components impacted.\n\n# Definitions\n## Action\nSomething being done by the SPEC file or its dependencies when used. Understanding the Action requires understanding the purpose of the script and its dependencies which requires deeper analysis than just describing the basic implementation of the name or steps in the script. The Action is the *why* of the script, not the *how*.\n\n## Target\nSpecific Azure service or cloud component that will be impacted by the Action. Example Targets include Application Insights, Application Gateway, Virtual Machines, and GitHub but could even include other clouds or custom components.\n\n## Deployed\nAny cloud resource that is deployed after this file is used that was not present before this file was used. Cloud resources that were already deployed before this file was used are not considered Deployed, and any cloud resources that are *always* deleted after this file is used are not considered Deployed.\n\n# Guidance on Actions\nIt is important to explain *why* the Action is being taken and *what* is being done in your description of the Action. Describing the purpose of the Action requires that you understand the value of the performed step. When you write the description of the Action, you should explain *why* and *what* is being done rather than just describing the implementation. For example, a script that clones a git repo doesn't exist to clone a git repo. It exists to download the source code that does something. Your description of the Action should explain what the script is doing with the source code that it downloads with as much detail as you can infer from the provided file contents.\n\n# SourceFile\nYou will be provided with the contents of the file to analyze as well as its dependencies to help you understand what the file is doing.\nIf you are missing a module in the bicep file, use fs_read_file to add the module to the prompt. Ignore .jsonc file references.\n\nIn Bicep, you can use the following syntax to include a module in your file (for example policy-definition.bicep):\n\n\\`\\`\\`bicep\nmodule policyDefinition 'policy-definition.bicep' = ...\n\\`\\`\\`\n\n### Source File Guidance\nWhen you generate the JSON response, you will need to include the file path from the file that generated the action or issue in the SourceFile fields.\n\n# Task\n1. Review the Azure file and its dependencies that the user uploads\n2. Perform a very careful analysis of all the file contents that you receive to really understand what is happening\n3. Develop a lengthy list of actions that are being performed by the file and its dependencies. Make sure that you understand what is being done and why it is being done in creating this list using the approach from \"Guidance on Actions\" above.\n4. Double check your list of actions to make sure that you have a complete list of actions and add any that you missed\n5. Organize the actions by the target services or cloud components that are impacted by the actions\n6. Identify any cloud resources that are deployed after this file is used that were not present before this file was used and add them to the \"Deployed\" list. If nothing that you find directly within the provided file content meets this criteria, please leave the list empty.\n7. Return a JSON object using the following format\n## Response format\n\\`\\`\\`json\n{\n    \"Targets\": {\n        \"Target1\": [\n            {\n                \"SourceFile\": \"file path of the file that is taking Action1 on Target1\",\n                \"Action\": \"Action1 on Target1 Description\"\n            },\n            ...\n        ],\n        \"Target2\": [\n            {\n                \"SourceFile\": \"file path of the file that is taking Action1 on Target2\",\n                \"Action\": \"Action1 on Target2 Description\"\n            },\n            ...\n        ],\n        ...\n    },\n    \"Deployed\": [\n        {\n            \"SourceFile\": \"file path of the file that is deploying this Deployed resource\",\n            \"resource\": \"Deployed Resource 1\",\n            \"parameters\": {\n                \"sku\": \"sku for Deployed Resource 1\",\n                ...\n            }\n        },\n        ...\n    ]\n}\n\\`\\`\\`\n\n## Example Response\n\\`\\`\\`json\n{\n    \"Targets\": {\n        \"Application Insights\": [\n            {\n                \"SourceFile\": \"./LZA/ExampleEnterprise/src/scenarios/cost-management/deploy-custom-erp.bicep\",\n                \"Action\": \"Create Application Insights instance on Azure and connect it to the application that was provisioned on the Virtual Machine in East US\"\n            }\n        ],\n        \"Virtual Machines\": [\n            {\n                \"SourceFile\": \"./LZA/ExampleEnterprise/src/scenarios/cost-management/deploy-custom-erp.bicep\",\n                \"Action\": \"Create a Virtual Machine in East US 2 with the latest version of Ubuntu\"\n            }\n        ],\n        \"Azure Policy\": [\n            {\n                \"SourceFile\": \"./LZA/ExampleEnterprise/src/scenarios/cost-management/erp-policy.bicep\",\n                \"Action\": \"Create an Azure Policy that requires all Virtual Machines to have a tag with the value 'Environment' set to 'Development,' 'Staging,' or 'Production'\"\n            }\n        ]\n    },\n    \"Deployed\": [\n        {\n            \"SourceFile\": \"./LZA/ExampleEnterprise/src/scenarios/cost-management/deploy-custom-erp.bicep\",\n            \"resource\": \"Virtual Machine\",\n            \"parameters\": {\n                \"sku\": \"B32s v2\"\n            }\n        },\n        {\n            \"SourceFile\": \"./LZA/ExampleEnterprise/src/scenarios/cost-management/app-insights.bicep\",\n            \"resource\": \"Azure Monitor\",\n            \"parameters\": {\n                \"Application Insights\": {\n                    \"Application_Type\": \"web\",\n                    \"Request_Source\": \"rest\",\n                    \"publicNetworkAccessForIngestion\": \"Enabled\",\n                    \"publicNetworkAccessForQuery\": \"Enabled\",\n                    \"RetentionInDays\": 30,\n                    \"SamplingPercentage\": 100\n                },\n                \"logAnalyticsRetention\": \"30 days\",\n            },\n        }\n    ]\n}\n\\`\\`\\`\n`\n\ndef(\"SPECS\", env.links)\n```\n\n</details>\n\n\n\n<details id=\"👽-gptool-expanded-prompt\"><summary>\n👽 gptool expanded prompt\n</summary>\n\n-   model: `gpt-4`\n-   temperature: 0.2\n-   response type: json_object\n\n``````markdown\n# Context\nYou are a Azure Bicep language expert.\nYou will analyze the contents of SPEC files from a git repository of a Microsoft Azure Landing Zone Accelerator (LZA) for an enterprise software company. The user will share a file and its dependencies for you to analyze.\n\n# Objective\nDetermine what actions the SPEC files will take on Azure and identify the target services or cloud components impacted.\n\n# Definitions\n## Action\nSomething being done by the SPEC file or its dependencies when used. Understanding the Action requires understanding the purpose of the script and its dependencies which requires deeper analysis than just describing the basic implementation of the name or steps in the script. The Action is the *why* of the script, not the *how*.\n\n## Target\nSpecific Azure service or cloud component that will be impacted by the Action. Example Targets include Application Insights, Application Gateway, Virtual Machines, and GitHub but could even include other clouds or custom components.\n\n## Deployed\nAny cloud resource that is deployed after this file is used that was not present before this file was used. Cloud resources that were already deployed before this file was used are not considered Deployed, and any cloud resources that are *always* deleted after this file is used are not considered Deployed.\n\n# Guidance on Actions\nIt is important to explain *why* the Action is being taken and *what* is being done in your description of the Action. Describing the purpose of the Action requires that you understand the value of the performed step. When you write the description of the Action, you should explain *why* and *what* is being done rather than just describing the implementation. For example, a script that clones a git repo doesn't exist to clone a git repo. It exists to download the source code that does something. Your description of the Action should explain what the script is doing with the source code that it downloads with as much detail as you can infer from the provided file contents.\n\n# SourceFile\nYou will be provided with the contents of the file to analyze as well as its dependencies to help you understand what the file is doing.\nIf you are missing a module in the bicep file, use fs_read_file to add the module to the prompt. Ignore .jsonc file references.\n\nIn Bicep, you can use the following syntax to include a module in your file (for example policy-definition.bicep):\n\n```bicep\nmodule policyDefinition 'policy-definition.bicep' = ...\n```\n\n### Source File Guidance\nWhen you generate the JSON response, you will need to include the file path from the file that generated the action or issue in the SourceFile fields.\n\n# Task\n1. Review the Azure file and its dependencies that the user uploads\n2. Perform a very careful analysis of all the file contents that you receive to really understand what is happening\n3. Develop a lengthy list of actions that are being performed by the file and its dependencies. Make sure that you understand what is being done and why it is being done in creating this list using the approach from \"Guidance on Actions\" above.\n4. Double check your list of actions to make sure that you have a complete list of actions and add any that you missed\n5. Organize the actions by the target services or cloud components that are impacted by the actions\n6. Identify any cloud resources that are deployed after this file is used that were not present before this file was used and add them to the \"Deployed\" list. If nothing that you find directly within the provided file content meets this criteria, please leave the list empty.\n7. Return a JSON object using the following format\n## Response format\n```json\n{\n    \"Targets\": {\n        \"Target1\": [\n            {\n                \"SourceFile\": \"file path of the file that is taking Action1 on Target1\",\n                \"Action\": \"Action1 on Target1 Description\"\n            },\n            ...\n        ],\n        \"Target2\": [\n            {\n                \"SourceFile\": \"file path of the file that is taking Action1 on Target2\",\n                \"Action\": \"Action1 on Target2 Description\"\n            },\n            ...\n        ],\n        ...\n    },\n    \"Deployed\": [\n        {\n            \"SourceFile\": \"file path of the file that is deploying this Deployed resource\",\n            \"resource\": \"Deployed Resource 1\",\n            \"parameters\": {\n                \"sku\": \"sku for Deployed Resource 1\",\n                ...\n            }\n        },\n        ...\n    ]\n}\n```\n\n## Example Response\n```json\n{\n    \"Targets\": {\n        \"Application Insights\": [\n            {\n                \"SourceFile\": \"./LZA/ExampleEnterprise/src/scenarios/cost-management/deploy-custom-erp.bicep\",\n                \"Action\": \"Create Application Insights instance on Azure and connect it to the application that was provisioned on the Virtual Machine in East US\"\n            }\n        ],\n        \"Virtual Machines\": [\n            {\n                \"SourceFile\": \"./LZA/ExampleEnterprise/src/scenarios/cost-management/deploy-custom-erp.bicep\",\n                \"Action\": \"Create a Virtual Machine in East US 2 with the latest version of Ubuntu\"\n            }\n        ],\n        \"Azure Policy\": [\n            {\n                \"SourceFile\": \"./LZA/ExampleEnterprise/src/scenarios/cost-management/erp-policy.bicep\",\n                \"Action\": \"Create an Azure Policy that requires all Virtual Machines to have a tag with the value 'Environment' set to 'Development,' 'Staging,' or 'Production'\"\n            }\n        ]\n    },\n    \"Deployed\": [\n        {\n            \"SourceFile\": \"./LZA/ExampleEnterprise/src/scenarios/cost-management/deploy-custom-erp.bicep\",\n            \"resource\": \"Virtual Machine\",\n            \"parameters\": {\n                \"sku\": \"B32s v2\"\n            }\n        },\n        {\n            \"SourceFile\": \"./LZA/ExampleEnterprise/src/scenarios/cost-management/app-insights.bicep\",\n            \"resource\": \"Azure Monitor\",\n            \"parameters\": {\n                \"Application Insights\": {\n                    \"Application_Type\": \"web\",\n                    \"Request_Source\": \"rest\",\n                    \"publicNetworkAccessForIngestion\": \"Enabled\",\n                    \"publicNetworkAccessForQuery\": \"Enabled\",\n                    \"RetentionInDays\": 30,\n                    \"SamplingPercentage\": 100\n                },\n                \"logAnalyticsRetention\": \"30 days\",\n            },\n        }\n    ]\n}\n```\n\nSPECS:\n``` file=aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\n// ------------------\n//    PARAMETERS\n// ------------------\n\n@description('The location where the resources will be created.')\nparam location string\n\n@description('The name of the Container Registry that will be allow-listed by the policy.')\nparam containerRegistryName string\n\nvar namingRules = json(loadTextContent('../../../../../../shared/bicep/naming/naming-rules.jsonc'))\n\n// Azure Container Apps Built-in Policy Definitions: https://learn.microsoft.com/azure/container-apps/policy-reference#policy-definitions\nvar builtInPolicies = [  \n  {\n    name: 'authentication-should-be-enabled-on-container-apps'\n    definition: {\n      properties: {\n        displayName: 'Authentication should be enabled on container apps'\n        description: 'Container Apps Authentication is a feature that can prevent anonymous HTTP requests from reaching the Container App, or authenticate those that have tokens before they reach the Container App'\n      }\n    }\n    parameters: {\n      effect: {\n        value: 'AuditIfNotExists'\n      }\n    }\n    policyDefinitionId: '/providers/Microsoft.Authorization/policyDefinitions/2b585559-a78e-4cc4-b1aa-fb169d2f6b96'\n  }\n  {\n    name: 'container-app-environments-should-use-network-injection'\n    definition: {\n      properties: {\n        displayName: 'Container App environments should use network injection'\n        description: 'Container Apps environments should use virtual network injection to: 1.Isolate Container Apps from the public internet 2.Enable network integration with resources on-premises or in other Azure virtual networks 3.Achieve more granular control over network traffic flowing to and from the environment'    \n      }\n    }\n    parameters: {\n      effect: {\n        value: 'Audit'\n      }\n    }\n    policyDefinitionId: '/providers/Microsoft.Authorization/policyDefinitions/8b346db6-85af-419b-8557-92cee2c0f9bb'\n  }\n  {\n    name: 'container-app-should-configure-with-volume-mount'\n    definition: {\n      properties: {\n        displayName: 'Container App should configure with volume mount'\n        description: 'Enforce the use of volume mounts for Container Apps to ensure availability of persistent storage capacity'    \n      }\n    }\n    parameters: {\n      effect: {\n        value: 'Audit'\n      }\n    }\n    policyDefinitionId: '/providers/Microsoft.Authorization/policyDefinitions/7c9f3fbb-739d-4844-8e42-97e3be6450e0'\n  }\n  {\n    name: 'container-app-should-disable-public-network-access'\n    definition: {\n      properties: {\n        displayName: 'Container Apps environment should disable public network access'\n        description: 'Disable public network access to improve security by exposing the Container Apps environment through an internal load balancer. This removes the need for a public IP address and prevents internet access to all Container Apps within the environment.'    \n      }\n    }\n    parameters: {\n      effect: {\n        value: 'Audit'\n      }\n    }\n    policyDefinitionId: '/providers/Microsoft.Authorization/policyDefinitions/d074ddf8-01a5-4b5e-a2b8-964aed452c0a'\n  }\n  {\n    name: 'container-apps-should-disable-external-network-access'\n    definition: {\n      properties: {\n        displayName: 'Container Apps should disable external network access'\n        description: 'Disable external network access to your Container Apps by enforcing internal-only ingress. This will ensure inbound communication for Container Apps is limited to callers within the Container Apps environment'    \n      }\n    }\n    parameters: {\n      effect: {\n        value: 'Audit'\n      }\n    }\n    policyDefinitionId: '/providers/Microsoft.Authorization/policyDefinitions/783ea2a8-b8fd-46be-896a-9ae79643a0b1'\n  }\n  {\n    name: 'containerapps-should-only-be-accessible-over-HTTPS'\n    definition: {\n      properties: {\n        displayName: 'Container Apps should only be accessible over HTTPS'\n        description: 'Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks. Disabling \"allowInsecur\" will result in the automatic redirection of requests from HTTP to HTTPS connections for container apps.'    \n      }\n    }\n    parameters: {\n      effect: {\n        value: 'Audit'\n      }\n    }\n    policyDefinitionId: '/providers/Microsoft.Authorization/policyDefinitions/0e80e269-43a4-4ae9-b5bc-178126b8a5cb'\n  }\n  {\n    name: 'managed-identity-should-be-enabled'\n    definition: {\n      properties: {\n        displayName: 'Managed Identity should be enabled for Container Apps'\n        description: 'Enforcing managed identity ensures Container Apps can securely authenticate to any resource that supports Azure AD authentication'    \n      }\n    }\n    parameters: {\n      effect: {\n        value: 'Audit'\n      }\n    }\n    policyDefinitionId: '/providers/Microsoft.Authorization/policyDefinitions/b874ab2d-72dd-47f1-8cb5-4a306478a4e7'\n  }\n  \n]\n\n// credits: https://techcommunity.microsoft.com/t5/fasttrack-for-azure/azure-policy-for-azure-container-apps-yes-please/ba-p/3775200\n// https://github.com/Azure-Samples/aca-azure-policy/tree/main\nvar customPolicies = [\n  {\n    name: 'aca-allowed-container-registries'\n    definition: json(loadTextContent('policy-definitions/aca-allowed-container-registries.json'))\n    parameters: {\n      listOfAllowedContainerRegistries: {\n        value: [\n          'mcr.microsoft.com'\n          'docker.io'\n          'ghcr.io'\n          '${containerRegistryName}.azurecr.io'\n        ]\n      }\n      effect: {\n        value: 'Audit'\n      }\n    }\n  }\n  {\n    name: 'aca-replica-count'\n    definition: json(loadTextContent('policy-definitions/aca-replica-count.json'))\n    parameters: {\n      minReplicas: {\n        value: 0\n      }\n      maxReplicas: {\n        value: 30\n      }\n      effect: {\n        value: 'Audit'\n      }\n    }\n    identity: false\n  }\n  {\n    name: 'aca-no-liveness-probes'\n    definition: json(loadTextContent('policy-definitions/aca-no-liveness-probes.json'))\n    parameters: {\n      effect: {\n        value: 'Audit'\n      }\n    }\n    identity: false\n  }\n  {\n    name: 'aca-no-readiness-probes'\n    definition: json(loadTextContent('policy-definitions/aca-no-readiness-probes.json'))\n    parameters: {\n      effect: {\n        value: 'Audit'\n      }\n    }\n    identity: false\n  }\n  {\n    name: 'aca-no-startup-probes'\n    definition: json(loadTextContent('policy-definitions/aca-no-startup-probes.json'))\n    parameters: {\n      effect: {\n        value: 'Audit'\n      }\n    }\n    identity: false\n  }\n  {\n    name: 'aca-required-cpu-and-memory'\n    definition: json(loadTextContent('policy-definitions/aca-required-cpu-and-memory.json'))\n    parameters: {\n      maxCpu: {\n        value: '1.0'\n      }\n      maxMemory: {\n        value: '2.5'\n      }\n      effect: {\n        value: 'Audit'\n      }\n    }\n    identity: false\n  }\n  {\n    name: 'aca-no-monitoring'\n    definition: json(loadTextContent('policy-definitions/aca-no-monitoring.json'))\n    parameters: {\n      effect: {\n        value: 'Audit'\n      }\n    }\n    identity: false\n  }\n]\n\nmodule builtInPolicyAssignment 'policy-assignment.bicep' = [for (policy, i) in builtInPolicies: {\n  name: 'poAssign_${take(policy.name, 40)}'\n  params: {    \n    location: location\n    policy: policy\n    policyDefinitionId: policy.policyDefinitionId    \n  }  \n}]\n\n\n// resource policyDefinition 'Microsoft.Authorization/policyDefinitions@2021-06-01' = [for policy in customPolicies: {\n//   name: guid(policy.name)\n//   properties: {\n//     description: policy.definition.properties.description\n//     displayName: policy.definition.properties.displayName\n//     metadata: policy.definition.properties.metadata\n//     mode: policy.definition.properties.mode\n//     parameters: policy.definition.properties.parameters\n//     policyType: policy.definition.properties.policyType\n//     policyRule: policy.definition.properties.policyRule\n//   }\n// }]\n\nmodule policyDefinition 'policy-definition.bicep' = [for policy in customPolicies: {\n  name: 'poDef_${namingRules.regionAbbreviations[toLower(location)]}_${guid(policy.name)}'\n  scope: subscription()\n  params: {\n    policy: policy\n  }\n}]\n\nmodule customPolicyAssignment 'policy-assignment.bicep' = [for (policy, i) in customPolicies: {\n  name: 'poAssign_${take(policy.name, 40)}'\n  params: {    \n    location: location\n    policy: policy\n    policyDefinitionId: policyDefinition[i].outputs.policyDefinitionId  \n  } \n  dependsOn: [\n    policyDefinition\n  ] \n}]\n```\n``````\n\n</details>\n\n\n\n<details id=\"🧠-llm-request-(2-messages)\"><summary>\n🧠 llm request (2 messages)\n</summary>\n\n-   OpenAI chat request\n-   model: gpt-4\n-   url: [https://tnrllmproxy.azurewebsites.net/openai/deployments/gpt-4/chat/completions?api-version=2023-09-01-preview](https://tnrllmproxy.azurewebsites.net/openai/deployments/gpt-4/chat/completions?api-version=2023-09-01-preview)\n-   response_format: {\n  \"type\": \"json_object\"\n}\n-   tools: `fs_find_files`, `fs_read_file`\n\n\n<details id=\"🧱-schema\"><summary>\n🧱 schema\n</summary>\n\n\n```json\n[\n  {\n    \"type\": \"function\",\n    \"function\": {\n      \"name\": \"fs_find_files\",\n      \"description\": \"Finds file matching a glob pattern.\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"glob\": {\n            \"type\": \"string\",\n            \"description\": \"Search path.\"\n          }\n        },\n        \"required\": [\n          \"glob\"\n        ]\n      }\n    }\n  },\n  {\n    \"type\": \"function\",\n    \"function\": {\n      \"name\": \"fs_read_file\",\n      \"description\": \"Reads a file as text from the file system.\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"filename\": {\n            \"type\": \"string\",\n            \"description\": \"Path of the file to load, relative to the workspace.\"\n          },\n          \"linestart\": {\n            \"type\": \"integer\",\n            \"description\": \"Line number (1-based) to start reading from.\"\n          },\n          \"lineend\": {\n            \"type\": \"integer\",\n            \"description\": \"Line number (1-based) to end reading at.\"\n          }\n        },\n        \"required\": [\n          \"filename\"\n        ]\n      }\n    }\n  }\n]\n```\n\n</details>\n\n-   response: 200 OK\n\n</details>\n\n\n\n<details id=\"🛠️-tool-call-fs_read_file\"><summary>\n🛠️ tool call fs_read_file\n</summary>\n\n-   id: `call_35Ox5lyxKe7fHhWCLtfy6s1m`\n-   args:\n\n```json\n{\"filename\":\"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definitions/aca-allowed-container-registries.json\"}\n```\n\n``````markdown\n{\n  \"properties\": {\n    \"displayName\": \"Azure Container Apps allowed container registries\",\n    \"policyType\": \"Custom\",\n    \"mode\": \"Indexed\",\n    \"description\": \"This policy enables you to restrict the list of container registries for Azure Container Apps.\",\n    \"metadata\": {\n      \"version\": \"1.0.0\",\n      \"category\": \"Azure Container Apps\"\n    },\n    \"parameters\": {\n      \"listOfAllowedContainerRegistries\": {\n        \"type\": \"Array\",\n        \"metadata\": {\n          \"displayName\": \"Allowed container registries\",\n          \"description\": \"The list of container registries that can be specified when deploying resources.\"\n        },\n        \"defaultValue\": [\n          \"mcr.microsoft.com\"\n        ]\n      },\n      \"effect\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Effect\",\n          \"description\": \"Enable or disable the execution of the policy\"\n        },\n        \"allowedValues\": [\n          \"Audit\",\n          \"Deny\",\n          \"Disabled\"\n        ],\n        \"defaultValue\": \"Audit\"\n      }\n    },\n    \"policyRule\": {\n      \"if\": {\n        \"allOf\": [{\n            \"field\": \"type\",\n            \"equals\": \"Microsoft.App/containerApps\"\n          },\n          {\n            \"count\": {\n              \"field\": \"Microsoft.App/containerApps/template.containers[*]\",\n              \"where\": {\n                \"value\": \"[split(first(field('Microsoft.App/containerApps/template.containers[*].image')), '/')[0]]\",\n                \"notIn\": \"[parameters('listOfAllowedContainerRegistries')]\"\n              }\n            },\n            \"greater\": 0\n          }\n        ]\n      },\n      \"then\": {\n        \"effect\": \"[parameters('effect')]\"\n      }\n    }\n  }\n}\n``````\n\n</details>\n\n\n\n<details id=\"🧠-llm-request-(4-messages)\"><summary>\n🧠 llm request (4 messages)\n</summary>\n\n-   OpenAI chat request\n-   model: gpt-4\n-   url: [https://tnrllmproxy.azurewebsites.net/openai/deployments/gpt-4/chat/completions?api-version=2023-09-01-preview](https://tnrllmproxy.azurewebsites.net/openai/deployments/gpt-4/chat/completions?api-version=2023-09-01-preview)\n-   response_format: {\n  \"type\": \"json_object\"\n}\n-   tools: `fs_find_files`, `fs_read_file`\n\n\n<details id=\"🧱-schema\"><summary>\n🧱 schema\n</summary>\n\n\n```json\n[\n  {\n    \"type\": \"function\",\n    \"function\": {\n      \"name\": \"fs_find_files\",\n      \"description\": \"Finds file matching a glob pattern.\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"glob\": {\n            \"type\": \"string\",\n            \"description\": \"Search path.\"\n          }\n        },\n        \"required\": [\n          \"glob\"\n        ]\n      }\n    }\n  },\n  {\n    \"type\": \"function\",\n    \"function\": {\n      \"name\": \"fs_read_file\",\n      \"description\": \"Reads a file as text from the file system.\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"filename\": {\n            \"type\": \"string\",\n            \"description\": \"Path of the file to load, relative to the workspace.\"\n          },\n          \"linestart\": {\n            \"type\": \"integer\",\n            \"description\": \"Line number (1-based) to start reading from.\"\n          },\n          \"lineend\": {\n            \"type\": \"integer\",\n            \"description\": \"Line number (1-based) to end reading at.\"\n          }\n        },\n        \"required\": [\n          \"filename\"\n        ]\n      }\n    }\n  }\n]\n```\n\n</details>\n\n-   response: 200 OK\n\n</details>\n\n\n\n<details id=\"📩-llm-response\"><summary>\n📩 llm response\n</summary>\n\n\n``````markdown\n{\n    \"Targets\": {\n        \"Azure Container Apps\": [\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit the configuration of Container Apps to ensure authentication is enabled, preventing anonymous HTTP requests.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container App environments to verify the use of network injection for isolation and granular network traffic control.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to enforce the configuration with volume mounts for persistent storage capacity.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps environments to ensure public network access is disabled for improved security.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to ensure external network access is disabled, enforcing internal-only ingress.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to ensure they are only accessible over HTTPS, redirecting HTTP requests to HTTPS.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to verify that Managed Identity is enabled for secure Azure AD authentication.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to restrict the list of allowed container registries, ensuring compliance with organizational standards.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to ensure the replica count is within the specified range for scalability and resource management.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to ensure liveness, readiness, and startup probes are not configured, as per organizational policies.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to ensure CPU and memory resource limits are within the specified maximums for cost control.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to verify that monitoring is not enabled, adhering to the organizational security and compliance requirements.\"\n            }\n        ],\n        \"Azure Policy\": [\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Define and assign custom Azure Policies for Container Apps to enforce organizational standards and compliance.\"\n            }\n        ]\n    },\n    \"Deployed\": []\n}\n``````\n\n</details>\n\n\n\n<details id=\"📩-json-(parsed)\"><summary>\n📩 json (parsed)\n</summary>\n\n\n```json\n{\n  \"Targets\": {\n    \"Azure Container Apps\": [\n      {\n        \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n        \"Action\": \"Audit the configuration of Container Apps to ensure authentication is enabled, preventing anonymous HTTP requests.\"\n      },\n      {\n        \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n        \"Action\": \"Audit Container App environments to verify the use of network injection for isolation and granular network traffic control.\"\n      },\n      {\n        \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n        \"Action\": \"Audit Container Apps to enforce the configuration with volume mounts for persistent storage capacity.\"\n      },\n      {\n        \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n        \"Action\": \"Audit Container Apps environments to ensure public network access is disabled for improved security.\"\n      },\n      {\n        \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n        \"Action\": \"Audit Container Apps to ensure external network access is disabled, enforcing internal-only ingress.\"\n      },\n      {\n        \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n        \"Action\": \"Audit Container Apps to ensure they are only accessible over HTTPS, redirecting HTTP requests to HTTPS.\"\n      },\n      {\n        \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n        \"Action\": \"Audit Container Apps to verify that Managed Identity is enabled for secure Azure AD authentication.\"\n      },\n      {\n        \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n        \"Action\": \"Audit Container Apps to restrict the list of allowed container registries, ensuring compliance with organizational standards.\"\n      },\n      {\n        \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n        \"Action\": \"Audit Container Apps to ensure the replica count is within the specified range for scalability and resource management.\"\n      },\n      {\n        \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n        \"Action\": \"Audit Container Apps to ensure liveness, readiness, and startup probes are not configured, as per organizational policies.\"\n      },\n      {\n        \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n        \"Action\": \"Audit Container Apps to ensure CPU and memory resource limits are within the specified maximums for cost control.\"\n      },\n      {\n        \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n        \"Action\": \"Audit Container Apps to verify that monitoring is not enabled, adhering to the organizational security and compliance requirements.\"\n      }\n    ],\n    \"Azure Policy\": [\n      {\n        \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n        \"Action\": \"Define and assign custom Azure Policies for Container Apps to enforce organizational standards and compliance.\"\n      }\n    ]\n  },\n  \"Deployed\": []\n}\n```\n\n</details>\n\n\n\n<details id=\"edits\"><summary>\nedits\n</summary>\n\n| Type | Filename | Message |\n| --- | --- | --- |\n| createfile | /workspaces/coarch/applications/lza/aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep.lza_file_analysis_targets_deployment.json | Create /workspaces/coarch/applications/lza/aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep.lza_file_analysis_targets_deployment.json |\n</details>\n\n","text":"\n{\n    \"Targets\": {\n        \"Azure Container Apps\": [\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit the configuration of Container Apps to ensure authentication is enabled, preventing anonymous HTTP requests.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container App environments to verify the use of network injection for isolation and granular network traffic control.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to enforce the configuration with volume mounts for persistent storage capacity.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps environments to ensure public network access is disabled for improved security.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to ensure external network access is disabled, enforcing internal-only ingress.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to ensure they are only accessible over HTTPS, redirecting HTTP requests to HTTPS.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to verify that Managed Identity is enabled for secure Azure AD authentication.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to restrict the list of allowed container registries, ensuring compliance with organizational standards.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to ensure the replica count is within the specified range for scalability and resource management.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to ensure liveness, readiness, and startup probes are not configured, as per organizational policies.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to ensure CPU and memory resource limits are within the specified maximums for cost control.\"\n            },\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Audit Container Apps to verify that monitoring is not enabled, adhering to the organizational security and compliance requirements.\"\n            }\n        ],\n        \"Azure Policy\": [\n            {\n                \"SourceFile\": \"aca-landing-zone-accelerator/scenarios/aca-internal/bicep/modules/02-spoke/modules/policy/policy-definition.module.bicep\",\n                \"Action\": \"Define and assign custom Azure Policies for Container Apps to enforce organizational standards and compliance.\"\n            }\n        ]\n    },\n    \"Deployed\": []\n}"}}}
