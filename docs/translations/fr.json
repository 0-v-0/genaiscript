{
  "7FF4A579A373349036EF": "Ces aides d’exécution fournissent une interface conviviale autour de l’écosystème [remark](https://github.com/remarkjs/remark), [mdast](https://github.com/syntax-tree/mdast), [unified](https://github.com/syntax-tree/unist) pour analyser et manipuler des documents Markdown.",
  "B97AD2FDFF4E97817CD3": "Pour bénéficier de l’auto-complétion des types, vous devrez installer le paquet `@types/mdast` comme dépendance de développement.",
  "93ECBC1CC890D2DC0948": "Manipulation du Markdown",
  "88EE574108F304F2E1E4": "charger les analyseurs",
  "2B652AE7037011442E86": "analyser vers un arbre mdast",
  "742232A1BD5BD5EEEEA4": "parcourir l’arbre (voir [documentation](https://unifiedjs.com/learn/recipe/tree-traversal/pnp))",
  "750B426709E8940B01A1": "sérialiser l’arbre en Markdown",
  "F4636CADBC2A666FBFB7": "Traduit par IA. Veuillez vérifier l’exactitude du contenu.",
  "79EF8B2E271C874BAA96": "AST Markdown",
  "3526D43E3CA409573EEA": "Utilisez les assistants mdast pour analyser et manipuler des documents Markdown",
  "7BCCEFB7560D860413A8": "Ces assistants d’exécution fournissent une interface conviviale autour de l’écosystème ",
  "72A2D793C3933AC7B54F": "remark",
  "FBBFCF9090E78B6ED0BD": "mdast",
  "AB2B271B70D622C7C40F": "unified",
  "EDCAC3B7B8A44DD6E9B9": "Manipulation de Markdown",
  "DBE692B4EC10B9D69A77": "charger les parseurs",
  "24DD3D375620BA2E27FE": "analyser en un arbre mdast",
  "F1E1700040109CBC4AAE": "documentation",
  "12FFE51BCC2B286B4C6B": "sérialisation de l’arbre en Markdown",
  "B5632118C596F848B38F": "Rends-le meilleur",
  "5E6406CB923D1137EFD0": "Demandez au LLM d'améliorer votre code !",
  "846A65BBFBDB5D7A2040": "Des résultats surprenants peuvent survenir lorsque vous demandez à plusieurs reprises au LLM de « rendre le code meilleur » (voir [l'article de blog](https://minimaxir.com/2025/01/write-better-code/)).",
  "5F6AEEAF9C5DB07E58EB": "Dans cet exemple, nous utilisons la fonction `makeItBetter` issue du [runtime GenAIScript](/genaiscript/reference/runtime)\npour faire exactement cela : demander au LLM d'améliorer le code plusieurs fois de suite.",
  "2946CE2544A8D3FF5A60": "Explication du code",
  "17972F2C0933103843D4": "Passons en revue le script ligne par ligne :",
  "B5E76D5EF2BC3EF33185": "Cette ligne importe la fonction `makeItBetter` depuis le runtime GenAIScript. Cette fonction permet d'améliorer le code en répétant un ensemble d'instructions plusieurs fois.",
  "0ABD72BA1B83214A9B9B": "Cette ligne définit une constante nommée \"CODE\" qui représente les fichiers présents dans l'environnement. Elle sert essentiellement à définir le contexte du code à améliorer.",
  "085701A33A1A5C149618": "Cette ligne constitue une instruction destinée au modèle d'IA. Elle demande au système d'analyser et d'améliorer le code. Le symbole `$` indique qu’il s’agit d’une instruction spéciale et non d’une commande de code ordinaire.",
  "4D7BFCEC4671F285F44D": "Cette ligne appelle la fonction `makeItBetter` avec l'option de répéter le processus d'amélioration deux fois. Elle enregistre un [participant de chat](/genaiscript/reference/scripts/chat-participants)\nqui insère des messages dans la boucle de conversation du chat.",
  "B72B1AFD443BAA80A3C1": "La fonction `makeItBetter` ressemble approximativement à ceci. Elle enregistre une fonction de rappel qui est appelée\nà chaque tour de chat.",
  "A9B2D345DF43BB1B20F9": "Traduit avec l'IA. Veuillez vérifier l'exactitude du contenu.",
  "F512D12B575136C48094": "Exécution",
  "8820F2E65F24B6FF7553": "Fichiers d’exécution de GenAIScript",
  "369C65ED0AB4DE53B945": "Le runtime GenAIScript fournit des utilitaires supplémentaires et permet d’utiliser le runtime dans n’importe quelle application Node.JS.",
  "5DF31CC5A0F179B2A675": "Pour utiliser le runtime, vous devrez installer GenAIScript dans votre projet.",
  "71F829482FF3037D1E9B": "Initialisation",
  "6616E4FC1CB50706BD13": "Si vous utilisez GenAIScript sans l’interface en ligne de commande (CLI) ou l’extension Visual Studio Code, vous devez initialiser le runtime avant d’utiliser des types ou fonctions globaux.",
  "060551809329824D3F50": "Importer le runtime",
  "F1002A15BF0194AEAAE1": "Le runtime est disponible en tant que module. Vous pouvez l’importer avec le code suivant :",
  "C7DBA0A35BA2C4171A92": "Globaux",
  "D7493B12AADED6603FDF": "Le runtime installe des analyseurs globaux et des types de prompts en ligne. Toutefois, les globaux `$`, `def`, etc. ne sont pas disponibles, uniquement dans les prompts en ligne.",
  "96C5D7950B16049FC159": "Utilitaires",
  "1A54BA8A8C9F0C0D810D": "[cast](/genaiscript/reference/runtime/cast), convertissez n’importe quelle donnée en sorties structurées",
  "A0D8B70FD74F22DFC2AD": "[classify](/genaiscript/reference/runtime/classify), classifiez du texte",
  "71E804F6C62963A8BDA9": "[makeItBetter](/genaiscript/reference/runtime/make-it-better), demandez au LLM d’améliorer son résultat",
  "685083958DFB534AF522": "Traduit avec l’IA. Veuillez vérifier l’exactitude du contenu.",
  "3F0FF3AC2B44C4D03C2E": "Note de transparence",
  "0D2BA6A84801CDC0849B": "Découvrez le framework GenAIScript, ses capacités, ses cas d'utilisation et les meilleures pratiques pour une intégration responsable de l'IA.",
  "F7B20F89CB18CB9FDEB2": "Principes de base de GenAIScript",
  "666C8A568549D57A7BBF": "Introduction",
  "509980F6C6171F029501": "GenAIScript est un framework qui permet aux équipes, y compris les non-développeurs, de créer et d'utiliser des scripts enrichis par l'IA pour soutenir leurs flux de travail. GenAIScript offre un support pour la création et le débogage de scripts JavaScript qui intègrent des appels à des modèles fondamentaux et à des LLM [^1] lors de leur exécution. GenAIScript est un framework de programmation qui permet à ses utilisateurs de concevoir des scripts d’IA (que nous appelons des GenAIScripts), de les déboguer dans un environnement de développement qui est une extension de VS Code, et de les emballer dans une interface en ligne de commande pouvant être déployée dans de nombreux contextes.",
  "1752F06F93BCFB7E3783": "Notre extension VS Code facilite la création d'un GenAIScript en rédigeant du langage naturel en syntaxe markdown, accompagné d'une petite quantité de code JavaScript stylisé. Notre framework permet aux utilisateurs d'utiliser plusieurs modèles LLM, de paramétrer les appels aux modèles, d'exécuter et de déboguer des scripts, de tracer la construction des invites LLM et de fournir une trace complète de l'exécution, de la construction de l'invite à la génération LLM jusqu’au parsing du résultat. Notre framework permet également d'extraire plusieurs formes de sortie des générations LLM, y compris des fichiers de différents types, des sorties destinées à modifier des fichiers existants et des formats structurés tels que JSON.",
  "31F02CCCC06DAF40776C": "Termes clés",
  "BB3CB4AA12204D253059": "**GenAIScript** Un programme JavaScript stylisé qui définit le contexte de l'appel LLM, permet l'exécution de code JavaScript arbitraire, met en forme l'entrée pour l'invite LLM, appelle le LLM et décompresse la sortie du LLM selon les instructions fournies dans l'invite.",
  "8E9C3FF3C8B20F1E4B12": "**GPVM** : Un système d’exécution qui, étant donné un GenAIScript, exécute le GenAIScript, ce qui consiste à intégrer le contexte dans une invite, à appeler le LLM spécifié, puis à extraire le contenu du résultat du LLM.",
  "CF948EC6529EBD682ECD": "**Extension GenAIScript pour VS Code** Un module complémentaire à VS Code qui fournit aux utilisateurs des moyens simples de créer, éditer, exécuter et déboguer des GenAIScripts.",
  "E3A9576BF30A39932FCE": "**Modèles fondamentaux et LLM** Bien que GenAIScript prenne actuellement en charge plusieurs LLM, nous prévoyons d'intégrer à l'avenir d'autres modèles fondamentaux au-delà des grands modèles de langage.",
  "945C3D2782AFAB4CBD5B": "Capacités",
  "0D290653CFADCF82456D": "Comportement du système",
  "545B10697CDCE9E4BC55": "GenAIScript est un framework généraliste pour la création de scripts IA, facilitant l'intégration fluide de l'exécution de code avec l’appel à des modèles fondamentaux/LLM. Un GenAIScript est un programme JavaScript possédant une structure stylisée permettant aux utilisateurs de définir facilement le contexte et l’invite du LLM, d’invoquer un modèle donné et de parser le résultat selon les spécifications de l’utilisateur. Cette fonctionnalité permet même aux non-programmeurs d’inspecter les résultats du modèle et de les vérifier pour s’assurer de leur exactitude.",
  "6840B1A8F944A2F28690": "GenAIScript peut être écrit dans n'importe quel IDE, mais l’extension GenAIScript pour VS Code facilite particulièrement la création, l’exécution et le débogage. Les utilisateurs de GenAIScript peuvent créer des outils qui génèrent et éditent plusieurs fichiers avec un outil unique, et notre intégration avec VS Code exploite les fonctionnalités existantes de refactoring pour permettre aux utilisateurs de visualiser facilement les résultats de l'exécution de l'outil. L’extension prend en charge la création d’un nouveau GenAIScript, l’invocation d’un GenAIScript donné, le traçage de l’exécution du GenAIScript pour constituer le contexte LLM et l'invite finale, ainsi que l’extraction de la sortie du LLM dans les éléments spécifiés par l’utilisateur. Des exemples de toutes ces fonctionnalités sont consultables dans la documentation du dépôt GenAIScript : [microsoft/GenAIScript: Generative AI Scripting (github.com)](https://microsoft.github.io/genaiscript/)",
  "1CCD56019836A67BC5D7": "Le but de GenAIScript est d’offrir à un large éventail d'utilisateurs la possibilité d’innover en créant des scripts dopés par l’IA et d’identifier de nouveaux moyens de tirer parti de l’IA dans leur quotidien. Nous pensons que les développeurs professionnels, habitués à écrire et utiliser des scripts pour gagner en productivité, seront les premiers adoptants de GenAIScript. Ces utilisateurs y gagneront car GenAIScript permet de réaliser de nombreuses tâches impossibles à accomplir par les scripts classiques en JavaScript ou Python. Bien que les développeurs puissent utiliser d’autres frameworks comme langchain ou Semantic Kernel pour intégrer l’appel à des LLM en Python, ces frameworks requièrent plus d’efforts côté utilisateur et offrent moins de prise en charge IDE que GenAIScript. Au final, parce que notre objectif est de rendre GenAIScript facile à écrire, modifier, déboguer et exécuter, nous anticipons une utilité bien au-delà des seuls développeurs professionnels. Un impact majeur de GenAIScript sera d’autoriser les non-développeurs à innover et créer des GenAIScripts qui décuplent leur efficacité. Nous illustrons ce point par les exemples ci-dessous.",
  "CC55833481713E920F20": "Documentation",
  "A6729A3C07955C6196F2": "Pour aider les utilisateurs à se lancer avec GenAIScript, nous proposons dans notre dépôt une documentation illustrant, sous forme d’extraits de code, le contenu de plusieurs GenAIScripts différents. La documentation montre à la fois l’aspect du GenAIScript exemple et l’effet produit sur une entrée particulière. Bien que ces exemples servent à expliquer la technologie, ils ne sont pas destinés à constituer une base pour les outils écrits par les utilisateurs.",
  "5C3E3FA677B539923CFB": "Cas d’utilisation",
  "571ADECC016B869C69EF": "Usages prévus",
  "8F0F4882061EB75BDC06": "GenAIScript peut être utilisé dans tout contexte où un script en ligne de commande dans un autre langage de programmation pourrait être utilisé, mais les cas d’utilisation sont bien plus ambitieux car un LLM peut faire bien plus qu’un code ordinaire. Voici quelques exemples :",
  "B070B9DB961CB7074751": "**Vérification des incohérences potentielles dans une collection de fichiers de configuration ou d'autres contenus.** En utilisant le LLM, un GenAIScript peut examiner des fichiers de configuration et tirer parti de la compréhension du LLM des erreurs de configuration courantes pour les détecter et les signaler. Avant les LLM, les développeurs professionnels écrivaient des outils, comme lint[^2], qui sont des programmes complexes détectant les incohérences dans la syntaxe de leurs fichiers de code. Avec GenAIScript, des outils de vérification peuvent être écrits pour des scénarios bien plus riches (comme la détection de noms de variables inappropriés), et ce, par des personnes qui ne sont pas des développeurs professionnels.",
  "58FB4A63A834B0EEEEE1": "**Automatisation de la traduction de documents :** Étant donné une documentation dans un dépôt écrite dans une langue naturelle, un GenAIScript peut être écrit pour traduire cette documentation dans une autre langue. Un exemple concret soulignant l’importance de GenAIScript pour ce cas d’usage est la localisation de la documentation MakeCode[^3]. La documentation MakeCode comprend près de 2 millions de fichiers, généralement en markdown mêlé à des extraits de code. Beaucoup de documents sont seulement partiellement traduits (au niveau du paragraphe). Pour vérifier la correction des traductions, il existe 3 500 traducteurs bénévoles enregistrés pour plus de 35 langues. On ne peut pas simplement appliquer Bing Translate dans ce cas, car cela détruirait en général les extraits de code. Avec GenAIScript, nous pouvons avoir un script qui parcourt chaque fichier de documentation, extrait la version localisée actuelle et assemble une invite pour demander au LLM de compléter uniquement les traductions manquantes, en préservant celles déjà en place. En outre, le modèle LLM que nous utilisons a déjà été entraîné sur les exemples et la documentation MakeCode, il est donc sensibilisé à la syntaxe.",
  "21585E7480908FF8505C": "**Création d'une version courte d'un rapport long en résumant chaque chapitre.** Les LLM sont très efficaces pour résumer des documents. Un GenAIScript peut être écrit pour prendre chaque chapitre d’un long document et en faire un résumé dans une section d’un document plus court.",
  "E5AA04CAD63B51C07215": "**Conversion d'un monologue en dialogue.** À partir d’un monologue tiré d’une transcription vidéo, un GenAIScript peut être conçu pour réécrire ce monologue en un dialogue entre deux personnes (comme des commentateurs sportifs se répondant) afin de rendre la vidéo plus attrayante et accessible.",
  "7107F4F150B767FF0251": "Usages non prévus",
  "499509D43560BA0BA370": "GenAIScript est un framework généraliste pour la création de scripts. De ce fait, un adversaire peut utiliser GenAIScript pour créer des scripts malveillants à des fins nuisibles. Tous les usages adversariaux de GenAIScript pourraient aussi être mis en œuvre via d’autres frameworks d’extension pour LLM tels que Semantic Kernel, autogen et langchain, de sorte que le risque lié aux usages non prévus de GenAIScript vient du fait qu’il pourrait être plus facile d’écrire de tels scripts. Ce problème est présent dans toute infrastructure qui facilite la programmation, y compris des langages comme PowerShell, JavaScript ou Python, ainsi que les IDE comme VS Code et Visual Studio. Bien que nous ne puissions empêcher les usages non souhaités, nous encourageons les utilisateurs à considérer les bonnes pratiques d’IA responsable lors du développement de leurs GenAIScripts. Plus de détails sur les questions de sécurité et de confiance dans [sécurité et confiance](https://microsoft.github.io/genaiscript/reference/security-and-trust/).",
  "E774D98775FFE8DCC6A6": "Bonnes pratiques pour les modèles fondamentaux",
  "ED248459D087FB8AAB7B": "Nous encourageons fortement les utilisateurs de GenAIScript à utiliser des modèles fondamentaux et LLM qui intègrent de solides mesures d’atténuation pour une IA responsable, telles que les services Azure Open AI (AOAI). Ces services mettent constamment à jour leurs protections et mécanismes RAI pour refléter l’état de l’art en matière de déploiement et d’utilisation responsables des modèles fondamentaux. Voici quelques ressources pour comprendre et appliquer les meilleures pratiques lors de l’usage de tels modèles pour des scripts et applications :",
  "55DF4CD98E6500E69CD4": "[Article de blog sur les fonctionnalités d’IA responsable dans AOAI présentées à Ignite 2023](https://techcommunity.microsoft.com/t5/ai-azure-ai-services-blog/announcing-new-ai-safety-amp-responsible-ai-features-in-azure/ba-p/3983686)",
  "0BD0BBD21D7C12F84E23": "[Note de transparence pour Azure OpenAI Service](https://learn.microsoft.com/en-us/legal/cognitive-services/openai/transparency-note?tabs=text)",
  "524145D4421C216641A6": "[Pratiques recommandées de l’Office Microsoft pour l’IA Responsable (ORA) sur l’utilisation des modèles AOAI](https://learn.microsoft.com/en-us/legal/cognitive-services/openai/overview)",
  "4827501BD0A13A1CA4E2": "Nous recommandons de consulter la documentation sur la [Sécurité des contenus](/genaiscript/reference/scripts/content-safety) pour en savoir plus sur les moyens de se prémunir contre les contenus préjudiciables et le contournement des protections.",
  "05840F73CE80625B27C3": "Limitations",
  "5375FA8B4EC06464CC80": "GenAIScript est un framework en évolution qui s'améliorera grâce aux retours des utilisateurs. Les limitations actuelles incluent une intégration à un seul IDE (VS Code), un support natif des API OpenAI et un nombre relativement faible d'autres LLM. Nous comptons permettre aux utilisateurs d'intégrer des appels à des services externes (comme RAG) dans GenAIScript afin d'apporter davantage de contexte au LLM. Nous prévoyons d’ajouter le support de modèles fondamentaux supplémentaires à mesure que les cas d’utilisation évolueront.",
  "4FEB9E3B286CCA8576E1": "Nous anticipons aussi une évolution du parcours d’intégration à GenAIScript. Nous avons exploré l’intégration de GenAIScript dans l’expérience Copilot Chat de VS Code (accessible via VS Code Insider’s Edition). Nous comprenons aussi que certains développeurs préféreraient implémenter leur GenAIScript en Python plutôt qu’en JavaScript. Nous envisageons de proposer une liaison Python pour l’écriture de GenAIScripts à l’avenir.",
  "4A33F66ADBD39B7487AB": "Limitations techniques, facteurs opérationnels et plages",
  "73F7B6A96369136460E4": "GenAIScript n’utilise aucun modèle d’IA pour exécuter le framework lui-même. Les personnes créant leurs propres scripts IA avec GenAIScript seront soumises aux limitations techniques, facteurs opérationnels et plages du LLM utilisé dans leur script.",
  "9E8E79B032A474982CF8": "Bonnes pratiques pour améliorer la performance du système",
  "D15B9356C5E658F38A34": "GenAIScript encourage les utilisateurs à consulter les bonnes pratiques d'écriture d'invites efficaces pour le LLM spécifique qu'ils invoquent dans leur outil.",
  "2B00E61142C8AB1B5E6A": "En savoir plus sur l’IA responsable",
  "D848DC4C789A697C94D1": "[Principes de l’IA Microsoft](https://www.microsoft.com/en-us/ai/responsible-ai)",
  "23C9C7776F28199848B1": "[Ressources IA responsable Microsoft](https://www.microsoft.com/en-us/ai/responsible-ai-resources)",
  "9E5523F533F05BD0F4F5": "[Formations Microsoft Azure sur l’IA responsable](https://docs.microsoft.com/en-us/learn/paths/responsible-ai-business-principles/)",
  "0DFE58B479F1CA5DCFF6": "En savoir plus sur GenAIScript",
  "D6A76CFE06C0382A6B2D": "Pour en savoir plus sur GenAIScript, rendez-vous sur notre référentiel GitHub : [microsoft/GenAIScript: GenAI Scripting (github.com)](https://github.com/microsoft/genaiscript/)",
  "4464B394FBDCCB6EFAE3": "Nous contacter",
  "EDFD3931DAF4E77D9CAA": "Donnez-nous votre avis sur ce document : [zorn@microsoft.com](mailto:zorn@microsoft.com), [jhalleux@microsoft.com](mailto:jhalleux@microsoft.com)",
  "4D64B5A2F3891B545DCC": "À propos de ce document",
  "5B8D07EE1B01EE4D8803": "© 2024 Microsoft Corporation. Tous droits réservés. Ce document est fourni « en l’état » et à titre informatif uniquement. Les informations et points de vue exprimés dans ce document, y compris les URL et autres liens Internet, peuvent changer sans préavis. L’utilisation est à vos risques et périls. Certains exemples sont uniquement destinés à l’illustration et sont fictifs. Aucune association réelle n’est prévue ou sous-entendue.",
  "9B539E70FC1AB651F3A1": "Ce document n’est pas destiné à être, et ne doit pas être interprété comme, un avis juridique. La juridiction dans laquelle vous exercez peut imposer diverses obligations réglementaires ou légales à votre système d’IA. Consultez un spécialiste juridique si vous n’êtes pas certain des lois ou réglementations applicables à votre système, notamment si vous pensez que cela pourrait impacter ces recommandations. Sachez que toutes ces recommandations et ressources ne seront pas adaptées à chaque scénario ; inversement, elles peuvent aussi s’avérer insuffisantes selon le contexte.",
  "29D5BE780918D2138AAD": "Publié le : 18 mars 2024",
  "F04567BA1567FB501768": "Dernière mise à jour : 18 mars 2024",
  "34C0C62E2EB15333C376": "Tout au long de ce document, lorsque nous évoquons les LLM, nous désignons tout modèle fondamental compatible avec nos interfaces.",
  "923339863CC5CF0D58BF": "[Lint (logiciel) - Wikipédia](https://en.wikipedia.org/wiki/Lint_(software))",
  "A374DFFF03D06C012756": "[https://makecode.org/](https://makecode.org/)",
  "9620E9EB656D7671A869": "Traduit à l'aide de l’IA. Veuillez vérifier l’exactitude du contenu.",
  "9887745E4395724C7E03": "Serveur Web API",
  "CB822ADB421FF9984EC8": "Le serveur Web API expose une API REST compatible OpenAPI pour exécuter des scripts.",
  "CB82697CDDC25CCD34B0": "Vous pouvez lancer le [cli](/genaiscript/reference/cli) en tant que **serveur Web API** pour exposer des scripts en tant qu'endpoints REST.\nLe serveur est compatible OpenAPI 3.1 et utilise [fastify](https://www.fastify.io/) en interne.",
  "500A282A8613EA160A64": "Scripts en tant qu'endpoints REST",
  "A5C84A2C33DE34074D42": "Le serveur Web API expose les scripts comme des endpoints REST. Il utilise le titre, la description, les groupes et les tags\npour générer une spécification OpenAPI 3.1 et un serveur basé sur fastify.",
  "C906F721DCF516D9229D": "Les paramètres des endpoints OpenAPI sont automatiquement déduits des [paramètres des scripts](/genaiscript/reference/scripts/parameters) et des fichiers.\nLes paramètres OpenAPI viendront alors alimenter l'objet `env.vars` dans le script,\ncomme d'habitude.",
  "6084FA8A901C5397CDB8": "La sortie de l'endpoint OpenAPI correspond à la sortie du script. Il s'agit, généralement, du dernier message de l'assistant pour un script qui utilise le contexte de haut niveau.\nLa sortie de l'endpoint OpenAPI correspond à la sortie du script, généralement le dernier message de l'assistant ou tout contenu passé à [env.output](/genaiscript/reference/scripts/output-builder).",
  "99669BDBC8E35846E40F": "Voyons un exemple. Voici un script `task.genai.mjs` qui prend un paramètre d'entrée `task`, construit une invite,\net la sortie du LLM est renvoyée.",
  "A77A5F230C47D916AA3A": "Un script plus avancé peut ne pas utiliser le contexte de haut niveau et utiliser à la place `env.output` pour transmettre le résultat.",
  "7F9F4123FBD71E429B83": "Route",
  "4F4FC27DEAB16ECDD588": "La route par défaut est `/api` et la spécification OpenAPI est disponible à l'adresse `/api/docs/json`.\nVous pouvez changer la route à l'aide de l'option `--route`.",
  "B391613DB88418BC07BB": "La spécification OpenAPI sera accessible à l'adresse `/genai/docs/json`.\nVous pouvez également changer le port avec l'option `--port`.",
  "267C490A80E242808F83": "Le serveur sera disponible à `http://localhost:4000/genai`.",
  "323C11C23BFE4417DD1E": "Script de démarrage",
  "3856886E587B8B90623D": "Vous pouvez spécifier un identifiant de script de démarrage dans la ligne de commande grâce à l'option `--startup`.\nIl s'exécutera une fois le serveur lancé.",
  "3BE65CB590A6FEC2AE8B": "Vous pouvez utiliser ce script pour charger des ressources ou effectuer toute autre configuration nécessaire.",
  "5E86942117A8AE179957": "Filtrage des scripts",
  "24D369213F37406C1999": "Si vous avez besoin de filtrer les scripts exposés comme endpoints OpenAPI, vous pouvez utiliser le flag `--groups` et\ndéfinir le groupe `openapi` dans vos scripts.",
  "81F398021BB920B618BA": "Exécuter des scripts depuis un dépôt distant",
  "4CB6C5D434858BC55FCF": "Vous pouvez utiliser l'option `--remote` pour charger des scripts depuis un dépôt distant.\nGenAIScript effectuera un clonage superficiel du dépôt et exécutera le script dans le dossier cloné.",
  "EF19E18C2A4886B45806": "Il existe des options supplémentaires pour la façon dont le dépôt est cloné :",
  "2C59C1B94FF400BA7666": "`--remote-branch <branche>` : La branche à cloner depuis le dépôt distant.",
  "066A865FB334D2A67EAE": "`--remote-force` : Force le clonage même si le dossier cloné existe déjà.",
  "F7D5E32B0EF094193139": "`--remote-install` : Installe les dépendances après le clonage du dépôt.",
  "F5BCEDCB0875EB0857FD": "Comme toujours, soyez vigilant lorsque vous exécutez des scripts provenant d'un dépôt distant.\nAssurez-vous de faire confiance à la source avant d'exécuter le script et envisagez de verrouiller sur un commit spécifique.",
  "1FBD0F580FA2716CDB33": "Linting",
  "AF30BE214611FC644CCE": "Vous pouvez utiliser [spectral](https://github.com/stoplightio/spectral) pour valider vos spécifications OpenAPI.",
  "8F9E03FA3EC903CF730E": "Enregistrez ce fichier `.spectral.yaml` à la racine de votre projet :",
  "75B7AFC036A1A952A416": "lancez le serveur API",
  "AEF52EEFB19B41888DD4": "exécutez le linter spectral",
  "3ABDBCA0FBF3FD3FBBEC": "Traduit par IA. Veuillez vérifier le contenu pour en garantir l'exactitude.",
  "6366F713230CABCD9975": "Sécurité et Confiance",
  "DB09CDCFF753365F99D7": "Découvrez les risques de sécurité et les stratégies d'atténuation lors de l'utilisation de scripts générés par l’IA dans des environnements de développement.",
  "463C88C4ABC35AD94F03": "Nous abordons divers risques de sécurité ainsi que les mesures possibles d’atténuation lors de l’utilisation de GenAIScript.\nGenAIScript hérite des mêmes risques de sécurité que l’exécution de scripts, et ajoute de nouvelles menaces en raison de la nature des résultats générés par les LLM.",
  "1DC426CF827DEE243FFE": "Nous recommandons également de lire la [Note de transparence](/genaiscript/reference/transparency-note/) pour comprendre les capacités et les limites de GenAIScript.",
  "D33AA7FA4A484DCB720F": "Ne faites pas confiance aux scripts",
  "4889073FE47BD9974C16": "Puisque les fichiers GenAIScript `.genai.mjs` sont des fichiers JavaScript exécutables et utilisent effectivement un environnement d'exécution JavaScript (VSCode ou Node), il est important de comprendre que le script peut faire tout ce que JavaScript permet. Cela inclut la lecture et l’écriture de fichiers, les requêtes réseau et l’exécution de code JavaScript arbitraire.",
  "C12F095184F104563CBE": "Ne lancez pas de scripts `.genai.mjs` provenant de sources non fiables.",
  "77E53EDFA8101A2DC023": "Ne faites pas confiance aux résultats du LLM",
  "9008F8E7E71523D541A0": "Un script de confiance pourrait utiliser des fichiers malveillants du contexte pour générer un résultat malveillant.\nPar exemple, il pourrait écraser des fichiers du projet avec du nouveau code malicieux.",
  "6B642F28247CCD76D690": "dans Visual Studio Code, utilisez l’aperçu de refactorisation",
  "DB9BB25E202BC6D3C5F0": "dans votre CI/CD, créez une pull request avec les modifications et révisez-les",
  "F829B02BF29A438C3110": "Confiance dans l’espace de travail Visual Studio Code",
  "C7191B4D16EAD414A8F7": "L’extension est **désactivée** lors de l’ouverture d’un dossier en [mode restreint](https://code.visualstudio.com/docs/editor/workspace-trust) dans Visual Studio Code.",
  "B94C37E6CF2101A7EB5A": "Aperçu Markdown dans Visual Studio Code",
  "ABC8AD6A0CD2F1C381D9": "La sortie du LLM et la trace utilisent l’aperçu markdown intégré de Visual Studio Code.\nPar défaut, [VS Code restreint le contenu affiché dans l’aperçu Markdown](https://code.visualstudio.com/Docs/languages/markdown#_markdown-preview-security).\nCela inclut la désactivation de l’exécution des scripts et n’autorise le chargement des ressources que via `https`.",
  "C1ECE066A92B6B25DD53": "Traduit à l’aide de l’IA. Veuillez vérifier l’exactitude du contenu.",
  "C3C7329B869BDADCB13D": "Playground",
  "854BA18D364EB36A804B": "Décrivez comment utiliser l’aire de jeu du serveur local pour lancer des scripts depuis une interface utilisateur.",
  "CB24A2DA21125C596EA8": "Le **Playground** est une application web auto-hébergée qui vous permet d’exécuter des scripts GenAIScript à partir d’une interface utilisateur conviviale. Il se positionne entre le CLI de GenAIScript et l’intégration GenAIScript pour Visual Studio Code.",
  "44C868DB5B92451E916A": "L’aire de jeu est encore en cours de développement.",
  "B34E459A16DBFB7B7307": "Lancement",
  "501B2F6AD2974D706E48": "Depuis la racine de votre espace de travail de projet, exécutez",
  "C28354B475C6D2A8AD7A": "puis rendez-vous à l’URL affichée dans la console (généralement `http://127.0.0.1:8003/`).",
  "45B28188B5AD8102ED9A": "Dépôt distant",
  "C9934DAD9B28057BB59A": "Vous pouvez exécuter l’aire de jeu sur un dépôt distant en utilisant vos secrets `.env` actuels.",
  "C373D579939EF6CB9AD3": "Installation locale",
  "913042F5B4F79E81A703": "`npx` peut être lent à démarrer, en particulier si vous utilisez fréquemment l’aire de jeu. Vous pouvez installer l’aire de jeu localement avec",
  "810D4F5DCB291B25B4EE": "puis lancez",
  "FE6A90AD08DE4CDC345E": "Exécution de scripts depuis un dépôt distant",
  "72BDD261AA9E35FF8FAE": "Vous pouvez utiliser l’option `--remote` pour charger des scripts depuis un dépôt distant. GenAIScript effectuera un clonage superficiel du dépôt et exécutera le script depuis le dossier cloné.",
  "3661D793437DC26AFFF9": "Il existe des options supplémentaires concernant la façon dont le dépôt est cloné :",
  "556ED1EBD4842C1113B3": "`--remote-branch <branch>` : La branche à cloner depuis le dépôt distant.",
  "34D6DD56290AC14054E7": "`--remote-force` : Force le clonage même si le dossier cloné existe déjà.",
  "B62B664D5A7CEFEAC37B": "`--remote-nstall` : Installe les dépendances après le clonage du dépôt.",
  "2F4FB34D76ED21447A68": "Comme d’habitude, soyez prudent lorsque vous exécutez des scripts provenant d’un dépôt distant. Assurez-vous de faire confiance à la source avant d’exécuter le script et envisagez de bloquer sur un commit spécifique.",
  "6F39877FF391CBEB21BC": "Traduit à l’aide de l’IA. Veuillez vérifier l’exactitude du contenu.",
  "5A6069793E4356D4475A": "Fichiers de configuration",
  "C0F41F4234CE55DF5B62": "Apprenez à configurer les paramètres courants en utilisant des fichiers de configuration",
  "D1C95D301A4EFCF61EF9": "GenAIScript prend en charge des fichiers de configuration locaux et globaux afin de permettre la réutilisation de paramètres et de secrets communs entre plusieurs scripts.",
  "2D8DDDC5A648F49EB24C": "Résolution du fichier .env",
  "B56D0CF6CBF086D6D623": "GenAIScript va scanner et charger les fichiers `.env` suivants dans l’ordre suivant :",
  "7FF00D130DAE40471CD9": "propriété `envFile` dans les fichiers de configuration (voir ci-dessous)",
  "60B28090506BAD14DBB9": "variable d’environnement `GENAISCRIPT_ENV_FILE`",
  "BC08B8DF3DEE3E003C5C": "options de ligne de commande `--env`",
  "C1117C227CBDCBCCC455": "Si aucune des options ci-dessus n’est définie, il essaiera de charger les fichiers suivants :",
  "BD03314CDF51244CBBA1": "`~/.env`",
  "180AFC2FFD68FCD6FAEA": "`./.env`",
  "A05BBDF166C1FC7DE36D": "`./.env.genaiscript`",
  "F2D39782DA344BB34928": "Résolution du fichier de configuration",
  "BD39DF27B82575165EEF": "GenAIScript va rechercher les fichiers de configuration suivants et fusionner leur contenu dans la configuration finale.",
  "091CF01C6F5C640F5ECB": "`~/genaiscript.config.yaml`",
  "C5CD537E7723FBA23166": "`~/genaiscript.config.json`",
  "D82F4ADD5B49792EC8F5": "`./genaiscript.config.yaml`",
  "5A7776ADB04EA34FFF69": "`./genaiscript.config.json`",
  "5348E27452CACC3DEE01": "Les fichiers JSON prennent en charge le format [JSON5](https://json5.org/) (y compris les commentaires, les virgules finales, etc.).",
  "22CEB51A88B1CC6ED776": "Schéma",
  "C0581F79F54C77ED3550": "Le schéma de configuration se trouve à l’adresse [https://microsoft.github.io/genaiscript/schemas/config.json](https://microsoft.github.io/genaiscript/schemas/config.json).",
  "5081ADB0CCC6ECB91745": "Propriété `envFile`",
  "3BB1FBC5D72A622ECC08": "L’emplacement final de `envFile` sera utilisé pour charger le secret dans les variables d’environnement. Cela ne prend en charge qu’un seul fichier.",
  "DE5A38DF1DA42636D2BA": "Propriété `include`",
  "B5AE279AD5DCDAE96512": "La propriété `include` permet de fournir des chemins glob pour inclure plus de scripts.\nCombinée avec un fichier de configuration global, cela permet de partager des scripts entre plusieurs projets.",
  "65D1914C9700666B9DAC": "Propriété `modelAliases`",
  "E6999044DF2C63034711": "La propriété `modelAliases` vous permet de définir des alias pour les noms de modèles.",
  "FA8872628564491D7889": "Propriété `modelEncodings`",
  "A0CF251F404D2F247A0B": "La propriété `modelEncodings` vous permet de spécifier l’encodage pour un modèle.",
  "BD96A811EBF27C7B029A": "Débogage",
  "1EA5454574C7C29E9D63": "Activez la catégorie de débogage `config` pour voir des informations supplémentaires sur la résolution de la configuration.",
  "276821D1F7A0230ACBA2": "Vous pouvez également activer d’autres catégories de débogage pour des journaux plus détaillés.",
  "7576BAAAAA6B6B862C67": "Traduit à l’aide de l’IA. Veuillez vérifier l’exactitude du contenu.",
  "D20311F616F530AAFC54": "Azure AI Foundry",
  "64ED162F4D10E0229B37": "Azure AI Foundry est une plateforme pour créer et déployer des modèles d’IA.",
  "8AF9E62995C7A6195548": "![Une capture d’écran d’Azure AI Foundry.](./azure-ai-foundry.png)",
  "1F5FD21657BBE730E0FC": "GenAIScript prend en charge nativement divers services [Azure AI Foundry](https://learn.microsoft.com/en-us/azure/ai-foundry/).",
  "062966121022C7986FD7": "Authentification",
  "9ADE4D4E93690F52BF35": "GenAIScript prend en charge l’authentification par clé via variables d’environnement ainsi que l’authentification Microsoft Entra pour chaque service.",
  "64438CE56266F3012D52": "Services Azure OpenAI et IA",
  "9C99D833BB4299F9BF95": "GenAIScript peut exécuter de l’inférence sur les LLM hébergés dans Azure AI Foundry.",
  "1FC5719B30FC3CDE61E1": "Il existe 4 types de déploiements Azure supportés par GenAIScript :",
  "51057B67513290388DE7": "[Azure OpenAI](/genaiscript/configuration/azure-openai)",
  "532E98905F953911142C": "[Azure AI Inference](/genaiscript/configuration/azure-ai-foundry##azure-ai-inference)",
  "AD37698EA34E3E99756B": "[Azure OpenAI Serverless](/genaiscript/configuration/azure-ai-foundry/#azure-ai-openai-serverless)",
  "E5110E6BF8DAFAA85EBF": "[Azure AI Serverless Models](/genaiscript/configuration/azure-ai-foundry/#azure_serverless_models)",
  "54F5C37FE6DA3C0A1CD5": "Azure AI Search",
  "611BD35D52E6B01FEBF6": "[Azure AI Search](https://learn.microsoft.com/en-us/azure/search/search-what-is-azure-search) est un puissant moteur de recherche hybride basé sur les vecteurs et mots-clés.",
  "9F5B0AD5E994AA1FCDF6": "[Recherche vectorielle](/genaiscript/reference/scripts/vector-search/#azure-ai-search)",
  "3679B96F9FDB7195635E": "[Configuration](/genaiscript/configuration/azure-ai-search)",
  "33B1E869E71423A5449B": "Azure Content Safety",
  "01753ADE7C0FD2C37B05": "[Azure Content Safety](https://learn.microsoft.com/en-us/azure/cognitive-services/content-safety/) est un service\nqui permet d’identifier et de filtrer les contenus nuisibles dans vos applications.",
  "07F8C5B2645153E389F5": "GenAIScript intègre la prise en charge d’Azure Content Safety, aussi bien pour analyser une partie du prompt que pour analyser les réponses des LLM\nou les serveurs MCP.",
  "800848421057B9DEFAAC": "[Configuration](/genaiscript/reference/scripts/content-safety/#azure-ai-content-safety-services)",
  "7122B682DBB656D2EC70": "Traduit par IA. Veuillez vérifier l’exactitude du contenu.",
  "83909F82446EE9C3E82A": "Paramètres",
  "3B149C29EA7E7CA28E64": "Liste des paramètres disponibles dans Visual Studio Code.",
  "E2650EC732D25FBFA3B5": "Traduit à l'aide de l'IA. Veuillez vérifier l'exactitude du contenu.",
  "A96AD35A57D657F5B23A": "Exécution de scripts",
  "CF08E70EDC444D6380CB": "Découvrez comment exécuter des GenAIScripts dans Visual Studio Code à l'aide de l'extension GenAIScript.",
  "3E80D1491778955FD477": "L'extension GenAIScript pour Visual Studio Code offre un moyen pratique d'exécuter des scripts directement depuis l'éditeur.",
  "908C76BE146F77697B59": "Il existe principalement deux façons d'exécuter des scripts :",
  "EDB606B58843D37CEEFE": "exécuter un script « directement ». Ce scénario est utile pour déboguer un script ou pour un script qui ne nécessite pas de fichiers d'entrée.",
  "3ED904449DBE5EC60649": "exécuter un script à partir de fichiers ou dossiers d'entrée. Ce scénario est utile lorsque vous souhaitez exécuter un script sur plusieurs fichiers ou dossiers.",
  "59F7F45EF2462046371A": "Exécution directe de scripts",
  "76E2592D2DE65D9C767B": "ouvrez un fichier GenAIScript dans l'éditeur",
  "A592323C4044F46F996F": "effectuez un clic droit dans l'éditeur et sélectionnez **Exécuter GenAIScript\\*** dans le menu contextuel",
  "E02F50720B32D6214B23": "ou cliquez sur l'icône **Exécuter GenAIScript** en haut à droite de l'éditeur",
  "57969BE183E30CDC07C0": "Cela lancera l'exécution du script et utilisera les fichiers d'entrée par défaut spécifiés dans le champ `files` du `script`.",
  "28BE64FC51AA4F9289A0": "Ce mode est utile lors du développement d'un script ou pour les scripts qui ne nécessitent pas de fichiers d'entrée.",
  "5A28C3403A07A867BBE0": "Exécution de scripts à partir de fichiers ou dossiers d'entrée",
  "11BDE68D1DC908260F5C": "Ce mode permet d'exécuter des scripts sur n'importe quelle combinaison de fichiers et de dossiers, ce qui remplira `env.files`.",
  "D90B2518F93C00053637": "Depuis la fenêtre de l'explorateur :",
  "EFCE173E42E17C91B5C8": "sélectionnez des fichiers ou des dossiers dans l'explorateur. Vous pouvez utiliser la touche `Ctrl` ou `Shift` pour sélectionner plusieurs fichiers ou dossiers.",
  "8FFB0F604D0B9E54810A": "faites un clic droit et sélectionnez **Exécuter GenAIScript** dans le menu contextuel",
  "065E9E44B8544BD4B5FA": "Depuis un éditeur",
  "3041702F0C170E5B815C": "ouvrez un fichier dans l'éditeur (pas un fichier GenAIScript)",
  "8BD8FFD9E29E3BDB19F5": "faites un clic droit et sélectionnez **Exécuter GenAIScript** dans le menu contextuel",
  "EA0E4A05395499C4337C": "Utiliser le texte sélectionné dans votre script",
  "201CD13DA4D009CC5C02": "À chaque lancement de script, GenAIScript récupérera le texte sélectionné dans l'éditeur de texte actif et le stockera dans la variable `editor.selectedText`.",
  "E8538A79C42F7C3D322D": "Sa valeur sera indéfinie si vous exécutez votre script depuis la ligne de commande, vous devrez donc gérer ce cas dans votre script.",
  "038E789D6187D77B6537": "Règles .gitignore",
  "860EA40FA2D1BEC5AA05": "GenAIScript tente de respecter les **règles du `.gitignore` principal du workspace du projet** (il ignore les fichiers .gitignore imbriqués).\nCela signifie que si vous avez un fichier `.gitignore` dans votre projet, GenAIScript ignorera tous les fichiers ou dossiers ignorés par Git.",
  "3673DDB3A2596F740488": "Il existe des exceptions à cette règle :",
  "09C5190D681695EE5C16": "si vous lancez **Exécuter GenAIScript** sur des fichiers individuels, ces fichiers ne sont pas filtrés par le `.gitignore` car vous les avez explicitement choisis. Les dossiers sont toujours filtrés.",
  "5DBFBB068336B00AE6ED": "si vous indiquez `---ignore-git-ignore` dans la ligne de commande, GenAIScript ignorera le fichier `.gitignore` et exécutera le script sur tous les fichiers et dossiers.",
  "411FBD7A72F51CCAFF38": "Traduction réalisée avec l’IA. Veuillez vérifier l’exactitude du contenu.",
  "F82745F8413486E55C82": "Aperçu",
  "A66F53CE81E66522E23F": "Découvrez les fonctionnalités de l’extension VSCode GenAIScript pour la création, le débogage et le déploiement de scripts.",
  "0513CA12D2DBC3B96CDB": "GenAIScript est pris en charge par une extension [Visual Studio Code](https://code.visualstudio.com/) qui offre un ensemble riche de fonctionnalités pour créer, déboguer et déployer des GenAIScripts.",
  "29091374E14B0F0B54E3": "Le [Visual Studio Code Marketplace](https://marketplace.visualstudio.com/items?itemName=genaiscript.genaiscript-vscode) contient la dernière version stable de l’[extension](https://marketplace.visualstudio.com/items?itemName=genaiscript.genaiscript-vscode).",
  "1DF54C63EE9793092DDF": "[Télécharger](https://marketplace.visualstudio.com/items?itemName=genaiscript.genaiscript-vscode)",
  "D9DF32C1F5D5C9E6B37B": "[Instructions d'installation](/genaiscript/getting-started/installation/#visual-studio-code-extension)",
  "CBFD27FE35FE688AFB20": "[Exécution de scripts](/genaiscript/reference/vscode/running-scripts/)",
  "10A8D8CFE8DBA01899BE": "[Intégration de Copilot Chat](/genaiscript/reference/vscode/github-copilot-chat/)",
  "C7AF1457165D7F67850F": "[Paramètres](/genaiscript/reference/vscode/settings/)",
  "A4B12EA8FAE89A93CF27": "Traduit avec l’IA. Veuillez vérifier l’exactitude du contenu.",
  "1DDD1D036BDB2CC62DD5": "GitHub Copilot Chat",
  "D7B642D8AFF70D7D55FC": "Intégrez-vous avec GitHub Copilot Chat pour exécuter des scripts via un participant de chat et des invites personnalisées dans Visual Studio Code. Apprenez à exécuter des scripts, sélectionner des modèles, exploiter le contexte et activer des flux de travail de codage assisté par l’IA plus efficaces grâce aux interfaces de chat.",
  "4B1F5957142B916EA1F5": "GenAIScript s’intègre à [GitHub Copilot Chat](https://marketplace.visualstudio.com/items?itemName=GitHub.copilot-chat)\nen fournissant un **participant de chat** qui vous permet d’exécuter des scripts dans le contexte d’une conversation de chat,\net une **invite personnalisée** pour générer du GenAIScript plus efficacement avec Copilot Chat.",
  "4CCB23D840379D6A2664": "Si vous avez besoin de vérifier votre quota de requêtes premium disponible pour GitHub Copilot, allez à [Fonctionnalités](https://github.com/settings/copilot/features)",
  "8276AC42B06936D00001": "Participant de chat `@genaiscript`",
  "FFD9C4D62C92F0DAF76B": "Le [participant de chat](https://code.visualstudio.com/api/extension-guides/chat#parts-of-the-chat-user-experience) `@genaiscript` vous permet d’exécuter des scripts sans le contexte\nd’une conversation [GitHub Copilot Chat](https://marketplace.visualstudio.com/items?itemName=GitHub.copilot-chat).\nCeci est utile pour exploiter des scripts existants dans une session de chat interactive.",
  "348117937FBA5AB04ED2": "Choisir le script à exécuter",
  "5D9783419DB7FC58C3B4": "La commande `/run` attend un identifiant de script comme premier argument (ex. `/run poem`). Le reste de la requête est\ntransmis au script en tant que variable `env.vars.question`.",
  "501544B002AFFD5BC493": "Si vous omettez la commande `/run`, GenAIScript recherchera un script nommé `copilotchat`. S'il en trouve un, il l'exécutera.\nSinon, il vous demandera de choisir un script parmi la liste des scripts disponibles.",
  "57BCB02269F6FE67D435": "Choisir le modèle",
  "6F35ECFF9A588CA4A4E1": "Si votre script ne spécifie pas de modèle, GenAIScript vous invitera à en sélectionner un.\nVous pouvez aussi spécifier le modèle à utiliser dans la configuration du script, en utilisant le fournisseur `github_copilot_chat`.",
  "FF02094EC88CFAF2CF8A": "modèle actuellement sélectionné : `github_copilot_chat:current`",
  "B3B0106E5241221431BF": "gpt-4o-mini : `github_copilot_chat:gpt-4o-mini`",
  "92FF2E5CE7955C5C87B1": "Lorsque GenAIScript vous invite à choisir un modèle, il stocke vos choix dans les paramètres d’espace de travail\ndans",
  "6472AB8EEBD886F2C3E8": "**Les modèles GitHub Copilot Chat ne sont disponibles que dans Visual Studio Code.** Ils ne fonctionneront pas depuis\nles interfaces [cli](/genaiscript/reference/cli) ou [playground](/genaiscript/reference/playground).",
  "3D09640DC12C9D7E8EA4": "Disponibilité des modèles",
  "2AE9CDB5685B90E1C330": "Tous les modèles listés dans l’interface de GitHub Copilot Chat ne sont pas forcément disponibles pour les extensions tierces.\nSi GenAIScript essaie d’accéder à un modèle non disponible, il vous en informera mais il n’a pas\nle contrôle sur votre configuration d’accès aux modèles.",
  "F6EE71566453656EB955": "Contexte",
  "697F4DDF99B2C0D3DC24": "Le contexte sélectionné par l’utilisateur dans Copilot Chat est converti en variables et transmis au script :",
  "12DA2C32D5EBADF48F44": "le contenu de l’invite est transmis dans `env.vars.question`. L’ID du script est supprimé dans le cas de `/run`.",
  "6A34A6DF5A14F22229DB": "le texte de l’éditeur actuel est transmis dans `env.vars[\"copilot.editor\"]`",
  "398D06700F652CB786C6": "la sélection actuelle de l’éditeur est transmise dans `env.vars[\"copilot.selection\"]`",
  "53E5C20600AD30326899": "toutes les autres références de fichiers sont transmises dans `env.files`",
  "DE987CE17A9880D59E94": "Exemples",
  "10D2B69B208791A0A447": "`mermaid` va générer un diagramme à partir de l’invite utilisateur.",
  "25798E2E3163C297E429": "`websearcher` va effectuer une recherche web selon l’invite utilisateur\n  et utiliser le fichier en contexte dans la réponse.",
  "473356D8C48B3DD20195": "`dataanalyst` utilise les outils d’interprétation de code Python pour\n  résoudre une question de calcul de données.",
  "8862D9805BA60362617F": "Historique",
  "A26D586356240D793779": "L’historique des messages est transmis dans `env.vars[\"copilot.history\"]`. C’est un tableau de `HistoryMessageUser | HistoryMessageAssistant` :",
  "0DAEEFBD3B0523030D19": "Conversation continue",
  "790BCC61DB0F6EC67493": "Vous pouvez utiliser le chat `@genaiscript` pour insérer l’exécution d’un script dans une conversation existante\nou pour poursuivre la conversation avec Copilot à partir des résultats du script. Les résultats\ndu script sont replacés dans l’historique du chat et accessibles à n’importe quel copilot par la suite.",
  "1D932EBB0DB655DDECD5": "`@genaiscript /run tool` va exécuter le script `tool` et replacer les résultats dans l’historique du chat.",
  "CA263B6732EC506FAB5B": "`analyze the results` poursuivra la conversation avec les résultats du script.",
  "0831D8D4A533736FA84C": "Script par défaut <a id=\"copilotchat\" href=\"\" />",
  "4C160EC8BEDE2F12D772": "Le script suivant peut être utilisé comme modèle de démarrage afin de créer un script par défaut lorsque l’utilisateur n’utilise pas la commande `/run`.",
  "E58769CF69EF152C0A42": "Fonctionnalités non prises en charge",
  "75BBF5B5FB4683965112": "Les fonctionnalités suivantes ne sont actuellement pas prises en charge par le participant au chat :",
  "D296CD6F809EBD28E6C6": "Outils (`#tool`)",
  "F030F39F3D0F5868583E": "référence `Workspace`",
  "75CB81F744F3F5AC7B4A": "Instructions personnalisées `genaiscript` <a href=\"\" id=\"genaiscript-custom-prompt\" />",
  "6601AD8AD5088C10FE86": "GenAIScript enregistre automatiquement un fichier instructions.md dans le dossier `.genaiscript/instructions`\nlorsque vous exécutez un script. Ce fichier contient les instructions utilisées pour générer le script.",
  "690C2356321D9EF7197D": "Sessions de chat augmentées",
  "B5C02259B4FA1B86F4BF": "Voici comment démarrer des sessions de chat en utilisant l’invite `genaiscript`.",
  "C10941C4A811DDF295C4": "Sélectionnez l’icône **Joindre un contexte** 📎 (`Ctrl+/`), puis cliquez sur **Instructions...**,\npuis sélectionnez l’invite **genaiscript.instructions.md**.",
  "A21AE775AF78DC3E8BDD": "Incluez des instructions pour écrire un script ou répondre à une question sur GenAIScript,\nex : `écris un script qui résume une vidéo`.",
  "CA96510F41BAA480C963": "Comme l’invite injecte toute la documentation de GenAIScript (plus de 700 Ko à la date de rédaction),\nvous préférerez utiliser un modèle à large contexte comme Sonnet ou Gemini.",
  "9949584196796F7F8B01": "Gardez aussi à l’esprit que l’intégralité de la conversation est renvoyée à chaque itération, donc cette technique\nfonctionne mieux comme demande détaillée ponctuelle.",
  "8D9B2D580497034C41AB": "Traduit avec l’IA. Veuillez vérifier l’exactitude du contenu.",
  "AEEBD152F61987DAB8C4": "GitHub Gists",
  "02198A9BAAEFCA6CF538": "Utilisez les gists pour partager des extraits de code GenAIScript.",
  "5D0DAD91C9A953E0633B": "[GitHub Gists](https://gist.github.com/) sont un moyen simple de partager des extraits de code et des notes avec d'autres personnes.\nCe sont essentiellement des dépôts Git qui peuvent être créés et partagés facilement.\nLes gists peuvent être publics ou secrets, et ils supportent le versionnage, ce qui en fait un excellent outil pour la collaboration.",
  "3260B0793B06E7DC3A4C": "![Une capture d’écran de GistPad dans Visual Studio Code](./gistpad.png)",
  "DE51F87FF4E17E8A0137": "Exécuter GenAIScript depuis des Gists",
  "11139F9EF335C82E0D2B": "GenAIScript prend en charge les formats d’URL suivants pour exécuter des scripts directement depuis un gist.",
  "8C2A5909C5D60E3D482A": "`gist://<id du gist>/<nom du fichier>`",
  "CB978A1D705AD48DA5EF": "`vscode://vsls-contrib.gistfs/open?gist=<id du gist>&file=<fichier>`",
  "C4BA2E2EDD560B993A63": "Le fichier gist est mis en cache localement dans `.genaiscript/resources` puis exécuté. Si disponible,\nil utilise les informations de connexion GitHub pour accéder aux gists privés.",
  "F88E8C7C82ED11EBC74D": "GenAIScript sont des fichiers JavaScript donc assurez-vous d’exécuter uniquement des gists auxquels vous faites confiance.",
  "4EC4856AD8A207CD7566": "GistPad dans Visual Studio Code",
  "BC8B207C71E4DDB30E42": "L’[extension GistPad](https://marketplace.visualstudio.com/items?itemName=vsls-contrib.gistfs)\npour Visual Studio Code permet de créer, éditer et gérer des gists directement depuis votre éditeur.",
  "F4A93A980327DFF31EC0": "Vous pouvez ouvrir un fichier dans un Gist et l’exécuter à l’aide de la commande `genaiscript`.",
  "03ECC5B58CA990BF5423": "Vérification de types",
  "E898F050948C41CD0117": "Pour activer la vérification des types, il faut téléverser le fichier `genaiscript.d.ts` dans le gist et ajouter une référence à celui-ci\nen ajoutant ce commentaire **en haut du fichier** :",
  "53F8DFECF99D1DF6F46C": "Cela peut se faire automatiquement :",
  "D91E821771AB51FF986A": "clic droit sur le fichier GenAIScript du Gist",
  "D9ACB43C9B92C5023117": "sélectionnez `GenAIScript: Fix Type Definitions`",
  "E89B91B635177AED47C5": "Il se peut que l’on vous demande d’autoriser GenAIScript à utiliser votre compte GitHub. GenAIScript demandera un jeton avec le scope `gist` pour téléverser les fichiers manquants.",
  "775C663D0926D6585F16": "Pour charger les types GenAIScript, vous devrez “stimuler” le compilateur TypeScript :",
  "4DE60393F31D9EF82E16": "ouvrez le fichier `genaiscript.d.ts` à partir de l’arborescence GistPad (cela charge les types en mémoire)",
  "8F4BD89D5C06AC4E3B1B": "ouvrez votre fichier GenAIScript dans l’arborescence GistPad et il devrait bénéficier de la vérification de types !",
  "93A2D95DEE60A0B8B972": "Limites",
  "E454AB35D5DBBCB41F0D": "Comme l’extension GistPad n’est pas un IDE complet, il existe certaines limites à prendre en compte :",
  "CA6DAE8B1E540FDC5E79": "les imports risquent probablement de ne pas se résoudre",
  "1E69C89F41A66074FAB9": "Traduit avec l’IA. Veuillez vérifier l’exactitude du contenu.",
  "C3C8F2FD9F3CFCA978C3": "API Node.JS",
  "34BE7BCABF1741D7F7C6": "Découvrez comment importer et utiliser l’API Node.JS pour exécuter des scripts dans un thread worker isolé, incluant la configuration des variables d’environnement et des détails d’intégration pour une flexibilité accrue.",
  "7E9943013970701DBF34": "GenAIScript s’exécute dans un environnement Node.JS (légèrement modifié) où des globales supplémentaires ont été ajoutées.\nCet environnement est configuré par le [cli](/genaiscript/reference/cli).\nPar conséquent, pour exécuter un GenAIScript dans un processus Node.JS « standard », vous aurez besoin de l’**API `run` de Node.JS**. Cette API charge et exécute un script GenAIScript dans un thread worker séparé.",
  "EA9A27D1B575C28A29EB": "Cette page décrit comment importer et utiliser GenAIScript comme une API dans votre application Node.JS.",
  "9C460A2063D060DED9BD": "Configuration",
  "1397B7BC687D03D2AB1C": "En supposant que vous avez ajouté le cli comme dépendance dans votre projet,\nvous pouvez importer le [cli](/genaiscript/reference/api) de la manière suivante :",
  "5C99A264DDCDE7E57F5C": "Utilisation",
  "0051353BDB1AEA5F7F01": "L’API peut être importée à l’aide d’imports depuis **\"genaiscript/api\"**.",
  "D1303FD0617D922938E4": "Le wrapper importé `api.mjs` est un petit chargeur sans dépendance qui lance un [thread worker Node.JS](https://nodejs.org/api/worker_threads.html) pour exécuter GenAIScript.",
  "2E1AE4E9399E4462506D": "Aucune pollution des globales",
  "FFF0D7058241F06B5D80": "Aucun effet de bord sur le processus",
  "605AE9E64547FBDF37D0": "`run`",
  "4681C4A46860E86022BF": "La fonction `run` encapsule la commande [cli run](/genaiscript/reference/cli/run).",
  "6754FA4D0AB7A3A08CD0": "Variables d’environnement",
  "F6D68F43276A61E273AD": "Vous pouvez définir les variables d’environnement pour le processus GenAIScript en passant un objet en tant que champ `env` dans les options. Par défaut, le worker héritera de `process.env`.",
  "BA8B61DA3FD01C4DCA25": "Traduit par IA. Veuillez vérifier l’exactitude du contenu.",
  "BCBE28A2C16BF01E6DFC": "article de blog",
  "379D989837E0886D76BE": "fonction depuis le ",
  "FC2E950878FB4BD07CC1": "moteur GenAIScript",
  "96CDC63EDC0F050AB1B3": "Explication du code",
  "0EEBD03423EE5197E465": "Cette ligne importe la fonction ",
  "55990CD7E969BBB92970": "Cette ligne appelle la fonction ",
  "8D71D353D40E587B8FB8": "participant de chat",
  "04C68684C83D72437C66": "La fonction `makeItBetter` ressemble grossièrement à ceci. Elle enregistre une fonction de rappel qui est appelée à chaque tour de chat. ",
  "A35E27D6444A01B74377": "Initialisation",
  "CB8FCFB257993C02699D": "Importer le runtime",
  "5355DA6C0506EB984D08": "Variables globales\n\nLe runtime installe des parseurs globaux et des types de prompts en ligne. Toutefois, les variables globales comme `$`, `def`, etc., ne sont pas disponibles, uniquement dans les prompts en ligne.",
  "9959919566C8FB24083C": "Utilitaires\n\n* [cast](/genaiscript/reference/runtime/cast), convertir n’importe quelles données en sorties structurées\n* [classify](/genaiscript/reference/runtime/classify), classifier du texte\n* [makeItBetter](/genaiscript/reference/runtime/make-it-better), demander au LLM d’améliorer son résultat",
  "FC156B1D6A20ADB1C155": "convertir",
  "1DB64C8B79DDA4014642": "classifier",
  "20D88C99AEFC0773E7AC": "améliorer",
  "72BCB013ED85A48FF6DA": "Vidéo",
  "27E248D1F6EDEBA8F3F1": "Découvrez diverses commandes liées à la vidéo",
  "ED12D0518DF4D10D23D9": "Certaines des [fonctionnalités de traitement vidéo](/genaiscript/reference/scripts/videos) sont également disponibles dans la CLI.",
  "891AA70CE4BBA53D9755": "`video probe`",
  "E207FDF8666BA90F5CBD": "Affiche le résultat de `ffprobe` dans la console.",
  "9DD6F21C97595A5CB602": "`video extract-audio`",
  "3AF6D8B24AF8162E1C07": "Extrait l’audio dans un format plus léger, optimisé pour la transcription.",
  "FA0C74D50816CA6A0C1E": "`video extract-frames`",
  "33F06E61850A43059E82": "Extrait des captures d’écran de la vidéo. Vous pouvez spécifier les timestamps en secondes ou sous le format `h:mm:ss`, ou encore un nombre de captures.",
  "6BCDF83D1E47A968C3FF": "Traduit à l'aide de l'IA. Veuillez vérifier l'exactitude du contenu.",
  "E966F1EC9B8CED6E41B3": "Test",
  "A7AB8FCD5D126D608CED": "Apprenez à exécuter des tests pour vos scripts à l’aide du CLI GenAIScript, avec prise en charge de plusieurs modèles d’IA.",
  "F921D5D5B33AD9A0D545": "Exécute les tests dans les scripts en utilisant [promptfoo](https://www.promptfoo.dev/).",
  "57E845BA31C9F9D2974D": "Vous pouvez remplacer les modèles utilisés pour les tests à l’aide de `--models` :",
  "3699143004EA0BE4E45D": "Cette fonctionnalité nécessite d’ajouter `@genaiscript/api` à vos dépendances dans `package.json`.",
  "9617C2757D4D9D3F7289": "visionneuse de résultats",
  "37B2530A65D32931AD4F": "Exécutez la commande `test view` pour lancer la visionneuse des résultats de test :",
  "265CEF24E9BDA83AB4A8": "Traduit à l'aide de l’IA. Veuillez vérifier l’exactitude du contenu.",
  "4E375FE85378D2428F5A": "Guide complet pour utiliser l’interface en ligne de commande (CLI) GenAIScript afin d’automatiser des tâches avec des scripts d’IA dans des environnements Node.js.",
  "A3BC6C83B64069AA0936": "La CLI GenAIScript **`genaiscript`** exécute des scripts GenAIScript en dehors de Visual Studio et dans vos [processus d’automatisation](/genaiscript/getting-started/automating-scripts).",
  "945FC99F52257BE00477": "Prérequis",
  "C6AE8F9493BE4CCF075A": "La CLI est un package Node.JS hébergé sur [npm](https://www.npmjs.com/package/genaiscript).",
  "91B9C74D8BB72390366B": "Installez [Node.JS LTS](https://docs.npmjs.com/downloading-and-installing-node-js-and-npm) (Node.JS inclut npm et npx).",
  "E67E976CAF53E2B605E8": "Vous devez disposer au minimum de Node.JS v22 !",
  "87A3A99DF9B9AF637FE6": "Installation",
  "53B678E5E364D858596C": "Installez localement en tant que `devDependency` dans votre projet.",
  "B7CDBF7EC9B48CA9AD87": "Installez-le globalement.",
  "01F946867E3C3C33B76A": "Vérifiez que votre version de node est au moins 20._ et npm 10._ en lançant cette commande.",
  "64FE8F9327AC79194813": "Aucune installation (`npx`)",
  "869571B4FBC92AACBC4D": "`npx` est inclus avec **Node.JS**.",
  "2B4BC458039566847030": "Avec [npx](https://docs.npmjs.com/cli/v10/commands/npx),\nvous pouvez exécuter la CLI sans étapes d'installation préalables.\n*npx* installera l’outil à la demande. npx gère également les problèmes d’environnement\noù l’outil n'est pas trouvé dans le chemin système.",
  "B78390E1761CF406E7FB": "Ajoutez `--yes` pour passer outre la demande de confirmation, utile dans un scénario d'intégration continue (CI).",
  "78C4B77E354DE2176B38": "Spécifiez la plage de versions pour éviter tout comportement inattendu avec des installations mises en cache de la CLI via npx.",
  "59528E549087CF9362FD": "Scripts utilitaires",
  "255CF5A39F397C94A034": "Pour vous assurer que les fichiers de définition TypeScript sont écrits et mis à jour,\nvous pouvez ajouter les scripts suivants à votre fichier `package.json`.",
  "CEF329AD80BA09DBBDD2": "Le script `genaiscript` est également un raccourci qui facilite l’exécution de la CLI\navec `npm run` :",
  "DF0C62D1E6343434A9F0": "Travailler derrière un proxy",
  "E6A0A4D34C377A866CCC": "Certains packages optionnels utilisés par la CLI ne prennent pas en charge l'installation derrière un proxy HTTP,\nce qui est très courant en contexte d’entreprise.",
  "62B429ADA8FF275A088F": "Si votre environnement de travail nécessite un proxy,\nutilisez `npm install --omit=optional`\npour permettre aux packages optionnels d’échouer proprement durant l'installation.",
  "6F04866A914F5C531CF9": "Si votre environnement de travail nécessite un proxy,\nvous pouvez définir l’une des variables d’environnement suivantes\n(`HTTP_PROXY`, `HTTPS_PROXY`, `http_proxy` ou `https_proxy`) pour que la CLI utilise un proxy,\npar exemple `HTTP_PROXY=http://proxy.acme.com:3128`.",
  "A5B6D6FCB898AADD2BE2": "Configuration",
  "0CC9D79E99070854D934": "La CLI charge les [secrets](/genaiscript/getting-started/configuration) à partir des variables d’environnement ou d’un fichier `./.env`.",
  "91A1A814EC331615DF92": "Vous pouvez remplacer le nom de fichier `.env` par défaut en ajoutant l’option `--env .env.local`,\nvoire importer les deux fichiers.",
  "177FA0DB149F764CDC48": "Créer un nouveau script",
  "606DFAA013604E4DBC53": "Crée un nouveau fichier de script dans le dossier `genaisrc`.",
  "2D29F30FF8E417AA994A": "Compiler les scripts",
  "962B9069078CC04699D6": "Lance le compilateur TypeScript pour trouver les erreurs dans les scripts.",
  "B17DA12E232CC4D256EA": "Exécuter un script",
  "B9425D79F4FAEA0FCCC3": "[Exécutez un script](/genaiscript/reference/cli/run) sur un fichier\net diffuse la sortie du LLM vers stdout. **À exécuter depuis la racine de l’espace de travail**.",
  "5B6E6EAE5602D37E6FA9": "où `<script>` est l’identifiant ou le chemin du fichier de l’outil à exécuter, et `[files...]` est le nom du fichier de spécification à traiter.",
  "178033CBF3602C3BE596": "La CLI prend également en charge le piping à la manière d’UNIX.",
  "3A4E1E7AEBA7B6FA3D21": "Lister la configuration des modèles",
  "54451619314FA51D345E": "Lancez la commande `script model` pour lister les scripts disponibles et leur configuration de modèle. Cela peut être utile pour diagnostiquer les problèmes de configuration en environnement CI/CD.",
  "77AA4F4B9C9A38D65CD7": "où [script] peut être un identifiant de script ou un chemin de fichier.",
  "B6809D01799DBBFDE37B": "Utilisation de la CLI comme API Node.JS",
  "01279E9827848457C0CE": "La CLI peut être importée et [utilisée comme une API dans votre application Node.JS](/genaiscript/reference/api).",
  "22644CE82ACB36F8AB1B": "À propos du mélange de fichiers et de `--vars`",
  "963A3FC54BFBC073247B": "`files` et `--vars` sont tous deux des arguments variables en ligne de commande. Ils consommeront donc toutes les entrées suivantes jusqu’à l’apparition d’une nouvelle option. Ainsi, l’ordre est important lorsque vous les mélangez. Il est recommandé\nde placer les fichiers d’abord, puis de suivre avec l’option `--vars`.",
  "A57D77F851AC0B6F787C": "[ambiguïté d’analyse](https://github.com/tj/commander.js/blob/HEAD/docs/options-in-depth.md#parsing-ambiguity)",
  "F51C854B05BFA52ABDD5": "Sujets",
  "57D7DDF2B71DF1E08503": "Traduit avec l’IA. Veuillez vérifier l’exactitude du contenu.",
  "C44AE508DF9BA8337DD8": "Convertir",
  "69BFFA0B38DBAF881233": "Découvrez comment appliquer un script à plusieurs fichiers et extraire le résultat.",
  "0860929572CE217012F7": "Convertit un ensemble de fichiers, séparément, à l'aide d'un script.",
  "1A94AD9FC2D3A6081F5B": "où `<script>` est l’identifiant ou le chemin du fichier de l’outil à exécuter, et `<files...>` est le nom du fichier de spécification sur lequel l’exécuter.\nContrairement à `run`, qui fonctionne sur tous les fichiers en même temps, `convert` traite chaque fichier individuellement.",
  "59C13C63CF48063189D6": "Fichiers",
  "3E074B22666534B53683": "`convert` accepte un ou plusieurs motifs [glob](https://en.wikipedia.org/wiki/Glob_\\(programming\\)) pour faire correspondre les fichiers dans l’espace de travail.",
  "C25C116F7F3568C3F192": "--excluded-files <fichiers...>",
  "F0EDD9182141F5ED8B4F": "Exclut les fichiers spécifiés de l’ensemble des fichiers.",
  "1C74FAE4C1A346C0D0DF": "--exclude-git-ignore",
  "4F8416728E630ED7ED43": "Exclut les fichiers ignorés par le fichier `.gitignore` à la racine de l’espace de travail.",
  "B551928F9C232AD961FA": "Sortie",
  "6FCEAAD7191137043C33": "La sortie de chaque fichier est enregistrée dans un fichier nouveau ou existant. Vous pouvez contrôler la logique pour décider quelle partie de la sortie sauvegarder et où la sauvegarder.\nPar défaut, le résultat de conversion d’un fichier `<filename>` est enregistré dans un fichier `<filename>.genai.md`.",
  "2CCD246D47F3EE5231F3": "--suffix <suffixe>",
  "4B27022ECE3CB00EF384": "L’option `--suffix` vous permet de spécifier un suffixe à ajouter au nom du fichier de sortie.",
  "AD6EC7171F56625CDD51": "GenAIScript va « défencer » automatiquement la sortie dans le markdown qui correspond au suffixe (après `.genai`). Ainsi, si le LLM génère",
  "D1EC5393BEC311E05E6C": "Le contenu converti dans `<filename>.genai.txt` sera `:)`.",
  "09B595E24A1A602CB141": "--rewrite",
  "F2BCF924E815349E13D1": "Ce drapeau remplace l’option `suffix` et indique à GenAIScript d’écraser le fichier original avec le contenu converti.",
  "3339E2EF996955612696": "--cancel-word <mot>",
  "9D7D21DBD35CA75BA193": "Spécifiez le mot-clef \"ignorer la sortie, rien à voir ici\" en utilisant l’option `-cw`.",
  "11BFC42A6646F57885CE": "En savoir plus",
  "A96E87976CC73D9D92D1": "La liste complète des options est disponible dans la [référence CLI](/genaiscript/reference/cli/commands#convert).",
  "6E704ACFE8BEBB80BC45": "Traduit par intelligence artificielle. Veuillez vérifier l’exactitude du contenu.",
  "8AE211ED65242526AF81": "Vous pouvez lancer le ",
  "25E8533FAD702E538754": "en tant que ",
  "AF85C5B17C2A6FEFB370": "serveur Web API",
  "83FE86338D9A0AFB5520": "fastify",
  "23A489C15A4163CC3D88": "Scripts en tant que points de terminaison REST",
  "4CD15632A8F45912F364": "Les paramètres de point de terminaison OpenAPI sont déduits automatiquement des ",
  "B93434CC80FC65B8CB4D": "paramètres du script",
  "E55AB7D6B42B0585B421": "Voici un script `task.genai.mjs` ",
  "BFE5EB978EB5DF5133B6": "Un script plus avancé pourrait ne pas utiliser le contexte de premier niveau et utiliser à la place `env.output` pour transmettre le résultat. ",
  "FACFA2C29E27EE149C1C": "Route",
  "2F7A858F6AD48EFF9B0E": "La route par défaut est ",
  "2C9FA8A9C4460AFF15A8": "et la spécification OpenAPI est disponible à ",
  "401CF8F5A245BFF981D6": "La spécification OpenAPI sera disponible à ",
  "35373C0002E4496B9A9A": "Le serveur sera disponible à ",
  "39D5B83D66CB48EDBD9B": "Script de démarrage",
  "CDDF6D7FBAF4BE0205E8": "Vous pouvez spécifier un identifiant de script de démarrage dans la ligne de commande en utilisant l'option ",
  "89EE544927CE0342A54A": "Filtrage des scripts",
  "D75C89A3DB6C87B95B1F": "option `--groups` et définir le groupe ",
  "7026089844B86522E4ED": "Exécution des scripts depuis un dépôt distant",
  "AF02065D95D6F6297D93": "Vous pouvez utiliser l'option ",
  "5E969AA0073E1100EA73": "Linting",
  "18A5AA841A6DA445137F": "Vous pouvez exécuter ",
  "091C27287DCF5E6F3FE4": "spectral",
  "29FA1C5E43831A053A6D": "enregistrez ce fichier ",
  "ADDA7A51E17CEA18CA85": "lancez le serveur api",
  "BB5D63D4809FB53180EE": "exécutez le linter spectral",
  "E1E23D53E32F87500DC7": "Les bases de GenAIScript",
  "6A6B2D426B158999ACD7": "Introduction",
  "6CA1B4701267680EED1D": "Termes clés",
  "FD6F0316C223C12341C7": "GenAIScript : un programme JavaScript stylisé qui définit le contexte\npour l'appel du LLM, permet l'exécution de code JavaScript arbitraire, \nprépare l'entrée du prompt pour le LLM, appelle le LLM et traite la sortie du LLM\nselon les instructions données dans le prompt.",
  "F8F717EE559777F7C4ED": "GPVM : un système d'exécution qui, à partir d'un GenAIScript, exécute ce dernier,\nce qui implique d'intégrer le contexte dans un prompt, d'appeler le LLM spécifié,\net d'extraire le contenu du résultat du LLM.",
  "DACFE5DECAA0DDB66A41": "Extension GenAIScript pour VS Code : un module complémentaire pour VS Code qui offre\naux utilisateurs des méthodes simples pour créer, éditer, exécuter et déboguer\ndes GenAIScript.",
  "2DF66CA5A1B2C7A8570B": "Modèles de base et LLM : bien que GenAIScript supporte actuellement différents LLM,\nnous prévoyons à l'avenir d'intégrer des modèles fondamentaux additionnels au-delà des modèles linguistiques larges.",
  "8EAC121F1503C057DFDE": "Capacités",
  "7EE6F9C5C549DDC79F4E": "Comportement du système",
  "362262921C9B115C2B1C": "Documentation",
  "31AD16D880FC0FC89392": "Cas d'utilisation",
  "BABBB395CC31FFCF5ACE": "Utilisations prévues",
  "5CA16ADF794F773F89B1": "Utilisations non prévues",
  "EB0236226603383B5C02": "sécurité et confiance",
  "B692E173573E188A56E9": "Meilleures pratiques pour les modèles fondamentaux",
  "057E58F34007E41BA4AC": "Article de blog sur les fonctionnalités d'IA responsable dans AOAI présentées à Ignite 2023",
  "90AAF7C042B7FCE08AD6": "Note de transparence pour le service Azure OpenAI",
  "D5FFB0AFF5F772D8D1D6": "Nous recommandons de consulter la documentation [Sécurité du contenu](/genaiscript/reference/scripts/content-safety) pour plus d'informations sur la protection contre les contenus nuisibles et le contournement des protections. ",
  "72C55B2ED59F9D03FD3A": "Limitations",
  "D66BAD69E5BF60A18883": "Bonnes pratiques pour améliorer les performances du système",
  "301637088C52296D5CCE": "En savoir plus sur l'IA responsable",
  "3190EAD539563FDF3671": "Principes d'IA Microsoft",
  "03D3721E22408D6FA2CB": "Ressources Microsoft sur l'IA responsable",
  "2CEA0BB19E340580EBDE": "Cours Microsoft Azure Learning sur l'IA responsable",
  "AF21D5066A1626F5F620": "En savoir plus sur GenAIScript",
  "559D17A0A8E4A8023882": "Contactez-nous",
  "EBD1021AACDF00B916F4": "À propos de ce document",
  "16D0ED8DC6F1134B4FF5": "Ne faites pas confiance aux scripts",
  "E64731FCD533E2173AB5": "Les fichiers GenAIScript `.genai.mjs` sont des fichiers JavaScript exécutables utilisant en fait un moteur d’exécution JavaScript (VSCode ou Node). Il est important de comprendre que le script peut faire tout ce que JavaScript peut faire. Cela inclut la lecture et l’écriture de fichiers, les requêtes réseau, et l’exécution de code JavaScript arbitraire. ",
  "A5A9D0C59A7604AFBAF8": "Ne lancez pas de scripts `.genai.mjs` provenant de sources non fiables. ",
  "73F9EB7AEAC99B445275": "Ne faites pas confiance aux résultats générés par le LLM",
  "20D58DB3C4AB996C8A13": "Confiance dans l'espace de travail Visual Studio Code",
  "3DFE166DD6AABAAEF9C7": "L’extension est ",
  "F03CDA60B5F97987D83E": "désactivée",
  "1039F2F28EEB17EE2FD1": "lors de l’ouverture d’un dossier en ",
  "57C388B2A4303B13D688": "Mode Restreint",
  "6B4522AB2894FAB7A1A2": "Aperçu Markdown dans Visual Studio Code",
  "02662DA0598C4DDC1FB9": "VS Code restreint le contenu affiché dans l’aperçu Markdown",
  "AA153B4DC4B02E7C59E4": "Le ",
  "387673882A7A38ADA505": "**Playground**",
  "0FA68B585139356BCFBB": "Lancement",
  "7B7D5053DF24C15A419C": "Dépôt distant",
  "6903FCA2ECFCF57E571E": "Vous pouvez exécuter le playground sur un dépôt distant en utilisant vos secrets `.env` actuels. ",
  "AE4C15CCFCA1E683813E": "Installation locale",
  "AAAF21822DB456489FE6": "puis exécutez",
  "C2596D94B5F10C0F5E9A": "Exécution de scripts depuis un dépôt distant",
  "2E930E5D6275D36E0F8E": "Vous pouvez utiliser l’option `--remote` pour charger des scripts depuis un dépôt distant.\nGenAIScript effectuera un clonage superficiel du dépôt et exécutera le script depuis le dossier cloné. ",
  "39666A740E501FA6F183": "Documentation complète pour l'automatisation des scripts, les configurations LLM et les outils de développement, incluant une extension VSCode et une interface en ligne de commande pour les transformations basées sur l'IA du code.",
  "8290979947F4DA3D1F37": "GenAIScript est un langage de script qui intègre les LLM comme un élément de premier plan du processus de script, permettant aux utilisateurs de créer, déboguer et déployer facilement des scripts basés sur LLM capables d'accomplir des tâches au-delà de ce que le code conventionnel peut faire. Ce guide de référence fournit une documentation complète pour GenAIScript, incluant la syntaxe des scripts, les configurations LLM, l'extension VSCode et l'interface en ligne de commande.",
  "B03CB00E19D7AB5F4A51": "[Scripts](/genaiscript/reference/scripts) offrent un cadre JavaScript spécifique au domaine pour construire des requêtes LLM.",
  "878438F877A19F4B317D": "[CLI](/genaiscript/reference/cli) documente l'interface en ligne de commande pour automatiser l'exécution des GenAIScripts.",
  "2A9C82CDAF2B7B3EBDC3": "[Extension Visual Studio Code](/genaiscript/reference/vscode) fournit un ensemble riche de fonctionnalités pour créer, déboguer et déployer des GenAIScripts.",
  "0CCC4949C3E968BF65FA": "Traduit à l'aide de l'IA. Veuillez vérifier l'exactitude du contenu.",
  "6E1A29C67C915FA13EF9": "GitHub Actions",
  "36A06EC02903ACD9D7DC": "Apprenez à utiliser GitHub Actions pour automatiser vos workflows et améliorer votre processus de développement.",
  "97A13F7672212CB45759": "[GitHub Actions](https://docs.github.com/en/actions) est une plateforme d'intégration continue et de livraison continue (CI/CD) qui vous permet d'automatiser votre pipeline de construction, de test et de déploiement. Vous pouvez créer des workflows qui construisent et testent chaque pull request vers votre dépôt, ou déployer les pull requests fusionnées en production.",
  "8CD7FDE62C0F96398B7C": "[Récemment](https://github.blog/changelog/2025-04-14-github-actions-token-integration-now-generally-available-in-github-models/), GitHub a ajouté la possibilité d'utiliser également les [GitHub Models](https://docs.github.com/en/github-models) dans les actions.",
  "66BF7CDFA7303DC155AE": "La combinaison d'Actions et de Models vous permet d'exécuter GenAIScript dans le cadre de votre CI/CD.",
  "20D23D3AEE93B234EED9": "Passez à la section [Custom Actions](#custom-actions) pour apprendre à emballer un script GenAIScript en tant qu'action GitHub.",
  "8EAE99E11CF6BCA30F76": "Exemples",
  "293F700888FBFD74DBC3": "[GenAI Issue Labeller](https://github.com/pelikhan/action-genai-issue-labeller/)",
  "F19BB84E7768DC2B31B8": "[GenAI Issue De-duplicator](https://github.com/pelikhan/action-genai-issue-dedup/)",
  "C5C8431D4A4131621657": "[GenAI Video Issue Analyzer](https://github.com/pelikhan/action-genai-video-issue-analyzer/)",
  "03144E04055EAD9B81D8": "[GenAI Code Commentor](https://github.com/pelikhan/action-genai-commentor/)",
  "3573812B540BDB701F5E": "Permissions des GitHub Models",
  "882E87959EB66BAE9A51": "[Pour utiliser les Models dans une action GitHub](https://docs.github.com/en/github-models/use-github-models/integrating-ai-models-into-your-development-workflow#using-ai-models-with-github-actions), vous devez définir les `permissions` de l'action pour inclure `models: read`.",
  "6333CA6E57B56CB7A37C": "GenAIScript prend en charge nativement les GitHub Models, vous pouvez donc l'utiliser directement dans votre workflow GitHub Actions.",
  "BF6A00C690B1F6E898F4": "Utilisation de la CLI",
  "096A45D5DB42027E15C2": "La manière la plus simple d'utiliser GenAIScript dans une action GitHub est d'exécuter la [CLI](/genaiscript/reference/cli) directement. Vous pouvez le faire en ajoutant une étape à votre workflow qui exécute la commande `genaiscript`.",
  "4A95A21898516B7393DD": "**Assurez-vous d'inclure le `GITHUB_TOKEN` dans les variables d'environnement** afin que GenAIScript puisse s'authentifier auprès des GitHub Models.",
  "06F6647711F081B926E7": "Actions personnalisées",
  "423B3DF5537FF293A665": "GitHub prend en charge la création de tâches sous forme d’[actions personnalisées](https://docs.github.com/en/actions/sharing-automations/creating-actions/about-custom-actions), généralement dans un dépôt dédié. C'est un excellent moyen d’emballer un script IA et de le partager avec d’autres.",
  "136F3569F49C62BB047C": "La CLI GenAIScript fournit une commande pour générer/mettre à jour le code de base permettant d’emballer un script en tant qu’[action conteneur Docker](https://docs.github.com/en/actions/sharing-automations/creating-actions/creating-a-docker-container-action) afin qu’il puisse être utilisé dans GitHub Actions quel que soit le langage utilisé pour écrire le script.",
  "760F4816B6DE579B21D6": "Pour commencer,",
  "C4B9A292864E615CE5F1": "Créez un nouveau dépôt pour votre action.",
  "CBC3B8004BB98ADAECD0": "Ouvrez un terminal à la racine de votre dépôt.",
  "F3E92C29E191E9CD1B1E": "Exécutez la commande pour générer le squelette de l'action :\n\n```bash\nnpx -y genaiscript configure action",
  "B2DBC80B724EA2C10190": "`action.yml` fichier de métadonnées de l'action",
  "E60B1171501B8B3C9F71": "`Dockerfile` Dockerfile pour l'action",
  "F9CEF7016F69CD7D4FEC": "`README.md` documentation pour l'action",
  "3FFEFADA19A3D785423F": "`.gitignore` fichiers à exclure dans le dépôt",
  "5178298E56AD9AB284AE": "`.github/workflows/ci.yml` workflow CI pour tester l’action",
  "39195B01030192C3207A": "`package.json` configuration du package pour l’action",
  "832A7FADE2D0081FFBBB": "`devcontainer/devcontainer.json` configuration du devcontainer pour VS Code",
  "11826F66D7FEAFD31895": "`devcontainer/Dockerfile` Dockerfile du devcontainer pour VS Code. Doit rester synchronisé avec le Dockerfile de l’action.",
  "E64F1A67ECF4769AC8B5": "Pour mettre à jour le squelette de l’action, vous pouvez exécuter à nouveau la même commande :",
  "1C424F70D84CED703093": "Métadonnées",
  "44A40245DA14FFE39F70": "Le fichier `action.yml` contient les métadonnées de l’action. Elles sont extraites de différentes parties de votre projet :",
  "EBF5046C71F84C6A4C20": "Le `name` est dérivé de l’identifiant du script.",
  "51F978ED5D0962B755D3": "La `description` est dérivée du `title` du script.",
  "57599AFED72D017CEED6": "Les `inputs` sont dérivés des [paramètres](/genaiscript/reference/scripts/parameters) du script (voir ci-dessous).",
  "8BB1865BE27D3DA0D510": "Notez que la `script.description` est utilisée pour remplir le fichier `README.md`.",
  "A8F101DED4825B50438C": "Entrées",
  "E803100B411D97985614": "La section `inputs` du fichier `action.yml` est générée automatiquement à partir des paramètres du script. Chaque paramètre est converti en une entrée ayant le même nom, et le type est déduit du type du paramètre.",
  "6C9A8ABF7BC61ED8718E": "Le fichier `action.yml` généré ressemblera à ceci :",
  "1DD777B47BB21C9E29EC": "Il existe également des champs additionnels communs à toutes les actions GenAIScript :",
  "00DC455D086A203E9BA0": "`files` : Spécifie un chemin de fichier pour remplir la variable `env.files`. Pour supprimer ce champ, définissez `accept: \"none\"` dans le script.",
  "0D0E28A0CB783E8189A5": "`github_token` : **Ceci est nécessaire pour s'authentifier auprès des GitHub Models.** Il devient `INPUT_GITHUB_TOKEN` lorsque le conteneur est créé et GenAIScript le récupère automatiquement.",
  "DCBB5F5C53FE33AB3214": "`github_issue` : Le numéro actuel de l’issue GitHub ou de la pull request.",
  "A85DFD002E672C3B8E8D": "`debug` : Le filtre pour contrôler les messages de [journalisation](/genaiscript/reference/scripts/logging) en mode debug.",
  "341DE51C1836436A79DF": "Sorties",
  "8F351B0FA6737DD4D4B6": "L’action remplit quelques champs de sortie.",
  "1486292F05DF42B8B501": "`text` : il s'agit du texte généré par le script.",
  "28072BAC46E665E84580": "`data` : c’est la sortie structurée analysée et convertie en JSON. Ce champ est renseigné si vous fournissez un [responseSchema](/genaiscript/reference/scripts/schemas) dans le script et si le LLM est capable de générer une réponse conforme au schéma.",
  "6059805CD960EB40BC92": "Personnalisation graphique (Branding)",
  "B07268F38C5A35900BCB": "Le champ `branding` du `script` est utilisé pour [personnaliser l’apparence de l’action dans l’interface GitHub](https://docs.github.com/en/actions/sharing-automations/creating-actions/metadata-syntax-for-github-actions?versionId=free-pro-team%40latest&productId=actions&restPage=sharing-automations%2Ccreating-actions%2Creleasing-and-maintaining-actions#branding).",
  "0CDFCAF3C62F0668E21E": "Conteneurs",
  "F7A017359148B2FB0618": "Par défaut, GenAIScript utilise [node:lts-alpine](https://hub.docker.com/_/node/) comme image de base pour le conteneur de l’action. Vous pouvez modifier cela en spécifiant une image de base différente dans la `cli`.",
  "5EBDB194C3A8B2F4E40A": "GenAIScript créera également un [devcontainer](https://code.visualstudio.com/docs/devcontainers/create-dev-container) afin que vous puissiez développer l’action dans un environnement conteneurisé (presque) identique à celui dans lequel elle s’exécute dans GitHub Action.",
  "92EB1A8687CE2AAC2119": "ffmpeg, playwright et autres paquets",
  "27FAEF6F7A957EB1DBAF": "Pour garder le conteneur d’action léger, GenAIScript n’inclut pas `ffmpeg`, `playwright` ou d’autres paquets par défaut. Vous pouvez les ajouter au conteneur en les spécifiant dans la commande `cli`.",
  "9B0BB2101E61D8433818": "Vous pouvez aussi ajouter tous les autres paquets dont vous avez besoin en les spécifiant dans la commande `cli`.",
  "54970F299DC88F0034B4": "Tester l’action",
  "4CB7FC543A6EB2D0EE4C": "Votre script doit pouvoir être testé localement en utilisant la commande `npm run dev`. N’hésitez pas à le modifier dans `package.json`.",
  "39FA39FD34702BABFDDA": "Ou si vous souhaitez simuler l’environnement GitHub Action, vous pouvez définir les variables `INPUT_<parameter>` dans l’environnement.",
  "CBC91DD5603199C30E6D": "Espace de travail GitHub vs Espace de travail de l’Action",
  "0FB3D7F44694C021887E": "Quand l’action est exécutée dans un conteneur, le contenu du dépôt de l’action est d’abord copié dans le répertoire `/github/action`. GitHub clone ensuite le dépôt dans le répertoire `/github/workspace`.",
  "4501ABEE3A54AF489951": "L'`ENTRYPOINT` dans le `Dockerfile` est configuré pour lancer la CLI `genaiscript` dans le répertoire `/github/action`, puis il détecte la variable d’environnement `GITHUB_WORKSPACE` pour déterminer le répertoire de travail et change alors le `cwd` en conséquence.",
  "5E3748BA0D23E03387EB": "Ce mode est activé par le drapeau `--github-workspace` dans la commande `cli`.",
  "FCE12644650D3A8D6C08": "Traduit avec l'aide de l'IA. Veuillez vérifier l'exactitude du contenu.",
  "52D659237F0553923FA2": "variable d'environnement",
  "DC5CF2926BBB4E499DD3": "options en ligne de commande",
  "F76220156EEB08FA4390": "Résolution des fichiers de configuration",
  "AD2CFE899864279D5B52": "Les fichiers JSON prennent en charge le format ",
  "F7A1AF01A5690F8D1336": "JSON5",
  "7F8286F8509AA52BAF2F": "Schéma",
  "4348F39AAD615061D2D5": "Le schéma de configuration est disponible à ",
  "FC53C528BBB4DA314247": "propriété",
  "88DB975396D4F70BDD98": "L'emplacement final de `envFile` sera utilisé pour charger le secret dans les variables d'environnement. Il supporte un seul ",
  "9F83DCF55D8A6A9CAABC": "propriété",
  "2D7C3F3E8A5A26189DEA": "La propriété `include` vous permet de fournir des chemins globaux pour inclure davantage de scripts.\nCombiné à un fichier de configuration global, cela permet de partager des scripts pour plusieurs projets. ",
  "7FCADBE02D8464644961": "propriété",
  "307DC4DA40652F8306D3": "La propriété `modelAliases` vous permet de fournir des alias pour les noms de modèles. ",
  "7006C3EEF4106F0A4EC4": "propriété",
  "340A43AEDC91F6CDE83D": "La propriété `modelEncodings` vous permet de fournir l'encodage du modèle. ",
  "23A63D864DE2513DC1E7": "Débogage",
  "0298EE598D404410A439": "Activez la catégorie de débogage `config` pour voir des informations supplémentaires sur la résolution de la configuration. ",
  "7979021997512F8839F0": "GenAIScript prend en charge nativement plusieurs services de la ",
  "C638E186596FDB230834": "[Azure AI Foundry](https://learn.microsoft.com/en-us/azure/ai-foundry/)",
  "3D3DD57553DDC25E38D3": "Authentification",
  "79B567A322EF02D5090B": "Services Azure OpenAI et IA",
  "6D08536C1215D840CD20": "Azure OpenAI",
  "D50671B2B3A9CAE8D614": "Azure AI Inference",
  "61257B813ABF72F6CB35": "Azure OpenAI Serverless",
  "3B600BC1AEBA0E280DE2": "Modèles Azure AI Serverless",
  "C263F0C054209F6B71E0": "Azure AI Search",
  "617A23423DCD627C05C3": "Azure AI Search",
  "7BCC5587C9DA860942E5": "Recherche Vectorielle",
  "FD53986FD0793643E031": "Configuration",
  "996FD1A0EBFBF6683648": "Azure Content Safety",
  "0E80096B0D26BFA9500F": "Azure Content Safety",
  "02E491E9D484F2C5C96E": "Configuration",
  "B8EA7680D6761B115901": "Paramètres utilisateur",
  "890B5D31FC521D8912DB": "Personnalisez votre expérience VSCode avec les paramètres utilisateur GenAIScript pour les diagnostics, la mise en cache et les configurations CLI.",
  "B80110D4F2F93B9A579B": "Les paramètres suivants sont accessibles via la commande **Préférences : Ouvrir les paramètres utilisateur**.",
  "AA0FDF57A77504D49B31": "CLI",
  "BD034981257CDAA15B40": "Ces paramètres contrôlent la manière dont le serveur GenAIScript est exécuté depuis l'extension.\nPar défaut, l'extension utilise [npx](https://www.npmjs.com/package/npx) et la version actuelle de l'extension pour exécuter le CLI GenAIScript.",
  "5CD4D0F5C8751665C554": "Chemin",
  "06B25BC825D2080DD665": "Si vous disposez d'une version spécifique du CLI installée, vous pouvez définir son chemin ici.",
  "763D2FBCAEE24B0A8C4C": "Version",
  "9315B8B40C9D16D9BDE3": "Par défaut, l'extension utilise npx et la version actuelle de l'extension. Vous pouvez remplacer le numéro de version avec ce paramètre.",
  "EEA1221C80146774FC92": "Masquer le terminal du serveur",
  "EA3CCD328560021FC5F5": "Par défaut, le terminal du serveur GenAIScript est masqué après le démarrage du serveur. L'activation de ce drapeau ouvrira un terminal où vous pourrez inspecter les journaux du serveur GenAIScript.",
  "1B04D7221F8B0C918C1B": "Diagnostics",
  "CCC0B0BEA89775B51282": "Ce drapeau active une variété de journaux supplémentaires et de comportements pour aider à diagnostiquer les problèmes avec le serveur GenAIScript.",
  "87FA1C0DB526C2C969F9": "Traduit avec IA. Veuillez vérifier l'exactitude du contenu.",
  "2AC22CFBAC7F0FBCF1F3": "Exécution directe des scripts",
  "4898ECA6F224BC87BE6B": "ouvrez un fichier GenAIScript dans l'éditeur",
  "2FB3C4BD7F744F075231": "faites un clic droit dans l'éditeur et sélectionnez ",
  "C80A685F052903CC98A6": "Exécuter GenAIScript*",
  "E08EDF6C9BB7EBDCE991": "dans le menu contextuel",
  "4594EC564B7AD1961E17": "ou cliquez sur l'icône ",
  "85BB4133320A15B6D90C": "Exécuter GenAIScript",
  "E9007E8FDF1F31A8918E": "dans le coin supérieur droit de l'éditeur",
  "AD33E7B9AF257E99B480": "Cela lancera l'exécution du script en utilisant les fichiers d'entrée par défaut spécifiés dans le champ ",
  "54B1C156E77870CB8D97": "Exécution des scripts à partir de fichiers ou dossiers d'entrée",
  "3EEE9AC55EAEF052CC02": "ou ",
  "855522C98ADDC0F5B173": "faites un clic droit et sélectionnez ",
  "2F97CA9F89233816F6D8": "Exécuter GenAIScript",
  "4874AB2326115CA79607": "dans le menu contextuel",
  "07658679069D6E33F7EA": "Depuis un éditeur",
  "3A16A382FE367495BCE6": "faites un clic droit et sélectionnez ",
  "ABD819AD05DC2DD17513": "Exécuter GenAIScript",
  "5AEDCDC71D12DBCF1392": "dans le menu contextuel",
  "6DE3DD80A9713505BA33": "Utilisation du texte sélectionné dans votre script",
  "206DB08A9D2017B0DD53": "GenAIScript tente de respecter les règles ",
  "9957333E6A728A6D9E2F": "de `.gitignore` de niveau supérieur ",
  "94EAE21A2C662E16A67F": "dans l'espace de travail du projet",
  "8F2C02404C4387C2F956": "si vous lancez ",
  "34AB0533F003403193FC": "Exécuter GenAIScript",
  "F2E2B9D4DD47FAAF7473": "si vous spécifiez ",
  "8C185842450EA5BAF54E": "GenAIScript est pris en charge par une extension [Visual Studio Code](https://code.visualstudio.com/) qui offre un ensemble complet de fonctionnalités pour créer, déboguer et déployer des GenAIScripts. ",
  "89626B44F774F2395030": "Le [Visual Studio Code Marketplace](https://marketplace.visualstudio.com/items?itemName=genaiscript.genaiscript-vscode)\ncontient la dernière version stable de l’[extension](https://marketplace.visualstudio.com/items?itemName=genaiscript.genaiscript-vscode). ",
  "6D9BBB38108A19DAC662": "Télécharger",
  "6E726DF38C285756BA0F": "Instructions d’installation",
  "E40F37AE3D589BD46123": "Exécution des scripts",
  "DE9A53C8DA5A82CD0CBF": "Intégration de Copilot Chat",
  "3050F21502A39BB82900": "Paramètres",
  "4AF46698C24BC3C89061": "GenAIScript s'intègre avec ",
  "C4CF4937AD3CAE137EE6": "en fournissant un ** ",
  "47C17193583CC8A7099B": "participant de chat",
  "31DD6C58F6D919F1BE07": "invite personnalisée",
  "38AB0808FA0E09C7D0F1": "Fonctionnalités",
  "7412DA212BC004270651": "participant de chat",
  "F6A743A84A996E7FF504": "Le ",
  "9B0FC5E9688125AE11A9": " ",
  "C776F416EC774BEA8A10": "participant de chat",
  "241E8A23D341E3662C1E": "d'une conversation ",
  "21794913837B23017B51": "GitHub Copilot Chat",
  "588686191FDEF9BB5092": "Choix du script à exécuter",
  "7A8D6D2B398E53CAC71B": "La commande ",
  "5642E190A063D1FE5D6E": "Si vous omettez la commande ",
  "D75D6C51F555BE148169": "Choix du modèle",
  "7484F1498A711A8B6177": "Ils ne fonctionneront pas depuis ",
  "0EB36104D29F5D61B414": "cli",
  "AF484614C7717BDC804E": "ou ",
  "360FF564DE6C805ECB8C": "playground",
  "BD9AADBA48387CD83E75": "Disponibilité des modèles",
  "F31DE2121B4D6341724F": "Contexte",
  "0C88CB654E7A1614F1BE": "le contenu de l'invite est passé dans ",
  "E4FB7DF49059C84A8053": "le texte de l'éditeur courant est passé dans ",
  "05038756FDBB91D3A8E0": "la sélection actuelle de l'éditeur est passée dans ",
  "3C9C4B69F53BEA5E5E79": "toutes les autres références de fichiers sont passées dans ",
  "E2901073B22A453ADAE8": "Exemples",
  "DCC9A47DA0FFBF6594D2": "Historique",
  "5654269B63480E9CA531": "L'historique des messages est passé dans ",
  "C50E90A03322FFDC1976": "Conversation continue",
  "07E972DE3E1B87B83918": "Vous pouvez utiliser le chat ",
  "0A1799D083DEAD047DA6": "exécutera le script ",
  "A19BBC68ECFCDEE8DFFB": "Script par défaut ",
  "82AE4B44D0841787B89B": "Le script suivant peut être utilisé comme modèle de départ pour créer le script par défaut lorsque l'utilisateur n'utilise pas la commande ",
  "60FC19E48FE636ADC18F": "Fonctionnalités non prises en charge",
  "802325B521B8AEFA5533": "référence",
  "4AFA8B92C8268544CC0F": "instructions personnalisées ",
  "49F15CEE5AC68119624F": "Sessions de chat augmentées",
  "3638B6472D9D6CD7667D": "Voici comment démarrer des sessions de chat en utilisant l'invite ",
  "375E5AA103B520243714": "Sélectionnez l'icône ",
  "C6FC59D1548387590560": "Joindre le Contexte",
  "35E7107159681857B3B9": "Les GitHub Gists",
  "C752DC2972EC36C1391E": "Exécuter GenAIScript à partir des Gists",
  "C0C7659C6507C6348E4F": "Le fichier gist est mis en cache localement dans ",
  "53CA3341B0B4B5DF59D5": "GistPad dans Visual Studio Code",
  "5F3FFAE2E1206101DDC9": "L' ",
  "EAF2640B94B46E5BB92E": "extension GistPad",
  "CD4649BD97495213C18F": "Vous pouvez ouvrir un fichier dans un Gist et l’exécuter en utilisant la commande ",
  "A2E82E5D232E8CD98DF2": "Vérification de type",
  "658497A00EA1E151FE21": "pour le gist et configurer une référence ",
  "0804F68CBB39182541F1": "en haut du fichier",
  "66293F7DF705FC260D1C": "clic droit sur le fichier GenAIScript du Gist",
  "1F6E3D1286216A6AA2A6": "sélectionnez ",
  "1561CBE6D78D8CE34B55": "ouvrez le fichier ",
  "8197E226938DF99D328B": "ouvrez votre fichier GenAIScript dans l’arborescence GistPad et il devrait avoir la vérification de type !",
  "F27CA5D7B882163D387E": "Limitations",
  "ECC613435F6A64D50593": "les imports ne seront probablement pas résolus",
  "BCF98959DE1319883EBC": "interface de ligne de commande (CLI)",
  "E5DE6116641EEBFA6FE1": "de l’API Node.JS",
  "C7CF45912D253E9CF49B": "Configuration",
  "ABA3CF50D543D0425F55": "interface de ligne de commande (CLI)",
  "99A91908BE49CDECA312": "Utilisation",
  "240CAFDDC94B2F9119C8": "L’API peut être importée en utilisant des imports depuis ",
  "3C65D886650453C837F1": "\"genaiscript/api\"",
  "4A01A1509BA998F4F9B7": "Le wrapper importé `api.mjs` est un chargeur minuscule, sans dépendances, qui\nlance un [thread worker Node.JS](https://nodejs.org/api/worker_threads.html) pour exécuter GenAIScript. ",
  "EFAA626DC517723FB3F0": "Pas de pollution des variables globales",
  "5D901BF880ED35C7E74D": "Aucun effet secondaire sur le processus",
  "4B7396B45254C67F1116": "La fonction ",
  "E5B6DC76C5520EB434DB": "`run` encapsule la commande ",
  "1B0DCAB3E57FDE495D50": "cli run",
  "4B6EA2715643EF4E09F9": "Variables d’environnement",
  "0D76342A8692FCC793FA": "Vous pouvez définir les variables d’environnement pour le processus GenAIScript en passant un objet dans le champ `env` des options. Par défaut, le worker hérite de `process.env`. ",
  "0684A3885BD7329CABEB": "Certaines des ",
  "A21F3D3C1003DF2CF036": "fonctionnalités de traitement vidéo",
  "4D642DCB3D019028E1F9": "Renvoie le résultat de ",
  "6C99164964F45526EAFD": "Exécute les tests dans les scripts en utilisant ",
  "0CF22F023D281EF85AC4": "promptfoo",
  "F322C7872DEBB0B7836B": "Vous pouvez remplacer les modèles utilisés dans les tests avec `--models` : ",
  "46AD45D82617132C7C3E": "Cette fonctionnalité nécessite d’ajouter `@genaiscript/api` ",
  "9640954E601A25B35AA2": "à vos dépendances `package.json`. ",
  "AFD4B88FA1B64D3E85C8": "visualiseur de résultats",
  "A47C6A91F4D69968B9D5": "Exécutez la commande `test view` pour lancer le visualiseur des résultats des tests : ",
  "56D37A668274487A1739": "Serve",
  "BB836F512CB5834C2096": "Lancer un serveur web local.",
  "E7E1E5B923AC90CAE88D": "Lancer un serveur web local qui est utilisé pour exécuter le bac à sable\nou Visual Studio Code.",
  "D5D04A68DAC7B384F336": "Exécuter depuis la racine de l'espace de travail :",
  "09A10F69F404090F92A6": "port",
  "79900D9E69E6211FFB74": "Le port par défaut est `8003`. Vous pouvez spécifier le port en définissant le drapeau `--port`.",
  "2BB961A33AEEFB4A18AF": "clé API",
  "5CF8C2D888095AB2ABD7": "La clé API est utilisée pour authentifier les requêtes vers le serveur.\nVous pouvez spécifier une clé API en utilisant le drapeau `--api-key` ou la variable d'environnement `GENAISCRIPT_API_KEY`.",
  "32867D0614C29EAAC6EC": "ou",
  "45F18C886A0FE5734F98": "La clé API peut être configurée dans l'en-tête `Authorization` d'une requête ou dans le paramètre de requête URL `api-key` (`http://localhost:8003/#api-key=ma-clé-api`)",
  "BA937992648DD877B6CA": "CORS",
  "6F4049A20BE27C450CFA": "Vous pouvez activer [Ressource Partagée Cross-Origin](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) en utilisant le drapeau `--cors` ou en configurant la variable d'environnement `GENAISCRIPT_CORS_ORIGIN`.",
  "BCB56078DD3C4F9DB65D": "Réseau",
  "DEE17936A37DA5331985": "Vous pouvez lier le serveur à `0.0.0.0` pour le rendre accessible depuis le réseau en utilisant le drapeau `--network`. Ce drapeau est nécessaire pour rendre le serveur accessible depuis un conteneur.",
  "7CE74ACD53C8C78AA6C0": "Nous recommandons vivement de définir la clé API lors de l'exécution du serveur sur le réseau.",
  "CBEF1589BD888505BE61": "Dockerisé",
  "494825A36891092145BE": "Pour exécuter une image Docker minimale avec le serveur, créez d'abord une image Docker avec genaiscript et les outils nécessaires.",
  "452041B5FF7C7B22A6EB": "Cela crée une image `genaiscript` localement que vous pouvez utiliser pour lancer le serveur.",
  "EB1F8E8907ACA4B48596": "puis ouvrez `http://localhost:8003` dans votre navigateur.",
  "005D629E13CE7501A0E1": "Points de terminaison API OpenAI",
  "B5F78F7F502E748A8447": "Le serveur implémente divers points de terminaison compatibles avec l'API OpenAI. Vous pouvez utiliser le serveur comme proxy vers l'API OpenAI en configurant le drapeau `--openai`.\nLes routes peuvent être utilisées pour fournir un accès stable aux LLM configurés à d'autres outils comme promptfoo.",
  "E5F2D72FCE223476EBA7": "Cela activera les routes suivantes :",
  "44141A2C294660046195": "`/v1/chat/completions`",
  "DA2BCAA1B87ACD17E753": "Principalement compatible avec l'API de complétions de chat d'OpenAI. Le serveur transmettra les requêtes à l'API OpenAI et renverra la réponse.",
  "4BC655D5CFBA39C2A919": "`stream` n'est pas supporté.",
  "87237ADD852E1EBDE404": "`/v1/models`",
  "DD64551B736F0A1ACE97": "Renvoie la liste des modèles et des alias disponibles sur le serveur.",
  "1729EFD57745C74C3C79": "Traduit avec AI. Veuillez vérifier le contenu pour assurer l'exactitude.",
  "9AC7E4955593CC34EA6B": "Exécuter",
  "428394439B4622C9639B": "Apprenez comment exécuter des scripts genai sur des fichiers avec une sortie en streaming vers stdout, y compris l'utilisation de motifs glob, de variables d'environnement et d'options de sortie.",
  "F364EF1E7EE2009905E3": "Exécute un script sur des fichiers et diffuse la sortie du LLM vers stdout ou un dossier à partir de la racine de l'espace de travail.",
  "E68BA994790378E7D9CE": "où `<script>` est l'identifiant ou le chemin du fichier de l'outil à exécuter, et `<files...>` est le nom du fichier de spécification sur lequel l'exécuter.",
  "96880A2B5DC51B975EA1": "Les fichiers peuvent également inclure un motif [glob](https://en.wikipedia.org/wiki/Glob_\\(programming\\)).",
  "1305790B816585F053E5": "Si plusieurs fichiers sont spécifiés, tous les fichiers sont inclus dans `env.files`.",
  "9C88B8B2460302A13A63": "Fichiers",
  "F24E6BC1747FE00186A7": "`run` accepte un ou plusieurs motifs [glob](https://en.wikipedia.org/wiki/Glob_\\(programming\\)) pour faire correspondre les fichiers dans l'espace de travail.",
  "2CAFFC43C1BCE829A91D": "Résolutions de ressources",
  "F382CD3CEB39E535B807": "GenAIScript gèrera automatiquement et résoudra des motifs URI spécifiques.",
  "F9EF561183FF83D2CACF": "`file://` - fichier local",
  "DF85F3842520AAFD796A": "`https://github.com/<owner>/<repo>/blob/<branch>/<path>` - fichier GitHub",
  "B79351789104266A1A25": "`https://github.com/<owner>/<repo>.git/<file glob>` - dépôt GitHub et motif de fichier",
  "CFEF9FDA9F1F4971586D": "`gist://id/<file glob>` - GitHub Gist et motif de fichier",
  "CD52E6C460F6A4026702": "`https://gist.github.com/<owner>/<id>/<file glob>` - GitHub Gist et motif de fichier",
  "4AA0298E3882FBDD03F2": "`git://<owner>/<repo>.git/<file glob>` - dépôt Git et motif de fichier",
  "F491A22CF45FAA137EFE": "Piping",
  "480401500E2E21EDC2C1": "`run` récupère le contenu de stdin et le convertit en fichier `stdin`.\nLa sortie LLM est envoyée vers `stdout`, tandis que le reste des logs est envoyé vers `stderr`.",
  "98F41F8D3557CAFFC457": "--excluded-files <files...>",
  "6E889F6D3BE6274B8DD7": "Exclut les fichiers spécifiés de l'ensemble de fichiers.",
  "2002793E896A243EFA93": "--exclude-git-ignore",
  "EAA4ABC5BAC6B5E82461": "Exclut les fichiers ignorés par le fichier `.gitignore` à la racine de l'espace de travail.",
  "1DC5B8EBED632710A6BE": "Configuration",
  "02D3B5C29FEFBC174BFD": "--model ...",
  "2D84F05E1DB7D441789D": "Configure l'alias du modèle par défaut ou `large`. Utilisez `echo` pour faire une exécution à blanc et retourner les messages au lieu d'appeler un fournisseur LLM.",
  "62F672EAF2FC21C08152": "--provider ...",
  "CB05BC6E050EFCC20283": "Charge un ensemble d'alias de modèles pour le fournisseur LLM donné.",
  "5958249E93C302A0E24A": "--vars name=value name2=value2 ...",
  "EF491FF9D5CE7068A56D": "Remplit les valeurs dans la map `env.vars` qui peuvent être utilisées lors de l'exécution de l'invite.",
  "D890D5AF2BAE740C53F6": "Sortie",
  "270ECDB9DC3D064FAC10": "--out <file|directory>",
  "BFDD801245AB9070BD01": "Sauvegarde les résultats dans un fichier JSON, ainsi que les fichiers markdown de la sortie et de la trace.",
  "891D39C00816F9AAF1ED": "Si `file` ne se termine pas par `.json`, le chemin est traité comme un chemin de répertoire.",
  "D29F947649BFD781EF72": "--json",
  "8A79596C81DD28B0AE4D": "Sortie de la réponse complète en JSON vers stdout.",
  "DD2B36ED24922FBC85F6": "--yaml",
  "AD91CE28C175F4CEE52F": "Sortie de la réponse complète en YAML vers stdout.",
  "1A877D19F7BC82E15FFE": "--out-trace <file>",
  "82D1300EB1DFB3336BA5": "Sauvegarde la trace markdown dans le fichier spécifié.",
  "C176C69B078E7071A5AE": "Dans un workflow GitHub Actions, vous pouvez utiliser cette fonctionnalité pour sauvegarder la trace en tant que résumé d'étape (`GITHUB_STEP_SUMMARY`) :",
  "94A46B0A2E70CC958768": "Dans Azure Dev Ops, vous pouvez utiliser la fonction [task.uploadSummary](https://learn.microsoft.com/en-us/azure/devops/pipelines/scripts/logging-commands?view=azure-devops&tabs=bash#uploadsummary-add-some-markdown-content-to-the-build-summary)\ndans votre pipeline pour télécharger la trace en tant que résumé.",
  "F7B35A5983070D4FB6DF": "--out-annotations <file>",
  "BCD7CF9D92401EBD315B": "Émet des annotations dans le fichier spécifié sous forme de tableau JSON, JSON Lines, [SARIF](https://sarifweb.azurewebsites.net/) ou fichier CSV si le fichier se termine par `.csv`.",
  "D7C0A6DBF446BF03CD7B": "Utilisez JSON lines (`.jsonl`) pour agréger les annotations de plusieurs exécutions dans un seul fichier.",
  "917E5E81FA244CD8283A": "--out-data <file>",
  "18BAB7348EC031D057DC": "Émet des données analysées en JSON, YAML ou JSONL. Si un schéma JSON est spécifié\net disponible, le résultat de la validation JSON est également enregistré.",
  "4279B6DE454592E68DB4": "--out-changelogs <file>",
  "E171E18D7E075EE92A81": "Émet les journaux de changements dans le fichier spécifié sous forme de texte.",
  "EB4E812644652B3941B5": "Pull Requests et Issues <a href=\"\" id=\"pull-requests\" />",
  "CEB527214AEBB7DAC37A": "La CLI peut mettre à jour la description et les commentaires d'une pull request/issue lorsqu'elle est exécutée dans une GitHub Action ou un pipeline Azure DevOps.",
  "0B0BC355986076A3707C": "Configuration du workflow GitHub Action",
  "9E9E11FD2144773F29D5": "Mettez à jour la configuration de votre workflow pour inclure ce qui suit :",
  "42C3A48D4DC554D73937": "ajoutez la permission `pull-requests: write` au workflow/step",
  "24DEE412911C47121A7E": "définissez le secret `GITHUB_TOKEN` dans l'`env` lors de l'exécution de la CLI",
  "9CE7C48189934BB354A5": "Configuration Azure DevOps",
  "383DDE6AC64F081428B3": "ajoutez `<votre nom de projet> Build Service` au rôle **Collaborateur** du dépôt",
  "9AB029F02AFB8A7F87E8": "transmettez les secrets aux scripts, incluant `System.AccessToken`",
  "EFB137D691C938AC9078": "--pull-request-description [tag]",
  "A46865ECED3A2126D488": "Lors de l'exécution dans un GitHub Action ou un pipeline Azure DevOps sur une pull request,\nla CLI insère la sortie du LLM dans la description de la pull request ([exemple](https://github.com/microsoft/genaiscript/pull/564))",
  "302F0107890A33E221D9": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par différentes exécutions. Par défaut, c'est l'identifiant du script.",
  "5431B2CFDF1CEB0B5A22": "--pull-request-comment [tag];",
  "4CC97A7AC4793CB379DA": "Insère ou met à jour un commentaire sur la pull request/issue avec la sortie du LLM ([exemple](https://github.com/microsoft/genaiscript/pull/564#issuecomment-2200474305))",
  "35781E612A57BA975AD2": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par différentes exécutions. Par défaut, c'est l'identifiant du script.",
  "F74D2C86DAF6E2788A4A": "--pull-request-reviews",
  "A7C45944A01CE4EFDF37": "Crée des commentaires de révision de pull request à partir de chaque [annotation](/genaiscript/reference/scripts/annotations)\n([exemple](https://github.com/microsoft/genaiscript/pull/564#pullrequestreview-2151692644)).",
  "7C4B977AACB74F75048E": "En savoir plus",
  "BACB37AF80A96ED7C21D": "La liste complète des options est disponible dans la [référence CLI](/genaiscript/reference/cli/commands#run).",
  "9F66A110D2949EC96805": "Traduit à l'aide de l'IA. Veuillez vérifier le contenu pour en assurer l'exactitude.",
  "3EC30E299249AF006722": "Z3 est un prouveur de théorèmes haute performance développé par Microsoft Research. C'est un outil intégré de GenAIScript.",
  "2FBF43E3DDA4F386245B": "[Z3](https://microsoft.github.io/z3guide/) est un prouveur de théorèmes haute performance développé par Microsoft Research. C'est un outil intégré de GenAIScript. Z3 est utilisé pour résoudre des formules logiques et peut être utilisé pour diverses applications, y compris la vérification de programmes, la résolution de contraintes et l'exécution symbolique.",
  "7CAAC2B94BA20AEE766D": "GenAIScript utilise le paquet npm [z3-solver](https://www.npmjs.com/package/z3-solver), basé sur WebAssembly, pour exécuter Z3.",
  "134F8A64B2DE8F7D5D93": "Instance Z3",
  "A73F502AE1F9130A9718": "La méthode `host.z3()` crée une nouvelle instance de Z3. Cette instance peut être utilisée pour exécuter des commandes Z3 et obtenir les résultats. L’instance `z3` est un wrapper autour du paquet npm [z3-solver](https://www.npmjs.com/package/z3-solver). L’instance `z3` possède la méthode `run` qui exécute la formule SMTLIB2 donnée et retourne le résultat.",
  "0C1753FE8AC6533D3FE4": "Outil Z3",
  "14B3F7FC3A94AEC8F373": "Le script de l’outil `z3` (dans [system.z3](/genaiscript/reference/scripts/system#systemz3)) enveloppe Z3 en tant qu’outil LLM qui peut être utilisé dans GenAIScript. Cet outil prend une formule SMTLIB2 en entrée et retourne la sortie de Z3.",
  "BA02A9D456ADBBFF3839": "Cet outil ne peut pas gérer des problèmes arbitraires, ce qui nous amène à l’agent.",
  "FFB6F2279FF7D731F0EC": "Agent Z3",
  "F9DA3F4DFB3CE130D96D": "Le script de l’agent `z3` (dans [system.agent-z3](/genaiscript/reference/scripts/system#systemagent_z3)) enveloppe l’outil `z3` avec un LLM qui peut (essayer de) formaliser des problèmes arbitraires en SMTLIB2.",
  "9CE01B1E576EC89ADBC5": "La conversation LLM du problème à la formule SMTLIB2 peut être incorrecte. Vérifiez vos résultats avec l’outil Z3. L’agent n’est pas un substitut à l’outil Z3, mais un moyen d’utiliser Z3 avec des problèmes arbitraires.",
  "3C87D49AD70DEF2464EA": "Traduit à l’aide d’une IA. Veuillez vérifier l’exactitude du contenu.",
  "4517D689061963161AAF": "YAML",
  "E29788016B1357262FC4": "Apprenez comment utiliser YAML pour la sérialisation de données, la configuration et l'analyse dans LLM avec defData, la classe YAML, et la validation des schémas JSON.",
  "33886349E236DF51994E": "[YAML](https://yaml.org/) est un format de sérialisation de données lisible par l'humain, couramment utilisé pour les fichiers de configuration et l'échange de données.",
  "CC92B0AAEF6AEBE190A6": "Dans le contexte de LLM, YAML est plus adapté à l'algorithme de tokenisation et est généralement préféré à JSON pour représenter des données structurées.",
  "71A71F7B2DA057EB7A6F": "`defData`",
  "2EF14556AC252D76436D": "La fonction `defData` convertit un objet en YAML dans le prompt (et d'autres formats si nécessaire).",
  "A64443360421E68944E5": "`YAML`",
  "24A5B6DAF6194DF2E3B1": "De manière similaire à la classe `JSON` en JavaScript, la classe `YAML` dans LLM fournit des méthodes pour analyser et convertir en chaîne des données YAML.",
  "2DD239A989B0C46EE382": "`parsers`",
  "ADC7737F1005A1E9660C": "Les [parsers](/genaiscript/reference/scripts/parsers) fournissent également un analyseur tolérant pour YAML. Il retourne `undefined` pour les entrées invalides.",
  "FE012C37581DEDD72822": "Schémas",
  "963A3F42088CDAF7ED4A": "Les schémas JSON définis avec [defSchema](/genaiscript/reference/scripts/schemas) peuvent également être utilisés pour valider des données YAML.",
  "2AB84E93E088F6462533": "Traduit avec l'aide de l'IA. Veuillez vérifier l'exactitude du contenu.",
  "34E76FEE18E44A8D75B9": "Découvrez comment analyser automatiquement les fichiers XML et les convertir en objets JSON, permettant une gestion efficace des données, l'analyse des flux RSS et le traitement des fichiers.",
  "EB6671050B78A1A15DD5": "XML",
  "7CBD654D1ED0DA66087B": "La fonction `def` analyse automatiquement les fichiers XML et en extrait le texte.",
  "12B8F5683737D98D1996": "`parse`",
  "90545EA58CDE6B6FF26F": "La fonction globale `XML.parse` lit un fichier XML et le convertit en un objet JSON.",
  "89EC2162B0D3598CBC27": "Les noms des attributs sont précédés de \"@_\".",
  "639965ED553A47C92CC0": "RSS",
  "FC46F2468B384A244FE3": "Vous pouvez utiliser `XML.parse` pour analyser un flux RSS en un objet.",
  "8D43A964DFF6CF0AEBA2": "Puisque les flux RSS retournent généralement une description en HTML rendu, vous pouvez utiliser `parsers.HTMLToText` pour la reconvertir en texte brut.",
  "483AE720732996C93799": "Traduit à l'aide de l'IA. Veuillez vérifier l'exactitude du contenu.",
  "EE2AD184A26D2A4DC8AA": "Apprenez à analyser et à convertir en chaîne les fichiers Excel XLSX facilement grâce à nos outils.",
  "7740ABB9E58EE1C20D5E": "Analyse et conversion en chaîne des fichiers tableurs Excel, xlsx.",
  "81BEF66C5A5E8590CA5C": "`parsers`",
  "D028BB2209F1BB1695DB": "Les [parsers](/genaiscript/reference/scripts/parsers) fournissent également un analyseur polyvalent pour XLSX. Il retourne un tableau de feuilles (`name`, `rows`) où chaque ligne est un tableau d'objets.",
  "853E137454CAD3442AB3": "Traduit avec l'IA. Veuillez vérifier le contenu pour en assurer l'exactitude.",
  "46F0DB3C748665F8FB4B": "Recherche Web",
  "CC704C59F75B45609F85": "Exécutez des recherches sur le web avec l'API Bing en utilisant retrieval.webSearch dans les scripts.",
  "E5E70A847A9262075020": "La commande `retrieval.webSearch` réalise une recherche sur le web en utilisant [Tavily](https://docs.tavily.com/) ou le Bing Web Search.",
  "9BF4843651D1618A493C": "Pages Web",
  "6864FAD8E59A75B8B02D": "Par défaut, l'API renvoie les 10 premières pages web dans le champ `webPages` sous forme d'un tableau de fichiers, similaire à `env.files`. Le contenu contient l'extrait résumé retourné par le moteur de recherche.",
  "2D4CCA4162E1C6152060": "Vous pouvez utiliser `fetchText` pour télécharger le contenu intégral de la page web.",
  "D9F77C0698D2AFB86829": "Configuration de Tavily <a href=\"\" id=\"tavily\" />",
  "F0BB2C03354C28B791C9": "L'[API Tavily](https://docs.tavily.com/docs/rest-api/api-reference#endpoint-post-search) donne accès à un moteur de recherche puissant pour les agents LLM.",
  "F61ED2FC8C8997896FB4": "Configuration de Bing Web Search <a href=\"\" id=\"bing\" />",
  "5FDD83DF8D8060CCD532": "L'API utilise [Bing Web Search v7](https://learn.microsoft.com/en-us/bing/search-apis/bing-web-search/overview) pour effectuer des recherches sur le web. Pour utiliser l'API, vous devez créer une ressource Bing Web Search dans le portail Azure et stocker la clé API dans le fichier `.env`.",
  "933C35AA168D6C9036D5": "Outil",
  "607162446936EB83B623": "Ajoutez le script système [system.retrieval_web_search](https://github.com/microsoft/genaiscript/blob/main/packages/core/src/genaisrc/system.retrieval_web_search.genai.mjs) pour enregistrer un [outil](/genaiscript/reference/scripts/tools) qui utilise `retrieval.webSearch`.",
  "020AA3AA43251833CFE3": "Traduit avec l'aide de l'IA. Veuillez vérifier l'exactitude du contenu.",
  "DB72889B05EC065063D6": "Vidéos comme Entrées",
  "5F348AAAED56D29280BB": "Comment utiliser la vidéo dans les scripts",
  "FA20A7C3956D83FDE782": "Bien que la plupart des LLMs ne prennent pas en charge les vidéos nativement, elles peuvent être intégrées dans des scripts en rendant les images clés et en les ajoutant comme images dans l'invite. Cela peut être fastidieux, et GenAIScript fournit des helpers efficaces pour simplifier ce processus.",
  "F6DAADA9E6C1F38812FB": "Configuration de ffmpeg",
  "03BC44BC7CA0A1476184": "Les fonctionnalités pour rendre et analyser des vidéos reposent sur [ffmpeg](https://ffmpeg.org/) et [ffprobe](https://ffmpeg.org/ffprobe.html).",
  "26F431DC49A94C3C1A0C": "Sous Linux, vous pouvez essayer",
  "46B0FBF4B8B7A7A039A4": "Assurez-vous que ces outils sont installés localement et disponibles dans votre PATH, ou configurez les variables d'environnement `FFMPEG_PATH` / `FFPROBE_PATH` pour pointer vers les exécutables `ffmpeg`/`ffprobe`.",
  "84FB8B26449E15EF074C": "Extraction d'images clés",
  "1ABF3B1EB86D9F60B3BD": "Comme mentionné ci-dessus, les LLMs multimodaux supportent généralement les images sous forme de séquence d'images clés (ou captures d'écran).",
  "D8DD16133438EA0F3FA8": "La fonction `ffmpeg.extractFrames` rendra les images clés à partir d'un fichier vidéo et retournera un tableau de chemins vers les fichiers. Vous pouvez utiliser le résultat directement avec `defImages`.",
  "D04F2E83C8AE93458738": "Par défaut, extraire les images clés (intra-images)",
  "891AC3D23BEE931A82F6": "Spécifier un nombre d'images clés avec `count`",
  "8135ECAF5567344A9E1D": "Spécifier des horodatages en secondes ou en pourcentages de la durée de la vidéo avec `timestamps` (ou `times`)",
  "30A0E20B8CEC429DEA4B": "Spécifiez la transcription générée par la fonction [transcribe](/genaiscript/reference/scripts/transcription). GenAIScript extraira une image clé au début de chaque segment.",
  "54F25F8FC0A91B0D5C05": "Spécifiez un seuil de scène (entre 0 et 1)",
  "9761C01DA5E93C26F6E8": "Extraction audio",
  "9FDA4CE848BB254658C0": "La fonction `ffmpeg.extractAudio` extraira l'audio d'un fichier vidéo au format `.wav`.",
  "656848F8BB836E74A0C3": "La conversion en audio se fait automatiquement pour les vidéos lors de l'utilisation de [transcribe](/genaiscript/reference/scripts/transcription).",
  "E037203F8A121A97308B": "Extraction de clips",
  "E02B2F7D3CFA7402181E": "Vous pouvez extraire un clip d'un fichier vidéo en utilisant `ffmpeg.extractClip`.",
  "12CFE9190474C67A97AE": "Cette opération est assez rapide car elle ne nécessite pas de ré-encodage. Vous pouvez spécifier la taille de sortie, mais cela sera beaucoup plus lent car cela nécessitera un ré-encodage.",
  "63E945DD35A8CF078F4F": "Analyse des vidéos (probing)",
  "A4F4BAAD94F1047590A2": "Vous pouvez extraire des métadonnées d'un fichier vidéo en utilisant `ffmpeg.probe`.",
  "AFEA9A0DF1FEC74FD97A": "Options personnalisées de ffmpeg",
  "1CBF9CA761D692EF104C": "Vous pouvez personnaliser davantage la configuration de `ffmpeg` en passant des `outputOptions`.",
  "CD942DCF84FC406C09D2": "Ou interagir directement avec le constructeur de commandes `ffmpeg` (qui est le constructeur natif [fluent-ffmpeg](https://www.npmjs.com/package/fluent-ffmpeg)). Notez que dans ce cas, vous devez également fournir un \"hash\" de cache pour éviter le rendu redondant.",
  "1773D87DB0BC75C67E29": "Interface en ligne de commande (CLI)",
  "FFC173E37BADE5C0063E": "Le [cli](/genaiscript/reference/cli/video) prend en charge diverses commandes pour exécuter les transformations vidéo.",
  "6BD94638BAA6F688121B": "Traduit avec IA. Veuillez vérifier l'exactitude du contenu.",
  "140A1993BF00C1AC4EBC": "Recherche Vectorielle",
  "4E65D691E9A879FEB538": "Apprenez à utiliser la fonction retrieval.vectorSearch pour indexer des fichiers avec des embeddings afin d'effectuer une recherche de similarité efficace dans des bases de données vectorielles.",
  "30A254D73B4959C45DB8": "GenAIScript fournit différentes bases de données vectorielles pour prendre en charge la recherche par embeddings et la génération augmentée par récupération (RAG).",
  "9D310CD3272CEF7DE112": "Création d'index",
  "4DC48823FF29675A0BAE": "La fonction `retrieve.index` crée ou charge un index existant. La création de l'index prend en compte un certain nombre d'options **qui ne doivent pas changer** entre les exécutions.",
  "8BBDE783D5C8C062993B": "Index local",
  "B6251CB1BABC45E502B7": "Par défaut, les vecteurs sont stockés localement dans des fichiers sous le dossier `.genaiscript/vector` en utilisant une base de données vectorielle locale basée sur [vectra](https://www.npmjs.com/package/vectra). Les embeddings sont calculés en utilisant le [alias de modèle](/genaiscript/reference/scripts/model-aliases) `embeddings`.",
  "D68DB793401227CF21D2": "Les `embeddings` peuvent également être configurés via les options.",
  "7C52FA0E0C01A2FFBEEC": "L'index est sérialisé par défaut. Si vous souhaitez le réinitialiser à chaque exécution, définissez `deleteIfExists: true`.",
  "D021E27F42840B8208FF": "Recherche Azure AI",
  "ACC6A755ACE23D9E2A5D": "GenAIScript prend également en charge l'utilisation d'un service [Azure AI Search](https://learn.microsoft.com/en-us/azure/search/search-what-is-azure-search).\nAzure AI Search utilise la [syntaxe de requête simple](https://learn.microsoft.com/en-us/azure/search/query-simple-syntax).",
  "6AECBA23557622EF7FEA": "Pour configurer ce service, vous devrez définir les variables d'environnement `AZURE_AI_SEARCH_ENDPOINT` et `AZURE_AI_SEARCH_API_KEY` dans votre fichier `.env`.\nVeuillez consulter la [documentation sur l'authentification](https://learn.microsoft.com/en-us/javascript/api/overview/azure/search-documents-readme?view=azure-node-latest#authenticate-the-client) pour plus de détails.",
  "3E314D6CB1674157E81B": "La gestion supplémentaire de l'index peut être effectuée via le portail Azure.",
  "F643B3B8F9FD7164304F": "Configuration du modèle et de la segmentation",
  "C8867F8883E718C12A85": "Le calcul des embeddings se fait via les API LLM en utilisant le même jeton d'autorisation que l'API LLM.",
  "95F93A12AF8B55A5913A": "Vous pouvez également configurer la segmentation des fichiers d'entrée.\nCela peut se régler en définissant les options `chunkSize` et `chunkOverlap`.",
  "42D02307592C6BFDA266": "Indexation",
  "031726C360146EBDBC5D": "La fonction `index.insertOrUpdate` s'occupe de la segmentation, de la vectorisation et de la mise à jour de la base de données vectorielle.",
  "598E3C2A6C57C65C4CE0": "Recherche",
  "95BDFE4CAC2DF30D4D81": "La fonction `index.search` effectue une recherche (vectorielle ou hybride) en utilisant l'index.",
  "CCFEC58A1A5F9001C2C2": "La valeur renvoyée est un tableau de fichiers avec le contenu reconstruit à partir des segments correspondants.",
  "D294BC8BD38F1245D4CD": "Traduit à l'aide de l'IA. Veuillez vérifier le contenu pour plus de précision.",
  "1F4D6A6D85B00A7BC384": "Variables",
  "A403000ED53C52A92FD1": "Découvrez comment utiliser et personnaliser les variables de script pour des capacités de script dynamiques avec env.vars.",
  "80B5D0343423FA7E42DA": "L'objet `env.vars` contient un ensemble de valeurs de variables. Vous pouvez utiliser ces variables pour paramétrer votre script.",
  "FE27490E745047F0E936": "Paramètres de script",
  "34D9B70719D1E988084C": "Il est possible de déclarer des paramètres dans l'appel de la fonction `script`. L'objet `env.vars` contiendra les valeurs de ces paramètres.",
  "BFCD53AE2858A95C1510": "Lors de l'invocation de ce script dans VS Code, l'utilisateur sera invité à fournir des valeurs pour ces paramètres.",
  "FCD25E071D14741D3782": "Variables depuis la CLI",
  "E3581E6F095960F15BEB": "Utilisez le champ `vars` dans la CLI pour remplacer des variables. vars prend une séquence de paires `clé=valeur`.",
  "ED55DFD8E60A08429983": "Variables dans les tests",
  "DD5DC41574FEA93341E6": "Vous pouvez spécifier des variables dans l'objet `tests` de la fonction `script`. Ces variables seront disponibles dans le contexte du test.",
  "FC8F02C8988B85A9E92C": "Traduit avec AI. Veuillez vérifier le contenu pour en assurer l'exactitude.",
  "A3300439D79C3B206C18": "Entrée Utilisateur",
  "653AA660BA056EFDDBE0": "Comment obtenir une entrée utilisateur dans un script",
  "254981FB63BFFE21119E": "GenAIScript fournit diverses fonctions pour obtenir une entrée utilisateur lors de l'exécution d'un script. Cela est utile pour créer une expérience \"humain dans la boucle\" dans vos scripts.",
  "5141D9FC970E97078F1A": "Lors de l'exécution de la [CLI](/genaiscript/reference/cli), l'entrée utilisateur se fait via le terminal.",
  "C16DEE592602E68DAD2E": "`host.confirm`",
  "1DD5E845043B2EF4FB27": "Pose une question à l'utilisateur et attend une réponse oui/non. Elle renvoie un `boolean`.",
  "85E7DE568EF099953D9D": "`host.input`",
  "B9068AA7BA924722B774": "Pose une question à l'utilisateur et attend une saisie textuelle. Elle renvoie une `string`.",
  "4C01645DE155AB9E7E7D": "`host.select`",
  "87FF0223D66AD6409119": "Pose une question à l'utilisateur et attend une sélection parmi une liste d'options. Elle renvoie une `string`.",
  "90918B95C76C1EA7EF79": "Intégration Continue",
  "9B0142C846CBA60ADC75": "Les fonctions d'entrée utilisateur renvoient `undefined` lorsqu'elles sont exécutées dans des environnements CI.",
  "C3E76D6063F9BE4E8B12": "Traduit par IA. Veuillez vérifier le contenu pour en assurer l'exactitude.",
  "57B41938142ED6C0D94C": "TypeScript",
  "19371303DA468D9FBC37": "Apprenez à utiliser TypeScript pour de meilleurs outils et une meilleure évolutivité dans vos projets GenAIScript.",
  "BA9AA86B991E69A01565": "[TypeScript](https://www.typescriptlang.org/) est un langage de programmation fortement typé qui s'appuie sur JavaScript, vous offrant de meilleurs outils à toute échelle. Les scripts GenAIScript peuvent être écrits en TypeScript.",
  "BC210010D640A031C4AB": "De JavaScript à TypeScript",
  "392CEB3B0413545B4D43": "Vous pouvez convertir n'importe quel script existant en TypeScript en changeant l'extension du fichier en **`.genai.mts`**.",
  "240E5253D454A412DEF0": "Assurez-vous d'utiliser l'extension de fichier **`.mts`** - et non `.ts` -, ce qui force Node.JS à utiliser le système de modules [ESM](https://www.typescriptlang.org/docs/handbook/modules/guides/choosing-compiler-options.html).",
  "2CB77E8FEA9EA052F782": "Importer des fichiers source TypeScript",
  "25F7444D469AB33736F7": "Il est possible d'[importer](/genaiscript/reference/scripts/imports) des fichiers source TypeScript.",
  "4D68D722E3FD14EC07FC": "import",
  "04E36C6F63A71A1415FB": "GenAIScript effectue-t-il la vérification de types des prompts ?",
  "C53F3B159C70E7310D48": "Oui et non.",
  "D2464C1D52C0DE93805E": "La plupart des éditeurs modernes, comme Visual Studio Code, effectuent automatiquement la vérification de types des sources TypeScript.",
  "C89EC98EBAB913E86804": "Vous pouvez également lancer une compilation TypeScript en utilisant la commande `scripts compile`.",
  "311E6CC526985029757E": "Cependant, à l'exécution, GenAIScript convertit TypeScript en JavaScript **sans vérification de types** via [tsx](https://tsx.is/usage#no-type-checking).",
  "2A267B4279494B9EEBAB": "Traduction réalisée à l'aide de l'IA. Veuillez vérifier l'exactitude du contenu.",
  "6687F808D20685AD2FAB": "Transcription audio",
  "0E41B29B99F39AE20462": "Décrire comment transcrire un fichier audio/vidéo",
  "209F1F8CADFE5EB4AA79": "GenAIScript prend en charge la transcription et les traductions à partir d'API similaires à OpenAI.",
  "A0A430350CE57F411A70": "Configuration",
  "DF002F9383CB3758561E": "L'API de transcription utilise automatiquement [ffmpeg](https://ffmpeg.org/) pour convertir les vidéos en fichiers audio ([codec opus dans un conteneur ogg](https://community.openai.com/t/whisper-api-increase-file-limit-25-mb/566754)).",
  "C8AE0CE52E29221F8FD1": "Vous devez installer ffmpeg sur votre système. Si la variable d'environnement `FFMPEG_PATH` est définie, GenAIScript l'utilisera comme chemin complet vers l'exécutable ffmpeg. Sinon, il tentera d'appeler ffmpeg directement (il doit donc être dans votre PATH).",
  "D3B05229AD31F8068607": "modèle",
  "4E92F8197CE30666F94B": "Par défaut, l'API utilise l'[alias de modèle](https://genaiscript/reference/scripts/model-aliases) `transcription` pour transcrire l'audio. Vous pouvez également spécifier un autre alias de modèle avec l'option `model`.",
  "96F8CADAD2A87CD29F10": "Vous pouvez utiliser le [service Web Whisper ASR](/genaiscript/configuration/whisperasr) pour exécuter Whisper localement ou dans un conteneur docker.",
  "5DE2DEB26F93CFB01063": "Segments",
  "C89CD242CE201964BDCB": "Pour les modèles qui le supportent, vous pouvez récupérer les segments individuels.",
  "64C93F44F9928804E09B": "SRT et VTT",
  "CBE4C23DD64F434D0DE6": "GenAIScript génère également les segments aux formats [SRT](https://fr.wikipedia.org/wiki/SubRip) et [WebVTT](https://developer.mozilla.org/fr/docs/Web/API/WebVTT_API).",
  "40CF3912CC7DED629F01": "Traduction",
  "1DCA9B6DBABFADBF7D22": "Certains modèles permettent aussi de transcrire et de traduire en anglais en une seule passe. Dans ce cas, activez le drapeau `translate: true`.",
  "41B0D7A9D15D0B3802D3": "Cache",
  "F618BF03F5FFB530BC4F": "Vous pouvez mettre en cache les résultats de la transcription en définissant l'option `cache` à `true` (ou un nom personnalisé).",
  "9C92BAE62873225322E9": "ou une valeur personnalisée",
  "91655976245B2F214755": "Parsers VTT, SRT",
  "56AD9DE3278B507E9FC4": "Vous pouvez analyser des fichiers VTT et SRT en utilisant la fonction `parsers.transcription`.",
  "CA6951E8A36D4CDE2E7B": "Traduit avec une IA. Veuillez vérifier l'exactitude du contenu.",
  "98FB1C874B1E57464D69": "Outils",
  "DAE0C725FFF3F57C91B2": "Apprenez comment définir et utiliser des outils dans GenAIScript pour améliorer la composition des réponses avec une logique personnalisée et des outils CLI.",
  "147577E498E82C6503AF": "Vous pouvez enregistrer des **outils** (également appelés **fonctions**) que le LLM peut décider d'appeler dans le cadre de la composition de la réponse.\nVoir [fonctions OpenAI](https://platform.openai.com/docs/guides/function-calling), [outils Ollama](https://ollama.com/blog/tool-support),\nou [utilisation des outils Anthropic](https://docs.anthropic.com/en/docs/build-with-claude/tool-use).",
  "5513EAAF8D40590895A1": "Tous les modèles LLM ne prennent pas en charge les outils, dans ces cas, GenAIScript propose également un mécanisme de secours pour implémenter l’appel d’outils via des invites système (voir [Outils de secours](#fallbacktools)).",
  "3F073F8F7D4BC6459A0F": "`defTool`",
  "C70DF5D446A9D0F37196": "`defTool` est utilisé pour définir un outil qui peut être appelé par le LLM.\nIl prend un schéma JSON pour définir l'entrée et attend une sortie de type chaîne.\nLes paramètres sont définis selon le [schéma des paramètres](/genaiscript/reference/scripts/parameters).",
  "7A819E705503669502FD": "**Le LLM décide d’appeler cet outil de lui-même !**",
  "3213F32B6831A3436624": "Dans l’exemple ci-dessus, nous définissons un outil appelé `current_weather`\nqui prend un emplacement en entrée et renvoie la météo.",
  "48C2EBE4E2AFC1EDF90B": "Exemple d’outil météo",
  "9889C2089AAA1BAD75BC": "Cet exemple utilise l’outil `current_weather` pour obtenir la météo de Bruxelles.",
  "283282855AD3F0082455": "Exemple d’outil mathématique",
  "048F93CE5794DE2CBC7A": "Cet exemple utilise l’évaluateur d’expression mathématique\npour évaluer une expression mathématique.",
  "4F12F91B2805D20F0726": "Réutilisation des outils dans les scripts système",
  "E4F3F6DCC9AA526EFA24": "Vous pouvez définir des outils dans un script système et les inclure dans votre script principal comme n’importe quel autre script système ou outil.",
  "E7D2C723F11CF1252997": "Assurez-vous d’utiliser `system` au lieu de `script` dans le script système.",
  "532D9B47CF1FAD916D61": "Multiples instances du même script système",
  "365EF1C853031A967352": "Vous pouvez inclure plusieurs fois le même script système dans un script\navec des paramètres différents.",
  "6FB7B14C775EEB9AC813": "Outils du protocole Model Context",
  "7E2B3CA36A3A29A13B9B": "[Model Context Provider](https://modelcontextprotocol.io/) (MCP) est un protocole ouvert\nqui permet une intégration fluide entre les applications LLM et les sources de données externes ainsi que les [outils](https://modelcontextprotocol.io/docs/concepts/tools).",
  "667997D5B5D9F8151310": "Vous pouvez exploiter les [serveurs MCP](https://github.com/modelcontextprotocol/servers) pour fournir des outils à votre LLM.",
  "35AAFC9CA25CB0DE5E44": "Voir [Outils du protocole Model Context](/genaiscript/reference/scripts/mcp-tools) pour plus d’informations.",
  "D577826960EBF5F76794": "Support des outils de secours <a href=\"\" id=\"fallbacktools\" />",
  "2C5D4E9DADA33E0BFC8F": "Certains modèles LLM ne disposent pas d’un support natif des outils.\nPour ces modèles, il est possible d’activer la prise en charge des outils via des invites système. Les performances peuvent être inférieures à celles des outils intégrés, mais l’utilisation d’outils reste possible.",
  "0BB73633EFCC1BD4FBF3": "La prise en charge des outils est implémentée dans [system.tool_calls](/genaiscript/reference/scripts/system#systemtool_calls)\net \"apprend\" au LLM comment appeler les outils. Lorsque ce mode est activé, vous verrez\nles jetons d’appel d’outil répondus par le LLM.",
  "5F36543389C8895937D2": "GenAIScript maintient une liste de modèles bien connus qui ne supportent pas\nles outils, de sorte que cela se produira automatiquement pour ces modèles.",
  "DEEB23B9781C7137D7A2": "Pour activer ce mode, vous pouvez soit",
  "54B9FB21FF76AA5935A2": "ajouter l’option `fallbackTools` au script",
  "921E3E0CBF5946FD6787": "ou ajouter le flag `--fallback-tools` à la CLI",
  "80C7424D7CEBAC2A1B8F": "Les performances de cette fonctionnalité varient grandement selon le modèle LLM que vous choisissez d’utiliser.",
  "CFB534C900C0CE004A6F": "Détection d’injection d’invite",
  "EE25DFF7CE2215E8040D": "Un outil peut récupérer des données contenant des attaques par injection d’invite. Par exemple, un outil qui récupère une URL peut renvoyer une page contenant des attaques par injection d’invite.",
  "0044A9F9AC8724DB90B2": "Pour prévenir cela, vous pouvez activer l’option `detectPromptInjection`. Elle lancera vos services de [scanner de sécurité de contenu](/genaiscript/reference/scripts/content-safety)\nsur la sortie de l’outil et effacera la réponse si une attaque est détectée.",
  "9FD217AB3828B36D557E": "Validation de l’intention de sortie",
  "F2D1085BB6937730880A": "Vous pouvez configurer GenAIScript pour exécuter une validation LLM-en-juge du résultat de l’outil basée sur la description ou une intention personnalisée.\nLa validation LLM-en-juge aura lieu pour chaque réponse de l’outil en utilisant l’alias de modèle `intent`, qui correspond par défaut à `small`.",
  "C79E8406FA986E4CBF74": "L’intention `description` est une valeur spéciale qui est développée en la description de l’outil.",
  "A36E99CC2D600A023BD1": "Emballage en scripts système",
  "43FB5856FBA0A4F5E6EB": "Pour choisir les outils à inclure dans un script,\nvous pouvez les regrouper dans des scripts système. Par exemple,\nl’outil `current_weather` peut être inclus dans le script `system.current_weather.genai.mjs`.",
  "316E36E883955FA1B414": "puis utiliser l’id de l’outil dans le champ `tools`.",
  "814FBD40004EB22553F4": "Exemple",
  "1D5AC7FE71B73016471F": "Illustrons comment les outils se combinent dans un script de réponses à des questions.",
  "17B351CD984629CECC24": "Dans le script ci-dessous, nous ajoutons l’outil `retrieval_web_search`. Cet outil\nappellera `retrieval.webSearch` selon les besoins.",
  "4CC0A84CAFA8311E733F": "Nous pouvons ensuite appliquer ce script au fichier `questions.md` ci-dessous.",
  "62EFF551C82B7F5A89F1": "Après la première requête, le LLM demande à appeler `web_search` pour chaque question.\nLes réponses de la recherche web sont alors ajoutées à l’historique des messages du LLM et la requête est faite à nouveau.\nLa seconde donne le résultat final qui inclut les résultats de la recherche web.",
  "B9A56623669CFE34B857": "Traduit avec IA. Veuillez vérifier la précision du contenu.",
  "16432FFE6AE0717FE4EF": "Tokeniseurs",
  "316A504A60B0526A2BB3": "Les tokeniseurs sont utilisés pour diviser le texte en tokens.",
  "1925B8BAAA381673C1A7": "Le module d'aide `tokenizers` fournit un ensemble de fonctions pour diviser le texte en tokens.",
  "E17EC1E29FC947EEBE05": "Choisir votre tokeniseur",
  "051D0093EECA602A589C": "Par défaut, le module `tokenizers` utilise le tokeniseur `large`. Vous pouvez changer de tokeniseur en passant l'identifiant du modèle.",
  "3B311FE4F03A357F4443": "`count`",
  "0E7446E278D09AAA0B5C": "Compte le nombre de tokens dans une chaîne de caractères.",
  "D5DF95B2E537B4AE4A69": "`truncate`",
  "720A373393F564959B90": "Supprime une partie de la chaîne pour s'adapter à un budget de tokens.",
  "5A25B28AE4730B95AB04": "`chunk`",
  "20A09285AD076DC73583": "Divise le texte en morceaux d'une taille donnée en tokens. Le découpage tente de trouver des limites appropriées en fonction du type de document.",
  "E9A652CE698782F90699": "Vous pouvez configurer la taille des morceaux, le chevauchement et ajouter des numéros de ligne.",
  "485A1EC17685AB745316": "Traduit avec IA. Veuillez vérifier le contenu pour en assurer l'exactitude.",
  "80D41422055A51F4D9E6": "Tests / Évaluations",
  "EDAFCF77587B3E0FD678": "Apprenez à exécuter et à évaluer la qualité des sorties LLM avec promptfoo, un outil conçu pour tester les résultats des modèles de langage.",
  "06064902A0942B1C13D3": "Il est possible de définir des tests pour les scripts LLM afin d'évaluer la qualité des sorties du LLM dans le temps et selon les types de modèles.",
  "4950DC2B1AA3450EF707": "Les tests sont exécutés par [promptfoo](https://promptfoo.dev/), un outil d’évaluation de la qualité des sorties LLM.",
  "DD60C7E39FBAD03B0C34": "Vous pouvez également détecter des vulnérabilités liées à l’IA, telles que les biais, la toxicité et les problèmes de factualité, en utilisant la fonctionnalité [redteam](/genaiscript/reference/scripts/redteam).",
  "6931C8039A9CE8467AF0": "Définir les tests",
  "5A9B7010086ABEA3584E": "Les tests sont déclarés dans la fonction `script` de votre test.\nVous pouvez définir un ou plusieurs tests (sous forme de tableau).",
  "FB7C828EA97BB0203C35": "Tester des modèles",
  "18907651865E6EE01F1B": "Vous pouvez spécifier une liste de modèles (ou alias de modèles) contre lesquels tester.",
  "80837BA63C3D4B096E01": "Le moteur d’évaluation (PromptFoo) exécutera chaque test contre chaque modèle de la liste.\nCe paramètre peut être remplacé par l’option `--models` en ligne de commande.",
  "49C02A929CA4065D4384": "Fichiers de test externes",
  "1859375D2B15897D2711": "Vous pouvez aussi spécifier le nom de fichiers externes de test, aux formats JSON, YAML, CSV, ainsi que des fichiers JavaScript `.mjs` ou `.mts` qui seront exécutés pour générer les tests.",
  "08C77DF9E604159D469B": "Les fichiers JSON et YAML supposent que les fichiers contiennent une liste d’objets `PromptTest` et vous pouvez valider ces fichiers avec le schéma JSON disponible à [https://microsoft.github.io/genaiscript/schemas/tests.json](https://microsoft.github.io/genaiscript/schemas/tests.json).",
  "30118CE638A0E2260F57": "Les fichiers CSV supposent que la première ligne est l’en-tête et que les colonnes correspondent majoritairement aux propriétés de l’objet `PromptTest`.\nLa colonne `file` doit contenir un nom de fichier, la colonne `fileContent` contient le contenu d’un fichier virtuel.",
  "B607A8F742AA7C8D51A0": "Les fichiers JavaScript doivent exporter une liste d’objets `PromptTest` ou une fonction qui génère cette liste d’objets.",
  "5B80DEC0AFE72D50D354": "`files`",
  "2327448E7A7C3BFEEDB6": "`files` prend une liste de chemins de fichiers (relatifs à l’espace de travail) et remplit la variable `env.files` pendant l’exécution du test. Vous pouvez fournir plusieurs fichiers en passant un tableau de chaînes de caractères.",
  "3305BF6161AFFDC5C0C2": "`rubrics`",
  "221169DFF6272A82E9AB": "`rubrics` vérifie si la sortie du LLM correspond aux exigences données, en utilisant un modèle de langage pour noter la sortie selon la grille d’évaluation (voir [llm-rubric](https://promptfoo.dev/docs/configuration/expected-outputs/model-graded/#examples-output-based)).\nVous pouvez spécifier plusieurs grilles en passant un tableau de chaînes.",
  "7843880C62D8A84EB3C2": "GPT-4 requis",
  "362BD6FDAF54E17A1121": "Les tests `rubrics` nécessitent une configuration OpenAI ou Azure OpenAI avec un modèle `gpt-4` dans le fichier `.env`.",
  "8148D7A86313711EDA30": "`facts`",
  "198F71862B48688A8BB5": "`facts` vérifie la cohérence factuelle (voir [factuality](https://promptfoo.dev/docs/guides/factuality-eval/)).\nVous pouvez spécifier plusieurs faits en passant un tableau de chaînes.",
  "EB0CD19A0585A8E19562": "donnée une complétion A et une réponse de référence B, cela évalue\nsi A est un sous-ensemble de B, A est un sur-ensemble de B, A et B sont équivalents,\nA et B s’opposent, ou A et B diffèrent,\nmais la différence n’a pas d’importance du point de vue de la factualité.",
  "F7AC2D0F890D772BDA5B": "gpt-4o requis",
  "72F35318E139F17FC098": "Les tests `facts` nécessitent une configuration OpenAI ou Azure OpenAI avec un modèle `gpt-4o` dans le fichier `.env`.",
  "8B06B38066FAD460E900": "`asserts`",
  "A1DE5AC8FCD13E08138D": "Autres assertions sur\n[assertions et métriques promptfoo](https://promptfoo.dev/docs/configuration/expected-outputs/).",
  "30113D252EB627B0E3EA": "`icontains` (`not-icontains`) la sortie contient une sous-chaîne, insensible à la casse",
  "42E524242F1576B71B27": "`equals` (`not-equals`) la sortie est égale à la chaîne",
  "65C55723391CF7F29D3A": "`starts-with` (`not-starts-with`) la sortie commence par la chaîne",
  "FA4BC09CBC975833DB8D": "`contains-all` (`not-contains-all`) la sortie contient toutes les sous-chaînes",
  "D6B21640026A94290B38": "`contains-any` (`not-contains-any`) la sortie contient une quelconque des sous-chaînes",
  "D2BD211841013D25B76B": "`icontains-all` (`not-icontains-all`) la sortie contient toutes les sous-chaînes, insensible à la casse",
  "0C5011F49CFD66A1B53C": "transformer",
  "687F8FC9C8A9A438F9BD": "Par défaut, GenAIScript extrait le champ `text` de la sortie avant de l’envoyer à PromptFoo.\nVous pouvez désactiver ce mode en réglant `format: \"json\"` ; les `asserts` sont alors exécutés sur la sortie brute du LLM.\nVous pouvez utiliser une expression JavaScript pour sélectionner une partie de la sortie à tester.",
  "94CD6E1A299980D60616": "Exécution des tests",
  "FCB7EE8833FA2FE76C58": "Vous pouvez exécuter les tests depuis Visual Studio Code ou en utilisant la [ligne de commande](/genaiscript/reference/cli).\nDans les deux cas, genaiscript génère un [fichier de configuration promptfoo](https://promptfoo.dev/docs/configuration/guide)\net exécute promptfoo dessus.",
  "70127A461BFECCE55A2E": "Visual Studio Code",
  "35402A5301C8907077F8": "Ouvrez le script à tester",
  "F661CF931071374E04A4": "Faites un clic droit dans l’éditeur et sélectionnez **Exécuter les tests GenAIScript** dans le menu contextuel",
  "FD717B82D7B9E4E6460F": "La [vue web promptfoo](https://promptfoo.dev/docs/usage/web-ui/) s’ouvrira automatiquement\net se rafraîchira avec les résultats des tests.",
  "17120CBADBC82F3CA1D0": "Ligne de commande",
  "0029A7BD72841E395A20": "Exécutez la commande `test` avec le fichier script en argument.",
  "BB6D5DF46E8E0D763D15": "Vous pouvez spécifier des modèles supplémentaires à tester en utilisant l’option `--models`.",
  "1DF2731A3957C597C664": "Traduit avec IA. Veuillez vérifier le contenu pour en assurer l'exactitude.",
  "A7E9C2CDDD7AB4BDDE47": "Microsoft Teams",
  "51BCBCABA1F6AFB0B36F": "Découvrez comment utiliser l’intégration Microsoft Teams dans vos scripts.",
  "A5AE1C1AD4C234FCFFBA": "GenAIScript fournit des API pour poster un message, avec des fichiers joints, dans un canal donné de [Microsoft Teams](https://www.microsoft.com/en-us/microsoft-teams/) ainsi que dans son espace de fichiers SharePoint.",
  "8D0AD50547E39257C328": "en utilisant la CLI, pour poster le résultat de la génération AI",
  "DF5E12A1E1A868246B35": "en utilisant l’API, pour poster un message avec des pièces jointes",
  "6FCEE56FC0251875D0D4": "Authentification",
  "0F5528911E7E5B436077": "GenAIScript utilise le client d’authentification Azure pour interagir avec Microsoft Graph. Connectez-vous à votre compte en utilisant l’Azure CLI.",
  "748684421CAC43706BFE": "Configuration",
  "B1F63926DE6B67249CAC": "Pour utiliser l’intégration Microsoft Teams avec la [CLI](/genaiscript/reference/cli), vous devez fournir une URL de lien vers un canal Teams.",
  "55C98ACD20666F6F1E8B": "API",
  "858969A71FA1EF3B0FCC": "L’API fonctionne en créant un client pour le canal, puis en appelant `postMessage`.",
  "0438FE3FBC5EC1768BAC": "Vous pouvez également joindre des fichiers au message. Les fichiers seront téléversés dans le dossier Fichiers SharePoint.",
  "8B01820627A9EAEEBFA1": "Ajoutez une description au fichier pour renseigner ces métadonnées. La description peut être en markdown et sera convertie en HTML compatible Teams autant que possible.",
  "269188663D5E3FC9092B": "Pour les vidéos, GenAIScript scindera la description en sujet/message pour renseigner les deux champs dans Microsoft Stream.",
  "9E99BF6C06B5ED63C3DC": "Traduit à l’aide de l’IA. Veuillez vérifier l’exactitude du contenu.",
  "2A228D40F85DCFA2F030": "Invites Système",
  "E51BCCF3ED764E73B395": "Apprenez à utiliser les invites système pour améliorer l'exécution des scripts dans GenAIScript.",
  "871685DAE537128598BA": "Les invites système sont des scripts qui sont exécutés et injectés avant la sortie principale de l'invite.",
  "83C39D77F42EAFF4A384": "`system.*.genai.js` sont considérés comme des modèles d'invites système",
  "C84C10EE6B6E56C08E06": "Les invites système ne sont pas listées par défaut",
  "056E4096041F528D6B51": "Les invites système doivent utiliser `system` au lieu de `script`",
  "E4D178BA6239057A3217": "Les invites système sont exécutées dans le même environnement que l'invite principale",
  "4BA393274D06802B9958": "Les invites système doivent posséder une fonction par défaut et utiliser le `ctx` passé dans la fonction.",
  "BE1887A334466C559423": "Pour utiliser les invites système dans un script, remplissez le champ `system` avec des identifiants de script.",
  "C27E13C9A3D087039E32": "Il est également possible de remplir le script système en incluant des noms d'outils, ce qui entraîne l'importation de l'outil dans le script.",
  "B75D3BCD93865F9DE524": "Paramètres et variables",
  "7EF1C2BB5EE72F718C6C": "Le système prend également en charge les paramètres comme le script mais les noms de paramètres seront automatiquement préfixés par l'identifiant du script",
  "F5B5022C4F929CE83136": "déclarer et utiliser le paramètre dans le script système",
  "72467903D6946FCCDE61": "surcharger la valeur du paramètre dans le script",
  "7329FE9E7A58F2DCDBDC": "surcharger la valeur du paramètre dans une instance du script système",
  "BFE9C14F498339CD5FA8": "Invites Système Automatisées",
  "46210B4747376F48DBBD": "Lorsqu'elles ne sont pas spécifiées, GenAIScript inspecte le code source du script pour déterminer un ensemble raisonnable d'invites système ([source code](https://github.com/microsoft/genaiscript/blob/main/packages/core/src/systems.ts)).",
  "87151B120BEEFB4AC6A3": "Le mélange par défaut est",
  "45514C8B1ED17773F9A2": "système",
  "6684937159B88F692798": "system.output_markdown",
  "D28CE2FDD8D15A5BA41A": "system.explanations",
  "DC6FD56D4E0443207771": "system.safety_jailbreak",
  "3F58089FA00247812FDB": "system.safety_harmful_content",
  "1E2FEEE57A42153D4123": "system.safety_protected_material",
  "4C5599B780D0259B6CAC": "Par-dessus les scripts par défaut, d'autres scripts système sont injectés selon la correspondance de mots-clés.",
  "E120EE785127B37C8A42": "Invites Système Intégrées",
  "D20606552D816BBDCA8D": "GenAIScript est fourni avec plusieurs invites système prenant en charge des fonctionnalités telles que la création de fichiers, l'extraction de diff ou la génération d'annotations. Si non spécifié, GenAIScript recherche des mots-clés spécifiques pour activer les différentes invites système.",
  "D2B6D309993B81816F8B": "`system`",
  "22A6C5A3B8C60B8AA0F5": "Invite système de base",
  "C486639F17F945B635B6": "`system.agent_data`",
  "BBFF6F4F473E3503458E": "Agent capable d'interroger des données dans des fichiers",
  "4807613AF4E29E44F1B5": "`system.agent_docs`",
  "F6DDA2933B40EBE4A810": "Agent capable d'interroger la documentation.",
  "9ABEE37D83C38AB1C87F": "`system.agent_fs`",
  "D2AC02F12A1486918E98": "Agent capable de trouver, chercher ou lire des fichiers pour accomplir des tâches",
  "F985728372D16A0794B6": "`system.agent_git`",
  "5C5115D4BB9A9748AEB1": "Agent capable d'interroger Git pour accomplir des tâches.",
  "E07EB0F82F2F5CE051EE": "`system.agent_github`",
  "5997B078323E57E5983E": "Agent capable d'interroger GitHub pour accomplir des tâches.",
  "2BAD2228A834B1ADA139": "`system.agent_interpreter`",
  "70A8CC791287C7EBB85F": "Agent capable d'exécuter des interprètes de code pour Python, Mathématiques.",
  "DCC94276EF5E6CAEFE34": "`system.agent_mcp`",
  "38ADC64E98743F69CA8B": "Agent du protocole de contexte de modèle",
  "CF7146CF20ED6A57A1B3": "Encapsule un serveur MCP avec un agent.",
  "D591C79E94A9DBEECAD7": "`system.agent_planner`",
  "D07A3443ECCEE2AA6703": "Un agent planificateur",
  "2216296FF867BCE8BD79": "`system.agent_user_input`",
  "66B23AE42A8E40498E09": "Agent pouvant poser des questions à l'utilisateur.",
  "27BB47DAAD8E4C997BCC": "`system.agent_video`",
  "51D2A59A76E60648A8D0": "Agent capable de travailler sur des vidéos",
  "66C90EC4F8FCC8627A3E": "`system.agent_web`",
  "1606147B87F1BDAB41E3": "Agent capable de rechercher sur le web.",
  "C7B125C594F899D54A72": "`system.agent_z3`",
  "BC06D2687CF94B1DB024": "Agent capable de formaliser et résoudre des problèmes utilisant Z3.",
  "C29DC3D847B15F52FFC1": "`system.annotations`",
  "2B32356B7470BFA9185C": "Émet des annotations compatibles avec GitHub Actions",
  "91A5ABB1C36EB9E1F268": "Les workflows GitHub Actions prennent en charge les annotations ([En savoir plus...](https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-error-message)).",
  "75BE3F5764638992CD68": "`system.assistant`",
  "933EDB6DB8EB9A767E2D": "Invite pour un assistant utile.",
  "F2F7C196F02824FC57A0": "Une invite pour un assistant utile issue de https://medium.com/@stunspot/omni-f3b1934ae0ea.",
  "A6FD54E8DC69820F26A7": "`system.chain_of_draft`",
  "2074230B09CF47E12CE1": "Raisonnement Chain Of Draft",
  "79BA730CF4896198605D": "Technique de raisonnement Chain of Draft. Plus d'infos sur https://learnprompting.org/docs/intermediate/zero_shot_cot.",
  "A2FDA3FAD03F005FA95C": "`system.changelog`",
  "38AD54340C71133259F0": "Générer des modifications formatées pour le changelog",
  "0C8F76F4BAF39216C7A6": "`system.cooperation`",
  "7B328CA6524ED2D5B0C2": "Principes de coopération selon la maxime de Grice.",
  "69ADA3726928D0853C64": "`system.diagrams`",
  "8CE31E900F01CAE735A4": "Générer des diagrammes",
  "F114758DD7749E66F240": "`system.diff`",
  "A5AD8E9D213F7E73BB9C": "Génère des diff concis de fichiers.",
  "2999E43CDFC6D5BE48FE": "`system.do_not_explain`",
  "BCB6E75C44BFC49F65D7": "Ne pas expliquer",
  "A49021C0A20F67CFC829": "`system.english`",
  "E50502ED14AEE48C5CE0": "Utiliser la sortie en anglais",
  "4C45D30B219C09ED9E0D": "`system.explanations`",
  "51D6E3755C250EDF6AC7": "Expliquez vos réponses",
  "DE6945968B540461FF87": "`system.fetch`",
  "D95ADA04082C3CDDD7C6": "Un outil capable d'extraire des données depuis une URL",
  "BFE2691BD6D2BF0F987B": "outil `fetch` : Récupère des données depuis une URL sur des domaines autorisés.",
  "BF94D383494945C74962": "`system.files`",
  "5852675732EF031836A5": "Génération de fichiers",
  "5FBCB434F860EA860D59": "Enseigne le format de fichier supporté par GenAIScripts",
  "F731F0AE8A3684480E00": "`system.files_schema`",
  "35C6FFC2B34FFC22101B": "Applique des schémas JSON aux données générées.",
  "CC8DAC8C9F3EF37B0D6C": "`system.fs_ask_file`",
  "EB21F6B2AF8D74DEA39F": "Interroger un fichier",
  "F23232B6D339BD2EA95A": "Exécute une requête LLM contre le contenu d'un fichier.",
  "B87344A493FFD14A3BB5": "outil `fs_ask_file` : Exécute une requête LLM sur le contenu d'un fichier. Utilisez cet outil pour extraire des informations d'un fichier.",
  "3C195BAA6A8ED46D956D": "`system.fs_data_query`",
  "31DE247940FC8F272AB5": "Un outil qui permet d'interroger des données dans un fichier",
  "B30932F40FB74E632951": "outil `fs_data_query` : Interroge des données dans un fichier en utilisant la syntaxe GROQ",
  "506A8AB0270E12FC7A91": "`system.fs_diff_files`",
  "4A312279CE2B66A6DBC1": "Différence de fichiers",
  "19702EA46CA788F4E2A3": "Outil pour calculer une différence entre deux fichiers.",
  "BE33A868E0AE4D6568BA": "outil `fs_diff_files` : Calcule une différence entre deux fichiers différents. Utilisez git diff pour comparer les versions d'un fichier.",
  "6F0FF3FAE2B5E18C5200": "`system.fs_find_files`",
  "D174041F8EFB37AF3B1D": "Recherche de fichiers",
  "DA24F42C59EDA72F546B": "Recherche de fichiers avec glob et expression régulière de contenu.",
  "36EC03C1DD94DD3C774B": "outil `fs_find_files` : Trouve des fichiers correspondant à un motif glob. Utilisez pattern pour spécifier une expression régulière à rechercher dans le contenu du fichier. Attention à ne pas interroger trop de fichiers.",
  "3BE9FAE955052C305274": "`system.fs_read_file`",
  "9716186B9E026FA305A9": "Lecture du contenu d'un fichier",
  "3DB5B8923AFCCA123F62": "Fonction qui lit le contenu d'un fichier en texte.",
  "677BD9B326038A85249B": "outil `fs_read_file` : Lit un fichier en tant que texte depuis le système de fichiers. Renvoie undefined si le fichier n'existe pas.",
  "0C54B309D0496BF42A72": "`system.git`",
  "4F79BB6D68E3E6A5A0D2": "Opérations de lecture git",
  "C5DB13A1DA485A8CA430": "Outils pour interroger un dépôt git.",
  "04FE4701CD734D314973": "outil `git_branch_default` : Obtient la branche par défaut via le client.",
  "72D1B33785CC6FEC0E3A": "outil `git_branch_current` : Obtient la branche courante via le client.",
  "94CABFF4093356A3E810": "outil `git_branch_list` : Liste toutes les branches via le client.",
  "A1A2163898E707A16E28": "outil `git_list_commits` : Génère un historique des commits avec la commande git log.",
  "385F3813C039A64B1A0C": "outil `git_status` : Génère un statut du dépôt via le client.",
  "FD0CF678AB419D4FE5F0": "outil `git_last_tag` : Obtient le dernier tag via le client.",
  "3D0028F74CEDE2B4DC3D": "`system.git_diff`",
  "3C2C189B4470E7AA0623": "diff git",
  "0A3C2C52FB82EEC2325C": "Outils pour interroger un dépôt git.",
  "79CC2C9D8522391ABEB7": "outil `git_diff` : Calcule des diff de fichiers avec la commande git diff. Si le diff est trop grand, retourne la liste des fichiers modifiés/ajoutés.",
  "781F91EFF7E748139520": "`system.git_info`",
  "0FDEB1EAFB4D22683BE9": "Information sur le dépôt Git",
  "652ED1B69DF16CA4AB6A": "`system.github_actions`",
  "1EF30B5D95775E7783F5": "workflows github",
  "F7385953FE8BF9C092F7": "Interroge les résultats des workflows dans GitHub actions. Préférez les diff pour comparer les logs.",
  "798235D1EC0B1C3A287C": "outil `github_actions_workflows_list` : Liste tous les workflows github.",
  "AEE59054A162C53EFA63": "outil `github_actions_jobs_list` : Liste tous les jobs pour un run de workflow github.",
  "F25139AC06423EF66CC7": "outil `github_actions_job_logs_get` : Télécharge le log d'un job de workflow github. Si le log est trop grand, utilisez 'github_actions_job_logs_diff' pour comparer.",
  "79F02602CC93DC2FD44F": "outil `github_actions_job_logs_diff` : Compare les logs de deux jobs de workflow github.",
  "0D6335B7E6109A93FDEA": "`system.github_files`",
  "964A03F898B98B528A42": "Outils pour interroger les fichiers GitHub.",
  "F4D033871BE3BE0D113A": "outil `github_files_get` : Récupère un fichier depuis un dépôt.",
  "B6FF10A9DC01DB29E4A5": "outil `github_files_list` : Liste tous les fichiers d'un dépôt.",
  "29F445DAB514ACB5CE59": "`system.github_info`",
  "6C4B5CAA592713A81B97": "Information générale GitHub.",
  "2A8D64B452583FC842B7": "`system.github_issues`",
  "3F8D313475BDB2DAF8D9": "Outils pour interroger les issues GitHub.",
  "8B1F9D91A58C3044ACDE": "outil `github_issues_list` : Liste toutes les issues d'un dépôt.",
  "2EB85613AB7EEDDFBB7B": "outil `github_issues_get` : Récupère une issue unique par numéro.",
  "20FD87AE839CDAB4090A": "outil `github_issues_comments_list` : Récupère les commentaires d'une issue.",
  "138EDE54D90A376198FE": "`system.github_pulls`",
  "29BE4BF4D6DED6C88F02": "Outils pour interroger les pull requests GitHub.",
  "748E10B4626FC04ACD7C": "outil `github_pulls_list` : Liste toutes les pull requests d'un dépôt.",
  "A3651CFA924745A27964": "outil `github_pulls_get` : Récupère une pull request unique par numéro.",
  "A84201D1BD824B8B9705": "outil `github_pulls_review_comments_list` : Récupère les commentaires de revue d'une pull request.",
  "1E8C4D8E7BBF4E2F1747": "`system.math`",
  "B81F8DF2D1FAFA791AC5": "Évaluateur d'expressions mathématiques",
  "0155B1E0C18FECB73D53": "Enregistre une fonction qui évalue des expressions mathématiques",
  "AC247B44DBE4AF60B1DC": "outil `math_eval` : Évalue une expression mathématique. Ne calculez PAS vous-même les opérations arithmétiques, utilisez cet outil.",
  "E3E2E17A765027D2527F": "`system.mcp`",
  "4AFFA962D450259ACBB2": "Charge les outils depuis un serveur Model Context Protocol",
  "C348BD184B172FF5A777": "Ce script système doit être configuré avec une configuration de serveur MCP.",
  "343823EAF41C98E12A83": "`system.md_find_files`",
  "80B7D3B386F275106690": "Outils pour aider avec les tâches de documentation",
  "40FB1C43873C09C18A94": "outil `md_find_files` : Obtient la structure des fichiers markdown/MDX de la documentation. Retourne filename, title, description pour chaque correspondance. Utilisez pattern pour définir une expression régulière à chercher dans le contenu des fichiers.",
  "12C0EB60C83C518A8893": "`system.md_frontmatter`",
  "87EFC77D7CF005CC093C": "Lecteur de frontmatter Markdown",
  "15FC657B544BCEEB4A54": "Enregistre un outil qui lit le frontmatter d'un fichier markdown ou MDX.",
  "9454E9A2446EE3F9ED55": "outil `md_read_frontmatter` : Lit le frontmatter d'un fichier markdown ou MDX.",
  "4AD8554789D6D6105F65": "`system.meta_prompt`",
  "C95FE2C9D8DE9CA7C8DD": "Outil qui applique les directives OpenAI de meta-prompt à un prompt utilisateur",
  "C28E415E7B7D5518B17A": "Outil de meta-prompt modifié de https://platform.openai.com/docs/guides/prompt-generation?context=text-out.",
  "E1F40326B77EFD132C22": "outil `meta_prompt` : Outil qui applique les directives OpenAI de meta-prompt à un prompt utilisateur. Modifié de https://platform.openai.com/docs/guides/prompt-generation?context=text-out.",
  "383B1308723A91F38712": "`system.meta_schema`",
  "208296F7456BA3EA1422": "Outil qui génère un schéma valide pour le JSON décrit",
  "5746EDA80DB38A942580": "Générateur de méta schéma OpenAI depuis https://platform.openai.com/docs/guides/prompt-generation?context=structured-output-schema.",
  "57A0FAA086D643B216D6": "outil `meta_schema` : Génère un schéma JSON valide pour le JSON décrit. Source https://platform.openai.com/docs/guides/prompt-generation?context=structured-output-schema.",
  "383DFEC4091C9DA40392": "`system.node_info`",
  "0E5D6FED920EFC5EDEAA": "Informations sur le projet actuel",
  "F42C338AFCA6988E9E6A": "`system.node_test`",
  "9D73F95EC89AAC5FA384": "Outils pour exécuter les tests node.js",
  "5DE0E7E4165978E6B9F5": "outil `node_test` : construit et teste le projet actuel en utilisant `npm test`",
  "C30D891E08D478EA5180": "`system.output_ini`",
  "616D4D6E2C10F717DECB": "Sortie INI",
  "5D4D53FF59E48024142C": "`system.output_json`",
  "97D0BE963FBFFECBDD93": "Sortie JSON",
  "364DF0A545036B5B640A": "`system.output_markdown`",
  "BC93F25237D63198075B": "Invite système pour sortie Markdown",
  "96EFB3171F6FEDE4178F": "`system.output_plaintext`",
  "8466DB0724E34A82B7A6": "Sortie en texte brut",
  "D6D9392C3A50D1EB080D": "`system.output_yaml`",
  "8DA7849640E204997633": "Sortie YAML",
  "EA2E4F8FC3732DA02AAC": "`system.planner`",
  "391238BAEA981E5E6749": "Instruction pour faire un plan",
  "F55230A68B316704F1B5": "`system.python`",
  "680F5994C5DC081DF567": "Expert en génération et compréhension de code Python.",
  "491B28BED31FE1589AE1": "`system.python_code_interpreter`",
  "D1383DC8C33A770FF97F": "Exécution de code Dockerisée Python pour analyse de données",
  "E27A553E993A98FB8236": "outil `python_code_interpreter_run` : Exécute du code python 3.12 pour les tâches d'analyse de données dans un conteneur docker. Le résultat du processus est retourné. Ne pas générer de visualisations. Les seuls paquets disponibles sont numpy===2.1.3, pandas===2.2.3, scipy===1.14.1, matplotlib===3.9.2. Il n'y a pas de connectivité réseau. Ne tentez pas d'installer d'autres paquets ou d'effectuer des requêtes web. Vous devez copier tous les fichiers nécessaires ou passer toutes les données car le code python s'exécute dans un conteneur séparé.",
  "8005373BE5E602435E1F": "outil `python_code_interpreter_copy_files_to_container` : Copie des fichiers du système de fichiers de l'espace de travail vers le système de fichiers du conteneur. Pas de chemins absolus. Retourne le chemin de chaque fichier copié dans le conteneur python.",
  "B2E92754F2B9F7368D6A": "outil `python_code_interpreter_read_file` : Lit un fichier depuis le système de fichiers du conteneur. Pas de chemins absolus.",
  "FFD73C9CF117F8C392DE": "`system.python_types`",
  "523630DD99D94ECFC0E0": "Développeur Python qui ajoute des types.",
  "06C9E7D7F08EA82A7806": "`system.retrieval_fuzz_search`",
  "2F31DBC66C0A0ADB9142": "Recherche textuelle floue complète",
  "8A5EF0469AECD75E8065": "Fonction pour effectuer une recherche floue sur un texte complet.",
  "0BDF4D4AE6B2D5C8690E": "outil `retrieval_fuzz_search` : Recherche des mots-clés en utilisant le texte complet des fichiers et une distance floue.",
  "9AE886F54CA6401AD517": "`system.retrieval_vector_search`",
  "705666600ABACF3A411F": "Recherche vectorielle par embeddings",
  "23E5F1499DBF98E16364": "Fonction pour faire une recherche utilisant la similarité des vecteurs d'embeddings.",
  "FB47B9B374F6430AD0A6": "outil `retrieval_vector_search` : Recherche dans les fichiers à l'aide d'embeddings et de la distance de similarité.",
  "42450F2B6F044069969C": "`system.retrieval_web_search`",
  "6CC7816A0C8C304E637D": "Recherche web",
  "462E96B66FC247486A9C": "Fonction pour faire une recherche sur le web.",
  "B3A5E8B593C2B6F7C183": "outil `retrieval_web_search` : Recherche sur le web pour une requête utilisateur en utilisant Tavily ou Bing Search.",
  "9534489B184BF60C0C1B": "`system.safety_canary_word`",
  "958287C9CE8F054CC6C6": "Protection par mot-canari contre les fuites d'invites",
  "95B78CE529FCF837A689": "Injecte un mot-canari dans les invites système et surveille la sortie générée pour détecter des fuites.",
  "790FC15A0F0F3AF3C4E7": "`system.safety_harmful_content`",
  "FE83474F04C5A5064516": "Invite de sécurité contre les contenus nuisibles : haine, équité, sexualité, violence, automutilation",
  "7B6F6B110A7B73646A89": "Ce script système doit être considéré pour la génération de contenu (avec ou sans fondement), les chats multi-tours et simple tour, Q&A, réécriture et scénarios de résumé. Voir https://learn.microsoft.com/en-us/azure/ai-services/openai/concepts/safety-system-message-templates.",
  "8EB65A8AEB08EE904D9E": "`system.safety_jailbreak`",
  "84B7696B5F70B8914F75": "Script de sécurité pour ignorer les instructions dans les sections de code.",
  "6A64A78CB74A8A797394": "`system.safety_protected_material`",
  "76D8C6325A947A16B007": "Invite de sécurité contre le matériel protégé - Texte",
  "B8BE7FD22B9B1BF4B4F6": "Ce script système doit être considéré pour des scénarios tels que : génération de contenu (avec ou sans fondement), chat multi-tours et simple tour, Q&A, réécriture, résumé et génération de code. Voir https://learn.microsoft.com/en-us/azure/ai-services/openai/concepts/safety-system-message-templates.",
  "A4BC18861AD2688134F5": "`system.safety_ungrounded_content_summarization`",
  "A8B36CF03F064D3522E0": "Invite de sécurité contre le contenu infondé dans les résumés",
  "9B3075C129121982A3BA": "Doit être considéré pour les scénarios tels que la synthèse. Voir https://learn.microsoft.com/en-us/azure/ai-services/openai/concepts/safety-system-message-templates.",
  "E5CE4EB2AF3BBAE1CF61": "`system.safety_validate_harmful_content`",
  "4D70CD0367953AF5A304": "Utilise le fournisseur de sécurité de contenu pour valider la sortie LLM pour contenu nuisible",
  "58E2C3BB35F9F186425C": "`system.schema`",
  "65B52F892408DD490F6D": "Support des schémas JSON",
  "3B25A37BA6BDC86FA6BD": "`system.tasks`",
  "D2059D2B8439AEAB9155": "Génère des tâches",
  "57DF133E748109F88B71": "`system.technical`",
  "BDC5336EFD761797037C": "Rédacteur technique",
  "E65719522BB32D8B8E3A": "`system.think`",
  "EB6EE8DCB2DA074441F8": "L'outil think",
  "9D302FA257BCFC6CE7E5": "L'outil 'think' d'Anthropic défini dans https://www.anthropic.com/engineering/claude-think-tool. Utilise l'alias de modèle 'think'.",
  "11D587B177D95F79B6C0": "outil `think` : Utilise l'outil pour réfléchir à quelque chose. Il n'obtiendra pas de nouvelles informations ni ne modifiera la base de données, mais ajoute simplement la pensée au journal. Utilisez-le quand un raisonnement complexe ou une mémoire cache est nécessaire.",
  "BBB8CC5BA40ECC452DC1": "`system.today`",
  "20108328DA85B541704C": "Date d'aujourd'hui.",
  "692E6E8908FDE22FCFDF": "`system.tool_calls`",
  "6A37EED271856EA16472": "Support ad hoc des outils",
  "420634755133D8A0D810": "`system.tools`",
  "C43F29BCABD5B8DC0383": "Support des outils",
  "CC6748E38E359367997B": "`system.transcribe`",
  "460E8DD075D626AA4916": "Outil de transcription vidéo",
  "FD30C69E354DFAAF0C56": "outil `transcribe` : Génère une transcription depuis un fichier audio/vidéo en utilisant un modèle de reconnaissance vocale.",
  "90A945D7B2C18ED0DA42": "`system.typescript`",
  "65E451AFD8FDB7E22E8E": "Développeur expert TypeScript",
  "A031EF630F22D781E390": "`system.user_input`",
  "04102437A5355FA7D669": "Outils pour poser des questions à l'utilisateur.",
  "5F9D4C48444DDFE912E7": "outil `user_input_confirm` : Demande à l'utilisateur de confirmer un message.",
  "693EDDC4361BD4AFD8ED": "outil `user_input_select` : Demande à l'utilisateur de sélectionner une option.",
  "CD099C2A10EE612B589F": "outil `user_input_text` : Demande à l'utilisateur de saisir du texte.",
  "E2790C30663E3A391B9C": "`system.video`",
  "B7FDA4F8FE386B5E7196": "Outils de manipulation vidéo",
  "A99C157387FFAA504C63": "outil `video_probe` : Analyse un fichier vidéo et retourne les métadonnées",
  "A636548DE3C259AC166D": "outil `video_extract_audio` : Extrait l'audio d'un fichier vidéo dans un fichier audio. Retourne le nom du fichier audio.",
  "179983EE2959F05B62CC": "outil `video_extract_clip` : Extrait un clip d'un fichier vidéo. Retourne le nom du fichier vidéo.",
  "7661725793E339402BED": "outil `video_extract_frames` : Extrait des images (frames) d'un fichier vidéo",
  "DD5B905293C958033D0A": "`system.vision_ask_images`",
  "21136F0A97BBB6782423": "Vision Ask Image",
  "A07495C8A1485B921630": "Enregistre un outil qui utilise le modèle de vision pour exécuter une requête sur des images",
  "785B464BB9EA3CF8895B": "outil `vision_ask_images` : Utilise un modèle vision pour exécuter une requête sur plusieurs images",
  "F43786536520349BAB44": "`system.z3`",
  "499851B95A590C79F992": "Z3",
  "A46FAD61804832C310CA": "Résout des systèmes de contraintes avec le solveur de contraintes Z3.",
  "3EBE7212C7CB8555996A": "outil `z3` : Résout un problème SMTLIB2 en utilisant le solveur Z3. Envoyez les problèmes un par un. Utilisez cet outil si vous avez besoin d'exécuter Z3.",
  "E7C9B650B68093FCDF26": "`system.zero_shot_cot`",
  "5760644AC53A08C4E04B": "Chaine de Raisonnement Zero-shot",
  "92E62137AC4C4D336229": "Technique de chaîne de raisonnement zero-shot. Plus d'informations sur https://learnprompting.org/docs/intermediate/zero_shot_cot.",
  "0EB257200931FA9F5026": "Traduit par AI. Veuillez vérifier le contenu pour précision.",
  "90E9902E885D66794AA7": "Sorties structurées",
  "6CFA7372F04BF7EFD5B9": "Utilisez la sortie structurée dans GenAIScript pour générer des données JSON avec validation de schéma afin d'obtenir une structuration des données précise et fiable.",
  "0C998ECF247EBCF2FE23": "GenAIScript prend en charge la génération de sorties structurées avec réparation automatique des données. Il peut exploiter la validation de schéma intégrée des fournisseurs de LLM ou exécuter sa propre validation selon les besoins.",
  "419A6176816B166F2C1C": "Les sorties structurées sont configurées via deux indicateurs : `responseType`, qui contrôle le format des données, et `responseSchema` qui contrôle la structure des données.",
  "134609FF09851B20E113": "Type de réponse",
  "875708D19BAD1B5925EC": "Le type de réponse est contrôlé par l'argument optionnel `responseType` et offre les options suivantes :",
  "8F02411C4A7F465ACB02": "`json` : demande au LLM de produire une sortie JSON valide.",
  "7689FC9491BEC655C9EF": "`yaml` : demande au LLM de produire une sortie YAML valide.",
  "330F164F8389C922D900": "`json_object` : utilise la sortie JSON intégrée d'OpenAI",
  "754D5405D7CE55EB098F": "`json_schema` : utilise la sortie JSON intégrée d'OpenAI avec validation par schéma JSON",
  "BD50F1E7B3E41B8395B3": "Notez que `text` et `markdown` sont également pris en charge pour configurer la sortie du LLM.",
  "8C951F82EE4E7DF0AC0E": "`json`",
  "90D1002739B9A68EEC80": "Dans ce mode, GenAIScript invite le LLM à produire une sortie JSON valide. Il valide également la sortie et tente de la réparer si elle n'est pas valide.\nCe mode est implémenté par GenAIScript et ne dépend pas du support des fournisseurs de LLM.",
  "903F32F821C5D1EDEFD9": "La validation du schéma est appliquée si `responseSchema` est fourni.",
  "38253458079B2E7E7F44": "`yaml`",
  "623B91A0EB409155AACC": "Dans ce mode, GenAIScript invite le LLM à produire une sortie JSON valide. Il valide également la sortie et tente de la réparer si elle n'est pas valide.\nCe mode est implémenté par GenAIScript et ne dépend pas du support des fournisseurs de LLM.",
  "1D2531185BEE78D14F02": "La validation du schéma est appliquée si `responseSchema` est fourni.",
  "79ACFA6BDCDBC5D04764": "`json_object`",
  "DCCD307F17CA2A6CC096": "Dans ce mode, GenAIScript invite le LLM à produire une sortie JSON valide. Il valide également la sortie et tente de la réparer si elle n'est pas valide.\nCe mode repose sur le support intégré des LLM, comme OpenAI.",
  "69F85215938FABD416FA": "`json_schema`",
  "3C5A42E3F7D825BEB8DE": "La sortie structurée est une fonctionnalité qui vous permet de générer des données structurées dans un format de données comme avec un [schéma JSON](/genaiscript/reference/scripts/schemas). Cela est plus strict que `json_object`.",
  "2FBDDC42B0C502258E5E": "Pour activer ce mode, définissez `responseType` sur `json_schema` et fournissez un objet `responseSchema`.",
  "81E17872BDAC4764EFCF": "Notez qu'il existe [plusieurs restrictions](https://platform.openai.com/docs/guides/structured-outputs/how-to-use) sur les fonctionnalités de schéma prises en charge par ce mode.",
  "FDC881FCD46BBD7D056E": "`additionalProperties: true` n'est pas pris en charge.",
  "0FB2FD21DA2D4F7375BB": "tous les champs optionnels (par ex. non dans `required`) seront renvoyés et peuvent être `null`",
  "0939BC60FA39D5E54CD8": "Schéma de réponse",
  "6E1053ED5EEAA86AC617": "Vous pouvez spécifier un [schéma](/genaiscript/reference/scripts/schemas) via `responseSchema` ce qui activera automatiquement le mode de sortie structurée. La sortie sera validée selon ce schéma, et GenAIScript tentera de réparer la sortie si elle n'est pas valide. Le script échouera si la sortie ne correspond pas au schéma.",
  "909D2C3B08C2BF48B67B": "Schémas en ligne",
  "8404872368B669471513": "Notez que cette section s'applique à la sortie entière d'une conversation. Vous pouvez aussi utiliser des [schémas en ligne](/genaiscript/reference/scripts/schemas) et utiliser un mélange de markdown/données que GenAIScript analysera.",
  "10D1E58A2FEE0EDF8382": "Choix",
  "C35C28C32E39F61224D5": "Si vous cherchez à construire un LLM-as-a-Judge et ne souhaitez que des sorties dans un ensemble de mots, vous pouvez aussi envisager d'utiliser des [choix](/genaiscript/reference/scripts/choices) pour augmenter la probabilité que le modèle génère les mots spécifiés.",
  "73A6C5D5B59EDB8D1D2E": "`cast`",
  "B079DC2B6990AB804F8E": "La fonction [cast](/genaiscript/reference/runtime/cast) est une [fonction d'aide runtime de GenAIScript](/genaiscript/reference/runtime) pour convertir du texte ou des images non structurés en données structurées.",
  "A2EC270FC189A93D8AB0": "Traduit avec l'aide de l'IA. Veuillez vérifier le contenu pour en assurer l'exactitude.",
  "706A0B50EFF293D7647A": "Complétions stockées",
  "AD88A89AE72AFB20A4A8": "Métadonnées pour le script",
  "FF8821C1EE2C92F6AC62": "Les métadonnées sont une carte de paires clé-valeur utilisées pour activer les complétions stockées — une fonctionnalité dans OpenAI et [Azure OpenAI](https://learn.microsoft.com/en-us/azure/ai-services/openai/how-to/stored-completions) qui vous permet de stocker et de récupérer des complétions pour une invite donnée. Cela est utile pour la distillation et l'évaluation.",
  "EBBAC54601D7B20FE85D": "![Une complétion enregistrée](./stored-completions.png)",
  "B1E9E9C944711799C887": "Vous pouvez attacher jusqu'à 16 paires clé-valeur à un objet. Cela est utile pour stocker des informations supplémentaires dans un format structuré et pour interroger des objets via l'API ou le tableau de bord.",
  "67A092455A25ED1FB85E": "Les clés sont des chaînes de caractères d'une longueur maximale de 64 caractères. Les valeurs sont des chaînes de caractères d'une longueur maximale de 512 caractères.",
  "00F348BF290D8ECEE4DE": "Traduit avec l'aide de l'IA. Veuillez vérifier le contenu pour en assurer l'exactitude.",
  "3358B05AE898093B8854": "Secrets",
  "C86EFE294E6D8C71C6B7": "Apprenez à accéder et gérer en toute sécurité les secrets d’environnement dans vos scripts avec l'objet env.secrets.",
  "A06DDE59129B8FC5EC71": "L'objet `env.secrets` est utilisé pour accéder aux secrets de l'environnement. Les secrets sont généralement stockés dans le fichier `.env` à la racine du projet (ou dans `process.env` pour la CLI).",
  "3818E0351689E9115E70": "Vous devez déclarer la liste des secrets requis dans `script({ secrets: ... })` afin de pouvoir les utiliser dans le script.",
  "118927CF6FA9D45791E4": "déclarer l'utilisation dans `script`",
  "4D3007EFE22D4E1BBD79": "accéder au secret dans le script via `env.secrets`",
  "4418276F4FE86500F6B6": "Traduit à l’aide d’une IA. Veuillez vérifier l'exactitude du contenu.",
  "B379A60B1A754B599D70": "Analyse des secrets",
  "468DB8809E1AF0284AB9": "Apprenez à détecter et prévenir les fuites d'informations sensibles dans votre base de code grâce à l'analyse automatisée des secrets, des motifs personnalisables et des options de configuration.",
  "89B9BC19F6CDA28E9273": "Il ne devrait pas y avoir de secrets traînant dans votre base de code, mais cela arrive parfois. Pour vous aider à éviter cela, nous proposons une fonctionnalité d'analyse des secrets qui scannera votre base de code à la recherche de secrets et vous avertira si des secrets sont trouvés.",
  "71FD5275A0CC0AD6DF5B": "La fonctionnalité d'analyse des secrets n'est en aucun cas exhaustive et ne doit pas être considérée comme la seule méthode pour sécuriser votre base de code. C'est une fonctionnalité faisant un effort raisonnable pour vous aider à éviter des erreurs courantes.",
  "C465326C556DD6326DD5": "Motifs pris en charge",
  "BE78F82954A300594B38": "Par défaut, l'ensemble des motifs de secrets est presque vide et défini à l'adresse [https://github.com/microsoft/genaiscript/tree/main/packages/core/src/config.json](https://github.com/microsoft/genaiscript/tree/main/packages/core/src/config.json).",
  "C7A3D8D0BDB81BEA28D0": "Cette liste n'est pas une liste complète par conception, et doit être mise à jour pour correspondre à vos besoins.",
  "FDA319B7D7884C33E1CF": "Vous pouvez trouver des exemples de motifs à l'adresse [https://github.com/mazen160/secrets-patterns-db/](https://github.com/mazen160/secrets-patterns-db/).",
  "F21FB1FA61DB86374EA2": "Analyse des messages",
  "B50A5879A9FFDE695C98": "Par défaut, tous les messages envoyés aux LLM sont analysés et expurgés s'ils contiennent des secrets.",
  "F83987847D421AD59267": "Vous pouvez désactiver complètement l'analyse des secrets en réglant l'option `secretScanning` à `false` dans votre script.",
  "B419F4C7756256FE9CF4": "Configuration des motifs",
  "55A206D48EE5DC723B13": "Si vous disposez d'un motif spécifique que vous souhaitez analyser, vous pouvez le configurer dans votre [fichier de configuration](/genaiscript/reference/configuration-files).",
  "EDB3730D37FA2192F9BE": "ne pas utiliser `^` ou `$` dans votre expression régulière",
  "C284DACC7571883C722C": "Désactivation des motifs",
  "9CF4B1F44197B91D7E0E": "Attribuez la valeur `null` ou `false` à la clé du motif pour le désactiver.",
  "8E4E91640BB595F72C15": "Interface en ligne de commande (CLI)",
  "A13229BF706A0FF71750": "Vous pouvez tester vos motifs sur des fichiers en utilisant la CLI.",
  "FDE434771CCB358EFE07": "Traduit à l'aide d'une IA. Veuillez vérifier le contenu pour en assurer l'exactitude.",
  "8FA0344BB090AFEBC42F": "Schémas de données",
  "103AAD8A5203A2CD9292": "Apprenez à définir et à utiliser des schémas de données pour une sortie structurée en JSON/YAML avec LLM, y compris les techniques de validation et de réparation.",
  "B66FC2998F11E710B023": "Il est possible de forcer le LLM à générer des données conformes à un schéma spécifique. Cette technique fonctionne assez bien et GenAIScript fournit également une validation automatique \"au cas où\".",
  "6F47EEDBEDF03B56292C": "Vous remarquerez que le schéma pris en charge par GenAIScript est beaucoup plus simple que la spécification complète du schéma JSON. Nous recommandons d'utiliser des schémas simples pour éviter de confondre le LLM ; vous pourrez ensuite les adapter au format de données spécifique à votre application.",
  "53F52F7ACB02CE60BCEA": "Schémas JSON",
  "DBCC0AFCF9D10780D9F4": "Un schéma JSON est un langage déclaratif qui vous permet de valider la structure des données JSON. Il définit les types de données attendus, les propriétés et les contraintes pour les objets JSON. Les schémas JSON sont largement utilisés dans les APIs, les fichiers de configuration et les formats d'échange de données pour s'assurer que les données respectent une structure spécifique. Les schémas JSON sont définis en utilisant un format JSON et peuvent être utilisés pour valider des données JSON par rapport au schéma défini. GenAIScript supporte les schémas JSON pour définir la structure des données que vous souhaitez générer.",
  "37ECAC7F6D382DF5FC02": "`responseSchema`",
  "A77208F10EF7AFB98424": "Utilisez `responseSchema` pour définir un schéma JSON/YAML pour la sortie du prompt.",
  "3CBCF1467A11C284FA07": "Lors de l'utilisation de `responseSchema`, vous pouvez utiliser `responseType` pour spécifier comment le schéma doit être encodé dans la requête.",
  "93719D1FBA1B6F25B0C1": "`responseType: \"json\"` : Le schéma est encodé dans un message système et validé par GenAIScript.",
  "8F8083DF9F24A1E47597": "`responseType: \"json_object\"` : Le schéma est encodé dans la requête, en utilisant le support intégré de sortie structurée du LLM. Il est également validé par GenAIScript.",
  "8DBF0051B8CF4233A2D0": "Les deux approches sont des compromis et dépendent généralement du LLM que vous utilisez.",
  "EE9DEAE3A487ACF8F670": "Vous pouvez également l'appliquer à `runPrompt` et GenAIScript analysera et validera la sortie par rapport au schéma, puis la stockera dans le champ `json`.",
  "CD60EC502BE878B51B6F": "`defSchema`",
  "8556A742A2B941057243": "Utilisez `defSchema` pour définir un schéma JSON/YAML pour la sortie du prompt.",
  "7ED932D1976601726653": "<summary>👤 utilisateur</summary>",
  "B6F71216EC5B3518B211": "<summary>🤖 assistant</summary>",
  "6954383BC35472FD0A2C": "Support natif de zod",
  "FCEDAFD9463DBBC8F3E8": "Le [runtime GenAIScript](/genaiscript/reference/runtime) expose le module `z`.",
  "E579EEDD44888C08D3B5": "Un type [Zod](https://zod.dev/) peut être passé dans `defSchema` et sera automatiquement converti en schéma JSON. GenAIScript exporte également l'objet `z` de Zod pour plus de commodité.",
  "F4E2A151B5B6DC83C050": "Encodage du prompt",
  "01F1FF2CE8A63935157A": "Suivant l'approche [\"All You Need Is Types\"](https://microsoft.github.io/TypeChat/docs/introduction/) de TypeChat, le schéma est converti en types TypeScript avant d'être injecté dans le prompt du LLM.",
  "B56D11F17A81E72BC10D": "Vous pouvez modifier ce comportement en utilisant l'option `{ format: \"json\" }`.",
  "63E32A37F7ECB9FDED7C": "Lisez la trace !",
  "C4B2167A3A6FB79BE1C3": "La trace vous permet de voir la source du schéma et le prompt rendu, et le [cli](/genaiscript/reference/cli) écrira également les fichiers TypeScript générés dans le dossier de sortie.",
  "E82A94A2CB6BB4C1C19B": "<summary>schéma CITY_SCHEMA</summary>",
  "D9D41E4454BFDD06032A": "source :",
  "9FB0926324771AAC0475": "prompt (rendu en TypeScript) :",
  "D70259AD0825267DD084": "Utiliser le schéma",
  "EDB2FF2CA1F563F4FC35": "Puis dites au LLM d'utiliser ce schéma pour générer des données.",
  "CE195EEA4F59E48D4C21": "Validation",
  "5DD079B422393FCDA24F": "Lorsqu'une charge JSON/YAML est générée avec l'identifiant du schéma, GenAIScript valide automatiquement la charge par rapport au schéma.",
  "C44E0A947FC65109D847": "Tous les formats de données ne se valent pas ! Certains formats comme JSON introduisent de l'ambiguïté et peuvent perturber le LLM. [En savoir plus...](https://betterprogramming.pub/yaml-vs-json-which-is-more-efficient-for-language-models-5bc11dd0f6df).",
  "54C25737EC4E04B488B0": "Réparation",
  "428A7BE7329B73121138": "GenAIScript tentera automatiquement de réparer les données en envoyant des messages supplémentaires au LLM avec les résultats d'analyse.",
  "9B88F6F808A13589DF78": "Validation à l'exécution",
  "DA481100C6225AC7A468": "Utilisez `parsers.validateJSON` pour valider du JSON lors de l'exécution du script.",
  "83038B722C5EE01D5635": "La plupart des APIs de l'objet `workspace` qui analysent des données supportent aussi une option `schema` pour valider les données.",
  "10B1685F7446F153CDB2": "Traduit avec l'aide de l'IA. Veuillez vérifier l'exactitude du contenu.",
  "FBD1E0D35494D7AB57E3": "Les paramètres suivants sont accessibles via la commande **Préférences : Ouvrir les paramètres utilisateur**. ",
  "AB41ACACCAF74B9324D8": "CLI",
  "92BFF0A7E9F5100D0667": "npx",
  "F49427CB376C48238EA5": "Chemin",
  "F2563552FBFFDDB722DD": "Version",
  "2D3355D6141A02F8328B": "Masquer le terminal du serveur",
  "70934D29CFC5C144491F": "Diagnostics",
  "3BC76C004219EAD95B59": "champ `files`. ",
  "CF874E81D948DB4BD887": "Visual Studio Code",
  "4DC2078BD8C3576F1467": "Marché Visual Studio Code",
  "BDF1F1DA991D157C4E5F": "contient la dernière version stable de l’ ",
  "8CA365091C7C434AEFB6": "extension",
  "6C8B1A3072B559A04ADD": "GitHub Copilot Chat",
  "6715B9D4FE4EDDD11216": "où ",
  "8DF67DA7C4A549FD6EC2": "Les fichiers peuvent également inclure ",
  "414FB023AE5EEE1B9B45": "Fichiers",
  "AA14880C912EDFD3A413": "prend un ou plusieurs modèles ",
  "10B1E5DD987811EF2DCD": "glob",
  "466F970499CD091E1C84": "Résolutions des ressources",
  "CB65EAD53C2C7A4C3020": "- fichier local",
  "10BCCFC592C341A9BA5D": "- fichier GitHub",
  "B85CCFB7472BA162CB62": "- dépôt GitHub et motif de fichiers",
  "01D67A4BE080E51BB69A": "- Gist GitHub et motif de fichiers",
  "B11C5A45A9ACB2EA09AF": "- Gist GitHub et motif de fichiers",
  "6C0D6D0E10D2AAE8D49B": "- dépôt Git et motif de fichiers",
  "CCF84164B91725FF2F38": "Piping",
  "C62535F15C7D7BC57348": "prend le contenu stdin et le convertit en ",
  "7D9EC2515E9471CAD8BC": "--exclude-git-ignore",
  "6B12D26E525B6F4BF094": "Exclut les fichiers ignorés par le fichier `.gitignore` à la racine de l’espace de travail. ",
  "32135338EC9F9C7D0909": "Configuration",
  "EB132D0AA5FFB335A31E": "Configure l’alias du modèle par défaut ou `large`. Utilisez `echo` pour faire un test à blanc et retourner les messages au lieu d’appeler un fournisseur LLM. ",
  "BBEF7772FBC82475C785": "Remplit les valeurs dans la map `env.vars` qui peuvent être utilisées lors de l’exécution du prompt. ",
  "45C24DECC51EE92AC757": "Sortie",
  "05BE17AEA7D4B18B829D": "Si ",
  "734537F38B81960EA712": "ne se termine pas par ",
  "44186BD6CEAD9C35EE23": "--json",
  "9B93934A4CB290A8283D": "--yaml",
  "C9A657B783B577F295AA": "SARIF",
  "59DD6E559B5CC6A9E7D3": "ou un fichier CSV si le fichier se termine par `.csv`. ",
  "FC804679E4B0174CD662": "Pull Requests et Issues ",
  "855894760CB07AAE53F1": "Configuration du workflow GitHub Action",
  "D08723C363D1D04C2CCF": "ajoutez la ",
  "9B98652D19710E90939A": "permission `pull-requests: write` au workflow/étape",
  "85B06104862AE73FB16A": "définissez le ",
  "20656A296CA85118DE1B": "secret `GITHUB_TOKEN` dans `env` ",
  "F97DD1C9094B0D832DAE": "lors de l'exécution du CLI",
  "77AB64FEFBAB6AC62B34": "Configuration Azure DevOps",
  "495D4CC26EF9208AA289": "ajoutez ",
  "137E65B74E149723B510": "`<votre nom de projet> Build Service` ",
  "0CD126F77E97CFC689CA": "**Collaborateur**",
  "CAC9E53BFD14BAFC3F0C": "dans le rôle au dépôt",
  "E57E5B6519049E9F51E8": "exemple",
  "F93ABF26CDB82CF16D99": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par différentes exécutions. Par défaut, c’est l’identifiant du script. ",
  "14D7A56A0BC92EDE512F": "exemple",
  "1BF1579B287265E6CFAA": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par différentes exécutions. Par défaut, c’est l’identifiant du script. ",
  "8E407C10820F325A0C86": "--pull-request-reviews",
  "44D2B4672FE8DA9101D8": "Crée des commentaires de revue de pull request à partir de chaque ",
  "8016D38E3C325BE61543": "annotations",
  "887976D24B5C467BAE19": "exemple",
  "1E3DE03DEDB0B3E781F1": "En savoir plus",
  "1D1D83A0F696CE9579A5": "La liste complète des options est disponible dans la ",
  "75449C2447872430BB03": "référence CLI",
  "06C46D141C185A512F83": "GitHub Actions",
  "341FE7DC8E396223AA0A": "Récemment",
  "E41FB420918AB26BCC64": "Modèles GitHub",
  "CD5F64569B7D78B4ED32": "Passez à la section ",
  "B09FFD8CE763B1970168": "Actions personnalisées",
  "C1A92B317CB1DEAA23A9": "Exemples",
  "7BF9EC04C2A6347AE11F": "Étiqueteur d'issues GenAI",
  "92879E39A29F6AA2E8C8": "Dé-dupliqueur d'issues GenAI",
  "E20A36F7F6E7CCCE2D60": "Analyseur d'issues vidéo GenAI",
  "921CDB918575E0A13F96": "Commenteur de code GenAI",
  "E600E29D967B661EBCFD": "Autorisations des modèles GitHub",
  "72F8EF3B8092C861A910": "Pour utiliser les Modèles dans une GitHub Action",
  "0B01BC10F4CD7439F4C7": "pour l’action afin d’inclure ",
  "F605E6B14A687DC2B3D6": "Utilisation de la CLI",
  "02DA59B9D56BD40A3DB7": "La façon la plus simple d'utiliser GenAIScript dans une GitHub Action est d’exécuter directement la ",
  "D544AB89D79B8F2F71D0": "CLI",
  "33B9F1EF9E8F5B5703B0": "Veillez à inclure le ",
  "D338E0CD674AC40B016B": "parmi les variables d'environnement",
  "1C6EEE2CB5148CAB0719": "Actions personnalisées",
  "AF168AFD67F003620799": "GitHub permet d'empaqueter des tâches dans des ",
  "814595A56C942571F50C": "actions personnalisées",
  "CD03809CE4DCC703AC10": "La CLI GenAIScript fournit une commande pour générer ou mettre à jour le code modèle (boilerplate) permettant d'empaqueter un script comme ",
  "41B2D0AE8742340585A5": "action Docker",
  "F788DCC99D55583BC2AF": "Le générateur de squelette d’action va écraser les fichiers suivants :",
  "47FEE1561384A32708B7": "Fichier de métadonnées de l'action",
  "B363A4259A2A635734CB": "Dockerfile pour l'action",
  "4292255CAADD480DC2B8": "Documentation de l'action",
  "497AE4F45ABD1272E241": "Fichiers à ignorer dans le dépôt",
  "D956655EB818F733B746": "Workflow CI pour tester l'action",
  "1E66E1136154F823221D": "Configuration du package pour l'action",
  "F12759FC5D7945DE910F": "Configuration du devcontainer pour VS Code",
  "403F25D52282DC7CE8C4": "Métadonnées",
  "9017352AD8CB7BFCC0F3": "Le fichier ",
  "882F36CB092154417516": "Le ",
  "3F81BF44F6B9C1ACAEB7": "La ",
  "3BC3904DF6F91F43AB45": "du script est utilisée comme ",
  "3677CAFB461421E5A0C5": "Les ",
  "D4EB7CA6B9B6884EC3FA": "proviennent des ",
  "9F03E9EE1747482902E1": "paramètres",
  "4E12F620250B9EE1E72D": "Notez que ",
  "92CEAB7AD2CD372A14C5": "sert à remplir le fichier ",
  "064C32BA2A09155DE493": "Entrées",
  "5B3821DF11A032C88351": "La section ",
  "C7BB06CE14F87EBD4E4A": "de ",
  "10A51A5DF25E0FE3A68C": "Le fichier généré ",
  "EAC66D25E1423224A678": ": ceci est nécessaire pour s’authentifier auprès des modèles GitHub. ",
  "70C0CFD0BF5231283042": "journaux",
  "94801BBBAF15BD95C125": "Sorties",
  "FA51C1ABDDEED4E14FA7": "schéma de réponse",
  "7C3EA07934DA43062FE6": "Branding",
  "32C769BFD4C80505E3F2": "Le champ ",
  "9ADDC30B8F138BAD73EB": " ",
  "3A5D23F2CC8DEB74A28B": "sert à ",
  "7FF1FE990CF5326BB166": "personnaliser l’apparence de l’action dans l’interface GitHub",
  "50AF56D05AF456882232": "Conteneurs",
  "8FD851C668D583489302": "node",
  "ABE806EBF3C2DF3EF97C": "GenAIScript va également créer un ",
  "CC6E303F4AFD01D2DCEF": "devcontainer",
  "6130EDA319562ADCEF04": "Vous pouvez également ajouter tout autre package nécessaire en l’indiquant dans la commande ",
  "B58001DC79E52C138C21": "Test de l'Action",
  "E9419910B833C66CDBD2": "Votre script doit pouvoir être testé localement via la commande ",
  "B27B366A50CA7A4352CD": "GitHub Workspace vs Action Workspace",
  "FBEB7A734EF2F536C44C": "Le ",
  "0107AD3281E55B27514E": " ",
  "445D2DAB9CC09987DA91": "lance la CLI ",
  "D641FA181874F6F74349": " ",
  "A457179F1D6EAB632FD6": "puis détecte la variable d’environnement ",
  "AA9A04D5D0665929EE6F": "et change le dossier de travail courant (cwd). ",
  "62D7AF60221E57C5B55C": "Ce mode est activé par l’option ",
  "964FB29964CB18E6D80E": "dans la commande CLI. ",
  "0E391F3478ECBBB180AD": "Scripts",
  "BAF1DB44E08145DC16CA": "Interface en ligne de commande (CLI)",
  "DF53EB6A14F8E1641BCF": "Extension Visual Studio Code",
  "F475B8DA878B24C9B4DF": "Sécurité du contenu",
  "9F15CF80EAE1C3775FA1": "vous pouvez lancer le [cli](/genaiscript/reference/cli) en tant que **serveur Web API** pour exposer les scripts en tant que points de terminaison REST.",
  "2FC46A6D708C39FED95F": "Port",
  "84FA7E5FF967C6F92C24": "Le port par défaut est `8003`. Vous pouvez spécifier le port en utilisant l'option `--port`. ",
  "A6636AB56D258A137DE8": "Clé API",
  "249EAB9DF9745A7E8AFE": "ou la variable d'environnement ",
  "4863E48106494A8A2077": "ou",
  "446F03FC96B09641FF38": "La clé API peut être définie dans l'en-tête `Authorization` ",
  "C6AD90F6CDCE9BDAD335": "d'une requête ou dans le paramètre de requête URL `api-key` (`http://localhost:8003/#api-key=my-api-key`) ",
  "AE90966B2343301B5203": "CORS",
  "121DAD0DF3DB55DB92B5": "Vous pouvez activer les ",
  "B4905E6506B7391E4754": "Ressources Partagées entre Origines (Cross Origin Shared Resource)",
  "E6D614641E54F1E055CB": "en utilisant l'option ",
  "6B5DD9016AF323D77AEA": "`--cors` ou en définissant la variable d'environnement `GENAISCRIPT_CORS_ORIGIN`. ",
  "D0B28E484D154241C4F6": "Réseau",
  "625A16C683B6F6FDC820": "Vous pouvez lier le serveur à `0.0.0.0` ",
  "DBD1CFC2340DB62CF6E0": "et le rendre accessible depuis le réseau en utilisant l'option `--network`. Cette option est nécessaire pour rendre le serveur accessible depuis un conteneur. ",
  "691EF6AAD7DBAF542D37": "Dockerisé",
  "211A879FF6DDF961AE1E": "Cela crée une image `genaiscript` localement que vous pouvez utiliser pour lancer le serveur. ",
  "9F0EEAD8EFC3281B64BC": "puis ouvrez `http://localhost:8003` dans votre navigateur. ",
  "C6C76172532493315A7B": "Points de terminaison API OpenAI",
  "74BC78331C7084889C06": "glob",
  "D8B6E1134B110CA25E77": "[Z3](https://microsoft.github.io/z3guide/) est un prouveur de théorèmes haute performance développé par Microsoft Research. C’est un outil intégré de GenAIScript. Z3 est utilisé pour résoudre des formules logiques et peut être employé dans diverses applications, notamment la vérification de programmes, la résolution de contraintes et l’exécution symbolique.",
  "1070E937F00136E9F9F8": "GenAIScript utilise le paquet npm [z3-solver](https://www.npmjs.com/package/z3-solver) basé sur WebAssembly pour exécuter Z3. ",
  "36E1F9DF6A6BCFB68282": "z3-solver",
  "E81A32493BAAB9D5710D": "Instance Z3",
  "E2ACCEDCE66FD57CD68A": "La méthode `host.z3()` crée une nouvelle instance de Z3. Cette instance peut être utilisée pour exécuter des commandes Z3 et obtenir les résultats. ",
  "AC545FF43DC8F3AE9410": "instance z3 est une enveloppe autour du paquet npm [z3-solver](https://www.npmjs.com/package/z3-solver). ",
  "0A50A32310B047B513C6": "z3-solver",
  "8CE0EFA9C0DF4B63FDD5": "instance z3 possède la méthode `run` qui exécute la formule SMTLIB2 donnée et retourne le résultat. ",
  "DB8EEB6EADBF8BD80394": "Outil Z3",
  "D375B56FCAD06C337F5E": "L’outil `z3` (dans [system.z3](/genaiscript/reference/scripts/system#systemz3)) encapsule Z3 en tant qu’outil LLM pouvant être utilisé dans GenAIScript. Cet outil prend en entrée une formule SMTLIB2 et renvoie la sortie de Z3. ",
  "AB0ACD2C23AE72E49942": "Agent Z3",
  "5753A70AC718D24F3F46": "L’agent `z3` (dans [system.agent-z3](/genaiscript/reference/scripts/system#systemagent_z3)) encapsule l’outil `z3` avec un LLM capable d’(essayer de) formaliser des problèmes arbitraires en SMTLIB2. ",
  "D52DC2BA453C1F07FB92": "YAML",
  "B9708DC8BD45073B0A4E": "La fonction `defData` rend un objet en YAML dans l'invite (et dans d'autres formats si nécessaire). ",
  "6F65A4BD5778711917DE": "De même que la classe `JSON` en JavaScript, la classe `YAML` dans LLM fournit des méthodes pour analyser et convertir en chaîne de caractères les données YAML. ",
  "720E8F2D8E1D2D70AA88": "Le [parsers](/genaiscript/reference/scripts/parsers) offre également un analyseur permissif pour YAML.\nIl retourne `undefined` en cas d'entrée invalide. ",
  "1F7911FE249D8BC0B991": "parsers",
  "21C911BCA3BEB3BFC50F": "schémas",
  "2654DCEC60270DCBA665": "Les schémas JSON définis avec [defSchema](/genaiscript/reference/scripts/schemas) peuvent également être utilisés pour valider les données YAML. ",
  "E8A9A2497F1BBFEF4792": "La fonction `def` analyse automatiquement les fichiers XML et en extrait le texte. ",
  "B1569BE1C861B2304DFE": "La fonction globale `XML.parse` lit un fichier XML et le convertit en objet JSON. ",
  "C66D7082F68AD933CCA8": "RSS",
  "DC046F83862933D63C9A": "Vous pouvez utiliser `XML.parse` pour analyser un flux RSS en un objet. ",
  "309993C770FE3EC791AD": "Les ",
  "D9664186EAD30E0F1BAC": "interpréteurs",
  "8ECAB36988C5B5A13324": "La fonction ",
  "C545766A66E94A62B25A": "`retrieval.webSearch` ",
  "D15FA89D9C5E20863EED": "[Tavily](https://docs.tavily.com/)",
  "9B848B0CB3C0A4D33F06": "Pages Web",
  "38E4062D23DEA64361B5": "Vous pouvez utiliser ",
  "0EA571037E64EC337861": "Configuration Tavily ",
  "DCC60407393678BDC90A": "L’API ",
  "E73D2F613F3420EE4FD6": "[Tavily API](https://docs.tavily.com/docs/rest-api/api-reference#endpoint-post-search)",
  "C3A0BD5EA337B4911091": "Configuration de Bing Web Search ",
  "4C689875110B96388A1C": "L’API utilise ",
  "198BE3F67680E403873E": "[Bing Web Search v7](https://learn.microsoft.com/en-us/bing/search-apis/bing-web-search/overview)",
  "94790621212FD05AC0D2": "Outil",
  "6C62E8096D5DDFD8B2A6": "Ajoutez le script système ",
  "F21962DB2D19C6B35F29": "pour enregistrer un ",
  "488AD7ABACC0D35334A6": "[outil](/genaiscript/reference/scripts/tools)",
  "BF19DCC3A40C174E122B": "qui utilise ",
  "F73D2C561240F374C0BD": "Configuration de ffmpeg",
  "909D915AAD99A8975569": "Les fonctionnalités de rendu et d'analyse des vidéos reposent sur ",
  "AA3E9F78A8C077D94B61": "les variables d'environnement ",
  "3BCF3448F5663AEF6D8F": "pour pointer vers l'exécutable ",
  "4717C6F428F0E75AE47D": "",
  "5EC97EC7FCF7792B850D": "Extraction des images",
  "601A0B15D6E44B748F59": "La fonction `ffmpeg.extractFrames` va extraire des images d'un fichier vidéo et retourner un tableau de chemins de fichiers. Vous pouvez utiliser directement ce résultat avec `defImages`. ",
  "71F8ED469A531D4AF9DD": "spécifiez un nombre d'images avec ",
  "900CEA0C2EFD00C9ECEC": "spécifiez des horodatages en secondes ou en pourcentages de la durée de la vidéo avec ",
  "28B997EE84821A39A1CB": "spécifiez la transcription calculée par la fonction ",
  "6032641CBF81920131D3": "transcribe",
  "220A75EC9E698917DD6A": "Extraction de l'audio",
  "C4240D80DD47E065BECB": "La fonction ",
  "8BF77369681C00E42908": "`ffmpeg.extractAudio` extrait l'audio d'un fichier vidéo sous forme de fichier `.wav`. ",
  "CAA331E511465CC27CE1": "La conversion en audio se fait automatiquement pour les vidéos lors de l'utilisation de ",
  "CFB0EFA65D67AB902883": "transcribe",
  "B4D6B465F013852CF5B8": "Extraction de clips",
  "39889A1C6C53EA25A38B": "Vous pouvez extraire un clip d'un fichier vidéo avec la fonction ",
  "06BD42363330A9A5C885": "Analyse des vidéos",
  "EC2F55A24559A55C5DAD": "Vous pouvez extraire les métadonnées d'un fichier vidéo avec la fonction ",
  "A3EBEB5BCFB667540722": "Options personnalisées de ffmpeg",
  "ED832F09E64A146C163D": "Vous pouvez personnaliser davantage la configuration ",
  "C1A3B961E2F7366FA91D": "de `ffmpeg` en passant des `outputOptions`. ",
  "FED1EFBD4F2A4311B047": "Ou interagir directement avec le constructeur de commandes `ffmpeg` (qui est le constructeur natif de commandes [fluent-ffmpeg](https://www.npmjs.com/package/fluent-ffmpeg)). Notez que dans ce cas, vous devez aussi fournir un \"hash\" de cache pour éviter le rendu redondant. ",
  "440A80A6D0D5C1569267": "CLI",
  "3362EDEBFFF726C2C8E3": "La ",
  "FF7B3BDEA302F80E2103": "CLI",
  "B2FA5935916DC72F971E": "Création de l’index",
  "F080F778431A73A5EE4E": "La fonction ",
  "5FA86019293EED816B3C": "qui ne doit pas changer",
  "BE12D855145F19BB9423": "Index local",
  "4277AB70E98BAD59378A": "dossier sous `.genaiscript/vector` utilisant une base de données vectorielle locale basée sur ",
  "5C9C9176C62BA2FBD7BB": "vectra",
  "24F40B50D20DC51C5E50": "modèle d'alias ",
  "695E896DFCB2EC020DF9": "modèle d'alias",
  "E5B00AA9A406657BF57B": "Les `embeddings` peuvent également être configurés via les options. ",
  "2AA9985BCF3986BF293A": "Recherche Azure AI",
  "0FB35654CE83BE9D781D": "GenAIScript supporte également l’utilisation d’un service ",
  "8CC8693261FD15DF8449": "Azure AI Search",
  "8E45190DCF18D3EA52FC": "syntaxe de requête simple",
  "4855BA64C22AF62EDC6B": "et ",
  "7D7293BF90A08F9C66B8": "variables d’environnement dans votre fichier ",
  "949F51FFAE7A8AFD3606": "documentation d'authentification",
  "46E4C45018EDD35E13A3": "Configuration du modèle et du découpage",
  "D08E0AC8CA56B111C881": "et ",
  "B909EF03AEFFAB3F2946": "Indexation",
  "6E8059D363F7F40DFC67": "La fonction ",
  "CB321D16B5BFFCFBFA91": "Recherche",
  "36B0B2655ADE03ABCC60": "La fonction ",
  "8525FCA7B2FE0D9B7E8B": "L'objet `env.vars` contient un ensemble de valeurs de variables. Vous pouvez utiliser ces variables pour paramétrer votre script. ",
  "25A6EF8E8D8E515FD52F": "Paramètres du script",
  "CB4BD753369E326873E8": "Il est possible de déclarer des paramètres dans l'appel de la fonction `script`. L'objet `env.vars` contiendra les valeurs de ces paramètres. ",
  "951BA8EF31A570AA0488": "Variables depuis la CLI",
  "A56A85E52E8F2E8A47CA": "Utilisez le champ `vars` dans la CLI pour remplacer les variables. vars prend une séquence de paires `clé=valeur`. ",
  "B9E52F099D7011C52E93": "Variables dans les tests",
  "B90ADC4C03B5462B1F1E": "Vous pouvez spécifier des variables dans l'objet `tests` de la fonction `script`. Ces variables seront disponibles dans le contexte du test. ",
  "3AF3596757307BED2626": "[TypeScript](https://www.typescriptlang.org/) est un langage de programmation fortement typé qui s’appuie sur JavaScript, vous offrant de meilleurs outils à n'importe quelle échelle. Les scripts GenAIScript peuvent être écrits en TypeScript.",
  "48440ACC6B3D5CD4DAF2": "De JavaScript à TypeScript",
  "E8D3D90E1B2C36288335": "Vous pouvez convertir n’importe quel script existant en TypeScript en changeant l’extension du fichier en ",
  "2391260DAE8A72C53785": "Assurez-vous d’utiliser l’extension de fichier ",
  "2FE9A6D8D04541693EC4": "et non ",
  "FB446694538EA16EA35C": "[ESM](https://www.typescriptlang.org/docs/handbook/modules/guides/choosing-compiler-options.html)",
  "BA96E24F7771707277AC": "Importer des fichiers source TypeScript",
  "0848852A6F182E416E34": "Il est possible de ",
  "8FD53AF7B11F6B1E4CDF": "importer",
  "E22DD3991F7F48D1101B": "importer",
  "4145FE42A2B8A4BE12C0": "GenAIScript effectue-t-il la vérification de type des invites ?",
  "ADC5247CCF05199693A1": "Vous pouvez également lancer une compilation TypeScript en utilisant la commande ",
  "CDBAB8253862CE8A7829": "sans vérification de type",
  "FAF088B0612AB4056E9C": "via ",
  "B18D83BF5D75DC59A41A": "tsx",
  "B5729F8506F3C595142F": "Configuration",
  "D5E33BC2B0AC92D71B7D": "le codec opus dans un conteneur ogg",
  "CF6DCC2F4A1B547CAE16": "Modèle",
  "800A3800E6BE35BA16DC": " ",
  "EA974170AF020BA0A16C": "alias de modèle",
  "44FD52B7BAA2A73A42B4": "Vous pouvez utiliser ",
  "6F827EA13F71EEA6CE10": "le service Web Whisper ASR",
  "AB24A6F3E8BF602D20E4": "Segments",
  "47FEEAF247D2B41926B5": "SRT et VTT",
  "7FAE17125E66B1A6C81A": "GenAIScript génère également les segments aux formats ",
  "184CAFC3B0B74E7F173E": "SRT",
  "6FF5B483E65DC7F44E97": "et ",
  "49C08789773E01F13D88": "WebVTT",
  "542DBD494C6E32A0DC29": "Traduction",
  "B1ED0B58288233325BB6": "Cache",
  "9BA38FF63CAD6A871770": "Vous pouvez mettre en cache les résultats de transcription en configurant l’option ",
  "CF04D999CFF5683EA309": "sur `true` (ou un nom personnalisé). ",
  "9972F27161004B5FC727": "ou un sel personnalisé",
  "F71C00302C58FAD90B7F": "Vous pouvez analyser les fichiers VTT et SRT en utilisant la fonction ",
  "58CE9DFF37A1FE2593B0": "Vous pouvez enregistrer ",
  "D9B5903FCC2803D250F8": "outils",
  "779886D482445C681F7F": "fonctions",
  "0EBDD8F20D983598BAC4": "fonctions OpenAI",
  "651EE930F02C34B428F7": "outils Ollama",
  "499B9540B379C4D81C62": "utilisation des outils Anthropic",
  "2019C0E039FD81074174": "Outils de secours",
  "622462FD3B9C8CE16061": "schéma des paramètres",
  "A2A7BEF7D7BF242545E0": "Le LLM décide d’appeler cet outil de lui-même !",
  "A6EE80273911BE21E120": "Exemple d’outil météo",
  "96DC09F04E47082F1359": "Cet exemple utilise l’outil ",
  "37B5DA5417DB1008AC4F": "Exemple d’outil mathématiques",
  "9D7514F016FD0BF43871": "Réutilisation des outils dans les scripts système",
  "D3E011A54811A35C77E6": "Assurez-vous d’utiliser ",
  "DEF101580791D9E39206": "au lieu de ",
  "ABFE0020A0D731688A71": "Instances multiples du même script système",
  "94E92A5C56539E80B38E": "Outils du protocole Model Context",
  "7BAE7426604E9B150C1F": "Fournisseur de contexte modèle",
  "9E8A7A7AA5A596102ECF": "outils",
  "F00E5253198706E13CE5": "Vous pouvez exploiter ",
  "EEC12D549671B3903237": "serveurs MCP",
  "B49045D8F297A02E16D3": "Voir ",
  "D7C6F535BCA5AE87B880": "Outils du protocole Model Context",
  "BEEE614E3CF1222D90C2": "Support des outils de secours ",
  "41437AF2F01D93B3F341": "Le support des outils est implémenté dans ",
  "74C3C7478CEDBE93C775": "ajouter l’option ",
  "8AF864F639843CA46E34": "au script",
  "B5D9FA0AB9F3283B16B6": "ou ajouter le drapeau ",
  "7EFE71162E165139CA91": "à la CLI",
  "A92F8B2BC0EAA5B27B8B": "Détection d’injection de prompt",
  "E34CA44E4BCEC09493DD": "scanner de sécurité du contenu",
  "8E4B7B2BBC8FD313512C": "Validation de l’intention de sortie",
  "DC3E3AE65E79D5EA13A2": "L’intention `description` est une valeur spéciale qui s’étend à la description de l’outil. ",
  "43004B35DAC7BB692096": "Conditionnement en scripts système",
  "91818332CDB3D3847996": "l’outil `current_weather` peut être inclus dans le script ",
  "5F49C214474CE9D82326": "puis utilisez l’ID de l’outil dans le champ ",
  "54CF0CD3638F7C23BCA6": "Exemple",
  "637242950AACFEABE8C7": "Vous pouvez ensuite appliquer ce script au fichier ",
  "36C7F74D1D59B7380FE2": "Le module utilitaire `tokenizers` fournit un ensemble de fonctions pour diviser le texte en tokens. ",
  "BDB58ED9DD5141AD5AC4": "Choisir votre tokeniseur",
  "4A05419183E3A5570A2C": "par défaut utilise le tokeniseur `large`. Vous pouvez changer le tokeniseur en passant l'identifiant du modèle. ",
  "1F275C322AD8B858968A": "Supprime une partie de la chaîne pour respecter un budget de tokens",
  "86B1CD245BD2D1351C19": "Les tests sont exécutés par ",
  "F17BD300438EAC926622": "promptfoo",
  "F41150E3D0656CBB1C24": "redteam",
  "5E94CF8A412272086DDD": "Définition des tests",
  "971AE16979050B5762FF": "Les tests sont déclarés dans la fonction `script` de votre test.\nVous pouvez définir un ou plusieurs tests (tableau). ",
  "479CE93AAB67ADEC218B": "Modèles de test",
  "02C96C60088A4D58FB89": "Fichiers de test externes",
  "EB80931E58971A67EB8D": "Les fichiers JSON et YAML supposent que les fichiers sont une liste d’objets ",
  "807BACB67F82929AF375": "`PromptTest` ",
  "EDC776120089F4D24AB6": "Les fichiers CSV supposent que la première ligne est l'en-tête et que les colonnes correspondent principalement aux propriétés de l’objet ",
  "C1ACFDEF6E291FF23EDA": "Les fichiers JavaScript doivent exporter une liste d’objets ",
  "FCD249708911C8BD5AC0": "`PromptTest` ",
  "60073DD0C26CE714DA4D": "llm-rubric",
  "00F41DDCE4484B459C66": "GPT-4 requis",
  "D4C5133608D1079BE603": "Les tests ",
  "495756409293D244EA65": "`rubrics` ",
  "FAC21E18F9E5270E401B": "`gpt-4` ",
  "9A41550B9BBFE23A3DCD": "factuality",
  "DB4E99A96A039B154B30": "gpt-4o requis",
  "2433E5065D316E2FEEB7": "Les tests ",
  "A99EDADE882757F459E8": "`facts` ",
  "CAAEA3CBCC44B0D5AAAA": "`gpt-4o` ",
  "8EF5B346F506ECFD6003": "Autres assertions sur ",
  "2359D94DBA2FC6C39E08": "promptfoo assertions and metrics",
  "C4E6385FF0BFCF9D3976": "transformation",
  "D72621B7D0E82D225305": "Exécution des tests",
  "5067913FA64E880CEF54": "Vous pouvez exécuter les tests depuis Visual Studio Code ou en utilisant la ",
  "C2E9556EB1056F02D209": "ligne de commande",
  "D69447280351E2A752BC": "fichier de configuration promptfoo",
  "0BEAF34452FE35B42225": "Visual Studio Code",
  "B09CF1F87BE2B6FBD731": "Ouvrez le script à tester",
  "9124D07FF51B92322CB0": "Cliquez droit dans l'éditeur et sélectionnez ",
  "324450F2B28B045489A4": "Exécuter les tests GenAIScript",
  "75978C54F9A136793524": "dans le menu contextuel",
  "477C713E00E1F92E4E5E": "La vue web de ",
  "6F6D46448D745DEDF96D": "promptfoo",
  "8717ECA352AC0B4D9E5D": "Ligne de commande",
  "08DA2C5111AFCA9EBAC5": "Exécutez la commande ",
  "32AD7834A53358D92145": "Vous pouvez spécifier des modèles supplémentaires à tester en passant l’option ",
  "4E0DFEF6DA4D6CB62B94": "[Microsoft Teams]",
  "7AFDD62DC3D310A8E215": "Authentification",
  "6883CE87E3BD82C98F08": "Configuration",
  "61EF799B1F52C67EA8A9": "Pour utiliser l’intégration Microsoft Teams avec la ",
  "D90731C19333BEAD74C9": "CLI",
  "E13F856B914967C615B9": "API",
  "FD84B4D2C3CEB2FAB91F": "Les invites système sont des scripts qui sont exécutés et injectés avant la sortie du prompt principal.",
  "1A8C2D00A3D5E1B1C2C2": "* les invites système ne sont pas listés par défaut",
  "B3E67FD93762954D65B4": "* les invites système doivent utiliser le `system` ",
  "4CFAED284A6FC0DC283E": "* au lieu de `script` ",
  "08EBA67D801008DC0B89": "* les invites système sont exécutés avec le même environnement que le prompt principal",
  "89226D8DCF317514E6C7": "* Les invites système doivent avoir une fonction par défaut et utiliser le `ctx` passé dans la fonction. ",
  "EBCD09AE00C9B22F87BC": "* Paramètres et variables",
  "0A367D2893DECC09D4DF": "* System supporte également des paramètres sous forme de script mais les noms des paramètres seront automatiquement préfixés par l’id du script",
  "5A329C6A20DDB41E7874": "system({ ...,\n    parameters: {\n        model: {\n            type: \"string\",\n            description: \"Modèle LLM à utiliser\"\n        },\n    },\n})\nexport default function (ctx: ChatGenerationContext) {    \n    const { env } = ctx\n    // remplir depuis la valeur par défaut ou la surcharge du script\n    const model = env.vars[\"system.fs_read_summary.model\"]\n}",
  "95672A4F57510D766A21": "* remplacer la valeur du paramètre dans le script du script",
  "1827C9F21E08A627F6B3": "script({ ...,\n    system: [\"system\", \"system.fs_read_summary\"],\n    vars: {\n        \"system.fs_read_summary.model\": \"ollama:phi3\",\n    },\n})",
  "E692A8BB6FFE02E5547C": "* Prompts système automatiques",
  "2EAAE3F2DADC8FF9F037": "* Le script inspecte le code source du script pour déterminer un ensemble raisonnable de prompts système ([code source](https://github.com/microsoft/genaiscript/blob/main/packages/core/src/systems.ts)).",
  "9C4EC42651D06AF4EFCB": "* Le mélange par défaut comprend",
  "0D6BB811C605318EBC51": "system\nsystem.output_markdown\nsystem.explanations\nsystem.safety_jailbreak\nsystem.safety_harmful_content\nsystem.safety_protected_material",
  "2C031F85FC294136E37C": "* Injecte d’autres scripts système selon la correspondance de mots-clés.",
  "AC1F9B354756619AA6CF": "* Prompts système de base",
  "834097F14A95CE0ADC60": "system({\n    description: \"Agent capable d’interroger des données dans des fichiers\",\n})\n\nexport default function (ctx: ChatGenerationContext) {\n    const { defAgent } = ctx\n\n    defAgent(\n        \"data\",\n        \"interroger les données depuis des fichiers\",\n        `Vous êtes un expert data scientist capable de répondre à des questions sur des données dans des fichiers.\n    Répondez à la question dans <QUERY>.`,\n        {\n            system: [\n                \"system\",\n                \"system.assistant\",\n                \"system.tools\",\n                \"system.python_code_interpreter\",\n                \"system.fs_find_files\",\n                \"system.fs_read_file\",\n                \"system.fs_data_query\",\n                \"system.safety_harmful_content\",\n                \"system.safety_protected_material\",\n            ],\n        }\n    )\n}",
  "D52A4C16DD61CA6CF5A0": "* Agent pour le protocole de contexte de modèle",
  "34EE9E686A28417D0029": "system({\n    title: \"Un agent planificateur\",\n})\n\nexport default function (ctx: ChatGenerationContext) {\n    const { defAgent } = ctx\n\n    defAgent(\n        \"planner\",\n        \"génère un plan pour accomplir une tâche\",\n        `Générez un plan détaillé sous forme de liste de tâches pour permettre à un petit modèle LLM d'utiliser des agents afin d'exécuter le plan.`,\n        {\n            model: \"reasoning\",\n            system: [\n                \"system.assistant\",\n                \"system.planner\",\n                \"system.safety_jailbreak\",\n                \"system.safety_harmful_content\",\n            ],\n        }\n    )\n}",
  "558C85BA8F9228A90F77": "* Agent capable de poser des questions à l’utilisateur",
  "3379895F4B7160BFA515": "* Émet des annotations compatibles avec GitHub Actions",
  "276A49C58AC8DCA01802": "* Prompt d’aide pour un assistant utile. ",
  "2C7F10D98A4B4BA0D55E": "* Raisonnement en chaîne de Draft",
  "D7EB77E64150EA30B6A0": "* Génère des éditions de formattage du changelog",
  "D54CC5B62DD495C4A43B": "* Génère des diagrammes",
  "3E6F27A8C6546FAD8630": "* Dot not explain",
  "9AFD7AC0FDFFAC216B20": "* Utiliser la sortie en anglais",
  "3498845B74FE7D4CC264": "* Explique tes réponses",
  "1FB0B97F776B429E505F": "* Un outil qui peut récupérer des données depuis une URL",
  "10C308129159DC038855": "* Support pour le format de fichier ",
  "A7B6B1BE22D4345F6E96": "* Génération de fichiers",
  "2D1F66B52911F182B417": "* Enseigne le format de fichier supporté par GenAIScripts",
  "3CF905EA657DD28B8FDC": "* Demande de fichier",
  "6BB47EDA5804FBCA481E": "* outil `fs_ask_file` : Effectue une requête LLM sur le contenu d’un fichier. Utilisez cet outil pour extraire des informations d’un fichier. ",
  "A18BDFB920060F7F3264": "* outil `fs_data_query`: Interroger des données dans un fichier en utilisant la syntaxe GROQ",
  "AF66047119936D88BC61": "* outil `fs_diff_files`: Effectue un diff entre deux fichiers. Utilisez plutôt git diff pour comparer des versions. ",
  "33753E55A2C2F750A0FC": "* Différence fichier entre deux fichiers",
  "68BB22ECFFE0AEA24A73": "* Utilise une section de diff pour générer une différence entre deux fichiers ",
  "08522F9109513FD50F55": "* Recherche de fichiers avec glob et regex",
  "CCDB7E0A289006503DE2": "* outil `fs_find_files`: Trouve un fichier correspondant à un motif glob. Utilisez un motif pour rechercher avec une expression régulière dans le contenu du fichier. ",
  "1D7138DB858295BEFFAC": "* Lecture de fichier",
  "1401E151317D0ACAF7AB": "* outil `fs_read_file` : lit un fichier comme texte ",
  "00794D5D550C3944A99C": "* Opérations git",
  "9B18071AC28AB5B8DDF6": "* outil `git_branch_default` : Récupère la branche par défaut en utilisant le client. ",
  "B4CAB9DF4D94057B22E3": "* outil `git_branch_current` : Récupère la branche courante en utilisant le client. ",
  "C141BC5BD160B9AE56B0": "* outil `git_branch_list` : Liste toutes les branches en utilisant le client. ",
  "604BDC81B23E95DC90F5": "* outil `git_list_commits` : Génère un historique de commits avec la commande git log. ",
  "5BF1324C7E92A99136CF": "* outil `git_status` : Génère un état du dépôt avec le client. ",
  "DE6A8914971037CEE95B": "* outil `git_last_tag` : Récupère le dernier tag en utilisant le client. ",
  "6832CF3C0F48FDEA4BE2": "* Diff git",
  "1D09EE189F1CF509ACD8": "* outil `git_diff` : Effectue un diff entre deux fichiers avec la commande git diff. Si le diff est trop grand, retourne la liste de fichiers modifiés/ajoutés. ",
  "B6FF32880BA6ED361F89": "* Informations sur le dépôt git",
  "29E0F39385200DAA4976": "* Met en œuvre la récupération d’informations sur un dépôt git",
  "12CFA8E1951C452AFB57": "* outil `github_actions_workflows_list` : Liste tous les workflows Github ",
  "6AAAF28B8B00BC792779": "* outil `github_actions_jobs_list` : Liste tous les jobs pour un run Github ",
  "F6B48CED7593BC9D587B": "* outil `github_actions_job_logs_get` : Télécharge le journal d’un job Github. ",
  "4E2387B90F184EC5B24E": "* outil `github_actions_job_logs_diff` : Compare deux logs de jobs Github ",
  "61EE6168F5BC89335D89": "* Outils pour interroger des fichiers Github ",
  "98DCDE0F1EEB1022AFFF": "* outil `github_files_get` : Récupère un fichier depuis un dépôt ",
  "77ABEFBE2A938BA7C7DC": "* outil `github_issues_list` : Liste tous les issues dans un dépôt ",
  "14CE63C1FC0A14DC8AB1": "* outil `github_issues_get` : Obtenir un issue spécifique par numéro ",
  "35E981357EDFF931FA07": "* outil `github_issues_comments_list` : Obtenir les commentaires d’un issue ",
  "213DCE0A7D730530FC02": "* outil `github_pulls_list` : Liste tous les PR dans un dépôt ",
  "7A61B223D8CE2A90D109": "* outil `github_pulls_get` : Obtenir un PR spécifique par numéro ",
  "9FC5A460CF3E351D5D50": "* outil `github_pulls_review_comments_list` : Obtenir les commentaires de revue pour un PR ",
  "FF9DB551A7E64DB64701": "* Évalueur d’expression mathématique",
  "BA699DDE6B3BA676A79F": "* Enregistrer une fonction qui évalue des expressions mathématiques",
  "1688B0AA73B841A8FDEA": "* outil `math_eval` : Évalue une expression mathématique ",
  "973E241D4DCA66645D8E": "* Charger des outils du serveur MCP",
  "D0FA725AB7ABE0F2F374": "* Outils pour la documentation",
  "D8AD3588BC0AE968DCF7": "* outil `md_find_files` : Obtenir la structure des fichiers pour la documentation markdown/MDX ",
  "BC4BFF6AAD5F13EB309B": "* Lecteur de frontmatter markdown",
  "903C20AC13067BBDFB58": "* outil `md_read_frontmatter` : Lire le frontmatter d’un fichier markdown ou MDX ",
  "85E6A9D289F081926E6A": "* Outil meta-prompt OpenAI",
  "D440D7C0B4C59431094B": "* Modifié à partir de ",
  "B32FC993564C2A48535F": "* outil `meta_prompt` : appliquer les directives de meta-prompt d’OpenAI à une invite utilisateur ",
  "FBBCDA575B427EBCC6C6": "* Ajouter un schéma JSON valide pour une description",
  "0B15E636A3D758AEC355": "* Générateur de schéma meta d’OpenAI ",
  "67BE6358468C3FFC5EBE": "* outil `meta_schema` : générer un schéma JSON valide pour la description JSON ",
  "FCBC30FA40689641391F": "* Infos sur le projet en cours",
  "E274FF0A1F60272FFF38": "* Fonction pour exécuter des tests node.js ",
  "03320118EF9E087F9385": "* Sortie INI",
  "184C0AAECC892130F309": "* Sortie JSON",
  "6C387887000C8719C101": "* Prompt de sortie Markdown",
  "9B3C0BE2DF2EC2908EDE": "* Sortie en texte brut",
  "5E6967CEB7B36EBF1C23": "* Sortie YAML",
  "0C0A0E0EFC53F423C191": "* Instruction pour faire un plan",
  "C7464A6B5BA41EBCDADB": "* Expert en Python et en data science",
  "6D232E4F867ECE64B297": "* Support pour l’exécution de code Python dans un conteneur Docker ",
  "0C7D104783465345CFFC": "* Copier des fichiers dans le conteneur ",
  "A8BA0D61A3887A4D4298": "* Lire un fichier dans le conteneur ",
  "308137170B7FC26919AC": "* Recherche floue en texte intégral",
  "75673196C187DDAE8B45": "* outil `retrieval_fuzz_search` : Recherche de mots-clés en utilisant toutes les données et une distance floue ",
  "39BCB587278CB9AAD2E0": "* Recherche vectorielle dans les embeddings",
  "5BC159BC233186A5E4DB": "* outil `retrieval_vector_search` : Recherche par similarité dans les vecteurs d’embeddings ",
  "9A448E9BB19FF2A443B3": "* Recherche Web",
  "1F1E8DD332ECE2A3A750": "* outil `retrieval_web_search` : Recherche sur le web pour une requête utilisateur ",
  "5360D45248D0A9DD624D": "* Canaries de détection de fuite",
  "70C30EBE726B8438196C": "* Safety prompt contre contenu protégé",
  "6131027E180DE34C6460": "* Prompt Safety contre contenu non étayé",
  "C216EF33626089594075": "* Validation de contenu nuisible par un fournisseur",
  "0DD84A4D3836AB9FC5D8": "* Support pour la validation JSON Schema",
  "449CA0F896032394E6B5": "* Génère des tâches",
  "802B3BC52CC0CE85D4F7": "* Rédacteur technique",
  "ED35866F53D19506EA62": "* L’outil « penser »",
  "389309EAB42B55C650CF": "* L’outil « penser » chez Anthropic ",
  "D56710546E775B11CF3F": "* outil `think` : Utiliser l’outil pour réfléchir. Il ne récupère pas d’informations mais ajoute une réflexion dans le journal. À utiliser pour raisonnement complexe ou cache. ",
  "CB77F8F8A13A8E30C991": "* Support d’outils ad hoc",
  "01B8A453B9E75BA09B86": "* Support des outils - outils disponibles",
  "81B2E75897D98212E7F1": "* outil `transcribe` : Génère une transcription à partir d’un fichier audio/vidéo",
  "002D94BCFFE44E9AC93E": "* outil `transcribe` : Génère une transcription à partir d’un fichier audio/vidéo ",
  "AC5C3DAFFA0020FEFCFB": "* Développeur expert en TypeScript",
  "C2AE9133E0097F03263A": "* outils pour demander à l’utilisateur ",
  "5866C81F19BCB4908FF1": "* outil `user_input_confirm` : demander confirmation à l’utilisateur ",
  "3BD208F850779955E5AD": "* outil `user_input_select` : demander à l’utilisateur de choisir ",
  "80CCC519FF738205796F": "* Outils de manipulation vidéo",
  "054DEC93A28BC51D097B": "* outil `video_probe` : sonder une vidéo et obtenir ses métadonnées ",
  "5E4E63F8987CFCD96C2D": "* outil `video_extract_audio` : extraire l’audio d’une vidéo en un fichier audio ",
  "90D9212BD96BA3AC55E4": "* outil `video_extract_clip` : extraire un extrait vidéo ",
  "FAAEBCA3162FD57E6124": "* outil `video_extract_frames` : extraire des images d’une vidéo ",
  "243739D2BAC4289EB599": "* Vision Commander",
  "421E87B438A610F816A7": "* Enregistrer un outil qui utilise un modèle vision pour exécuter une requête sur images",
  "099ED580E8C4218D6DF7": "* outil `vision_ask_images` : Utiliser un modèle vision pour exécuter une requête sur plusieurs images ",
  "CBD8C20029A453E2470F": "* Z3",
  "ED989DC6A63596D85D72": "* outil `z3` : Résoudre un problème SMTLIB2 avec Z3 ",
  "20F23A68977719A32D6B": "* Zero-shot Chain Of Thought",
  "5694B178FEA870621870": "Type de réponse",
  "7CA5C256ABA868EAB4A7": "Le type de réponse est contrôlé par l'argument optionnel `responseType` et a les options suivantes : ",
  "775CF17652F0B30A7D5A": "Notez que ",
  "EEF365C64489C01AF921": "et ",
  "68A8AD4B170D89B277EA": "La validation du schéma est appliquée si `responseSchema` est fourni. ",
  "9DFDC127606BBA335A1E": "La validation du schéma est appliquée si `responseSchema` est fourni. ",
  "C6C55DCD1A8F7453EA2B": "La sortie structurée est une fonctionnalité qui vous permet de générer des données structurées dans un format de données comme avec un ",
  "0FA2A89A8F4A1C55D0A1": "schéma JSON",
  "92C3DC43DB9186E05F24": "pour ",
  "A0071DF1EC97358FC5FC": "et fournir un objet `responseSchema`. ",
  "626CE16C08C38198B76D": "Notez qu'il existe ",
  "1E94532327F0297B1828": "plusieurs restrictions",
  "C876484D3E3AFF05DF23": "Schéma de réponse",
  "3EF5929BC3AB71C9659B": "Vous pouvez spécifier un ",
  "B5E837299D175F7B24ED": "schéma",
  "2CD3B7ABC91BE7A65084": "via `responseSchema` qui activera automatiquement le mode de sortie structurée. La sortie sera validée par rapport au schéma, et GenAIScript tentera de réparer la sortie si elle n'est pas valide. Le script échouera si la sortie ne correspond pas au schéma. ",
  "94484F4378C01EFCA68D": "Schémas intégrés",
  "E1F8E18006F488B5B913": "schémas intégrés",
  "C53A84642722CA0A4628": "Choix",
  "93819FDEC068EA7C53E7": "choix",
  "F6E02CBDB896601DF43C": "La ",
  "C3E72C8EB0246E7C1F75": "fonction `cast`",
  "4BEF3FFE43569A74D911": "est une ",
  "2262AC9D28EEFE925F76": "aide d'exécution GenAIScript",
  "444F354C47E6D21E10B9": "Les métadonnées sont une carte de paires clé-valeur utilisées pour activer les complétions stockées — une fonctionnalité dans OpenAI et ",
  "9C068A95ECC7C934A490": "L'objet `env.secrets` est utilisé pour accéder aux secrets de l'environnement. Les secrets sont généralement stockés dans le fichier `.env` à la racine du projet (ou dans `process.env` pour le CLI). ",
  "BBB9CE8CB0A4D9971EFA": "Vous devez déclarer la liste des secrets requis dans `script({ secrets: ... })` afin de pouvoir les utiliser dans le script. ",
  "0ABCBF530EB0DB4DF10B": "déclarer l'utilisation dans `script` ",
  "198E843B2CF807675E7E": "accéder au secret dans le script via `env.secrets` ",
  "8D07656C1876CFC70B7F": "Motifs supportés",
  "A575C5CC12801DD11AEA": "Par défaut, l'ensemble des motifs de secrets est presque vide et défini à ",
  "F7D3F1E4282CC29794E5": "Vous pouvez trouver des exemples de motifs sur ",
  "D5233D336C8BA33AAEF7": "Messages scannés",
  "71B8CB8E426E2FBA9728": "Vous pouvez désactiver totalement l'analyse des secrets en définissant l'option ",
  "CCF6519E0F67B7CFD669": "`false` dans votre script. ",
  "22A8D801C05DB418C252": "Configuration des motifs",
  "BEDF04BCCF1DD689FA77": "fichier de configuration",
  "BC2F3F93B6DAA9F6ECAA": "n'utilisez pas ",
  "CD415221F6A55958071A": "ou ",
  "3B4F6ADC1E0C10334813": "dans votre expression régulière",
  "71832B02719238115D8A": "Désactivation des motifs",
  "393EC7AE7173F50E3440": "Attribuez la valeur ",
  "9F3ECD93FCE4D483646B": "ou ",
  "17BA0341F5134B25CB14": "CLI",
  "2E859A622FB666A0ED79": "Schémas JSON",
  "FE75CE0A41F4F6B5F09F": "Utilisez ",
  "6158770AAE2090A3D109": "Lors de l'utilisation de ",
  "FA1DAB8B6BB3F31E17E4": "Vous pouvez également l'appliquer à ",
  "E97E01B30853777678C8": "le champ ",
  "56B811230590E4509A48": "Utilisez ",
  "78FC6238E8DAF166544D": "👤 utilisateur",
  "4CA44558405F8EECDEB6": "🤖 assistant",
  "06233CAB3DA56E11CC3E": "Support natif de zod",
  "020C1A8585625E011EC1": "Le ",
  "EE254E40A8331DD75C4F": "GenAIScript runtime",
  "AA259DB93054770DFB4F": "expose le module ",
  "D96C9A9D6EEF900AFC3D": "Un type ",
  "E80DCAE9E1DC9CB564A2": "Zod",
  "619EBC166E781F8C2422": "peut être passé dans ",
  "AE22D674B7EE57842446": "Encodage de l'invite",
  "8D4AC8218ACC1DF13839": "Suivant l'approche ",
  "34D2FCF52F172BC50EBB": "\"All You Need Is Types\"",
  "91B8F10ECC6C5DB56D09": "l'option ",
  "02358F6A5F8222FB1158": "Lire la Trace !",
  "EE870109C7411E1777B0": "la trace vous permet de voir la source du schéma et l'invite générée,\net la ",
  "9DB4277D24799A2777DE": "cli",
  "CAA9926376D0560F4A93": "schéma CITY_SCHEMA",
  "FD038C30050B0B0CE06E": "Utiliser le schéma",
  "A7A6FF285350CBCE5588": "Validation",
  "18757E263ABCCAC2B90E": "Réparation",
  "706455F52884F08F5C31": "Validation à l'exécution",
  "29E24D13F2F0E88A57BF": "Utilisez ",
  "DA3F9285978DD1367DF6": "La plupart des API sur l'objet ",
  "2B2908AA807C979A5BEA": "Recherche",
  "65188A5C2A279FAA06B5": "Apprenez à utiliser les utilitaires de récupération de contenu de GenAIScript pour la recherche et l'augmentation de prompts avec les techniques RAG.",
  "1CAC91C4F58B4A40C9B1": "GenAIScript fournit diverses utilitaires pour récupérer du contenu et augmenter le prompt.\nCette technique est généralement appelée **RAG** (Récupération-Augmentation-Génération) dans la littérature.",
  "76CD38B207DC9C539994": "Recherche vectorielle",
  "C6B38623D8DEBE1FAE63": "GenAIScript offre plusieurs bases de données vectorielles pour supporter la recherche par embeddings (vecteurs).",
  "B21CAE0196BB35EF54D0": "En savoir plus sur la [recherche vectorielle](/genaiscript/reference/scripts/vector-search) et comment l'utiliser.",
  "E4FF4A96A556CC8ADF97": "Recherche floue",
  "DF640DA78C9E701A63D3": "La fonction `retrieve.fuzzSearch` effectue une recherche floue \"traditionnelle\" pour trouver les documents les plus similaires au prompt.",
  "838ED7191EA179BCCF2B": "Recherche sur le web",
  "406F76DFE096A164342C": "La fonction `retrieval.webSearch` effectue une recherche sur le web en utilisant une API de moteur de recherche. Vous devrez fournir des clés API pour le moteur de recherche que vous souhaitez utiliser.",
  "CE69AE3F7E06FBCD28FE": "Bing",
  "E8BEFDBC343877902D21": "Pour activer la recherche Bing, configurez le secret `BING_SEARCH_API_KEY` dans votre fichier `.env`. En savoir plus sur [la configuration de l’API Bing Search](https://www.microsoft.com/en-us/bing/apis/bing-web-search-api).",
  "FAA9E69179C080D8BC58": "Traduit à l'aide de l'IA. Veuillez vérifier l'exactitude du contenu.",
  "A21D2C6D9FB3221C88F0": "Automatisation du navigateur",
  "DF8FE07346C03A316A65": "Découvrez comment GenAIScript s'intègre à Playwright pour les tâches de scraping web et d'automatisation de navigateur.",
  "FE5FC6841C11C0A15B29": "GenAIScript fournit une API simplifiée pour interagir avec un navigateur sans interface graphique en utilisant [Playwright](https://playwright.dev/) .\nCela vous permet d'interagir avec des pages web, d'extraire des données et d'automatiser des tâches.",
  "7D59E8C79B6DD1628228": "Installation",
  "5BD8E0FB09FE6E1EE6D3": "Playwright doit [installer les navigateurs et les dépendances](https://playwright.dev/docs/browsers#install-system-dependencies) avant l'exécution. GenAIScript tentera de les installer automatiquement si le chargement du navigateur échoue.\nCependant, vous pouvez également le faire manuellement en utilisant la commande suivante :",
  "99C328C804B975961AC4": "Si vous voyez ce message d'erreur, il se peut que vous deviez installer les dépendances manuellement.",
  "A6C78BCDE4F057F0C93A": "`host.browse`",
  "0663464138792EDC945F": "Cette fonction lance une nouvelle instance de navigateur et navigue éventuellement vers une page. Les pages sont automatiquement fermées à la fin du script.",
  "D65342FD1EFB9D35E7D1": "`incognito`",
  "77967C4F8BF80E5B3574": "Le paramètre `incognito: true` crée un contexte de navigateur isolé et non persistant. Les contextes non persistants ne stockent aucune donnée de navigation sur le disque.",
  "B77E00DD1563CCBC82F3": "`recordVideo`",
  "1B12DC02C263325E5691": "Playwright peut enregistrer une vidéo de chaque page dans la session du navigateur. Vous pouvez l'activer en passant l'option `recordVideo`.\nL'enregistrement vidéo implique aussi le mode `incognito` puisqu'il nécessite la création d'un nouveau contexte de navigation.",
  "4AF724ED93281C9D7B98": "Par défaut, la taille de la vidéo sera de 800x600, mais vous pouvez la modifier en passant les dimensions dans l'option `recordVideo`.",
  "545487FA59DB8D881809": "La vidéo sera enregistrée dans un répertoire temporaire sous `.genaiscript/videos/<timestamp>/` une fois que la page est fermée.\n**Vous devez fermer la page avant d'accéder au fichier vidéo.**",
  "61BC94FA6B559E4F84D7": "Le fichier vidéo peut ensuite être traité avec des outils vidéo.",
  "55F72A9D9072976877E5": "`connectOverCDP`",
  "7D305AE7C98123DAE337": "Vous pouvez fournir un point de terminaison qui utilise le [Chrome DevTools Protocol](https://playwright.dev/docs/api/class-browsertype#browser-type-connect-over-cdp) avec l'option `connectOverCDP`.",
  "1F444F49193432204B4D": "Localisateurs",
  "F04F36071328865A998E": "Vous pouvez sélectionner des éléments sur la page en utilisant la méthode `page.get...` ou `page.locator`.",
  "3E5F1CF7226F2B0DD2CE": "Contenu des éléments",
  "F8769354637F54D50FB7": "Vous pouvez accéder à `innerHTML`, `innerText`, `value` et `textContent` d'un élément.",
  "623D1807C138E65577E6": "Vous pouvez utiliser les analyseurs dans [HTML](/genaiscript/reference/scripts/html) pour convertir le HTML en Markdown.",
  "9A25CBF9A776E76DA4BD": "Capture d'écran",
  "B99595B146D814255225": "Vous pouvez prendre une capture d'écran de la page courante ou d'un localisateur et l'utiliser avec un LLM équipé de vision (comme `gpt-4o`) en utilisant `defImages`.",
  "BF3A35DCCA147D102DB3": "(APIs) Avancées Playwright natives",
  "E82E8B9445FE51647720": "L'instance `page` retournée est un objet natif [Playwright Page](https://playwright.dev/docs/api/class-page).\nVous pouvez importer `playwright` et convertir l'instance en objet Playwright natif.",
  "4C0BBC39025FB60C7514": "Traduit par IA. Veuillez vérifier le contenu pour en assurer la précision.",
  "10A305BB5B4B64E3060F": "GenAIScript fournit une API simplifiée pour interagir avec un navigateur sans interface graphique en utilisant ",
  "A89CD84324E41EEDFF48": "Playwright",
  "2D6D428D8AC79E1F9873": "Installation",
  "E88F3A6D2DFF6893A0C1": "Playwright doit ",
  "403A890F9D6339B932E7": "installer les navigateurs et les dépendances",
  "B0F561E39FE6DFEF2212": "`incognito`",
  "E76A067FEC91ABE65F84": "Le paramètre ",
  "685392956FE538AD05CB": "La vidéo sera enregistrée dans un répertoire temporaire sous ",
  "BAD8BBC912A587543F3D": "Vous pouvez fournir un point de terminaison qui utilise le ",
  "BA61355B426ACB67FEAB": "Chrome DevTools Protocol",
  "6C5781DCB691ED6E2B20": "en utilisant le ",
  "FEA065FE1404550FCEA5": "Localisateurs",
  "5797534D43BD53C183D2": "Vous pouvez sélectionner des éléments sur la page en utilisant la méthode ",
  "01683E6E052137586286": "ou ",
  "A56A48EEBDB4FE0A3339": "Contenu des éléments",
  "FB1AE6034FFFF532D0AE": "Vous pouvez accéder à `innerHTML`, `innerText`, `value` ",
  "5F59FC87B376B81C8BB9": "et ",
  "E95F6A12F20BF887E53B": "Vous pouvez utiliser les analyseurs dans ",
  "299A4D1F140F04565EEB": "HTML",
  "8917381A34692EFEE2D9": "Capture d'écran",
  "114A66A2BFEF4990E186": "L'instance ",
  "786AB793F66869FC52E3": "renvoyée est un objet natif ",
  "4CD6384652E121E78EC7": "Playwright Page",
  "21CF98A292E940154581": "Agents",
  "F85268B5C5E752DE1244": "Un agent est un outil qui interroge un LLM, équipé d'autres outils, pour accomplir des tâches.",
  "3DAB9477BE8829D23624": "GenAIScript définit un **agent** comme un [outil](/genaiscript/reference/scripts/tools) qui exécute un [prompt en ligne](/genaiscript/reference/scripts/inline-prompts) pour accomplir une tâche. Le LLM de l'agent est généralement enrichi avec des outils supplémentaires et une mémoire.",
  "00F995BD4042A3765592": "**GenAIScript n'implémente *pas* de flux de travail agentique ni de décision.**  \nIl s'appuie entièrement sur le support des [outils](/genaiscript/reference/scripts/tools) intégrés aux LLM.",
  "9072E9221D46F5D7D2F0": "Agent = LLM + Outils",
  "968E0F6394D22BC80AF3": "Regardons l'exemple `agent_git` qui interroge un dépôt git. Cet agent est enregistré en tant que `outil` et peut être utilisé dans le prompt du LLM.  \nQuand le LLM a besoin d'informations sur quelque chose comme \"résumer les modifications dans la branche actuelle\", il appellera l'outil `agent_git` avec la requête `obtenir les modifications dans la branche actuelle`.",
  "1F42ACEB5FBAB886C6E4": "L'outil `agent_git` lui-même a accès à divers outils dédiés à git comme `git branch`, `git diff` qu'il peut utiliser pour résoudre la requête.  \nIl devra déterminer la branche actuelle et par défaut, calculer une différence (diff) et la renvoyer au LLM principal.",
  "7A9D0ABE635D4B980C8F": "Agent vs Outils",
  "9F489A99068478CF6A1D": "Un \"agent\" est un outil qui interroge un LLM, équipé d'autres outils, pour accomplir des tâches. C'est une abstraction de haut niveau qui peut être utilisée pour regrouper plusieurs outils ensemble.  \nDans certains scénarios, vous pouvez décider de supprimer cette abstraction et de passer outre l'agent en \"donnant\" les outils au LLM appelant.  \nDans cet exemple simple, vous pourriez également décider d'aplatir cet arbre et donner accès aux outils git au LLM principal et ignorer l'agent.",
  "7DEA1921FCF5A134D20B": "Cependant, l'abstraction agent devient utile lorsque vous commencez à avoir trop de fonctions ou pour garder la longueur de la conversation courte car chaque appel agent LLM est \"compressé\" en la réponse de l'agent.",
  "751894EB53C71A59EA50": "Agents multiples",
  "AF327D66FB53B9F4A0C5": "Examinons un exemple plus complexe où plusieurs agents sont impliqués dans la conversation. Ici, nous voulons enquêter sur la raison d'un échec d'une action GitHub.  \nCela implique les agents `agent_git` et `agent_github`. L'agent `agent_github` peut interroger les workflows, exécutions, jobs, logs et l'agent `agent_git` peut interroger le dépôt git.",
  "37335ADDB841A1E09C88": "Mémoire",
  "00CB538C1E9177B2B863": "Tous les agents sont équipés d'une **mémoire** qui leur permet de partager des informations horizontalement à travers toutes les conversations.",
  "FF441B6416AB6274F4CF": "La mémoire est un journal qui stocke toutes les interactions `agent / requête / réponse`. Lors de la génération du prompt pour un agent, la mémoire est d'abord sollicitée (en utilisant un petit LLM) pour extraire les informations pertinentes,  \net ces informations sont ensuite transmises à la requête de l'agent.",
  "96D8E3A2251FC59251E2": "Tous les agents contribuent à la mémoire de la conversation sauf si cette fonction est explicitement désactivée via `disableMemory`.",
  "261D9CD813AF98EA4E54": "defAgent",
  "3AE76C163B8EEB04AFDB": "La fonction `defAgent` est utilisée pour définir un agent pouvant être appelé par le LLM. Elle prend un schéma JSON pour définir l'entrée et attend une sortie de type chaîne de caractères. Le LLM décide de manière autonome d'appeler cet agent.",
  "A4DC355FEBFF47E02A44": "- l'identifiant de l'agent deviendra l'identifiant de l'outil `agent_<id>`",
  "917BE114FFAC91E6A1AD": "- la description de l'agent sera automatiquement augmentée avec des informations sur les outils disponibles",
  "E0A8E729B13EFB0F70C6": "Instances multiples du même agent",
  "55B597F2EA8FA42FC960": "Certains agents, comme `agent_git`, peuvent être instanciés avec différentes configurations, par exemple pour travailler sur différents dépôts.",
  "7741ECDBD9BB85D7FABA": "Exemple `agent_github`",
  "56277BA7369E29DCF427": "Illustrons cela en construisant un agent GitHub. L'agent est un outil qui reçoit une requête et exécute un prompt LLM avec des outils liés à GitHub.",
  "539700E02E5A819AA7C8": "La définition de l'agent ressemble à ceci :",
  "02871B26012F6079BBEC": "et en interne, elle est développée en ce qui suit :",
  "97ACC10ACE7BAEAC17B4": "À l'intérieur du callback, nous utilisons `runPrompt` pour exécuter une requête LLM.",
  "25490C1DD26D3C4D27FA": "- le prompt prend l'argument de la requête et indique au LLM comment la gérer.",
  "BA21A7DEC79A841D9C7A": "- notez l'utilisation de `ctx.` pour les prompts imbriqués",
  "B72235830AF185862E0A": "Sélection des Outils et des Prompts Système",
  "AE99F559B68A39BE7C5E": "Nous utilisons le paramètre `system` pour configurer les outils exposés au LLM. Dans ce cas, nous exposons les outils GitHub (`system.github_files`, `system.github_issues`, ...)",
  "75B729626C6E49794C65": "Le code complet de cet agent est défini dans le prompt système [system.agent_github](/genaiscript/reference/scripts/system/#systemagent_github).",
  "9734308EF5F5A74A8FCB": "Journalisation",
  "3A3663FEFB074CC7B843": "Chaque agent utilise un namespace de [journalisation](/genaiscript/reference/scripts/logging) `agent:<nom>`  \npour rapporter des informations de débogage.",
  "39480A9A37E5079A2484": "Pour activer la journalisation depuis la ligne de commande, vous pouvez utiliser la variable d'environnement `DEBUG` pour cibler un agent spécifique.",
  "3B40BEEE4380E928BF4D": "Traduit avec l'aide de l'IA. Veuillez vérifier l'exactitude du contenu.",
  "CCE02AD7E15E8F26E6AB": "GenAIScript définit un **agent** comme un ",
  "26E171E4B7A18D4F9C0B": "agent",
  "5D9D566925AE3D2CD6E5": "outil ",
  "0D77E6C8B42D5633D123": "outil",
  "2A0F353B8CC4697FC4BB": "qui exécute une [invite inline](/genaiscript/reference/scripts/inline-prompts) pour accomplir une tâche. Le LLM de l'agent est généralement augmenté avec des outils supplémentaires et une mémoire. ",
  "2D0EE57EC535395E4AF0": "GenAIScript n'implémente *aucun* workflow ou décision agentique. ",
  "C577AB196D5370D59E4D": "not",
  "695E3F9EDB309A901F10": "Il s'appuie entièrement sur le support des [outils](/genaiscript/reference/scripts/tools) intégrés aux LLM. ",
  "C9BE59FC1B3A4F93B534": "Agent = LLM + Outils",
  "88367778D1125344E60A": "Jetons un coup d'œil à l'exemple `agent_git` qui interroge un dépôt git. Cet agent est enregistré comme un `outil` et peut être utilisé dans l'invite du LLM.\nLorsque le LLM a besoin d'informations sur quelque chose comme \"résumer les modifications dans la branche actuelle\", il appellera l'outil `agent_git` avec la requête `obtenir les modifications dans la branche actuelle`. ",
  "887A1B94DE5EF1E708F6": "outil avec la requête ",
  "C09F51D1A044EC824EBD": "L'outil `agent_git` ",
  "B41BC9B8F8B1B946528D": "dispose lui-même d'un accès à divers outils dédiés à git tels que `git branch`, `git diff` qu'il peut utiliser pour résoudre la demande.\nIl devra résoudre la branche courante et par défaut, calculer un diff et le renvoyer au LLM principal. ",
  "66A37B2FA976E20066C5": "Agent vs Outils",
  "E72D5A8DD7911BB7F0DA": "Agents multiples",
  "C99DE4ADEA0282B18FEA": "et les agents `agent_github`. ",
  "27A16FF0C78E77472E3F": "Mémoire",
  "34AF0A4D99E9BD1D17D1": "Tous les agents sont équipés d'une **mémoire** qui leur permet de partager des informations horizontalement à travers toutes les conversations. ",
  "3EF214E597711870BB20": "mémoire",
  "9A808598D9419BF59EA6": "La mémoire est un journal qui stocke toutes les interactions `agent / requête / réponse`. Lors de la génération de l'invite pour un agent,\nla mémoire est d'abord sollicitée (à l'aide d'un petit LLM) pour extraire les informations pertinentes\net ces informations sont transmises à la requête de l'agent. ",
  "2A0B819D54847074B09B": "Tous les agents contribuent à la mémoire de la conversation sauf si elle est explicitement désactivée avec `disableMemory`. ",
  "CE90EC3CB12A6E2E27E9": "defAgent",
  "796DFC357DAAC6FCB224": "La fonction `defAgent` sert à définir un agent pouvant être appelé par le LLM. Elle prend un schéma JSON pour définir l'entrée et attend une sortie de type chaîne. Le LLM décide de manière autonome d'appeler cet agent. ",
  "9E7B72C1B4F607578756": "l'identifiant de l'agent deviendra l'identifiant de l'outil `agent_<id>` ",
  "A8794949A340D9ABAD17": "la description de l'agent sera automatiquement enrichie avec des informations sur les outils disponibles",
  "8D7F2CA507084EE760C4": "Instances multiples du même agent",
  "4746C2A44AE928D9218D": "Exemple `agent_github` ",
  "3287E71AB0D1F89B0640": "notez l'utilisation de ",
  "F119E6A6CF49A7DB5FF1": "pour les invites imbriquées",
  "E9BBEFDAC6EBA45AACDA": "Sélectionner les outils et messages système",
  "E88CF95F0E5929883714": "Nous utilisons le paramètre `system` pour configurer les outils exposés au LLM. Dans ce cas, nous exposons les outils GitHub (`system.github_files`, `system.github_issues`, ...) ",
  "45F167055A84BBAA6BCC": "Le code source complet de cet agent est défini dans l'invite système [system.agent_github](/genaiscript/reference/scripts/system/#systemagent_github). ",
  "D3D9F49EC6C7EEFDC49E": "Journalisation",
  "A3154665B7456AB825AF": "Chaque agent utilise un espace de noms de [journalisation](/genaiscript/reference/scripts/logging) `agent:<name>` ",
  "F359FBDE4308BEDC2918": " ",
  "3EEA6234618ED390F5BF": "journalisation",
  "4EA38D4F8FA532E74C2E": "[GitHub Actions](https://docs.github.com/en/actions) est une plateforme d'intégration continue et de livraison continue (CI/CD) qui vous permet d'automatiser votre pipeline de construction, de test et de déploiement. Vous pouvez créer des workflows qui construisent et testent chaque pull request de votre dépôt, ou déployer les pull requests fusionnées en production.",
  "85643D424ECB989E4331": "[Récemment](https://github.blog/changelog/2025-04-14-github-actions-token-integration-now-generally-available-in-github-models/), GitHub a ajouté la possibilité d'utiliser également les [GitHub Models](https://docs.github.com/en/github-models) dans les actions.",
  "0A760098F9CDC93BDFB9": "La combinaison des Actions et des Models vous permet d'exécuter GenAIScript dans le cadre de votre CI/CD.",
  "F350911A264976EE709B": "Passez à la section [Custom Actions](#custom-actions) pour apprendre comment empaqueter un script GenAIScript en tant qu'action GitHub.",
  "AB73FD398E3C31480612": "Exemples",
  "5D8A90CC80AD91E530DE": "[GenAI Issue Labeller](https://github.com/pelikhan/action-genai-issue-labeller/)",
  "EF94A680CB9FF0220D0A": "[GenAI Issue De-duplicator](https://github.com/pelikhan/action-genai-issue-dedup/)",
  "23A94AEF73571AA08D87": "[GenAI Video Issue Analyzer](https://github.com/pelikhan/action-genai-video-issue-analyzer/)",
  "AE686355B9FEAC99B2CD": "[GenAI Code Commentor](https://github.com/pelikhan/action-genai-commentor/)",
  "25F9EA48768B89D0CE26": "Autorisations GitHub Models",
  "5DBF4345E1D7FDB3753E": "[Pour utiliser les Models dans une action GitHub](https://docs.github.com/en/github-models/use-github-models/integrating-ai-models-into-your-development-workflow#using-ai-models-with-github-actions), vous devez définir les `permissions` de l'action pour inclure `models: read`.",
  "8FE7F752087DBCB40B2E": "GenAIScript prend en charge nativement les GitHub Models, vous pouvez donc l'utiliser directement dans votre workflow GitHub Actions.",
  "E6352B83D7F55459F661": "Utilisation de la CLI",
  "E23E91A65209060D466D": "La manière la plus simple d'utiliser GenAIScript dans une action GitHub est d'exécuter directement la [CLI](/genaiscript/reference/cli).\nVous pouvez le faire en ajoutant une étape à votre workflow qui exécute la commande `genaiscript`.",
  "A72A50A97E98232FBABB": "**Veillez à inclure le `GITHUB_TOKEN` dans les variables d'environnement** afin que GenAIScript puisse s'authentifier auprès des GitHub Models.",
  "CC8825F6F4DFE413F2D3": "Actions personnalisées <a id=\"custom-actions\" />",
  "1A04FAAC642A872585E0": "GitHub prend en charge le packaging des tâches sous forme d'[actions personnalisées](https://docs.github.com/en/actions/sharing-automations/creating-actions/about-custom-actions), généralement dans un dépôt dédié. C'est un excellent moyen d'empaqueter un script IA et de le partager avec d'autres.",
  "54084B55DFA67DF70A2C": "La CLI GenAIScript fournit une commande pour générer/met à jour le code standard afin d'empaqueter un script en tant que \n[action conteneur Docker](https://docs.github.com/en/actions/sharing-automations/creating-actions/creating-a-docker-container-action) afin qu'il puisse être utilisé dans GitHub Actions quelle que soit la langue utilisée pour écrire le script.",
  "6D41CF108C482822BE48": "Pour commencer,",
  "1B3EC6340092DA832D91": "Créez un nouveau dépôt pour votre action.",
  "27F7FE3AEDB6205A283D": "Ouvrez un terminal à la racine de votre dépôt.",
  "1BC293ABABF78A9A69B0": "Exécutez la commande pour générer la structure de base de l'action :",
  "9F1F5843C36CD4B612AA": "Le générateur de code standard de l'action va écraser les fichiers suivants :",
  "3559D3B114FDD434D0D2": "`action.yml` fichier de métadonnées de l'action",
  "A74823D2A3BB9907DBA0": "`Dockerfile` Dockerfile pour l'action",
  "B54E8E69E67DA7C222DD": "`README.md` Documentation de l'action",
  "51F9AFC074080E7E01AB": "`.gitignore` fichiers à ignorer dans le dépôt",
  "1FB5395B313E94E69486": "`.github/workflows/ci.yml` workflow CI pour tester l'action",
  "65AFDCE539AD89B90708": "`package.json` configuration du package pour l'action",
  "D50094C9C67CE35A45A2": "`devcontainer/devcontainer.json` configuration du devcontainer pour VS Code",
  "6DB4EF85858EAE0569FB": "`devcontainer/Dockerfile` Dockerfile du devcontainer pour VS Code. Doit être synchronisé avec le Dockerfile de l'action.",
  "95204D42052D1B50B5DF": "Pour mettre à jour le code standard de l'action, vous pouvez exécuter à nouveau la même commande :",
  "D3C9081E0BB0BFEF5B6F": "Métadonnées",
  "6082F5F21A37BCAC6D86": "Le fichier `action.yml` contient les métadonnées de l'action. Il est extrait de différentes parties de votre projet :",
  "485F8BA6ED9848417758": "Le `name` est dérivé de l'id du script.",
  "5356CDCBDC2BC2165C60": "La `description` est dérivée du `title` du script.",
  "E083D3CA5A1CAC0CBD44": "Les `inputs` sont dérivés des [paramètres](/genaiscript/reference/scripts/parameters) du script (voir ci-dessous).",
  "7AE104708EA382275D0D": "Notez que la `description` du script est utilisée pour alimenter le fichier `README.md`.",
  "8355E043B0A46B70F970": "Entrées",
  "B655DB33AFD5F00744BB": "La section `inputs` du fichier `action.yml` est générée automatiquement à partir des paramètres du script.\nChaque paramètre est converti en une entrée avec le même nom, et le type est inféré du type du paramètre.",
  "4548599DBE45CD77530A": "Le `action.yml` généré ressemblera à ceci :",
  "7257775C11ADBA12C7CC": "Il existe également des champs supplémentaires communs à toutes les actions GenAIScript :",
  "D6D0CCAE75A0653AF84A": "`files` : spécifie un chemin de fichier pour alimenter la variable `env.files`. Pour supprimer ce champ, définissez `accept: \"none\"` dans le script.",
  "9565BF87B1718F9921E2": "`github_token` : **ceci est requis pour s'authentifier auprès des GitHub Models.**\nIl deviendra `INPUT_GITHUB_TOKEN` lorsque le conteneur sera créé et GenAIScript le détectera automatiquement.",
  "FE3D27774E737B78F9DB": "`github_issue` : le numéro actuel de l'issue ou pull request GitHub.",
  "88FE8C02A4EF91683CBA": "`debug` : le filtre pour contrôler les messages de [journalisation]( /genaiscript/reference/scripts/logging) de débogage.",
  "975215D3897F616031F4": "Sorties",
  "A5D0C12CF9C76F2A827F": "L'action alimente quelques champs de sortie.",
  "81ED8E27DAE712127515": "`text` : il s'agit du texte généré par le script.",
  "427278B9B4D3BBDAC770": "`data` : il s'agit de la sortie structurée analysée et convertie en chaîne JSON. Ce champ est rempli\nsi vous fournissez un [responseSchema](/genaiscript/reference/scripts/schemas) dans le script et si le LLM est capable de générer une réponse correspondant au schéma.",
  "6E49D4323157D96B6AD1": "Personnalisation visuelle (Branding)",
  "16DF97C6DDC449CC80CC": "Le champ `branding` du `script` sert à [personnaliser l'apparence de l'action dans l'interface GitHub](https://docs.github.com/en/actions/sharing-automations/creating-actions/metadata-syntax-for-github-actions?versionId=free-pro-team%40latest\\&productId=actions\\&restPage=sharing-automations%2Ccreating-actions%2Creleasing-and-maintaining-actions#branding).",
  "05B83F4DD93808A20FC4": "Conteneurs",
  "CC622CAC777828E9DC4D": "Par défaut, GenAIScript utilise [node:lts-alpine](https://hub.docker.com/_/node/) comme image de base pour le conteneur de l'action.\nVous pouvez changer cela en spécifiant une image de base différente dans la `cli`.",
  "2B90C12DC62A0B492C8A": "GenAIScript créera également un [devcontainer](https://code.visualstudio.com/docs/devcontainers/create-dev-container)\npour que vous puissiez développer l'action dans un environnement conteneurisé (presque identique) à celui dans lequel elle s'exécute dans GitHub Action.",
  "E1C6496494A34D297E5A": "ffmpeg, playwright et autres packages",
  "100733B06516E77C3A00": "Pour garder le conteneur d'action léger, GenAIScript n'inclut pas par défaut `ffmpeg`, `playwright` ou d'autres packages.\nVous pouvez les ajouter au conteneur en les spécifiant dans la commande `cli`.",
  "54EC2EF2D0316E8A56C3": "Vous pouvez également ajouter tout autre package dont vous avez besoin en les spécifiant dans la commande `cli`.",
  "4BDAD4113D678CEA5244": "Test de l'action",
  "26E4675796446F6892C7": "Votre script doit pouvoir être testé localement avec la commande `npm run dev`. N'hésitez pas à le modifier dans `package.json`.",
  "7DD95FA0264C0DE76679": "Ou, si vous souhaitez simuler l'environnement GitHub Action,\nvous pouvez définir les variables `INPUT_<parameter>` dans l'environnement.",
  "709D56D339C5EAC5DDC4": "Espace de travail GitHub vs Espace de travail Action",
  "0D7D7AE7E742A79FD6DB": "Lors de l'exécution de l'action dans un conteneur, le contenu du dépôt de l'action est d'abord copié dans le répertoire `/github/action`. GitHub clone le dépôt dans le répertoire `/github/workspace`.",
  "5D1F49DE984B7E70A5F8": "Le `ENTRYPOINT` du `Dockerfile` est configuré pour lancer la CLI `genaiscript` dans le répertoire `/github/action`\npuis détecte la variable d'environnement `GITHUB_WORKSPACE` pour déterminer le répertoire de travail\net change le `cwd` en conséquence.",
  "473258B34867D0E1581B": "Ce mode est activé par le drapeau `--github-workspace` dans la commande `cli`.",
  "9C42E26E4B4B0CD41705": "Traduit par IA. Veuillez vérifier le contenu pour en assurer l'exactitude.",
  "05B88ADFFF2D956B343E": "Classify",
  "DBBA7CEF025EA20E5A55": "Utilisez les assistants de classification pour vos tâches de classification",
  "637CA8E704FD91EE6BC1": "La fonction `classify` dans GenAIScript vous permet de catégoriser des entrées basées sur un modèle d'apprentissage automatique.\nElle fournit une interface simple pour exploiter la puissance des LLM pour les tâches de classification.",
  "0EF62AC61AB12186107F": "Utilisation",
  "0914E71865C653E0A522": "`classify` est défini dans le [runtime GenAIScript](/genaiscript/reference/runtime) et doit être importé. Il prend le texte à classer, un ensemble d'étiquettes (et des options pour le LLM)\net renvoie l'étiquette fournie par le LLM.",
  "6CD04E27B18BCF828371": "L'invite encourage le LLM à expliquer ses choix **avant** de retourner l'étiquette.",
  "BBEDB50622E3DC90061C": "Les jetons d'étiquette sont boostés à l'aide du logit-bias pour améliorer la fiabilité de la classification.",
  "89F5C1A2113BD7370180": "`classify` est fourni dans le runtime (une façon légèrement différente de packager les fonctionnalités de GenAIScript) et doit être importé avec ce code...",
  "754C52C0ADF6696282F9": "Images",
  "2BDA83712F7A11A30E59": "Vous pouvez passer une fonction qui prend un contexte d'invite\net construire la variable `DATA` de manière programmatique.\nCela vous permet de sélectionner des fichiers, images et autres options GenAIScript.",
  "64F7B9A4E360667E92BD": "Étiquettes",
  "D3C79FEC5B056D3052A2": "Le paramètre `labels` est un objet où les clés sont les étiquettes dans lesquelles vous souhaitez classer l'entrée, et les valeurs sont des descriptions de ces étiquettes. Le LLM utilise ces descriptions pour comprendre ce que chaque étiquette signifie.",
  "2B2133DB1C080F9E6F2A": "Chaque identifiant d'étiquette doit être un mot unique qui s'encode en un seul jeton. Cela permet de booster l'étiquette avec logit-bias et d'améliorer la fiabilité de la classification.",
  "9A6C9836F02DCA2FA92A": "Étiquette `other`",
  "E45BD522065ED77A2C16": "Une étiquette `other` peut être automatiquement ajoutée à la liste\ndes étiquettes pour offrir une échappatoire au LLM quand il n'est pas capable de classer le texte.",
  "96CA8A323631DBB5E208": "Explications",
  "460D452EFA5BE61CBAD0": "Par défaut, l'invite de classification est réglée pour retourner un jeton (`maxToken: 1`) comme étiquette.\nVous pouvez activer l'émission d'une justification avant de retourner l'étiquette.",
  "6ADD21A9074182B6DCB1": "Modèle et autres options",
  "E452FC36632ED842C43D": "La fonction `classify` utilise par défaut l'[alias modèle `classify`](/genaiscript/reference/scripts/model-aliases).\nVous pouvez modifier cet alias ou spécifier un autre modèle dans les options.",
  "739F72E4DDDFF9B125D5": "Les `options` sont passées en interne à l'[invite inline](/genaiscript/reference/scripts/inline-prompts) et peuvent être utilisées pour modifier le comportement du LLM.",
  "40189B0D5502AE7DE1AD": "Évaluation de la qualité de classification",
  "4FEBBE2EB5613FB1BCAB": "GenAIScript renvoie la [logprob](/genaiscript/reference/scripts/logprobs) (et l'entropie) de l'étiquette de classification. Vous pouvez utiliser cette valeur pour évaluer la qualité de l'étiquetage.",
  "FA41620D72C680F3DC50": "Si l'étiquette a une forte probabilité, cela signifie que la classification est probablement de bonne qualité. Une probabilité plus faible peut indiquer que le LLM a hésité ou que d'autres étiquettes ont également été prises en compte.",
  "E0B57E642C10161F914E": "Configuration",
  "F3ED0B1EEB6870B685EF": "Vous pouvez désactiver les `logprobs` en réglant `logprobs: false` dans les options. Vous pouvez désactiver `topLogprobs` en réglant `topLogprobs: false` dans les options.",
  "CD7D681A2981BA8EC2A8": "Remerciements",
  "813FCF49AF73CD82579B": "Cette fonction est inspirée de la classification dans [Marvin](https://www.askmarvin.ai/docs/text/classification/).",
  "093BD95C1F11FC4219FA": "Traduit à l'aide de l'IA. Veuillez vérifier le contenu pour en assurer l'exactitude.",
  "250CCEB9C8E86A14403B": "Cast",
  "BF24ECFEE26F06A93D57": "Utilisez l'assistant cast pour convertir du texte en données structurées",
  "5450F6F842B65C28AFF2": "La fonction `cast` dans GenAIScript vous permet de convertir du texte ou des images en données structurées.\nElle offre une interface simple pour exploiter la puissance des LLM afin d'extraire des données à partir de texte non structuré et d'images.",
  "4005B567A9C134A4B85B": "Utilisation",
  "CEA6984313F861C7A0E6": "`cast` est défini dans le [runtime GenAIScript](/genaiscript/reference/runtime) et doit être importé. Il prend le texte non structuré (ou des fichiers), un schéma JSON\net retourne les données extraites (ou une erreur).",
  "005684F1675FEDC81DAC": "`cast` est fourni dans le runtime (une manière légèrement différente de packager les fonctionnalités GenAIScript) et doit être importé avec ce code...",
  "0D6B6D8F9812971BC68B": "Images",
  "508440F74037B6D394AC": "Vous pouvez passer une fonction qui prend un contexte de prompt\net construire la variable `DATA` de manière programmatique.\nCela vous permet de sélectionner des fichiers, des images et d'autres options GenAIScript.",
  "D928DCA2994564905442": "Modèle et autres options",
  "6C1EEC6B7294DF43A37C": "La fonction `cast` utilise par défaut l'[alias de modèle `cast`](/genaiscript/reference/scripts/model-aliases).\nVous pouvez modifier cet alias ou spécifier un autre modèle dans les options.",
  "3E12B46A8EF9206AAD33": "Les `options` sont passées en interne au [prompt inline](/genaiscript/reference/scripts/inline-prompts) et peuvent être utilisées pour modifier le comportement du LLM.",
  "82E559C9D66872C048C6": "Remerciements",
  "86CBBF62020EC1AF6C47": "Cette fonction est inspirée de [Marvin](https://www.askmarvin.ai/docs/text/transformation/).",
  "06C1E99F7B6044551AD4": "Traduit par IA. Veuillez vérifier le contenu pour en assurer l'exactitude.",
  "5A3606C90F57216ABCBE": "Vous pouvez lancer le [cli](/genaiscript/reference/cli) en tant que **serveur Web API** pour exposer des scripts en tant que points de terminaison REST.\nLe serveur est compatible OpenAPI 3.1 et utilise [fastify](https://www.fastify.io/) en interne.",
  "D3341ECC3E18D1C6251F": "Scripts en tant que points de terminaison REST",
  "812846AB3B0CA2D51A26": "Le serveur Web API expose les scripts comme points de terminaison REST. Il utilise le titre, la description, les groupes et les tags\npour générer une spécification OpenAPI 3.1 et un serveur avec fastify.",
  "4F395EE6ADB12ECAEFA4": "Les paramètres des points de terminaison OpenAPI sont déduits automatiquement des [paramètres des scripts](/genaiscript/reference/scripts/parameters) et des fichiers.\nLes paramètres OpenAPI alimenteront ensuite l'objet `env.vars` dans le script\ncomme d'habitude.",
  "4BA838C18505126136D6": "La sortie du point de terminaison OpenAPI est la sortie du script. C'est-à-dire, typiquement, le dernier message de l'assistant pour un script qui utilise le contexte de haut niveau.\nLa sortie du point de terminaison OpenAPI correspond à la sortie du script, généralement le dernier message de l'assistant ou tout contenu passé à [env.output](/genaiscript/reference/scripts/output-builder).",
  "D72FC3F407F42D2C6905": "Voyons un exemple. Voici un script `task.genai.mjs` qui prend un paramètre `task` en entrée, construit une invite\net renvoie la sortie du LLM.",
  "120B3AA8DE0CF9E9A510": "Un script plus avancé pourrait ne pas utiliser le contexte de haut niveau et utiliser plutôt `env.output` pour passer le résultat.",
  "24338D7F4B0F41870C79": "Route",
  "39BE436F615774FB8061": "La route par défaut est `/api` et la spécification OpenAPI est disponible à `/api/docs/json`.\nVous pouvez changer la route avec l'option `--route`.",
  "00912B3A9CA636D60B0B": "La spécification OpenAPI sera disponible à `/genai/docs/json`.\nVous pouvez également changer le port avec l'option `--port`.",
  "E211C95FBB8622C82C96": "Le serveur sera disponible à l'adresse `http://localhost:4000/genai`.",
  "8E7FF13314FFD6D10759": "Script de démarrage",
  "35730B44DF7E7F3F0647": "Vous pouvez spécifier un identifiant de script de démarrage en ligne de commande en utilisant l'option `--startup`.\nIl s'exécutera après le démarrage du serveur.",
  "DC3FA101A540632B86A6": "Vous pouvez utiliser ce script pour charger des ressources ou réaliser toute autre configuration nécessaire.",
  "79F69DF14ED5D656B01A": "Filtrage des scripts",
  "B6E149425911399BD6C9": "Si vous souhaitez filtrer les scripts exposés en tant que points de terminaison OpenAPI, vous pouvez utiliser le flag `--groups` et\ndéfinir le groupe `openapi` dans vos scripts.",
  "E945D0FC08028F5A841C": "Exécution de scripts depuis un dépôt distant",
  "F1F83B6A3751B44684C6": "Vous pouvez utiliser l'option `--remote` pour charger des scripts depuis un dépôt distant.\nGenAIScript effectuera un clonage superficiel du dépôt et exécutera le script depuis le dossier cloné.",
  "9E27818AFBF27A869975": "Il existe des options supplémentaires pour le clonage du dépôt :",
  "6A38FEAE1D7D46C9FE2B": "`--remote-branch <branche>` : La branche à cloner depuis le dépôt distant.",
  "BC7BFBBBF95528036CFC": "`--remote-force` : Forcer le clonage même si le dossier cloné existe déjà.",
  "1B1011D9F7DE3016C257": "`--remote-install` : Installer les dépendances après le clonage du dépôt.",
  "C120D2DBB730C7B9C421": "Comme toujours, faites preuve de prudence lorsque vous exécutez des scripts provenant d'un dépôt distant.\nAssurez-vous de faire confiance à la source avant d'exécuter le script et envisagez de verrouiller sur un commit spécifique.",
  "C83695890CF238F9BC77": "Analyse syntaxique (Linting)",
  "357AB4E89059E4850BFA": "Vous pouvez utiliser [spectral](https://github.com/stoplightio/spectral) pour analyser vos spécifications OpenAPI.",
  "CAE911DD9E42A21B61EA": "enregistrez ce fichier `.spectral.yaml` à la racine de votre projet :",
  "FC6FAE3B633A681A94D8": "lancez le serveur API",
  "3C8AD9741904FC266108": "exécutez le linter spectral",
  "B601045D520ADE28F438": "Traduction réalisée avec l’IA. Veuillez vérifier le contenu pour en assurer l’exactitude.",
  "6094D3B089CD3B99158A": "Les bases de GenAIScript",
  "48425655EA7E03333496": "Introduction",
  "43D08944C4A16D3B6097": "GenAIScript est un framework qui permet aux équipes, y compris aux non-développeurs, de créer et d'utiliser des scripts améliorés par l'IA pour soutenir leurs workflows. GenAIScript offre un support pour la rédaction et le débogage de scripts JavaScript qui incorporent des appels aux modèles fondamentaux et aux grands modèles de langage (LLM) [^1] dans leur exécution. GenAIScript est un framework de programmation qui permet à ses utilisateurs d'écrire des scripts IA (que nous appelons un GenAIScript), de déboguer ces scripts dans un environnement de développement qui est une extension de VS Code, et de empaqueter ces scripts dans une interface en ligne de commande pouvant être déployée dans de nombreux contextes.",
  "C090F47018340922D6E0": "Notre extension VS Code facilite la rédaction d'un GenAIScript en utilisant un langage naturel en syntaxe markdown, associé à une petite quantité de programmation JavaScript stylisée. Notre framework permet aux utilisateurs de tirer parti de plusieurs modèles LLM, de paramétrer les appels aux modèles, d’exécuter et de déboguer les scripts, de tracer la construction des invites LLM et de fournir une trace complète de l'exécution depuis la construction de l'invite jusqu'à la génération LLM, puis au parsing du résultat. Notre framework supporte également l'extraction de plusieurs formes de sortie issues des générations LLM, y compris des sorties sous forme de fichiers de différents types, des sorties destinées à être des modifications de fichiers existants et des sorties sous des formats structurés, comme JSON.",
  "685DFB124676DE9B8610": "Termes clés",
  "C5B6BE90B0D64C777912": "**GenAIScript** : un programme JavaScript stylisé qui définit le contexte de l'appel LLM, permet l'exécution arbitraire de code JavaScript, prépare l'entrée de l'invite pour le LLM, appelle le LLM, et dépackage cette sortie LLM en fonction des instructions données dans l'invite.",
  "8B393CA9F1BF5CDA7A8D": "**GPVM** : un système d'exécution qui, donné un GenAIScript, exécute ce GenAIScript, ce qui implique d’intégrer le contexte dans une invite, d'appeler le LLM spécifié, et d'extraire le contenu du résultat LLM.",
  "10AE9723A453E8DF0902": "**Extension VS Code GenAIScript** : un add-in pour VS Code qui fournit aux utilisateurs des méthodes simples pour créer, éditer, exécuter et déboguer des GenAIScript.",
  "1DEE92C583DF47F4263E": "**Modèles fondamentaux et LLM** : Bien que GenAIScript supporte actuellement différents LLM, nous anticipons qu'à l'avenir nous intégrerons des modèles fondamentaux supplémentaires au-delà des grands modèles de langage.",
  "089583AD70FA2C1B56CA": "Capacités",
  "246CDAEBE8397EF4BF15": "Comportement du système",
  "3D0256894B2B85181960": "GenAIScript est un framework généraliste pour la création de scripts IA, intégrant de façon fluide l’exécution de code et les invocations de modèles fondamentaux/LLM. Un GenAIScript est un programme JavaScript au format stylisé qui permet aux utilisateurs de spécifier facilement le contexte LLM et l'invite, d’invoquer un modèle spécifié, et de parser la sortie ainsi obtenue selon les spécifications utilisateur. Cette fonctionnalité permet même aux utilisateurs non programmeurs d'inspecter les résultats du modèle et de vérifier leur exactitude.",
  "01AA4A93A9BBE04FB4F0": "GenAIScript peut être écrit dans n'importe quel IDE, mais l'add-in GenAIScript pour VS Code rend la création, l'exécution et le débogage particulièrement aisés. Les utilisateurs de GenAIScript peuvent créer des outils qui génèrent et éditent plusieurs fichiers avec un seul outil, et notre intégration avec VS Code exploite les fonctionnalités existantes de refactoring pour permettre aux utilisateurs de voir facilement les résultats de l'exécution de l’outil. L'add-in prend en charge la création d’un nouveau GenAIScript, l’invocation d'un GenAIScript donné, le traçage de l'exécution du GenAIScript lors de l'établissement du contexte LLM et de l'invite finale, ainsi que la conversion inverse de la sortie LLM en éléments définis par l'utilisateur. Des exemples de toutes ces fonctionnalités sont consultables dans les documents du dépôt GenAIScript : [microsoft/GenAIScript: Generative AI Scripting (github.com)](https://microsoft.github.io/genaiscript/)",
  "3F1FF6146B1115C48226": "L'objectif de GenAIScript est d’autoriser une large gamme d'utilisateurs potentiels à innover en créant des scripts alimentés par l'IA et à identifier de nouvelles façons d'exploiter l'IA dans leurs tâches quotidiennes. Nous attendons que les développeurs professionnels, familiers avec l’écriture et l’utilisation de scripts pour améliorer leur productivité, soient les premiers adopteurs de GenAIScript. GenAIScript leur apportera un avantage car il peut réaliser de nombreuses choses que les scripts traditionnels en JavaScript ou Python ne peuvent pas faire. Bien que les développeurs puissent utiliser d'autres frameworks comme langchain et Semantic Kernel qui intègrent les appels LLM dans des langages comme Python, ces frameworks nécessitent plus d'efforts et bénéficient de moins de support IDE que GenAIScript. En définitive, comme notre but est de rendre GenAIScript facile à créer, modifier, déboguer et exécuter, nous anticipons qu’il sera utile bien au-delà des seuls développeurs professionnels. Un impact majeur de GenAIScript sera de permettre aux non-développeurs d’innover et de créer des GenAIScripts qui augmentent leur productivité. Nous illustrons ce point par des exemples ci-dessous.",
  "00F266B8B99D618A0EAF": "Documentation",
  "6F1F78053C0A5A36A63C": "Pour aider les utilisateurs à démarrer avec GenAIScript, nous incluons dans notre dépôt une documentation illustrant, à l’aide de extraits de code, le contenu de plusieurs GenAIScripts différents. La documentation montre à la fois l’aspect du GenAIScript exemple et l’effet produit par ce GenAIScript sur une entrée donnée. Ces exemples ont pour but d’expliquer la technologie, mais ne sont pas destinés à servir de base à des outils écrits par les utilisateurs.",
  "71FBC2D3BA1E7F0666BB": "Cas d'utilisation",
  "F09D06D8687851B31065": "Utilisations prévues",
  "8FF0E892EE6798BFB13F": "GenAIScript peut être utilisé dans tout contexte où un script en ligne de commande, écrit dans un autre langage de programmation, pourrait être utilisé, mais les cas d’utilisation sont beaucoup plus ambitieux car le LLM peut faire bien plus que du code ordinaire. Voici quelques exemples :",
  "9FD64B7D82F70C9116FC": "**Détection d’incohérences potentielles dans un ensemble de fichiers de configuration ou autres contenus.** En utilisant le LLM, un GenAIScript peut inspecter des fichiers de configuration et exploiter la compréhension qu'a le LLM des erreurs communes de configuration pour les détecter et les signaler. Avant les LLM, les développeurs professionnels écrivaient des outils comme lint[^2], qui sont des programmes complexes détectant les incohérences syntaxiques dans leurs fichiers de code. Avec GenAIScript, des outils de vérification peuvent être écrits pour des scénarios plus riches (comme la vérification des noms de variables inappropriés), et par des personnes qui ne sont pas développeurs professionnels.",
  "5FF53401A7851BACE2F9": "**Automatisation de la traduction de documents :** Étant donné une documentation dans un dépôt écrite dans une langue naturelle, un GenAIScript peut être écrit pour traduire cette documentation dans une autre langue. À titre d’exemple spécifique montrant pourquoi GenAIScript est important pour cet usage, considérez la tâche de maintenir la localisation de la documentation MakeCode[^3]. La documentation MakeCode compte près de 2 millions de fichiers, généralement en markdown avec un mélange d'extraits de code. De nombreux documents sont partiellement traduits (au niveau du paragraphe). Pour vérifier la justesse des traductions, 3500 traducteurs bénévoles enregistrés travaillent sur plus de 35 langues. On ne peut pas simplement appliquer la traduction Bing pour ce cas d’usage, car elle détruit généralement les extraits de code. Avec GenAIScript, on peut créer un script qui parcourt chaque fichier de documentation, récupère la version localisée actuelle et assemble une invite pour demander au LLM de compléter les traductions manquantes, tout en laissant intactes les traductions existantes. Le modèle LLM que nous utilisons a déjà été entraîné avec des exemples et la documentation MakeCode, il connaît donc la syntaxe.",
  "BEFBA352B213F2DBDE38": "**Création d’une version courte d’un livre blanc plus long en résumant chaque chapitre.** Les LLM sont très efficaces pour résumer des documents. Un GenAIScript peut être écrit pour prendre chaque chapitre d’un long document et en faire un résumé dans une section d'un document plus court.",
  "C3CBA4AA48F465A8A498": "**Transformation d’un monologue en dialogue.** À partir d’un monologue extrait d’une transcription vidéo, un GenAIScript peut être écrit pour le réécrire sous forme d’un dialogue entre deux personnes (à la manière d'annonceurs sportifs s'entretenant), pour rendre la vidéo plus intéressante et accessible.",
  "EAB5956CF30EC87CD414": "Utilisations non prévues",
  "763019F577084EF06112": "GenAIScript est un framework généraliste pour la création de scripts. Par conséquent, un adversaire peut utiliser GenAIScript pour écrire des scripts adversariaux qui pourraient être employés à des fins malveillantes. Tous les usages adversariaux de GenAIScript pourraient également être mis en œuvre dans d'autres frameworks d'extension linguistique LLM tels que Semantic Kernel, autogen, et langchain, de sorte que le danger lié à des utilisations non prévues de GenAIScript vient de la possibilité qu'il facilite la création de scripts adversariaux. Ce problème existe dans toute infrastructure rendant la programmation plus facile, y compris les langages comme PowerShell, JavaScript et Python, ainsi que les IDE comme VS Code et Visual Studio. Bien que nous ne puissions pas empêcher les usages non prévus, nous encouragerons les utilisateurs à considérer les pratiques d'IA responsable lorsqu'ils construisent des GenAIScripts. Nous fournissons plus de détails sur les questions liées à la sécurité et à la confiance dans [security and trust](https://microsoft.github.io/genaiscript/reference/security-and-trust/).",
  "955571C545EB5F36020E": "Bonnes pratiques concernant les modèles fondamentaux",
  "78F66AE75C33FB514BFE": "Nous encourageons vivement les utilisateurs de GenAIScript à utiliser des modèles fondamentaux et des LLM qui supportent des mesures robustes d'atténuation de l'IA responsable, comme les services Azure Open AI (AOAI). Ces services mettent continuellement à jour la sécurité et les atténuations RAI afin de suivre notre compréhension à jour de la manière de déployer et d'utiliser les modèles fondamentaux de façon responsable. Voici des ressources pour aider à comprendre et appliquer les meilleures pratiques lors de l’utilisation de modèles fondamentaux pour des scripts et applications :",
  "BB821B422E9225A92538": "[Article de blog sur les fonctionnalités d’IA responsable dans AOAI présentées à Ignite 2023](https://techcommunity.microsoft.com/t5/ai-azure-ai-services-blog/announcing-new-ai-safety-amp-responsible-ai-features-in-azure/ba-p/3983686)",
  "82D735C4D301982850EE": "[Note de transparence pour Azure OpenAI Service](https://learn.microsoft.com/en-us/legal/cognitive-services/openai/transparency-note?tabs=text)",
  "87C39E79C00058EB96DB": "[Bonnes pratiques du Bureau de l'IA Responsable de Microsoft (ORA) sur l’utilisation des modèles AOAI](https://learn.microsoft.com/en-us/legal/cognitive-services/openai/overview)",
  "9CF18E6F3F80915951B9": "Nous recommandons de consulter la documentation sur la [Sécurité du contenu](/genaiscript/reference/scripts/content-safety) pour plus d’informations sur la protection contre les contenus nuisibles et le jailbreak.",
  "37C3D8C37FFC4C27855F": "Limitations",
  "B0C71BFAC26A4F733231": "GenAIScript est un framework en évolution, qui va s'améliorer en fonction des retours des utilisateurs. Les limitations actuelles du framework incluent une intégration dans un seul IDE (VS Code), et un support interne pour les API OpenAI ainsi qu’un nombre relativement réduit d’autres LLM. Nous avons l’intention de permettre aux utilisateurs d’intégrer des appels à des services externes (comme RAG) dans GenAIScript afin de fournir plus de contexte au LLM. Nous prévoyons aussi d’ajouter le support d’autres modèles fondamentaux au fur et à mesure de l’évolution des cas d’usage.",
  "CC3757C7DD5E8D7D6C1A": "Nous anticipons également que la porte d’entrée pour utiliser GenAIScript va évoluer. Nous avons exploré la prise en charge de l’invocation du framework GenAIScript dans le cadre de l’expérience VS Code Copilot Chat (hébergée dans VS Code Insider’s Edition). Nous savons aussi que certains développeurs préfèreraient implémenter leur GenAIScript en Python plutôt qu’en JavaScript. Nous envisageons de créer une interface Python pour la création de GenAIScripts dans le futur.",
  "3A46DCEAA8B639FD1C38": "Limitations techniques, facteurs opérationnels et plages d'utilisation",
  "991A3D9306CDD14366AA": "GenAIScript n’utilise aucun modèle d’IA pour exécuter le framework lui-même. Les utilisateurs de GenAIScript pour écrire leurs propres scripts IA seront soumis aux limitations techniques, facteurs opérationnels et plages propres au LLM AI que leur script utilise.",
  "7F1BD8AF7A8B2C6B8D31": "Bonnes pratiques pour améliorer la performance du système",
  "0D622C784D5AB112FAA7": "GenAIScript encourage les utilisateurs à consulter les meilleures pratiques pour la rédaction d’invites efficaces pour le LLM spécifique qu’ils invoquent dans leur outil.",
  "8E8D8EC2E6C9466F881A": "En savoir plus sur l’IA responsable",
  "D6C284A0777B8C32B602": "[Principes d'IA Microsoft](https://www.microsoft.com/en-us/ai/responsible-ai)",
  "8CE57ED4575AFABE951C": "[Ressources IA responsable Microsoft](https://www.microsoft.com/en-us/ai/responsible-ai-resources)",
  "A5E0BE8E1B733C487CB0": "[Cours Microsoft Azure Learning sur l’IA responsable](https://docs.microsoft.com/en-us/learn/paths/responsible-ai-business-principles/)",
  "21E0C9C68C6A008AD9BD": "En savoir plus sur GenAIScript",
  "3454698C2B2473ECECCF": "En savoir plus sur GenAIScript sur notre site GitHub, [microsoft/GenAIScript : GenAI Scripting (github.com)](https://github.com/microsoft/genaiscript/)",
  "8EE922D4CAD5BE65B530": "Contactez-nous",
  "CCE52BC843044CBF1C2E": "Envoyez-nous vos retours sur ce document : zorn@microsoft.com, jhalleux@microsoft.com",
  "F0C48FBCB22EF59D873F": "À propos de ce document",
  "EFB3CF7FE1DBBD16E83A": "© 2024 Microsoft Corporation. Tous droits réservés. Ce document est fourni « tel quel » et à titre informatif uniquement. Les informations et opinions exprimées dans ce document, y compris les URL et autres références de sites web, peuvent changer sans préavis. Vous assumez le risque de leur utilisation. Certains exemples ne sont donnés qu’à titre illustratif et sont fictifs. Aucune association réelle n’est prévue ou suggérée.",
  "1C2381D2372DA96FCB35": "Ce document ne doit pas être considéré comme un conseil juridique. La juridiction dans laquelle vous opérez peut comporter diverses exigences réglementaires ou légales qui s’appliquent à votre système d’IA. Consultez un spécialiste juridique si vous avez un doute sur les lois ou réglementations applicables à votre système, notamment si vous pensez qu’elles pourraient impacter ces recommandations. Sachez que toutes les recommandations et ressources présentées ici ne seront pas appropriées à chaque scénario, et inversement, elles peuvent être insuffisantes pour certains cas.",
  "919E8A38F27E811C4BAF": "Publié : 18 mars 2024",
  "4D3ABD67EDF1E04BAB8F": "Dernière mise à jour : 18 mars 2024",
  "6CA96C3D37F90B868DFD": "Tout au long de ce document, lorsque nous mentionnons les LLM, nous entendons tout modèle fondamental compatible avec nos interfaces.",
  "C271001E63890985A03C": "[Lint (logiciel) - Wikipédia](https://fr.wikipedia.org/wiki/Lint_(informatique))",
  "122C2599E6BA13DC2B80": "https://makecode.org/",
  "E0D0E73D3EA9A46CA2D9": "Traduit à l’aide de l’IA. Veuillez vérifier le contenu pour en assurer l’exactitude.",
  "695A9C38067D311B7E0C": "GenAIScript est un langage de script qui intègre les LLM comme une partie essentielle du processus de script, permettant aux utilisateurs de créer, déboguer et déployer facilement des scripts basés sur des LLM capables d'exécuter des tâches au-delà des capacités du code conventionnel. Ce guide de référence fournit une documentation complète pour GenAIScripts, incluant la syntaxe des scripts, les configurations LLM, l'extension VSCode et l'interface en ligne de commande (CLI).",
  "550FF8A929E3E029F21F": "[Scripts](/genaiscript/reference/scripts) fournissent un cadre JavaScript spécifique au domaine pour construire des requêtes LLM.",
  "073A41E8F6FF809B489F": "[CLI](/genaiscript/reference/cli) documente l'interface en ligne de commande pour automatiser l'exécution des GenAIScripts.",
  "C981808BEE11B7F25D6D": "[L'extension Visual Studio Code](/genaiscript/reference/vscode) offre un ensemble riche de fonctionnalités pour créer, déboguer et déployer des GenAIScripts.",
  "5CE5030921DB735789F2": "Traduit avec l'aide de l'IA. Veuillez vérifier le contenu pour garantir son exactitude.",
  "0E49875B98C372D50F49": "Le **Playground** est une application web auto-hébergée qui vous permet d'exécuter des scripts GenAIScript depuis une interface utilisateur conviviale. Il se situe entre la CLI GenAIScript et l'intégration GenAIScript pour Visual Studio Code.",
  "A9F13B74139A63ED10D3": "Le playground est encore en cours de construction.",
  "9F29FD97D410B5D11453": "Lancement",
  "C6BA823F42574C9822C5": "Depuis la racine de votre espace de travail projet, exécutez",
  "FF604D15F2705620A98C": "puis naviguez vers l'URL affichée dans la console (typiquement `http://127.0.0.1:8003/`).",
  "6E7CFC77A4FABCBDD649": "Dépôt distant",
  "B53DB746C9E59DB7D60B": "Vous pouvez exécuter le playground sur un dépôt distant en utilisant vos secrets `.env` actuels.",
  "8D9F8F682FD780345EEC": "Installation locale",
  "F142477A2027D93271F6": "`npx` peut être lent à démarrer, surtout si vous lancez fréquemment le playground. Vous pouvez installer le playground localement avec",
  "727C873AE1D35996BF63": "puis lancez",
  "E17278567322E728B19B": "Exécution de scripts à partir d'un dépôt distant",
  "55AAABA318E4826E762D": "Vous pouvez utiliser l'option `--remote` pour charger des scripts depuis un dépôt distant. GenAIScript effectuera un clonage superficiel du dépôt et exécutera le script depuis le dossier cloné.",
  "81298A450D325AB9107A": "Il existe des options supplémentaires pour le clonage du dépôt :",
  "FCC23B2492E8CFC03E31": "`--remote-branch <branche>` : La branche à cloner depuis le dépôt distant.",
  "3AF9EFCE8909C67C4D34": "`--remote-force` : Force le clonage même si le dossier cloné existe déjà.",
  "E453319B7BA98643FA84": "`--remote-install` : Installe les dépendances après le clonage du dépôt.",
  "CCB4E6BF1A2CF3591412": "Comme toujours, soyez prudent lorsque vous exécutez des scripts provenant d'un dépôt distant. Assurez-vous de faire confiance à la source avant d'exécuter le script et envisagez de verrouiller sur un commit spécifique.",
  "365FBC1B4879DE7BF5ED": "Traduction réalisée à l'aide d'une IA. Veuillez vérifier l'exactitude du contenu.",
  "DD1ED3F39207363B5DCD": "[GitHub Actions](https://docs.github.com/en/actions) est une plateforme d'intégration continue et de livraison continue (CI/CD) qui vous permet d'automatiser votre pipeline de compilation, de test et de déploiement. Vous pouvez créer des workflows qui compilent et testent chaque pull request vers votre dépôt, ou déployer les pull requests fusionnées en production.",
  "FCDA0224B9303A8A51FB": "[Dernièrement](https://github.blog/changelog/2025-04-14-github-actions-token-integration-now-generally-available-in-github-models/), GitHub a ajouté la possibilité d'utiliser également les [GitHub Models](https://docs.github.com/en/github-models) dans les actions.",
  "C24D7022F18B2D1BA12E": "La combinaison d'Actions et de Models vous permet d'exécuter GenAIScript dans le cadre de votre CI/CD.",
  "76996E91C4B70E74CD43": "Accédez à la section [Actions Personnalisées](#custom-actions) pour apprendre comment empaqueter un script GenAIScript en tant qu'action GitHub.",
  "5648C6CDC2CAA887A479": "Exemples",
  "543EEE7873FA2F5643AC": "[Étiqueteur de Problèmes GenAI](https://github.com/pelikhan/action-genai-issue-labeller/)",
  "BF49708DAF72BA9F4F4E": "[Dé-Duplicateur de Problèmes GenAI](https://github.com/pelikhan/action-genai-issue-dedup/)",
  "D1BFE05BD416E54976FA": "[Analyseur de Problèmes Vidéo GenAI](https://github.com/pelikhan/action-genai-video-issue-analyzer/)",
  "B8ACFDE91D2A28B7076C": "[Commentateur de Code GenAI](https://github.com/pelikhan/action-genai-commentor/)",
  "0F87F1E6CD6E0A6DF835": "Permissions GitHub Models",
  "072034C4496E9C946A96": "[Pour utiliser les Models dans une Action GitHub](https://docs.github.com/en/github-models/use-github-models/integrating-ai-models-into-your-development-workflow#using-ai-models-with-github-actions), vous devez définir les `permissions` de l'action pour inclure `models: read`.",
  "2DF08B8D9B0A0F596D36": "GenAIScript prend en charge nativement les GitHub Models, vous pouvez donc l'utiliser directement dans votre workflow GitHub Actions.",
  "E7A8D7297DD741CDEA03": "Utilisation de la CLI",
  "9DB6AE9A5F1865CDD64E": "La manière la plus simple d'utiliser GenAIScript dans une Action GitHub est d'exécuter directement la [CLI](/genaiscript/reference/cli).\nVous pouvez le faire en ajoutant une étape à votre workflow qui exécute la commande `genaiscript`.",
  "69B6681C0AA165DAD213": "**Assurez-vous d'inclure le `GITHUB_TOKEN` dans les variables d'environnement** afin que GenAIScript puisse s'authentifier auprès des GitHub Models.",
  "86E4C45CE95AEB43ECEF": "Actions Personnalisées",
  "8546D1C23682D1D19079": "GitHub supporte le packaging des tâches sous forme d’[actions personnalisées](https://docs.github.com/en/actions/sharing-automations/creating-actions/about-custom-actions), généralement dans un dépôt dédié. C’est un excellent moyen de packager un script IA et de le partager avec d’autres.",
  "E6B5AA3736B7D685EFA3": "La CLI GenAIScript fournit une commande pour générer/met à jour le code standard afin de packager un script sous forme d’\n[action conteneur Docker](https://docs.github.com/en/actions/sharing-automations/creating-actions/creating-a-docker-container-action) pour qu’il puisse être utilisé dans GitHub Actions, quel que soit le langage utilisé pour écrire le script.",
  "FF6998668DD0DEBB0720": "Pour commencer,",
  "46836621D0650963AD47": "Créez un nouveau dépôt pour votre action.",
  "6E34954A3507EBE60D1E": "Ouvrez un terminal à la racine de votre dépôt.",
  "23F87B9D4FD9EF038863": "Exécutez la commande pour générer le squelette de l'action :",
  "C418DF1B861DD29F9FAD": "Le générateur du squelette d'action écrasera les fichiers suivants :",
  "57CE11C285539C69D514": "`action.yml` Fichier de métadonnées de l'action",
  "5DB760C5AC1062B4D8D1": "`Dockerfile` Dockerfile pour l'action",
  "26B07639A3E6C17F02C3": "`README.md` Documentation pour l'action",
  "D0D733A84CD97895FD2A": "`.gitignore` Fichiers à ignorer dans le dépôt",
  "8F9457CCB7B38950BF76": "`.github/workflows/ci.yml` Workflow CI pour tester l'action",
  "715876561542CFFEF557": "`package.json` Configuration du package pour l'action",
  "7F3BB96EEB3CBEC99C31": "`devcontainer/devcontainer.json` Configuration du conteneur de développement pour VS Code",
  "5A64789C70E3F55ED11E": "`devcontainer/Dockerfile` Dockerfile du conteneur de développement pour VS Code. Doit être synchronisé avec le Dockerfile de l'action.",
  "E6A18C81A7B477024019": "Pour mettre à jour le squelette de l'action, vous pouvez exécuter à nouveau la même commande :",
  "D47E334D05BCC11E5BF8": "Métadonnées",
  "26793367106065548BEA": "Le fichier `action.yml` contient les métadonnées de l'action. Elles sont extraites de différentes parties de votre projet :",
  "0CDE38E12FC67A8BCE76": "Le `name` est dérivé de l’identifiant du script.",
  "733BECE2D2F7AD9E22F7": "La `description` est dérivée du `title` du script.",
  "D873781559A66034031C": "Les `inputs` sont dérivées des [paramètres](/genaiscript/reference/scripts/parameters) du script (voir ci-dessous).",
  "6E4C735C7D0296999B7B": "Notez que la `description` du script est utilisée pour remplir le fichier `README.md`.",
  "08ED1C5ACE534FF0A20E": "Entrées",
  "50167272BBE2389F009D": "La section `inputs` du fichier `action.yml` est générée automatiquement à partir des paramètres du script.\nChaque paramètre est converti en une entrée portant le même nom, et le type est déduit du type du paramètre.",
  "70DBDF0FC35F4C148E78": "Le fichier `action.yml` généré ressemblera à ceci :",
  "A0ED740F0CCDD116A085": "Il existe également des champs additionnels communs à toutes les actions GenAIScript :",
  "39CDEFFF3B808BC09D98": "`files` : Spécifie un chemin de fichier pour alimenter la variable `env.files`. Pour supprimer ce champ, définissez `accept: \"none\"` dans le script.",
  "951123EE026B9761DD15": "`github_token` : **Ceci est requis pour s'authentifier auprès des GitHub Models.**\nIl deviendra `INPUT_GITHUB_TOKEN` lors de la création du conteneur et GenAIScript le récupérera automatiquement.",
  "482507DD73AACD2C1AF1": "`github_issue` : Le numéro du problème GitHub ou de la pull request en cours.",
  "E9661469031678666520": "`debug` : Le filtre pour contrôler les messages de [journalisation](/genaiscript/reference/scripts/logging) de débogage.",
  "32C5C39EE268E6728EFC": "Sorties",
  "8C2B63DDCA6C747A7228": "L'action remplit quelques champs de sortie.",
  "3FFAE29BE2FA277FF290": "`text` : c'est le texte généré par le script.",
  "8116FC8F1B7968CBFF35": "`data` : c'est la sortie structurée analysée et mise en chaîne en JSON. Ce champ est rempli\nsi vous fournissez un [responseSchema](/genaiscript/reference/scripts/schemas) dans le script et si le LLM est capable de générer une réponse correspondant au schéma.",
  "55582B17841A172E2B2C": "Personnalisation de l’apparence",
  "CFC7F0116C0385655D49": "Le champ `branding` du `script` est utilisé pour [personnaliser l'apparence de l'action dans l'interface GitHub](https://docs.github.com/en/actions/sharing-automations/creating-actions/metadata-syntax-for-github-actions?versionId=free-pro-team%40latest&productId=actions&restPage=sharing-automations%2Ccreating-actions%2Creleasing-and-maintaining-actions#branding).",
  "28440186D1062AEA8DE1": "Conteneurs",
  "7252434F973843B8D218": "Par défaut, GenAIScript utilise [node:lts-alpine](https://hub.docker.com/_/node/) comme image de base pour le conteneur de l'action.\nVous pouvez changer cela en spécifiant une image de base différente dans la `cli`.",
  "7B730FD8C32F35273BC2": "GenAIScript créera également un [devcontainer](https://code.visualstudio.com/docs/devcontainers/create-dev-container)\nafin que vous puissiez développer l'action dans un environnement conteneurisé (presque identique) à celui où elle s’exécute dans GitHub Action.",
  "8992F58886273E208B6E": "ffmpeg, playwright et autres paquets",
  "135A182597B622D62DDF": "Pour garder le conteneur de l'action léger, GenAIScript n’inclut pas `ffmpeg`, `playwright` ou d’autres paquets par défaut.\nVous pouvez les ajouter au conteneur en les spécifiant dans la commande `cli`.",
  "2AFE19FDF23182D1E4BA": "Vous pouvez également ajouter d’autres paquets dont vous avez besoin en les spécifiant dans la commande `cli`.",
  "EC95E5DA779F5469AEBA": "Tester l’Action",
  "F8D4B3BD3CAE2DA4CEEF": "Votre script doit pouvoir être testé localement en utilisant la commande `npm run dev`. N’hésitez pas à le modifier dans `package.json`.",
  "48C2687C0F662F0D84EE": "Ou si vous souhaitez simuler l’environnement GitHub Action,\nvous pouvez définir les variables `INPUT_<parameter>` dans l’environnement.",
  "8DC435B1ADE0FF8F20EF": "Espace de travail GitHub vs Espace de travail de l’Action",
  "A00D1EEDCD39C8D5CC45": "Lorsqu’une action s’exécute dans un conteneur, le contenu du dépôt de l’action\nest d’abord copié dans le répertoire `/github/action`. GitHub clone le dépôt dans le répertoire `/github/workspace`.",
  "3B5344BC922181FF3F2D": "Le `ENTRYPOINT` du `Dockerfile` est configuré pour lancer la CLI `genaiscript` dans le répertoire `/github/action`\npuis il détecte la variable d’environnement `GITHUB_WORKSPACE` pour déterminer le répertoire de travail\net change le `cwd` pour l’utiliser.",
  "769071EA1F11D94C96D3": "Ce mode est activé par le flag `--github-workspace` dans la commande `cli`.",
  "99651EEA3686EB46130B": "Traduit à l’aide de l’IA. Veuillez vérifier l'exactitude du contenu.",
  "01902C74DE6E046B3D5D": "GenAIScript prend en charge les fichiers de configuration locaux et globaux pour permettre la réutilisation des paramètres de configuration courants et des secrets dans plusieurs scripts.",
  "40A85310BAAB670BEEA4": "Résolution des fichiers .env",
  "C82D9D5E302454E73F21": "GenAIScript analysera et chargera les fichiers `.env` suivants dans l'ordre indiqué :",
  "5FF19CD3BA2E32069B0F": "propriété `envFile` dans les fichiers de configuration (voir ci-dessous)",
  "D58F19FDF94AEE312461": "variable d'environnement `GENAISCRIPT_ENV_FILE`",
  "B34CEFED160E876784AA": "options de ligne de commande `--env`",
  "03E29CE0027E467FA15E": "Si aucun des éléments ci-dessus n'est défini, il tentera de charger les fichiers suivants :",
  "C0E7F242A651BB0E7BF8": "`~/.env`",
  "426E2CE7C8BD5EDA4605": "`./.env`",
  "71D3B024914F9DAFB486": "`./.env.genaiscript`",
  "20E1C8DE9A1FC05FA8AC": "Résolution des fichiers de configuration",
  "CF5529BF551AAB86677A": "GenAIScript recherchera les fichiers de configuration suivants\net fusionnera leur contenu dans la configuration finale.",
  "13AEF425868ADBB8378E": "`~/genaiscript.config.yaml`",
  "DFB0F991FE2C07BE6177": "`~/genaiscript.config.json`",
  "BBC86E1C6B4AD6AE0C30": "`./genaiscript.config.yaml`",
  "F01F6245C9EF055E38B8": "`./genaiscript.config.json`",
  "97FA16B20A4ABF6C2883": "Les fichiers JSON supportent le format [JSON5](https://json5.org/) (incluant les commentaires, les virgules finales, etc.).",
  "36B18939EEFB7B5C3874": "Schéma",
  "1C9963A48DAC5A1A97CE": "Le schéma de configuration est disponible à l'adresse [https://microsoft.github.io/genaiscript/schemas/config.json](https://microsoft.github.io/genaiscript/schemas/config.json) .",
  "0BDA93026CDBD5166BFE": "Propriété `envFile`",
  "DC60AD6A0FD8F8DAD424": "L'emplacement final de `envFile` sera utilisé pour charger le secret dans les variables d'environnement. Elle supporte un seul fichier.",
  "4558DA034DF211ED86F6": "Propriété `include`",
  "F50AAF4DD5F58D5754FC": "La propriété `include` permet de fournir des chemins glob pour inclure davantage de scripts.\nCombinée à un fichier de configuration global, cela permet de partager des scripts pour plusieurs projets.",
  "E1D6D1378D52B64EA26C": "Propriété `modelAliases`",
  "453F094B7E44B03081F8": "La propriété `modelAliases` vous permet de fournir des alias pour les noms de modèles.",
  "2D3500C77A92DD99DECD": "Propriété `modelEncodings`",
  "866AE267213DA0075A0B": "La propriété `modelEncodings` vous permet de fournir l'encodage pour le modèle.",
  "54AA762EA1E077DEA0D7": "Débogage",
  "1A6C453F4AD2F79E638C": "Activez la catégorie de débogage `config` pour voir des informations supplémentaires sur la résolution de la configuration.",
  "E7A6CF71C9E9C38CD29D": "Vous pouvez également activer d'autres catégories de débogage pour obtenir des journaux plus détaillés.",
  "1B4EB77148BCA75D2652": "Traduit avec l'aide de l'IA. Veuillez vérifier l'exactitude du contenu.",
  "02C40B02919E95A7D618": "![Une capture d’écran de Azure AI Foundry.](./azure-ai-foundry.png)",
  "C27A06A9F1CA92196480": "GenAIScript prend en charge nativement plusieurs services de [Azure AI Foundry](https://learn.microsoft.com/en-us/azure/ai-foundry/).",
  "A836449A5D1D32973D86": "Authentification",
  "F3D33ECE60D927E8B68D": "GenAIScript prend en charge l’authentification basée sur des clés dans les variables d’environnement ainsi que l’authentification Microsoft Entra pour chaque service.",
  "57FAD03E2B3EBCE1159B": "Services Azure OpenAI et IA",
  "4FA6306B079A13CE0011": "GenAIScript peut effectuer des inférences sur les LLM hébergés dans Azure AI Foundry.",
  "74DC9D824C21DD7C5B58": "GenAIScript prend en charge 4 types de déploiements Azure :",
  "BB3142274398B3646E8A": "[Azure OpenAI](/genaiscript/configuration/azure-openai)",
  "EBA9E99169C09C92E176": "[Azure AI Inference](/genaiscript/configuration/azure-ai-foundry##azure-ai-inference)",
  "E42CF0286A374BF9ADAA": "[Azure OpenAI Serverless](/genaiscript/configuration/azure-ai-foundry/#azure-ai-openai-serverless)",
  "61F007850C2B4AD73684": "[Modèles Azure AI Serverless](/genaiscript/configuration/azure-ai-foundry/#azure_serverless_models)",
  "D335A37E2F52BA597511": "Recherche Azure AI",
  "FA7F381B6404C10D0A40": "[Azure AI Search](https://learn.microsoft.com/en-us/azure/search/search-what-is-azure-search) est un moteur de recherche hybride puissant combinant recherche vectorielle et par mots-clés dans une base de données.",
  "D22C1A48F43388E90563": "[Recherche vectorielle](/genaiscript/reference/scripts/vector-search/#azure-ai-search)",
  "49CD06D5049494627B90": "[Configuration](/genaiscript/configuration/azure-ai-search)",
  "79538D3061A9330051BB": "Sécurité du contenu Azure",
  "8A763A2742834A3E5CF4": "[Azure Content Safety](https://learn.microsoft.com/en-us/azure/cognitive-services/content-safety/) est un service qui vous aide à identifier et filtrer les contenus nuisibles dans vos applications.",
  "38DEB8F7DBE3C5DD9F5D": "GenAIScript propose une prise en charge intégrée pour utiliser Azure Content Safety, depuis l’analyse d’une partie du prompt jusqu’à l’inspection des réponses des LLM ou des serveurs MCP.",
  "21A277898CF272B55FBA": "[Configuration](/genaiscript/reference/scripts/content-safety/#azure-ai-content-safety-services)",
  "1C4B362614160B8EB187": "Traduit avec l’aide d’une IA. Veuillez vérifier l’exactitude du contenu.",
  "68C671745B4D7449F760": "Paramètres disponibles dans Visual Studio Code.",
  "FDBD0895BD216629AE2C": "Les paramètres suivants sont accessibles via la commande **Préférences : Ouvrir les paramètres utilisateur**.",
  "14E6CDEFB2C3B88FF6EB": "CLI",
  "35F4793F257B25351103": "Ces paramètres contrôlent la manière dont le serveur GenAIScript est exécuté depuis l'extension. Par défaut, l'extension utilise [npx](https://www.npmjs.com/package/npx) et la version actuelle de l'extension pour exécuter le CLI GenAIScript.",
  "373AC97071E9C9D5F6B0": "Chemin",
  "660B6D73A2F4266A5E3C": "Si vous avez une version spécifique du CLI installée, vous pouvez définir ici son chemin.",
  "1FB3064AFC3476AC0929": "Version",
  "C24F66E3EBA1F5FDE534": "Par défaut, l'extension utilise npx et la version actuelle de l'extension. Vous pouvez remplacer le numéro de version avec ce paramètre.",
  "9ADB1018E49C40510921": "Masquer le terminal du serveur",
  "9134E5B0F531B85BB4FC": "Par défaut, le terminal du serveur GenAIScript est caché après le démarrage du serveur. Activer ce drapeau ouvrira un terminal où vous pourrez inspecter les journaux du serveur GenAIScript.",
  "063E1649C22C265C55CD": "Diagnostics",
  "7D55CC2586A239C51C2D": "Ce drapeau active diverses options supplémentaires de journalisation et de comportement pour aider à diagnostiquer les problèmes avec le serveur GenAIScript.",
  "87AB1514515CCA858E89": "Traduit avec l'IA. Veuillez vérifier le contenu pour en assurer l'exactitude.",
  "66156F7EB6FC5C594D11": "L'extension GenAIScript pour Visual Studio Code offre un moyen pratique d'exécuter des scripts directement depuis l'éditeur.",
  "A65ADAEF8A16A482E9BD": "Il existe principalement deux façons d’exécuter des scripts :",
  "4A38DD55B67B3BEC229C": "exécuter un script \"directement\". Ce scénario est utile lors du débogage d’un script ou pour un script qui ne nécessite pas de fichiers d’entrée.",
  "01001C8BB74C6D429704": "exécuter un script à partir de fichiers ou dossiers d’entrée. Ce scénario est utile lorsque vous souhaitez exécuter un script sur plusieurs fichiers ou dossiers.",
  "D5BC22B41073258D1708": "Exécution directe des scripts",
  "6688206DB3D212A798DA": "ouvrez un fichier GenAIScript dans l’éditeur",
  "FE424B7DE5F4346D9C05": "faites un clic droit dans l’éditeur et sélectionnez **Run GenAIScript** dans le menu contextuel",
  "903DA72107EA4F486464": "ou cliquez sur l’icône **Run GenAIScript** dans le coin supérieur droit de l’éditeur",
  "8EE9CA3442CE115804DC": "Cela lancera l’exécution du script en utilisant les fichiers d’entrée par défaut spécifiés dans le champ `files` du script.",
  "469B18B905519F50F89D": "Ce mode est utile lors du développement de scripts ou pour des scripts qui ne nécessitent pas de fichiers d'entrée.",
  "D9B92FA08ECB93DCAB7F": "Exécution des scripts à partir de fichiers ou dossiers d’entrée",
  "85A15F7498E39043A341": "Ce mode permet d’exécuter des scripts sur n’importe quelle combinaison de fichiers et de dossiers, qui alimentera `env.files`.",
  "5684736036BF935E434F": "Depuis la fenêtre de l’explorateur :",
  "53DAE7E90295F0E0309D": "sélectionnez des fichiers ou des dossiers dans l’explorateur. Vous pouvez utiliser la touche `Ctrl` ou `Shift` pour sélectionner plusieurs fichiers ou dossiers.",
  "36E9B3FE5B02179BDBB2": "faites un clic droit et sélectionnez **Run GenAIScript** dans le menu contextuel",
  "3C36EC140C168CFB2B05": "Depuis un éditeur",
  "A589CA9EB5D68FAF22EE": "ouvrez un fichier dans l’éditeur (pas un fichier GenAIScript)",
  "62818DA7504D7A5A93D5": "faites un clic droit et sélectionnez **Run GenAIScript** dans le menu contextuel",
  "EBEDAF60E6D7D9FFA19D": "Utilisation du texte sélectionné dans votre script",
  "69CC07442D2077B890ED": "Chaque fois que vous lancez un script, GenAIScript récupère le texte sélectionné dans l’éditeur de texte actif et le stocke dans la variable `editor.selectedText`.",
  "01CFB196E3B56F878EB6": "Cette valeur sera `undefined` si vous exécutez votre script depuis la ligne de commande, vous devez donc gérer ce cas dans votre script.",
  "73CD35178D9EF0F210A3": "Règles .gitignore",
  "D70B032811666C3FBD4C": "GenAIScript tente de respecter les **règles `.gitignore` de premier niveau dans l’espace de travail du projet** (il ignore les fichiers .gitignore imbriqués). Cela signifie que si vous avez un fichier `.gitignore` dans votre projet, GenAIScript ignorera tous les fichiers ou dossiers ignorés par Git.",
  "83886251B30BEF35B159": "Il existe des exceptions à cette règle :",
  "705283B5A42D3924279A": "si vous exécutez **Run GenAIScript** sur des fichiers individuels, ces fichiers ne sont pas filtrés par `.gitignore` puisque vous les avez explicitement choisis. Les dossiers sont toujours filtrés.",
  "98DA6E0144C82DF4028E": "si vous spécifiez `---ignore-git-ignore` dans la ligne de commande, GenAIScript ignorera le fichier `.gitignore` et exécutera le script sur tous les fichiers et dossiers.",
  "4E089410856A9B7819B7": "Traduction réalisée avec l’aide d’une IA. Veuillez vérifier la précision du contenu.",
  "BE8A6B85B53DE687D46E": "GenAIScript est pris en charge par une extension [Visual Studio Code](https://code.visualstudio.com/) qui offre un ensemble complet de fonctionnalités pour créer, déboguer et déployer des GenAIScripts.",
  "83D91F4C5ABA5E8F7EDA": "Le [Visual Studio Code Marketplace](https://marketplace.visualstudio.com/items?itemName=genaiscript.genaiscript-vscode) contient la dernière version stable de l'[extension](https://marketplace.visualstudio.com/items?itemName=genaiscript.genaiscript-vscode).",
  "7FABA91AA4F75815C1E4": "[Télécharger](https://marketplace.visualstudio.com/items?itemName=genaiscript.genaiscript-vscode)",
  "744A02B14E6DC8CEBFDE": "[Instructions d'installation](/genaiscript/getting-started/installation/#visual-studio-code-extension)",
  "969D95E0B86DDE13B90F": "[Exécution de scripts](/genaiscript/reference/vscode/running-scripts/)",
  "DB034F54E2E19FDCB713": "[Intégration de Copilot Chat](/genaiscript/reference/vscode/github-copilot-chat/)",
  "FE8C8315B4811E4EC70F": "[Paramètres](/genaiscript/reference/vscode/settings/)",
  "84F25BF34580E3AD83F3": "Traduction réalisée avec IA. Veuillez vérifier le contenu pour en assurer l’exactitude.",
  "D70AAA173B9032571BDF": "GenAIScript s'intègre avec [GitHub Copilot Chat](https://marketplace.visualstudio.com/items?itemName=GitHub.copilot-chat)\nen fournissant un **participant de chat** qui vous permet d'exécuter des scripts dans le contexte d'une conversation de chat,\net une **invite personnalisée** pour générer GenAIScript plus efficacement avec Copilot Chat.",
  "612707E4A922A5DA1467": "Si vous devez vérifier votre quota de requêtes premium disponible pour GitHub Copilot, rendez-vous sur [Fonctionnalités](https://github.com/settings/copilot/features)",
  "CE133B0638CCCACF4783": "Le [participant de chat `@genaiscript`](https://code.visualstudio.com/api/extension-guides/chat#parts-of-the-chat-user-experience) vous permet d'exécuter des scripts sans le contexte\nd'une conversation [GitHub Copilot Chat](https://marketplace.visualstudio.com/items?itemName=GitHub.copilot-chat).\nCeci est utile pour exploiter des scripts existants dans une session interactive de chat.",
  "99F9D9272809937E0DE7": "La commande `/run` attend un identifiant de script comme premier argument (par exemple, `/run poem`). Le reste de la requête est\ntransmis au script comme variable `env.vars.question`.",
  "3E4F190EA728D541AA59": "Si vous omettez la commande `/run`, GenAIScript cherchera un script nommé `copilotchat`. S'il en trouve un, il l'exécutera.\nSinon, il vous demandera de choisir un script parmi la liste des scripts disponibles.",
  "CDB25F08362D1E66AE71": "Si votre script ne spécifie pas un modèle, GenAIScript vous invitera à en choisir un.\nVous pouvez également spécifier le modèle à choisir dans la configuration du script en utilisant le fournisseur `github_copilot_chat`.",
  "F3E9DA653A6EE0E3501C": "modèle sélectionné actuel : `github_copilot_chat:current`",
  "1FF5C615B00DD73A4EBC": "gpt-4o-mini : `github_copilot_chat:gpt-4o-mini`",
  "1569281C4DB9E116585E": "Lorsque GenAIScript vous invite à choisir un modèle, il stockera vos choix dans les paramètres de l'espace de travail\nsous",
  "8BABA08F35869C791DF9": "**Les modèles GitHub Copilot Chat sont uniquement disponibles dans Visual Studio Code.** Ils ne fonctionneront pas depuis\nl'interface [cli](/genaiscript/reference/cli) ou [playground](/genaiscript/reference/playground).",
  "863F416B57E6DC1408FA": "Disponibilité des modèles",
  "EED59F3CF480A1F55A36": "Tous les modèles listés dans l'interface utilisateur de GitHub Copilot Chat ne sont pas disponibles pour les extensions tierces.\nQuand GenAIScript tente d'accéder à un modèle non disponible, il vous en informera mais n'a pas\nde contrôle sur votre configuration d'accès aux modèles.",
  "6D84E7CA7449B367BDB9": "Contexte",
  "C9306592A7B8AFB917B6": "Le contexte sélectionné par l'utilisateur dans Copilot Chat est converti en variables et transmis au script :",
  "D36E88DB2D578A732385": "le contenu de l'invite est transmis dans `env.vars.question`. L'identifiant du script est retiré dans le cas de `/run`.",
  "4609953061B2F66FFF13": "le texte actuel de l'éditeur est transmis dans `env.vars[\"copilot.editor\"]`",
  "BE85771ADBDB59A8C2C6": "la sélection actuelle dans l'éditeur est transmise dans `env.vars[\"copilot.selection\"]`",
  "6B52EC1EC35C86856780": "toutes les autres références de fichiers sont transmises dans `env.files`",
  "66D67FFC82F101FF3BA1": "Exemples",
  "5AE2E02935AD271E65F3": "`mermaid` générera un diagramme à partir de l'invite utilisateur.",
  "407264C11E5B726A7C2C": "`websearcher` effectuera une recherche web pour l'invite utilisateur\net utilisera le fichier en contexte dans la réponse.",
  "488DFE57B037453496C8": "`dataanalyst` utilise les outils interprètes de code Python pour\nrésoudre une question de calcul de données.",
  "5F7643D70BA92F3BF3F2": "Historique",
  "78172852D945C5F843F6": "L'historique des messages est transmis dans `env.vars[\"copilot.history\"]`. Il s'agit d'un tableau de `HistoryMessageUser | HistoryMessageAssistant` :",
  "D40D320E706336EB93D2": "Conversation continue",
  "7E739518AE592072040F": "Vous pouvez utiliser le chat `@genaiscript` pour intégrer l'exécution d'un script dans une conversation existante\nou pour continuer la conversation avec Copilot avec les résultats du script. Les résultats\ndu script sont remis dans l'historique du chat et sont disponibles pour tout copilot par la suite.",
  "5A14B5578D8E4180B0ED": "`@genaiscript /run tool` exécutera le script `tool` et replacera les résultats dans l'historique du chat.",
  "5D416A568FE95DF45DD7": "`analyze the results` continuera la conversation avec les résultats du script.",
  "C57536D4E41491430A65": "Script par défaut <a id=\"copilotchat\" href=\"\" />",
  "32227744A28472D38A79": "Le script suivant peut être utilisé comme modèle de démarrage pour créer le script par défaut lorsque l'utilisateur ne lance pas la commande `/run`.",
  "5F03EB8ED33673163E8A": "Fonctionnalités non prises en charge",
  "D89350271BFD935DA4D0": "Les fonctionnalités suivantes ne sont actuellement pas supportées dans le participant de chat :",
  "B151EE7A978DA71C6DC7": "Outils (`#tool`)",
  "0F6398AE633065009B29": "Référence `Workspace`",
  "182E88F5C68B817CE639": "Instructions personnalisées `genaiscript` <a href=\"\" id=\"genaiscript-custom-prompt\" />",
  "46F9526C29CC575654E9": "GenAIScript sauvegardera automatiquement un fichier instructions.md dans le dossier `.genaiscript/instructions`\nlorsque vous exécutez un script. Ce fichier contient les instructions utilisées pour générer le script.",
  "8BBD268F4655563C275D": "Sessions de chat augmentées",
  "3DC8456693A5B7FE3929": "Voici comment démarrer des sessions de chat en utilisant l’invite `genaiscript`.",
  "9E1C0D79F38EB9DD17B6": "Sélectionnez l'icône **Attacher contexte** 📎 (`Ctrl+/`), puis sélectionnez **Instructions...**,\npuis sélectionnez l’invite **genaiscript.instructions.md**.",
  "8DA6C4E847A2C2A65784": "Incluez des instructions pour écrire un script ou répondre à une question sur GenAIScript,\n`write a script that summarizes a video`.",
  "1606AF116379D5108BC4": "Puisque l'invite injecte la documentation complète de GenAIScript (plus de 700 kb au moment de l'écriture),\nil est conseillé d’utiliser un modèle à contexte étendu comme Sonnet ou Gemini.",
  "AF1E5B2A408023E42F37": "N'oubliez pas non plus que la conversation complète est renvoyée à chaque itération, donc cette technique\nfonctionne mieux comme une requête détaillée en une seule fois.",
  "E1F8F3281225BF2A89A9": "Traduit à l’aide de l’IA. Veuillez vérifier l’exactitude du contenu.",
  "32BD008F7788993C3588": "[GitHub Gists](https://gist.github.com/) sont un moyen simple de partager des extraits de code et des notes avec d'autres.\nIls sont essentiellement des dépôts Git qui peuvent être créés et partagés facilement.\nLes gists peuvent être publics ou secrets, et ils supportent la gestion des versions, ce qui en fait un excellent outil de collaboration.",
  "B4E40A434B97AA3A08EC": "![Une capture d'écran de GistPad dans Visual Studio Code](./gistpad.png)",
  "534EF165AA69D7B8D4DA": "Exécution de GenAIScript à partir des Gists",
  "F8B3679ACBFCE4FE25D3": "GenAIScript prend en charge les formats d'URL suivants pour exécuter des scripts directement depuis un gist.",
  "3A6DA898B2FFBDCCBC1C": "`gist://<id du gist>/<nom du fichier>`",
  "F592DF70A292BF59C6D2": "`vscode://vsls-contrib.gistfs/open?gist=<id du gist>&file=<fichier>`",
  "9DF40BDF0D6257779B31": "Le fichier gist est mis en cache localement dans `.genaiscript/resources` puis exécuté. Si disponible,\nil utilise les informations de connexion GitHub pour accéder aux gists privés.",
  "4B1421D6452CA02A0889": "GenAIScript est constitué de fichiers JavaScript, assurez-vous donc d'exécuter uniquement des gists en qui vous avez confiance.",
  "9182E23EF0344C3983F2": "GistPad dans Visual Studio Code",
  "880B8F6A3223905D1439": "L'[extension GistPad](https://marketplace.visualstudio.com/items?itemName=vsls-contrib.gistfs) pour Visual Studio Code vous permet de créer, modifier et gérer des gists directement depuis votre éditeur.",
  "7515C7A3F7C6E64E2BE7": "Vous pouvez ouvrir un fichier dans un Gist et l'exécuter en utilisant la commande `genaiscript`.",
  "EE2AF9664812953252B4": "Vérification de type",
  "63C791FED3B5B1F338E4": "Pour activer la vérification de type, nous devons télécharger le fichier `genaiscript.d.ts` dans le gist et mettre en place une référence à celui-ci\nen ajoutant ce commentaire **en haut du fichier** :",
  "3545D836C25E9C5F199E": "Cela peut être fait automatiquement :",
  "6A178E038E1ED1229DCA": "clic droit sur le fichier GenAIScript du Gist",
  "FE8AC006E541C5EE316D": "sélectionnez `GenAIScript : Corriger les définitions de types`",
  "ADCF83D455FE3636EAAA": "Vous pourriez être invité à autoriser GenAIScript à utiliser votre compte GitHub. GenAIScript demandera un jeton avec la portée `gist` pour télécharger les fichiers manquants.",
  "64212C0418E27FE5F31C": "Pour charger les types GenAIScript, vous devrez \"pousser\" le compilateur TypeScript :",
  "41C0E957C132C2962996": "ouvrez le fichier `genaiscript.d.ts` depuis l'arborescence GistPad (cela charge les types en mémoire)",
  "CAB2F93794F71D6F5051": "ouvrez votre fichier GenAIScript dans l'arborescence GistPad et la vérification de type devrait fonctionner !",
  "4850817F84817EBA1790": "Limitations",
  "1F44958D3D2EDC51187B": "Comme l'extension GistPad n'est pas un IDE complet, il y a certaines limitations à prendre en compte :",
  "22DA197F1B44A918B355": "les imports ne seront probablement pas résolus",
  "3DA87083B73FBC78D68F": "Traduit par IA. Veuillez vérifier le contenu pour en assurer l'exactitude.",
  "C30A4B7320BAF9A4AA0C": "GenAIScript s'exécute dans un environnement Node.JS (légèrement modifié) où des globals supplémentaires ont été ajoutés.\nCet environnement est configuré par le [cli](/genaiscript/reference/cli).\nPar conséquent, pour exécuter un GenAIScript dans un processus Node.JS \"vanilla\", vous aurez besoin de\n**l’API `run` de Node.JS**. Cette API charge et exécute un script GenAIScript dans un thread worker séparé.",
  "D99BAB84D0E40B048263": "Cette page décrit comment importer et utiliser GenAIScript en tant qu’API dans votre application Node.JS.",
  "80224D18015D3EE01DEB": "Configuration",
  "F718843740907551E082": "En supposant que vous ayez ajouté le cli comme dépendance dans votre projet,\nvous pouvez importer le [cli](/genaiscript/reference/api) comme suit :",
  "B451E920C130DCF49556": "Utilisation",
  "21E4D2CAFBE7B76EF509": "L’API peut être importée en utilisant les imports depuis **\"genaiscript/api\"**.",
  "8BAB96C05D8B457DE119": "Le wrapper `api.mjs` importé est un chargeur minuscule, sans dépendances,\nqui lance un [thread worker Node.JS](https://nodejs.org/api/worker_threads.html) pour exécuter GenAIScript.",
  "7EBD677BE84CE8C53083": "Pas de pollution des globals",
  "F671EDC1E4562DC82EB5": "Pas d’effets secondaires sur le processus",
  "FDCAD209438B0D6B4681": "`run`",
  "410754BC8308320CF340": "La fonction `run` encapsule la commande [cli run](/genaiscript/reference/cli/run).",
  "0EB559441CF3DCEFEA2C": "Variables d’environnement",
  "8596A8754986BD5B6D9A": "Vous pouvez définir les variables d’environnement pour le processus GenAIScript en passant un objet dans le champ `env` des options. Par défaut, le worker héritera de `process.env`.",
  "D837E80E843F972050E7": "Traduit à l’aide de l’IA. Veuillez vérifier l’exactitude du contenu.",
  "612EB1BCF2BE26442354": "Certaines des [capacités de traitement vidéo](/genaiscript/reference/scripts/videos) sont également disponibles dans la cli.",
  "19887CB2641F542BEB08": "`video probe`",
  "A54037B5104F3776471F": "Renvoie le résultat de `ffprobe` dans la console.",
  "F7FA90CC873FFEBA80E2": "`video extract-audio`",
  "8A91E417733E6CAE771F": "Extrait l'audio dans un format plus léger, optimisé pour la transcription.",
  "E20D9898D71B06CA5CC7": "`video extract-frames`",
  "D0E8CED12D23EB26C461": "Extrait des captures d'écran de la vidéo. Vous pouvez spécifier des horodatages en secondes ou en `h:mm:ss`, ou un nombre de vidéos.",
  "C5685E4A89113D149E3B": "Exécute les tests dans les scripts en utilisant [promptfoo](https://www.promptfoo.dev/).",
  "4654492B19EC157B78ED": "Vous pouvez choisir les modèles à utiliser pour les tests avec l’option `--models` :",
  "A05EF27BC47CFEB08A23": "Cette fonctionnalité nécessite d’ajouter `@genaiscript/api` dans les dépendances de votre `package.json`.",
  "A2B25B2A7E4C41BCD7BC": "visionneuse de résultats",
  "4D39006C022AC71A2BD8": "Exécutez la commande `test view` pour lancer la visionneuse des résultats de test :",
  "A7A0F5C7F10630325F92": "Traduit avec l’IA. Veuillez vérifier l’exactitude du contenu.",
  "0EE5133D09282C209E62": "Lancez un serveur web local utilisé pour exécuter le playground\nou Visual Studio Code.",
  "9238A04CA4DFD8B47453": "Exécutez depuis la racine de l’espace de travail :",
  "916566761A46F27E1F65": "port",
  "5CFE0BBCBFFBE30A04CD": "Le port par défaut est `8003`. Vous pouvez spécifier le port en utilisant le paramètre `--port`.",
  "E3D120265528F76C8568": "Clé API",
  "62620FE9E417CE7F3F67": "La clé API est utilisée pour authentifier les requêtes vers le serveur.\nVous pouvez spécifier une clé API en utilisant le paramètre `--api-key` ou la variable d’environnement `GENAISCRIPT_API_KEY`.",
  "0DBFC59372E5F9B02F5F": "ou",
  "43F69E16AC1262A215E0": "La clé API peut être définie dans l’en-tête `Authorization` d’une requête ou dans le paramètre de requête de l’URL `api-key` (`http://localhost:8003/#api-key=my-api-key`)",
  "6606B8ABA6F0E44C8F15": "CORS",
  "91743F7F47A10861F82E": "Vous pouvez activer le [Cross Origin Shared Resource](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) en utilisant le paramètre `--cors` ou en définissant la variable d’environnement `GENAISCRIPT_CORS_ORIGIN`.",
  "29408B4757D95E65BD57": "Réseau",
  "2B08B671E727D823EC03": "Vous pouvez lier le serveur sur `0.0.0.0` et le rendre accessible depuis le réseau en utilisant le paramètre `--network`. Ce paramètre est nécessaire pour rendre le serveur accessible depuis un conteneur.",
  "D45AC4430DEAC50ECE51": "Nous recommandons vivement de définir la clé API lorsque le serveur est exécuté sur le réseau.",
  "9322161DBB45E5A6F7A8": "Dockerisé",
  "89164809F4FFF83F2DD3": "Pour exécuter une image Docker minimale avec le serveur, commencez par créer une image Docker avec genaiscript et les outils nécessaires.",
  "A67CE8435E6DD6F85198": "Cela crée localement une image `genaiscript` que vous pouvez utiliser pour lancer le serveur.",
  "724BC44D5ED74E2781F5": "puis ouvrez `http://localhost:8003` dans votre navigateur.",
  "1F161D724A05D615DDB2": "Points de terminaison de l’API OpenAI",
  "84DEAAA1F974E0D3A16F": "Le serveur implémente plusieurs points de terminaison compatibles avec l’API OpenAI. Vous pouvez utiliser le serveur comme proxy vers l’API OpenAI en activant le paramètre `--openai`.\nCes routes permettent d’offrir un accès stable aux LLM configurés pour d’autres outils comme promptfoo.",
  "2FAC6546C2E6B6F89977": "Cela activera les routes suivantes :",
  "0BFE1204316AAD53F8AB": "`/v1/chat/completions`",
  "7ACE135AE57A9EEED146": "Principalement compatible avec l’API de complétion de chat d’OpenAI. Le serveur transmettra les requêtes à l’API OpenAI et retournera la réponse.",
  "C913F71F978ED40A93E2": "`stream` n’est pas pris en charge.",
  "1D1F1F248B61262C9469": "`/v1/models`",
  "99D15ED7AE2053E99A78": "Retourne la liste des modèles et alias disponibles sur le serveur.",
  "87C931F5E32CEA9DCA6C": "Traduction réalisée à l’aide de l’IA. Veuillez vérifier le contenu pour en assurer l’exactitude.",
  "E843444C30ABCF3A5D30": "Exécute un script sur des fichiers et diffuse la sortie du LLM vers stdout ou un dossier à partir de la racine de l'espace de travail.",
  "2FC39796A5198C543BC2": "où `<script>` est l'identifiant ou le chemin du fichier de l'outil à exécuter, et `<files...>` est le nom du fichier de spécification sur lequel l'exécuter.",
  "B7E3E90708EB9EB2B4BF": "Les fichiers peuvent également inclure un motif [glob](https://en.wikipedia.org/wiki/Glob_\\(programming\\)).",
  "98005FC7A8E0C2FFBFC8": "Si plusieurs fichiers sont spécifiés, tous les fichiers sont inclus dans `env.files`.",
  "7B461F66C0BBAFA05C86": "Fichiers",
  "BE52029C2E7B7E5B4549": "`run` prend un ou plusieurs motifs [glob](https://en.wikipedia.org/wiki/Glob_\\(programming\\)) pour faire correspondre les fichiers dans l'espace de travail.",
  "05DF742E91C2D7BCED36": "Résolutions de ressources",
  "8B9713F86B46A1DD7359": "GenAIScript gère et résout automatiquement certains motifs d'URI spécifiques.",
  "FC3FD5422270DB0B2C53": "`file://` - fichier local",
  "7B3BEEA087F3BCBEFDA2": "`https://github.com/<owner>/<repo>/blob/<branch>/<path>` - fichier GitHub",
  "143AAFA418D17E8D3372": "`https://github.com/<owner>/<repo>.git/<file glob>` - dépôt GitHub et motif de fichier glob",
  "2B26FE70C4BE0C532FEB": "`gist://id/<file glob>` - Gist GitHub et motif de fichier glob",
  "90940746B7E438114B48": "`https://gist.github.com/<owner>/<id>/<file glob>` - Gist GitHub et motif de fichier glob",
  "C5D0BD956579698F6A92": "`git://<owner>/<repo>.git/<file glob>` - dépôt Git et motif de fichier glob",
  "301D749C1051436D6E07": "Pipe",
  "8CA7DA0BCE94C5A6C272": "`run` prend le contenu de stdin et le convertit en fichier `stdin`. La sortie du LLM est envoyée à `stdout`, tandis que le reste des journaux est envoyé à `stderr`.",
  "C57B55DE0A502CE8FF71": "--excluded-files <files...>",
  "EA1009396AA77004D24B": "Exclut les fichiers spécifiés de l'ensemble de fichiers.",
  "C3104AD9AD5AE07FF670": "--exclude-git-ignore",
  "D83E26759E5B21B33E34": "Exclut les fichiers ignorés par le fichier `.gitignore` à la racine de l'espace de travail.",
  "163E52D819785D08F64F": "Configuration",
  "9D8B7D5DFB6A2DDF05CE": "--model ...",
  "232506A9BC162792B5E5": "Configure l'alias du modèle par défaut ou `large`. Utilisez `echo` pour faire un essai à blanc et retourner les messages au lieu d'appeler un fournisseur de LLM.",
  "17CE66E93A620392CFD7": "--provider ...",
  "DF3AE5258C004EF20522": "Charge un ensemble d'alias de modèles pour le fournisseur LLM donné.",
  "4F70877A520BF77D94DB": "--vars name=value name2=value2 ...",
  "478EBCE49D8193E58DA1": "Remplit les valeurs dans la map `env.vars` qui peuvent être utilisées lors de l'exécution de l'invite.",
  "A87BA645417FA3B8ED36": "Sortie",
  "A42EA350BD7F2574655F": "--out <file|directory>",
  "EE0F50BBEBFA89AA3A4A": "Enregistre les résultats dans un fichier JSON, ainsi que des fichiers markdown de la sortie et de la trace.",
  "75D41A0033AB6B9940C0": "Si `file` ne se termine pas par `.json`, le chemin est considéré comme un chemin de répertoire.",
  "138120EAB57090F2DB79": "--json",
  "B302C4110487CD32AB8D": "Affiche la réponse complète en JSON sur stdout.",
  "89BEBE6E2E59B4840712": "--yaml",
  "0AB630C8BCDBAF733E12": "Affiche la réponse complète en YAML sur stdout.",
  "89CF5A728377FBF152AE": "--out-trace <file>",
  "4BBC48B7DE16BEF3B36D": "Enregistre la trace markdown dans le fichier spécifié.",
  "F6EA54CB9E33F8F8C16B": "Dans un workflow GitHub Actions, vous pouvez utiliser cette fonctionnalité pour enregistrer la trace comme résumé de l'étape (`GITHUB_STEP_SUMMARY`) :",
  "EF5716B540DFC5234C00": "Dans Azure DevOps, vous pouvez utiliser la commande [task.uploadSummary](https://learn.microsoft.com/en-us/azure/devops/pipelines/scripts/logging-commands?view=azure-devops\\&tabs=bash#uploadsummary-add-some-markdown-content-to-the-build-summary) dans votre pipeline pour téléverser la trace en tant que résumé.",
  "D600C7C7DAB53B5FC16A": "--out-annotations <file>",
  "33BD75E8FA942228220B": "Émet des annotations dans le fichier spécifié sous forme de tableau JSON, JSON Lines, [SARIF](https://sarifweb.azurewebsites.net/) ou un fichier CSV si le fichier se termine par `.csv`.",
  "2F97D118734F712BB5A4": "Utilisez JSON lines (`.jsonl`) pour agréger les annotations de plusieurs exécutions dans un seul fichier.",
  "7DAB6B50B9D2BBFFDEC3": "--out-data <file>",
  "822CA22F46D25B9643FE": "Émet les données analysées au format JSON, YAML ou JSONL. Si un schéma JSON est spécifié et disponible, le résultat de validation JSON est aussi stocké.",
  "A5E3B013BECF73576E3D": "--out-changelogs <file>",
  "014A66D8DD3D238FF4D0": "Émet les journaux de modifications dans le fichier spécifié au format texte.",
  "26CBF284E8A52C635BA6": "Pull Requests et Issues <a href=\"\" id=\"pull-requests\" />",
  "226B903BE51E64708547": "L'interface en ligne de commande peut mettre à jour la description d'une pull request/issue et les commentaires lors de l'exécution dans une action GitHub ou un pipeline Azure DevOps.",
  "3D20FB6AA835E2441A55": "Configuration du workflow GitHub Action",
  "6C1FE3A29EEEE7FB984C": "Mettez à jour votre configuration de workflow pour inclure ce qui suit :",
  "C7C8D629DBF432F59B9A": "ajoutez la permission `pull-requests: write` au workflow/étape",
  "613603BFD4579E68AACC": "définissez le secret `GITHUB_TOKEN` dans l'environnement (`env`) lors de l'exécution du CLI",
  "BD7E5B2E230359CE5E13": "Configuration Azure DevOps",
  "F994F065F3B2982EC8D6": "ajoutez `<votre nom de projet> Build Service` dans le rôle **Collaborateur** du dépôt",
  "E892D9FC57D750DC42D7": "passez des secrets aux scripts, y compris `System.AccessToken`",
  "226996A8A15BCAD4F66B": "--pull-request-description [tag]",
  "3BD02C88511306224736": "Lors de l'exécution dans une action GitHub ou un pipeline Azure DevOps sur une pull request, le CLI insère la sortie LLM dans la description de la pull request ([exemple](https://github.com/microsoft/genaiscript/pull/564))",
  "F7BE4447E929C7F72E2F": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par différentes exécutions. La valeur par défaut est l'identifiant du script.",
  "39C978FFF9C36CE3F799": "--pull-request-comment [tag];",
  "7A0940DD38E9C99A821F": "Met à jour ou crée un commentaire sur la pull request/issue avec la sortie LLM ([exemple](https://github.com/microsoft/genaiscript/pull/564#issuecomment-2200474305))",
  "2F6B3E3F9A2710F4FA43": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par différentes exécutions. La valeur par défaut est l'identifiant du script.",
  "ED9222F31A200EFA2C01": "--pull-request-reviews",
  "19B0351B59E3D49A8A66": "Crée des commentaires de revue de pull request à partir de chaque [annotation](/genaiscript/reference/scripts/annotations) ([exemple](https://github.com/microsoft/genaiscript/pull/564#pullrequestreview-2151692644)).",
  "0B54FD87C68AF8237B34": "Lire la suite",
  "0C9E03114AEE7A40DE38": "La liste complète des options est disponible dans la [référence CLI](/genaiscript/reference/cli/commands#run).",
  "8FC32743692487B40144": "Traduit avec l'aide de l'IA. Veuillez vérifier l'exactitude du contenu.",
  "7ECD9A6551A62C1276CB": "Vous pouvez lancer le ",
  "F3CEE80F1D2ED1EA3EBE": "[cli](/genaiscript/reference/cli) en tant que ",
  "9935DC26F4B44209837A": "serveur Web API",
  "C06C2E301CAF55264867": "fastify",
  "7C1A2D2E531544AA62AF": "Scripts en tant que points de terminaison REST",
  "9232A4B0C6E341BFAFBD": "Les paramètres du point de terminaison OpenAPI sont déduits automatiquement des ",
  "838758000046D749F1D0": "paramètres du script",
  "1C94814ADB8B87665507": "qui prend un paramètre ",
  "6159A1BA439FBE829FF4": "Un script plus avancé pourrait ne pas utiliser le contexte de haut niveau et utiliser plutôt ",
  "2AD27DFB6EC1547AE50C": "Route",
  "791C9090E29A76C95CE6": "La route par défaut est ",
  "B7B974A3BECEFEF5CA67": "et la spécification OpenAPI est disponible à ",
  "763DB69F8A049C24C368": "La spécification OpenAPI sera disponible à ",
  "04C43DEF41450A310FE0": "Le serveur sera accessible à ",
  "2C61F837ACFF0A898D89": "Script de démarrage",
  "8E25F3A0D47A1DDEED3B": "Vous pouvez spécifier l’ID d’un script de démarrage en ligne de commande avec l’option ",
  "3688F8CF71AB545BC051": "Filtrage des scripts",
  "9A673CD86A464C88F462": "le paramètre ",
  "61CC4C0451EB354DEBF9": "Exécution de scripts depuis un dépôt distant",
  "C7425F361E684BEE93C7": "Vous pouvez utiliser l’option ",
  "70A64263C8B23DF3D96E": "Linting",
  "FBCCFBE546525CB3EAFE": "Vous pouvez exécuter ",
  "7F0163D147C611A4F1EF": "spectral",
  "EAA877F0B1C4BD2D28B3": "enregistrez ce fichier ",
  "2768B12E77EA330F79B6": "lancez le serveur api",
  "99F31506135F3D151AF0": "exécutez le linter spectral",
  "953ABD947C49B8F04E53": "Les bases de GenAIScript",
  "42B9EF011109CBD4B0DA": "Introduction",
  "A98BE5520525BC689642": "Termes clés",
  "6D2BDB8D81EA13EF0AE0": "GenAIScript : un programme JavaScript stylisé qui définit le contexte pour l'appel au LLM, permet l'exécution de code JavaScript arbitraire, prépare l'entrée du prompt pour le LLM, appelle le LLM et décompresse la sortie du LLM selon les instructions fournies dans le prompt.",
  "8D873EA1B54E427DBD8E": "GPVM : un système d'exécution qui, donné un GenAIScript, exécute ce GenAIScript, ce qui implique d'intégrer le contexte dans un prompt, d'appeler le LLM spécifié et d'extraire le contenu du résultat du LLM.",
  "5DA6D8B6C0B5499B1774": "Extension GenAIScript pour VS Code : un module complémentaire pour VS Code qui offre aux utilisateurs des méthodes simples pour créer, modifier, exécuter et déboguer des GenAIScripts.",
  "C21AE95A08430F8CF3AB": "Modèles fondamentaux et LLMs : bien que GenAIScript supporte actuellement différents LLMs, nous prévoyons à l'avenir d'intégrer des modèles fondamentaux supplémentaires au-delà des grands modèles de langage.",
  "68885A384D5C24CB4EA4": "Capacités",
  "283BD72CFBE051C9E01F": "Comportement du système",
  "DCBC34CF36F24F9C5DDE": "Documentation",
  "4EA5AB2E9538A5B6B12A": "Cas d'utilisation",
  "A486B2AFDBAC912495A2": "Utilisations prévues",
  "503B6AC40059750FBBA8": "Utilisations non prévues",
  "5AC9A83B8C775594CA3D": "sécurité et confiance",
  "A9EFD3D2D86B6EA2F569": "Meilleures pratiques pour les modèles fondamentaux",
  "E8593D47B9EF13C617C7": "Article de blog sur les fonctionnalités d'IA responsable dans AOAI présentées à Ignite 2023",
  "96F58BC8E4261F8DB360": "Note de transparence pour Azure OpenAI Service",
  "EC14D4CFBC838B92D02C": "Nous recommandons de consulter la ",
  "16516381C9161F1F498B": "Sécurité du contenu",
  "3A4EE7952E2B440D6BD4": "Limites",
  "DEEA3540C6A88F44DF5A": "Meilleures pratiques pour améliorer les performances du système",
  "EBD3F05BED12CF52B28E": "En savoir plus sur l'IA responsable",
  "797B63377F7F602BBDCB": "Principes d'IA Microsoft",
  "B9A49FBC08C5FBAEF9AB": "Ressources Microsoft sur l'IA responsable",
  "D572AC75DFE998F624E1": "Cours Microsoft Azure Learning sur l'IA responsable",
  "8CE6101D9CFD85DF5A21": "En savoir plus sur GenAIScript",
  "BDE8A9611244079FC5B7": "Contactez-nous",
  "F3F5CF701957ED029832": "À propos de ce document",
  "5A293B3963CE8E5FF331": "Le ",
  "794197079496360D005D": "Playground",
  "23729EB7E4A6EDA8CB47": "Lancement",
  "2ED347C0A56FE0A68AC6": "Dépôt distant",
  "8C920DFCED0B034CA363": "Vous pouvez exécuter l’aire de jeu sur un dépôt distant en utilisant vos secrets `.env` actuels. ",
  "E8135E41F9F0BC4BDEAD": "Installation locale",
  "FF894959A0E4F48ADEF0": "puis lancez",
  "CC65A32D5FE148C3A3C8": "Scripts",
  "02BCC7503B8B29CBA78C": "Interface en ligne de commande (CLI)",
  "4C243EBBB6BD60705E25": "Extension Visual Studio Code",
  "55E2DEB357F86092A224": "GitHub Actions",
  "569FED170B4DEA2440D9": "Récemment",
  "4775595F588067D0799A": "Modèles GitHub",
  "A058D33116404B752922": "Passez à la section ",
  "7EBDA39F1CB182AD7F42": "Actions personnalisées",
  "0A698D890FBFF7E5593C": "Exemples",
  "E78FEA0793E5FDD8F08F": "Étiqueteur de problèmes GenAI",
  "60DF4B4D82983CC6F467": "Dé-duplication de problèmes GenAI",
  "C76A45B7956B5E0D2175": "Analyseur de problèmes vidéo GenAI",
  "E3DF24E3FFB66880F5AB": "Commentateur de code GenAI",
  "116C054A17AE32A159DC": "Autorisations des Modèles GitHub",
  "5EB58F6080282A250482": "Pour utiliser les Modèles dans une GitHub Action",
  "838EDFB2E1DCDD3E6A9E": "pour l'action d'inclure ",
  "2D3B27B61F365108BEFF": "Utilisation de l'interface en ligne de commande (CLI)",
  "343DAD29C13C7C449749": "La façon la plus simple d'utiliser GenAIScript dans une GitHub Action est d'exécuter directement la ",
  "D16F877E807F11102F4D": "Veillez à inclure le ",
  "DE745B56619EDC279205": "dans les variables d'environnement",
  "A0C7878EE6EF4391B7F1": "GitHub prend en charge le conditionnement des tâches sous forme ",
  "D784689AE5C65D70681F": "actions personnalisées",
  "C0740A215AB4BD5A760C": "La CLI GenAIScript fournit une commande pour générer/mettre à jour le code standard afin de conditionner un script comme une ",
  "266785D44B4106FA51EA": "action conteneur Docker",
  "565702378D9D507FA1CA": "Fichier de métadonnées de l'action",
  "F9E8E57D254AB2F9088E": "Dockerfile pour l'action",
  "53CE32962274982BC966": "Documentation pour l'action",
  "46E7B9ADADA0C5BB35B9": "Fichiers à ignorer dans le dépôt",
  "FC17DF84A28005BF0237": "Workflow CI pour tester l'action",
  "382885A4461855D5B3B9": "Configuration du package pour l'action",
  "3BD6CEA089CA722107E7": "Configuration du conteneur de développement pour VS Code",
  "4C1455A99DEE21C99B11": "Métadonnées",
  "46477E8B6A221B4D463D": "est dérivée du ",
  "B7F415900D2B0FA0B3B9": "sont dérivées des ",
  "2F04C37F811CEBF84767": "paramètres",
  "82881EE355DB055B5ABA": "Notez que le ",
  "DD7AD1812D74B0B43529": "est utilisé pour remplir le fichier ",
  "33B1534EF284B26D2FF0": "Entrées",
  "6462737D8B2F97D1587D": "section du fichier ",
  "437BB2E9390B848AB831": "Le fichier généré ",
  "D288404BDD373C2B99F2": "Il deviendra ",
  "281B57BD1B759BC2CB7F": "journalisation",
  "54916BAB7747534EF52B": "Sorties",
  "F9026253955B8F710628": "schéma de réponse",
  "7B53AAA06B3760E6449A": "Personnalisation visuelle",
  "58ABEEB8DA95D4408EF1": " ",
  "C4A2CEB267DF8936C3D5": "champ est utilisé pour ",
  "D1219210286745EEBD80": "personnaliser l'apparence de l'action dans l'interface GitHub",
  "5E1D79D49FBD2DF92EAC": "Conteneurs",
  "B94B4739525C5F147DD1": "node",
  "1EA660B74ABF0606E976": "GenAIScript crée également un ",
  "F4EC93D140C78955DABA": "container de développement",
  "BE9FDDA30C16AB51DC7C": "Vous pouvez également ajouter tous les autres paquets dont vous avez besoin en les spécifiant dans la commande ",
  "FEC13ADD4B2DBEC54991": "Test de l'action",
  "9B1EFA5E93B6E21FB7CE": "Votre script doit pouvoir être testé localement avec la commande ",
  "8436E72C82B77A8C1718": "Espace de travail GitHub vs espace de travail de l'action",
  "625261BB55FF94953E7E": "ENTRYPOINT est configuré pour lancer le ",
  "12F5C5EC9CCE044BF034": "cli dans le répertoire ",
  "5A408B231F246C529276": "puis il détecte la variable d'environnement ",
  "3D726D52AA3DF9C4D0F6": "et change le répertoire de travail courant (cwd) en celui-ci. ",
  "98CF0BEEA78769016641": "Ce mode est activé par l'option ",
  "3F78F7C5C51F23BD6D8C": "dans la commande ",
  "684613567CDA886E453C": "variable d'environnement",
  "176B84D0C32FBBAF3B54": "options en ligne de commande",
  "F09D923966146576C1FF": "Résolution des fichiers de configuration",
  "5F79127839DBE359ED42": "Les fichiers JSON prennent en charge le format ",
  "EC29688425AD7BB1195D": "JSON5",
  "CCADDCA0F32C0855D817": "Schéma",
  "826D923FFA41441F0C19": "Le schéma de configuration se trouve à ",
  "3DD0A283622E11B971BF": "propriété",
  "CAFA29E9030D289240E3": "L'emplacement final de `envFile` sera utilisé pour charger le secret dans les variables d'environnement. Il prend en charge un seul ",
  "DAACB865F94D43E69A17": "Débogage",
  "7BB5853B5F3280136BB8": "Activez la catégorie de débogage `config` pour voir des informations supplémentaires sur la résolution de la configuration. ",
  "C5A49F063DCA2ACD99BE": "GenAIScript prend en charge nativement plusieurs services de la ",
  "D0D94D7CFC47DEC00A50": "Azure AI Foundry",
  "E60CD89D67A7CCB4B47B": "Authentification",
  "5D64D1947C8E21D46D96": "Services Azure OpenAI et IA",
  "D626E9F143ED1038171D": "Azure OpenAI",
  "394ECC451E429565F1C0": "Inférence Azure AI",
  "CD3D36C02D4225DDBF4F": "Azure OpenAI Serverless",
  "35C3D6440481E1DBCD1B": "Modèles Azure AI Serverless",
  "6D1E2F1205936FF06AF4": "Recherche Azure AI",
  "E66EC50E586AF80198C3": "Recherche vectorielle",
  "32375E7E0618D2EED82F": "Configuration",
  "D941CEAD111C9BD8257F": "Sécurité du contenu Azure",
  "282D04A709642219E37B": "Les paramètres suivants sont accessibles via la commande **Préférences : Ouvrir les paramètres utilisateur**. ",
  "0C977826F00F558E9405": "npx",
  "94C83161FE739244FDC5": "Chemin",
  "F4FCA33C4AA5C7B33AB7": "Version",
  "019FF710906DB12E0464": "Masquer le terminal du serveur",
  "988D1552D5FF3BDA37B3": "Diagnostics",
  "D70048654BBF1F5B0099": "Exécution directe des scripts",
  "EC8DBC72C1ACD4B9A8F9": "ouvrez un fichier GenAIScript dans l'éditeur",
  "C29FC6C90905A49503FA": "cliquez avec le bouton droit dans l'éditeur et sélectionnez ",
  "B53AC76C38A891616396": "Exécuter GenAIScript*",
  "60F2ACD63522397B8F72": "dans le menu contextuel",
  "D00256A4514A7E9B772C": "ou cliquez sur ",
  "53C045E273D632BCC488": "Exécuter GenAIScript",
  "FA892083CAC07DBE9BEF": "l'icône en haut à droite de l'éditeur",
  "0F27C60822625FB8641E": "Cela démarrera l'exécution du script et utilisera les fichiers d'entrée par défaut spécifiés dans le champ `files` du `script`. ",
  "48013A7A6C9434A7E3A2": "Exécution des scripts à partir de fichiers ou dossiers d'entrée",
  "06E0CD7FA535619323BF": "ou la touche ",
  "9C37410AD48226C68C35": "cliquez avec le bouton droit et sélectionnez ",
  "248836A5A70A0582A2F5": "dans le menu contextuel",
  "7C5295D58833874499C8": "Depuis un éditeur",
  "5AED4AB869304B6F6A8F": "Utilisation du texte sélectionné dans votre script",
  "D72960B710062419E763": "GenAIScript tente de respecter les ",
  "8042B833A97C7C002436": "règles `.gitignore` au niveau supérieur ",
  "32D8BAD77D9A75F07BB1": "dans l'espace de travail du projet",
  "4C99B002D1F2D147DA05": "si vous lancez ",
  "1CD6E0AEB6A133BD114D": "si vous spécifiez ",
  "56C0F78F8ABA0D7F12FE": "GenAIScript est pris en charge par une extension [Visual Studio Code](https://code.visualstudio.com/)\nqui offre un ensemble complet de fonctionnalités pour créer, déboguer et déployer des GenAIScripts. ",
  "92029746FC8A092BA0FE": "Visual Studio Code",
  "B6D2331E8C90CCFD8707": "Marketplace Visual Studio Code",
  "4CF795D479524DB02691": "contient la dernière version stable de l’extension ",
  "1002B423115396D67E59": "extension",
  "75B7B8478EC6199269E1": "Télécharger",
  "C4CF936A971E24226105": "Instructions d'installation",
  "217E22974103FF8360BF": "Exécution des scripts",
  "6C476CC29ECE945B5D13": "Intégration de Copilot Chat",
  "23D57303FE693ABA54D7": "Paramètres",
  "CE764949F7C77EF4A3E8": "GenAIScript s'intègre avec ",
  "B61E4FA0C489804D2494": "en fournissant un ** ",
  "AAC4DCE0E186D83BA613": "participant de chat",
  "D02698878FCE79950833": "invite personnalisée",
  "B10115E1648E67A5AA2D": "Fonctionnalités",
  "E8F8904C6BA197D8B1D0": "participant de chat `@genaiscript`",
  "D5B60B8CD01A0C93D82B": "de conversation [GitHub Copilot Chat](https://marketplace.visualstudio.com/items?itemName=GitHub.copilot-chat).\nCela est utile pour exploiter des scripts existants dans une session de chat interactive. ",
  "7593EACCC101E1E23C5B": "Choix du script à exécuter",
  "17D1AC35683C4E791B93": "Si vous omettez la commande `/run`, GenAIScript recherchera un script nommé `copilotchat`.\nS'il en trouve un, il l'exécutera. Sinon, il vous demandera de choisir un script parmi la liste des scripts disponibles. ",
  "51F198C132D33668EB3B": "Choix du modèle",
  "BEC954531DE4917D8A53": "Ils ne fonctionneront pas à partir des interfaces ",
  "53AD4C35D488A4C04F2C": "cli",
  "3547FF869D4386095C91": "playground",
  "49A0FD880D26304574A1": "Disponibilité des modèles",
  "66A9772DDB46E656CB6B": "Contexte",
  "39259F1EE7F4BF90E409": "le contenu de l'invite est transmis dans `env.vars.question`. L'identifiant du script est supprimé dans le cas de `/run`. ",
  "B0CDBECADB952076312B": "le texte de l'éditeur courant est passé dans `env.vars[\"copilot.editor\"]` ",
  "ABDCC565CC4599466C90": "la sélection courante de l'éditeur est passée dans `env.vars[\"copilot.selection\"]` ",
  "DC09AF68FDDEC94D92F6": "toutes les autres références de fichiers sont transmises dans `env.files` ",
  "3EC4B07A611979082D41": "Exemples",
  "C828669BF4C131961190": "Historique",
  "43A056465B7A44F454FE": "L'historique des messages est transmis dans `env.vars[\"copilot.history\"]`. Il s'agit d'un tableau de `HistoryMessageUser | HistoryMessageAssistant` : ",
  "8D69427283A1E69503F9": "Conversation continue",
  "1E8D05E81058821B0CC7": "exécutera le script `tool` et placera les résultats dans l'historique du chat. ",
  "2B0B3F5652F484EF3C78": "Script par défaut ",
  "D65AB787DC4E96627AA2": "Le script suivant peut être utilisé comme modèle de départ pour créer le script par défaut lorsque l'utilisateur n'utilise pas la commande `/run`. ",
  "D9D9638637997C2CFF89": "Fonctionnalités non prises en charge",
  "C77E2572582A20CAC5AF": "référence",
  "4F1B637AE09A8B256203": "instructions personnalisées ",
  "EBA1A56FF89F6BC98910": "Sessions de chat augmentées",
  "1FAC0A4C5B269CE56C09": "Voici comment démarrer des sessions de chat en utilisant l'invite `genaiscript`. ",
  "787621A56FC279BBB914": "Sélectionnez l'icône ** ",
  "92502947D0445CF6A101": "Joindre le contexte",
  "67B4C6E6D8A9C4EBBE6A": "[GitHub Gists]",
  "6D4D9B9602C95682C3FD": "Exécution de GenAIScript à partir de Gists",
  "90868356AEB990B92462": "Le fichier gist est mis en cache localement dans ",
  "09D1FA892D72C7DA1A66": "GistPad dans Visual Studio Code",
  "938AEC74E9EB373C218D": "extension GistPad",
  "2DAE0ABF46A00CB0C7D6": "Vous pouvez ouvrir un fichier dans un Gist et l’exécuter en utilisant la commande ",
  "F82B236BB0451EFAB94B": "Vérification des types",
  "BE35A2D579C8A1C0E4DB": "au gist et configurer une référence vers celui-ci ",
  "AA56548F8859E2BA4F6B": "en haut du fichier",
  "AB69976B993D57247F3C": "clic droit sur le fichier GenAIScript du Gist",
  "B0D578A1EAA50CF87F97": "sélectionnez ",
  "F99C49C817D66056FFF2": "ouvrez le fichier ",
  "0065594B5E2E5B8EBC46": "ouvrez votre fichier GenAIScript dans l’arborescence GistPad et la vérification des types devrait fonctionner !",
  "A7CC67F9BF888B64D31C": "les imports ne se résoudront probablement pas",
  "C372CC48E840F875B823": "Certains des [esc capabilities de traitement vidéo](/genaiscript/reference/scripts/videos) sont également disponibles dans le cli. ",
  "CECD4664FA6299B8CD71": "```sh\ngenaiscript video probe myvid.mp4",
  "2BB0261BC46DB82B1634": "Exécute les tests dans les scripts en utilisant ",
  "8D39DB57BFA8E0F7ABB3": "promptfoo",
  "B8D0EE3951B874598C22": "Vous pouvez spécifier les modèles à utiliser pour les tests avec l’option ",
  "B669D9EEBBA0474AABF3": "Cette fonctionnalité nécessite d’ajouter ",
  "080B273416130AC4D073": "à vos dépendances dans le fichier `package.json`. ",
  "7EAECAD5EA37A77CDACE": "visionneuse de résultats",
  "5836ACD0F77032990E60": "Exécutez la commande ",
  "7FCC54AD2DFDB89567DF": "Nous discutons des divers risques de sécurité et des mesures d'atténuation possibles lors de l'utilisation de GenAIScript. GenAIScript hérite des mêmes risques de sécurité que l'exécution de scripts, et ajoute de nouvelles menaces en raison de la nature des sorties générées par le LLM.",
  "057F7A9EF2F0916F3264": "Nous recommandons également la lecture de la [Note de Transparence](/genaiscript/reference/transparency-note/) pour comprendre les capacités et les limites de GenAIScript.",
  "90837B5468CCE76CF1EA": "Ne faites pas confiance aux scripts",
  "4F47D9A8A49A214DBC62": "Puisque les fichiers GenAIScript `.genai.mjs` sont des fichiers JavaScript exécutables et utilisent en fait un environnement d'exécution JavaScript (VSCode ou Node), il est important de comprendre que le script peut faire tout ce que JavaScript peut faire. Cela inclut la lecture et l’écriture de fichiers, l'envoi de requêtes réseau, et l'exécution de code JavaScript arbitraire.",
  "240B1F3318297C711B58": "Ne lancez pas de scripts `.genai.mjs` provenant de sources non fiables.",
  "CED0EB25A91AB6F08D7F": "Ne faites pas confiance aux sorties du LLM",
  "A77216C12581B50E20FB": "Un script apparemment fiable pourrait utiliser des fichiers malveillants du contexte pour générer une sortie malveillante. Par exemple, en écrasant des fichiers du projet avec un nouveau code malveillant.",
  "017C879DA528DF2C9478": "dans Visual Studio Code, utilisez l’aperçu de refactorisation",
  "3548490CEA8E53D6FA2B": "dans votre CI/CD, créez une pull request avec les modifications et révisez-les",
  "C84498E4BC87EECF53F9": "Confiance dans l’espace de travail de Visual Studio Code",
  "2A22D0245691D1DDE219": "L’extension est **désactivée** lors de l’ouverture d’un dossier en [Mode Restreint](https://code.visualstudio.com/docs/editor/workspace-trust) dans Visual Studio Code.",
  "834013932A226DD62609": "Aperçu Markdown dans Visual Studio Code",
  "3BE30A318C24083A7BD2": "La sortie du LLM et la trace utilisent l’aperçu Markdown intégré de Visual Studio Code. Par défaut, [VS Code restreint le contenu affiché dans l’aperçu Markdown](https://code.visualstudio.com/Docs/languages/markdown#_markdown-preview-security). Cela inclut la désactivation de l’exécution de scripts et l’autorisation uniquement des ressources chargées via `https`.",
  "58194F9CEB8ECC1A9C89": "Traduction réalisée avec l’IA. Veuillez vérifier le contenu pour sa précision.",
  "F9EFE5BD41FC7714405E": "Actions personnalisées <a id=\"custom-actions\" />",
  "10459AF6A4D5808C65B0": "GitHub prend en charge l'empaquetage des tâches sous forme d’[actions personnalisées](https://docs.github.com/en/actions/sharing-automations/creating-actions/about-custom-actions), généralement dans un dépôt dédié. C’est une excellente manière d’empaqueter un script IA et de le partager avec d’autres.",
  "96E799C1581390C83D79": "L’interface en ligne de commande GenAIScript fournit une commande pour générer/mettre à jour le code standard afin d’empaqueter un script en tant qu’[action conteneur Docker](https://docs.github.com/en/actions/sharing-automations/creating-actions/creating-a-docker-container-action) afin qu’il puisse être utilisé dans GitHub Actions, quel que soit le langage utilisé pour écrire le script.",
  "7B8F8274F4F3D14F06C4": "Pour commencer,",
  "68D3758F312A71CFB8FD": "Créez un nouveau dépôt pour votre action.",
  "1EA788B7E9F9BAD4780C": "Ouvrez un terminal à la racine de votre dépôt.",
  "76A6B70BF57E28CB0892": "Exécutez la commande pour générer la structure de base de l’action :",
  "3116D01EB99EF9FDBFC4": "Le générateur de structure d’action écrasera les fichiers suivants :",
  "C8DF5F53D6FB22ED7858": "`action.yml` Fichier de métadonnées de l’action",
  "2A6F8933A01A75A01550": "`Dockerfile` Dockerfile pour l’action",
  "781941E983CEA859F6AE": "`README.md` Documentation de l’action",
  "EBDA5072389D0B6276C8": "`.gitignore` Fichiers à ignorer dans le dépôt",
  "3D7C137027301B0D38EE": "`.github/workflows/ci.yml` Workflow CI pour tester l’action",
  "419371DE61B3A4427F2F": "`package.json` Configuration du package pour l’action",
  "ADDC59ACA5BE58022CE1": "`devcontainer/devcontainer.json` Configuration du devcontainer pour VS Code",
  "E68F21B4DB4158146EC4": "`devcontainer/Dockerfile` Dockerfile du devcontainer pour VS Code. Doit être synchronisé avec le Dockerfile de l’action.",
  "A6350897FE0CB361E6D9": "Pour mettre à jour la structure de l’action, vous pouvez relancer la même commande :",
  "D0BC5A042356560AFA33": "Métadonnées",
  "CC00F5704A25B8A671C6": "Le fichier `action.yml` contient les métadonnées de l’action. Elles sont extraites de différentes parties de votre projet :",
  "F7ED336B1F94E3166308": "Le `name` est dérivé de l’identifiant du script.",
  "FA557AD5C04D6A0790AA": "La `description` est dérivée du `title` du script.",
  "5C2C87382FA68FE009D3": "Les `inputs` sont dérivés des [paramètres](/genaiscript/reference/scripts/parameters) du script (voir ci-dessous).",
  "B0E79BD8203D1B4D525D": "Notez que la `script.description` est utilisée pour compléter le fichier `README.md`.",
  "04AC4A180F198D3AF371": "Paramètres (Inputs)",
  "21F9C98A874E6153CFB1": "La section `inputs` du fichier `action.yml` est générée automatiquement à partir des paramètres du script. Chaque paramètre est converti en un input avec le même nom, et le type est inféré à partir du type du paramètre.",
  "B91FCBE33039CA52CED0": "Le fichier `action.yml` généré ressemblera à ceci :",
  "DBBD3C276B80BFEA68C5": "Il y a aussi des champs supplémentaires qui sont communs à toutes les actions GenAIScript :",
  "8DAC8D9134E53AA2A6E6": "`files` : Spécifie un chemin de fichier pour remplir la variable `env.files`. Pour enlever ce champ, définissez `accept : \"none\"` dans le script.",
  "2436434175473891BA9A": "`github_token` : **Cela est requis pour s’authentifier auprès de GitHub Models.** Il deviendra `INPUT_GITHUB_TOKEN` lorsque le conteneur sera créé et GenAIScript le prendra automatiquement en compte.",
  "FEF3C164F2B660F64759": "`github_issue` : Le numéro de l’issue ou pull request GitHub en cours.",
  "49B7EA9D21A628261A49": "`debug` : Le filtre pour contrôler les messages de [journalisation](/genaiscript/reference/scripts/logging) en mode debug.",
  "9477D0E7159F68221D70": "Sorties (Outputs)",
  "C43D7FB80815A78F2974": "L’action fournie quelques champs de sortie.",
  "66229E4CEC064F7C5EA7": "`text` : il s’agit du texte généré par le script.",
  "69EB5729357F6210E7A1": "`data` : il s’agit de la sortie structurée analysée et convertie en JSON. Ce champ est rempli si vous fournissez un [responseSchema](/genaiscript/reference/scripts/schemas) dans le script et si le LLM est capable de générer une réponse conforme au schéma.",
  "33CCCC46563856D77525": "Branding",
  "57BE97F53F256DE05FEF": "Le champ `branding` du `script` est utilisé pour [personnaliser l’apparence de l’action dans l’interface GitHub](https://docs.github.com/en/actions/sharing-automations/creating-actions/metadata-syntax-for-github-actions?versionId=free-pro-team%40latest\\&productId=actions\\&restPage=sharing-automations%2Ccreating-actions%2Creleasing-and-maintaining-actions#branding).",
  "7BF93980D08D0C63E6BD": "Conteneurs",
  "7F1F3466DFB0199606E8": "Par défaut, GenAIScript utilise [node:lts-alpine](https://hub.docker.com/_/node/) comme image de base pour le conteneur de l’action. Vous pouvez changer cela en spécifiant une image de base différente dans la `cli`.",
  "FDC48EC54899B2DBBBCC": "GenAIScript crée également un [devcontainer](https://code.visualstudio.com/docs/devcontainers/create-dev-container) afin que vous puissiez développer l’action dans un environnement conteneurisé (presque le même) que celui dans lequel elle s’exécute dans GitHub Action.",
  "6EFC12D2016D768EEED4": "ffmpeg, playwright et autres packages",
  "BB5DDF077788F1089803": "Pour garder le conteneur de l’action léger, GenAIScript n’inclut pas par défaut `ffmpeg`, `playwright` ou d’autres packages. Vous pouvez les ajouter au conteneur en les spécifiant dans la commande `cli`.",
  "8CE9E19A5FCB2D02E2DF": "Vous pouvez également ajouter tous les autres packages dont vous avez besoin en les spécifiant dans la commande `cli`.",
  "558BE51B669795B6B435": "Tester l’Action",
  "6297ED93006507239A07": "Votre script devrait pouvoir être testé localement en utilisant la commande `npm run dev`. N’hésitez pas à l’éditer dans `package.json`.",
  "6206790F358BFCC922E5": "Ou si vous souhaitez simuler l’environnement GitHub Action, vous pouvez définir les variables `INPUT_<paramètre>` dans l’environnement.",
  "E88E9E8D7FB3D3DB1142": "Espace de travail GitHub vs Espace de travail Action",
  "CCAF13BC37DD9D7B2353": "Lors de l’exécution de l’action dans un conteneur, le contenu du dépôt de l’action est d’abord copié dans le répertoire `/github/action`. GitHub clone le dépôt dans le répertoire `/github/workspace`.",
  "D77CED733E96B385B223": "Le `ENTRYPOINT` du `Dockerfile` est configuré pour lancer le cli `genaiscript` dans le répertoire `/github/action` puis il détecte la variable d’environnement `GITHUB_WORKSPACE` pour déterminer le répertoire de travail et y change le répertoire courant (`cwd`).",
  "BF6D898DC4323F24A6D4": "Ce mode est activé par le flag `--github-workspace` dans la commande `cli`.",
  "5BA7C353271E11767233": "Traduit à l’aide de l’IA. Veuillez vérifier la précision du contenu.",
  "508D1806BB621152A0D5": "GitHub Copilot Chat",
  "494431F06363E131AB80": "participant de chat",
  "41BC2152F13957DB1A26": "Choix du script à exécuter",
  "5954B9034F95E3B9CAC4": "Choix du modèle",
  "2E53C5BC8EB590E38879": "Renvoie le résultat de `ffprobe` dans la console. ",
  "77441F12424634593033": "Traduit avec l'aide de l'IA. Veuillez vérifier l'exactitude du contenu.",
  "0FB25F9265D93347A272": "où ",
  "D3CDBE3CA4DF7AB0D7EE": "Les fichiers peuvent également inclure des motifs ",
  "FDD0CD324CC571303E9A": "Fichiers",
  "6AD15DB2183C59105DE8": "prend un ou plusieurs ",
  "2146C3C031E94514B9C5": "glob",
  "AD7766C406C3F62DDA5B": "Résolutions des ressources",
  "51014274D733B44C77EA": "- fichier local",
  "684FA6EB030C43C7DB50": "- fichier GitHub",
  "B64A8CD2CB46CF81E6CF": "- dépôt GitHub et motif de fichiers",
  "AC4BAF7860402A219AD3": "- Gist GitHub et motif de fichiers",
  "25B5C2E48C3310578FFB": "- dépôt Git et motif de fichiers",
  "E5CDF9BAEBACF999584A": "Redirection",
  "33008BBB80FCDA33C85A": "prend le contenu de l'entrée standard et le convertit en fichier ",
  "59DFFCB59F83882EC89E": "--exclude-git-ignore",
  "870E1E8708031D746B67": "Exclut les fichiers ignorés par le fichier `.gitignore` à la racine de l’espace de travail. ",
  "FAD368079AD6D2787456": "Configure l’alias du modèle par défaut ou `large`. Utilisez `echo` pour effectuer une simulation et retourner les messages au lieu d’appeler un fournisseur de LLM. ",
  "9A047719594011C7DDEA": "Remplit les valeurs dans la carte `env.vars` pouvant être utilisées lors de l’exécution du prompt. ",
  "539686950F6BA26C929E": "Sortie",
  "B9EF9C32BDE651D6653B": "Si ",
  "A8DF3A21231B74AD6611": "ne se termine pas par ",
  "961F863F344BBB9432DB": "--json",
  "8B3EA8162043A4AD10E9": "--yaml",
  "D27FDC18F28EA08C1981": "SARIF",
  "D3C991918895D2C44D44": "ou un fichier CSV si le fichier se termine par `.csv`. ",
  "730B9CE45CABFDDBE0EB": "Émet les données analysées au format JSON, YAML ou JSONL. Si un schéma JSON est spécifié et disponible, le résultat de validation JSON est également stocké.",
  "DED5F8053DF86242F3A5": "--out-changelogs <file>",
  "3BC968F4E05BAD3A4E20": "Émet les journaux des modifications dans le fichier spécifié au format texte.",
  "0E910905B53C58968A8C": "Pull Requests et Issues <a href=\"\" id=\"pull-requests\" />",
  "78889B736C750E8E75F6": "L’interface CLI peut mettre à jour la description d’une pull request/issue et ses commentaires lorsqu’elle est exécutée dans un workflow GitHub Action ou Azure DevOps.",
  "418FA456B493D97767B0": "Configuration du workflow GitHub Action",
  "813233C759C16E9EEF5B": "Mettez à jour la configuration de votre workflow pour inclure ce qui suit :",
  "68DAD058D1B9FBBB0C5C": "ajoutez la permission `pull-requests: write` au workflow/étape",
  "356859E892F81753CC23": "définissez le secret `GITHUB_TOKEN` dans `env` lors de l’exécution du CLI",
  "E3CE1099EED4B521AFD4": "Configuration Azure DevOps",
  "C8346E010DBCD41147F7": "ajoutez `<nom_de_votre_projet> Build Service` avec le rôle **Collaborateur** au dépôt",
  "038115D8BC4297D8DF2D": "passez les secrets aux scripts, y compris `System.AccessToken`",
  "3296FE23E730302A8D63": "--pull-request-description [tag]",
  "8E0A5D0791528B0B9287": "Lorsqu’il est exécuté dans un workflow GitHub Action ou Azure DevOps sur une pull request, le CLI insère la sortie LLM dans la description de la pull request ([exemple](https://github.com/microsoft/genaiscript/pull/564))",
  "0E6E48C888E08D1CE162": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par différentes exécutions. Par défaut, c’est l’identifiant du script.",
  "EB864F52D3972040A68C": "--pull-request-comment [tag];",
  "DA39626859EECCFDBF81": "Met à jour ou insère un commentaire sur la pull request/issue avec la sortie LLM ([exemple](https://github.com/microsoft/genaiscript/pull/564#issuecomment-2200474305))",
  "E99071A55B260A9C4100": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par différentes exécutions. Par défaut, c’est l’identifiant du script.",
  "DEC8163CEF0CD0FCDC28": "--pull-request-reviews",
  "6F6C44542F2CE484B5C0": "Crée des commentaires de revue de pull request à partir de chaque annotation ([annotations](/genaiscript/reference/scripts/annotations)) ([exemple](https://github.com/microsoft/genaiscript/pull/564#pullrequestreview-2151692644)).",
  "918C428A123AF67FB53A": "En savoir plus",
  "C653C7A680C7DB699BC4": "La liste complète des options est disponible dans la [référence CLI](/genaiscript/reference/cli/commands#run).",
  "2CDE10782A65E1C72BB6": "Traduit avec IA. Veuillez vérifier l’exactitude du contenu.",
  "12ADDB156FA9D9DB7E92": "Demandes de tirage et problèmes ",
  "4ADBA7165782D632E239": "Configuration du workflow GitHub Action",
  "3B69311C7245C562A37F": "ajoutez la ",
  "ED0E04A8FDE27F20CE23": "permission `pull-requests: write` au workflow/étape",
  "573E5655F3B1356209DF": "définissez le secret ",
  "5796B5CCC3F33E183BAF": "`GITHUB_TOKEN` dans l'`env` ",
  "FB610C325BD73DE747C5": "lors de l'exécution du CLI",
  "95E7AD38B95BC7E9E39B": "Configuration Azure DevOps",
  "1851F6C625E0DE85F85E": "ajoutez ",
  "EE395454C72571941A57": "`<nomdevotreprojet> Build Service` ",
  "E8587A1F3D2405BA6358": "**Collaborateur**",
  "DEA7EC654B1D62C6B7A6": "en tant que rôle au dépôt",
  "CDB10C2B2E180C0D522B": "exemple",
  "F8FBAB0DFCBA61D0F199": "--pull-request-reviews",
  "785EBB5750A64F740522": "Créez des commentaires de revue de demande de tirage à partir de chaque ",
  "82B5A205FAC6FC150187": "annotations",
  "A1EF954066F9DC40C459": "En savoir plus",
  "9233AC6C66CD621AA373": "La liste complète des options est disponible dans la ",
  "78AA209CB8918B3753F1": "référence CLI",
  "F8CCA17564F029E3540A": "`--excluded-files` <fichiers...>",
  "EFD699E6CCC5441B3B08": "Exclut les fichiers spécifiés de l'ensemble des fichiers.",
  "CAB4AC0118398EA28638": "`--exclude-git-ignore`",
  "6CAB3167B1C8DE0BCD35": "Exclut les fichiers ignorés par le fichier `.gitignore` à la racine de l’espace de travail.",
  "8ED69E1095573BC3C570": "Configuration",
  "BA175A3DA07E726677E4": "`--model` ...",
  "E9E8750346272BFC3473": "Configure l’alias du modèle par défaut ou `large`. Utilisez `echo` pour effectuer un test sans appel à un fournisseur de LLM et retourner les messages.",
  "EE09E042C51E60628219": "`--provider` ...",
  "42C947A51B1CFF82C20D": "Charge un ensemble d’alias de modèles pour le fournisseur de LLM donné.",
  "541E058B9AC13FF1C31F": "`--vars` name=value name2=value2 ...",
  "439A3D225438C24524C5": "Remplit les valeurs dans la carte `env.vars` qui peuvent être utilisées lors de l’exécution du prompt.",
  "35B42F7D59F1A9B2182D": "Sortie",
  "62A54518E8E2A6593CAC": "`--out` <fichier|répertoire>",
  "E5047FE5086DF29928DE": "Enregistre les résultats dans un fichier JSON, ainsi que les fichiers markdown de la sortie et de la trace.",
  "BF395D3EF71FB4156016": "Si `fichier` ne se termine pas par `.json`, le chemin est traité comme un chemin de répertoire.",
  "90DEA867AFA58CA2BD75": "`--json`",
  "29B5C85FDD478A0BE6B6": "Affiche toute la réponse au format JSON vers la sortie standard.",
  "234966C6DFDB66B4B643": "`--out-trace` <fichier>",
  "6048C347A526298CC907": "Enregistre la trace en markdown dans le fichier spécifié.",
  "940A0A69138BA52A0257": "Dans un flux de travail GitHub Actions, vous pouvez utiliser cette fonctionnalité pour enregistrer la trace en résumé d’étape (`GITHUB_STEP_SUMMARY`) :",
  "06DE0DBF7450BB86CD03": "Dans Azure DevOps, vous pouvez utiliser la commande [task.uploadSummary](https://learn.microsoft.com/en-us/azure/devops/pipelines/scripts/logging-commands?view=azure-devops&tabs=bash#uploadsummary-add-some-markdown-content-to-the-build-summary) dans votre pipeline pour télécharger la trace en tant que résumé.",
  "02C0F483AD91FB16C982": "`--out-annotations` <fichier>",
  "E1BD0ED6A2B922EF7BD4": "Émet des annotations dans le fichier spécifié sous forme de tableau JSON, JSON Lines, [SARIF](https://sarifweb.azurewebsites.net/) ou fichier CSV si le fichier se termine par `.csv`.",
  "47FD836DAF560B26ED22": "Utilisez JSON Lines (`.jsonl`) pour agréger les annotations de plusieurs exécutions dans un seul fichier.",
  "BB03528635092A10553D": "`--out-data` <fichier>",
  "859CDC7FDED847651275": "Émet les données analysées au format JSON, YAML ou JSONL. Si un schéma JSON est spécifié et disponible, le résultat de la validation JSON est également enregistré.",
  "B42D5AAF0B98F3FB680F": "`--out-changelogs` <fichier>",
  "C38F0CAF2ED11CDB200F": "Émet les journaux de modifications dans le fichier spécifié sous forme de texte.",
  "7B88C7804C0206CEAC0C": "Pull Requests et Issues <a href=\"\" id=\"pull-requests\" />",
  "734860CF2663844996B7": "La CLI peut mettre à jour la description d’une pull request ou issue ainsi que les commentaires lors de l’exécution dans un pipeline GitHub Action ou Azure DevOps.",
  "00CBD16A8430BB62DE05": "Configuration du workflow GitHub Action",
  "35DB473C37B8D03B6547": "Mettez à jour votre configuration de workflow pour inclure ce qui suit :",
  "BE0B01EA94F2B21B5DDF": "ajoutez la permission `pull-requests: write` au workflow/étape",
  "30C1F23ECDA5BD8FDD85": "définissez le secret `GITHUB_TOKEN` dans `env` lors de l’exécution de la CLI",
  "4116B5895D9059A9FEC9": "Configuration Azure DevOps",
  "0856C68CC18CCC00159C": "ajoutez `<votre nom de projet> Build Service` au rôle **Collaborateur** du dépôt",
  "15E89FCE5699DF11A88E": "passez les secrets aux scripts, y compris `System.AccessToken`",
  "BFAFB8F3EAB7629C668A": "`--pull-request-description` [tag]",
  "68F22292548E68AF2C0D": "Lorsqu’il est exécuté dans un pipeline GitHub Action ou Azure DevOps sur une pull request, la CLI insère la sortie LLM dans la description de la pull request ([exemple](https://github.com/microsoft/genaiscript/pull/564))",
  "97A909026A3274C64917": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par des exécutions différentes. Par défaut, c’est l’id du script.",
  "5EE377F3D3643E29D7BA": "`--pull-request-comment` [tag];",
  "72B5295F3797E1FF5CBE": "Mets à jour ou crée un commentaire sur la pull request/issue avec la sortie LLM ([exemple](https://github.com/microsoft/genaiscript/pull/564#issuecomment-2200474305))",
  "8FCF8724E772214CE768": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par des exécutions différentes. Par défaut, c’est l’id du script.",
  "4CA412FCD58E8E7BCB75": "`--pull-request-reviews`",
  "A83D7E9E610D20CF1A73": "Crée des commentaires de revue de pull request à partir de chaque [annotation](/genaiscript/reference/scripts/annotations) ([exemple](https://github.com/microsoft/genaiscript/pull/564#pullrequestreview-2151692644)).",
  "608F26E0F6FD74EA9B5D": "En savoir plus",
  "5C901805D312E21762EC": "La liste complète des options est disponible dans la [référence CLI](/genaiscript/reference/cli/commands#run).",
  "3A7F2F02D86AC61C113B": "Traduit à l’aide de l’IA. Veuillez vérifier le contenu pour en garantir l’exactitude.",
  "554009C3A7EB106FAE9F": "`--excluded-files` *fichiers...*",
  "16797CC27A0D56DB1E6D": "Exclut les fichiers spécifiés de l'ensemble des fichiers.",
  "B36AE85F515DB8E143B3": "`--exclude-git-ignore`",
  "84576E100FD7ACD23240": "Exclut les fichiers ignorés par le fichier `.gitignore` à la racine de l’espace de travail.",
  "58BD03713EE903D28D77": "Configuration",
  "CEEC6D8B118D85C65118": "`--model` ...",
  "DA107E68DC04C52FB13B": "`--provider` ...",
  "B1D86BAACD5A0A42AA4F": "Charge un ensemble d'alias de modèles pour le fournisseur LLM donné.",
  "87369FF45E945780F136": "`--vars` name=value name2=value2 ...",
  "3C441FFFE925A7BF98FE": "Remplit les valeurs dans la map `env.vars` qui peuvent être utilisées lors de l'exécution de l'invite.",
  "4B80D1674EC9A788E943": "Sortie",
  "0B85723A746355153A2B": "`--out` <fichier|répertoire>",
  "B68CC66A683F50937511": "Sauvegarde les résultats dans un fichier JSON, ainsi que les fichiers markdown de la sortie et de la trace.",
  "83915D503E9AABBBAE60": "Si `fichier` ne se termine pas par `.json`, le chemin est traité comme un chemin de répertoire.",
  "92CC2D45769173C2E355": "`--json`",
  "8980056A0C0EEC815664": "Affiche la réponse complète au format JSON sur stdout.",
  "B9F9B05263B5C35BC22B": "`--out-trace` *fichier*",
  "843ECF0331EB1A8663BC": "Enregistre la trace au format markdown dans le fichier spécifié.",
  "74630EFCF9CB36C3296A": "Dans un workflow GitHub Actions, vous pouvez utiliser cette fonctionnalité pour sauvegarder la trace en tant que résumé de l’étape (`GITHUB_STEP_SUMMARY`) :",
  "86DBD4FA5F0F1FCB4993": "Dans Azure Dev Ops, vous pouvez utiliser la commande [task.uploadSummary](https://learn.microsoft.com/en-us/azure/devops/pipelines/scripts/logging-commands?view=azure-devops&tabs=bash#uploadsummary-add-some-markdown-content-to-the-build-summary)\ndans votre pipeline pour téléverser la trace en tant que résumé.",
  "E46FBA3C345D2142DDB4": "`--out-annotations` *fichier*",
  "D54551302F509C81B0B4": "Émet les annotations dans le fichier spécifié au format tableau JSON, JSON Lines, [SARIF](https://sarifweb.azurewebsites.net/) ou un fichier CSV si le fichier se termine par `.csv`.",
  "A37C56081FE7027BDF9C": "Utilisez JSON lines (`.jsonl`) pour agréger les annotations de plusieurs exécutions dans un seul fichier.",
  "3149530715254E1D4247": "`--out-data` *fichier*",
  "67FC38865D2F485642FC": "Émet les données analysées au format JSON, YAML ou JSONL. Si un schéma JSON est spécifié\net disponible, le résultat de la validation JSON est également stocké.",
  "314164D6928A03218EF1": "`--out-changelogs` *fichier*",
  "75F510CFDDC7B774B747": "Émet les journaux de modifications dans le fichier spécifié au format texte.",
  "D515FD2988BD6D873C9A": "Pull Requests et Issues <a href=\"\" id=\"pull-requests\" />",
  "0CB5F6FF7E8D04605B63": "L’interface en ligne de commande peut mettre à jour la description et les commentaires d’une pull request/issue lorsqu'elle est utilisée dans un workflow GitHub Action ou Azure DevOps.",
  "4A3B8492437A599AB5EF": "Configuration du workflow GitHub Action",
  "29FD2511BD0C01E5092B": "Mettez à jour votre configuration de workflow pour inclure ce qui suit :",
  "FB54A4252995EC0B9B6E": "ajoutez l’autorisation `pull-requests: write` au workflow/étape",
  "36DA56F283C39DC84BAC": "définissez le secret `GITHUB_TOKEN` dans l’environnement `env` lors de l’exécution de la CLI",
  "6AE1C20A3523CD9254D3": "Configuration Azure DevOps",
  "ABEF5B22A4089A0965B4": "ajoutez `<nom de votre projet> Build Service` au rôle **Collaborator** du dépôt",
  "C2D38A3AA23E95E0644D": "passez les secrets aux scripts, y compris `System.AccessToken`",
  "967F14CD10C1F05E7534": "`--pull-request-description` \\[tag]",
  "3FF003FCE20505198A63": "Lorsqu’elle est exécutée dans un workflow GitHub Action ou Azure DevOps sur une pull request,\nLa CLI insère la sortie LLM dans la description de la pull request ([exemple](https://github.com/microsoft/genaiscript/pull/564))",
  "78DE43865759A22FDBAD": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par différentes exécutions. Par défaut, c’est l’identifiant du script.",
  "BE7D313DE348C39EFFAD": "`--pull-request-comment` \\[tag];",
  "20D910E452CC851A7007": "Ajoute ou met à jour un commentaire sur la pull request/issue avec la sortie LLM ([exemple](https://github.com/microsoft/genaiscript/pull/564#issuecomment-2200474305))",
  "FA36B4434C3D08C2D625": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par différentes exécutions. Par défaut, c’est l’identifiant du script.",
  "68FD176433C0266A2B08": "`--pull-request-reviews`",
  "DA5858E111DE1C59DF0A": "Crée des commentaires de revue de pull request à partir de chaque [annotation](/genaiscript/reference/scripts/annotations)\n([exemple](https://github.com/microsoft/genaiscript/pull/564#pullrequestreview-2151692644)).",
  "9147EE27BA0282B41438": "En savoir plus",
  "473273BC6FFF2A9D7E39": "La liste complète des options est disponible dans la [référence CLI](/genaiscript/reference/cli/commands#run).",
  "54853EBCA6E2EB6BD31B": "Traduit par IA. Veuillez vérifier l’exactitude du contenu.",
  "6D6BC8749B189EBE58B8": "Émet des journaux des modifications dans le fichier spécifié en texte.",
  "B954E15CD82439635EED": "`--out` *fichier|répertoire*",
  "1E617C90A2A30A84FC9C": "Enregistre les résultats dans un fichier JSON, ainsi que les fichiers markdown de la sortie et de la trace.",
  "6F2B4691CD70151EA26D": "Si le `fichier` ne se termine pas par `.json`, le chemin est traité comme un chemin de répertoire.",
  "C7ED39EBBDC8DD8D520F": "`--json`",
  "7092817CF2B332921281": "Affiche toute la réponse au format JSON sur la sortie standard (stdout).",
  "A9582B0DD8013AC5A96D": "`--out-trace` *fichier*",
  "4989FC9B637944F85D9E": "Enregistre la trace au format markdown dans le fichier spécifié.",
  "A3FF3FB75C942DFFEE90": "Dans un flux de travail GitHub Actions, vous pouvez utiliser cette fonctionnalité pour enregistrer la trace en tant que résumé d'étape (`GITHUB_STEP_SUMMARY`) :",
  "D7EBBD98988013EB4AE5": "Dans Azure Dev Ops, vous pouvez utiliser la commande [task.uploadSummary](https://learn.microsoft.com/en-us/azure/devops/pipelines/scripts/logging-commands?view=azure-devops&tabs=bash#uploadsummary-add-some-markdown-content-to-the-build-summary)\ndans votre pipeline pour téléverser la trace en tant que résumé.",
  "59D98335C2B3B44F49D9": "`--out-annotations` *fichier*",
  "376F2E35F5F7686744D2": "Émet des annotations dans le fichier spécifié sous forme de tableau JSON, JSON Lines, [SARIF](https://sarifweb.azurewebsites.net/) ou fichier CSV si le fichier se termine par `.csv`.",
  "8DE0EBF8E2D0E1670F36": "Utilisez JSON Lines (`.jsonl`) pour agréger les annotations provenant de plusieurs exécutions dans un seul fichier.",
  "F8F9499D9CD65EFC5257": "`--out-data` *fichier*",
  "3B70EE1E6B8A0A0DAB3F": "Émet des données analysées au format JSON, YAML ou JSONL. Si un schéma JSON est spécifié et disponible, le résultat de la validation JSON est également stocké.",
  "C179D6C4D0D3FEB9115E": "`--out-changelogs` *fichier*",
  "57E91460261927D8933D": "Émet les journaux des modifications dans le fichier spécifié en tant que texte.",
  "0BFE37EF89B11823BB4C": "Pull Requests et Issues <a href=\"\" id=\"pull-requests\" />",
  "094F8798F82199248A95": "L'interface en ligne de commande peut mettre à jour la description d'une pull request/issue et les commentaires lorsqu'elle s'exécute dans un workflow GitHub Action ou Azure DevOps.",
  "139A428249489777953C": "Configuration du workflow GitHub Action",
  "3441684B80FE042A33D9": "Mettez à jour la configuration de votre workflow pour inclure ce qui suit :",
  "9F375CDE804161CA3AC3": "ajoutez la permission `pull-requests: write` au workflow/step",
  "D7F906E11213AB0968BE": "définissez le secret `GITHUB_TOKEN` dans la variable d'environnement `env` lors de l'exécution de la CLI",
  "C69AB19C73208D27C0CF": "Configuration Azure DevOps",
  "9EEB2D0EF7BCBD5269B7": "ajoutez `<nom de votre projet> Build Service` dans le rôle **Collaborator** du dépôt",
  "DDD6A0E2E8C649E35A6D": "transmettez les secrets aux scripts, incluant `System.AccessToken`",
  "F8764D831AD53DAA8010": "`--pull-request-description` \\[tag]",
  "E7933F58AE3DC1569978": "Lors de l'exécution dans un workflow GitHub Action ou Azure DevOps sur une pull request, la CLI insère la sortie LLM dans la description de la pull request ([exemple](https://github.com/microsoft/genaiscript/pull/564))",
  "E52785B949F3D1911905": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par différentes exécutions. Par défaut, c'est l'id du script.",
  "415CA247338EC6360D4E": "`--pull-request-comment` \\[tag];",
  "C708CC2E20162DDE2A73": "Crée ou met à jour un commentaire sur la pull request/issue avec la sortie LLM ([exemple](https://github.com/microsoft/genaiscript/pull/564#issuecomment-2200474305))",
  "A4BC72F254FED8305D7A": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par différentes exécutions. Par défaut, c'est l'id du script.",
  "C194BCF5C6719DF38047": "`--pull-request-reviews`",
  "7785AFACABB6901FBCA0": "Crée des commentaires de revue pull request à partir de chaque annotation [annotations](/genaiscript/reference/scripts/annotations)\n([exemple](https://github.com/microsoft/genaiscript/pull/564#pullrequestreview-2151692644)).",
  "B1A82B9F18254848C9D7": "Lire plus",
  "A38AB89467CD8957CA74": "La liste complète des options est disponible dans la [référence CLI](/genaiscript/reference/cli/commands#run).",
  "E059E20E14E2A8E145AE": "Traduit par IA. Veuillez vérifier l'exactitude du contenu.",
  "9FF35226A36930347DD4": "Exécute un script sur des fichiers et transmet la sortie du LLM vers stdout ou un dossier à partir de la racine de l'espace de travail.",
  "9B7F4BCDD60C2941083E": "où `<script>` est l'identifiant ou le chemin du fichier de l'outil à exécuter, et `<files...>` est le nom du fichier de spécification sur lequel l'exécuter.",
  "EF479311DCA6379EA4DB": "Les fichiers peuvent également inclure des motifs [glob](https://en.wikipedia.org/wiki/Glob_\\(programming\\)).",
  "AC8326BF16702DB2C63C": "Si plusieurs fichiers sont spécifiés, tous les fichiers sont inclus dans `env.files`.",
  "CA94C5457FDE2519E52F": "Fichiers",
  "1B058BC2E700D00C9A21": "`run` accepte un ou plusieurs motifs [glob](https://en.wikipedia.org/wiki/Glob_\\(programming\\)) pour faire correspondre les fichiers dans l'espace de travail.",
  "78AF2C05C28EBBAA044F": "Résolutions des ressources",
  "6EF1953493E78F323468": "GenAIScript gérera et résoudra automatiquement certains motifs d'URI spécifiques.",
  "43CFB2FB739E2EE4B566": "`file://` - fichier local",
  "996ED1135996A8651700": "`https://github.com/<owner>/<repo>/blob/<branch>/<path>` - fichier GitHub",
  "85056FBB445AFD02DAD8": "`https://github.com/<owner>/<repo>.git/<file glob>` - dépôt GitHub et motif de fichiers",
  "62D6A135BFDBB2BAA152": "`gist://id/<file glob>` - GitHub Gist et motif de fichiers",
  "EC0EDDD65EE8BB2300EF": "`https://gist.github.com/<owner>/<id>/<file glob>` - GitHub Gist et motif de fichiers",
  "DCD5F0A52AA46B41CFEA": "`git://<owner>/<repo>.git/<file glob>` - dépôt Git et motif de fichiers",
  "C350893DAE58D769B068": "Piping",
  "9A3BBE5A55E288A3B561": "`run` prend le contenu de stdin et le convertit en fichier `stdin`.  \nLa sortie du LLM est envoyée vers `stdout`, tandis que le reste des journaux est envoyé vers `stderr`.",
  "CCDEEC8641B12682C06D": "`--excluded-files` *files...*",
  "A8505C444D3065D129E5": "Exclut les fichiers spécifiés de l'ensemble de fichiers.",
  "B175653E83D89FA9AC6D": "`--exclude-git-ignore`",
  "0319CD1871DF87EC2775": "Exclut les fichiers ignorés par le fichier `.gitignore` à la racine de l'espace de travail.",
  "AAAA9082D2EB0C4073DE": "Configuration",
  "94B37654AAE3D53BD5D0": "`--model` ...",
  "BE1CA3D3F1A61EFEECE2": "Configure l'alias du modèle par défaut ou `large`. Utilisez `echo` pour une exécution à blanc et retourner les messages au lieu d'appeler un fournisseur LLM.",
  "2B61ECFEDF09B1FFE0D8": "`--provider` ...",
  "05172076029CBBBBC5AC": "Charge un ensemble d'alias de modèles pour le fournisseur LLM donné.",
  "656B5EC995B86D00152A": "`--vars` name=value name2=value2 ...",
  "35B6884F9774E633B473": "Remplit les valeurs dans la carte `env.vars` qui peuvent être utilisées lors de l'exécution de l'invite.",
  "5FBE4061DFF87AB17B78": "Sortie",
  "FB072BAE30461A7F44D8": "`--out` *file|directory*",
  "023CC76613E77D64CD40": "Sauvegarde les résultats dans un fichier JSON, ainsi que les fichiers markdown de la sortie et de la trace.",
  "8E2F447E01106ECF6085": "Si `file` ne se termine pas par `.json`, le chemin est considéré comme un chemin de répertoire.",
  "E086986209FE4F3B07EE": "`--json`",
  "5A989C5FD2869CE1B506": "Sort la réponse complète au format JSON vers stdout.",
  "924B33FD868D9D3DCEDE": "`--out-trace` *file*",
  "9A633E8391439487A32A": "Enregistre la trace en markdown dans le fichier spécifié.",
  "10F81D4F4491041175A3": "Dans un workflow GitHub Actions, vous pouvez utiliser cette fonction pour sauvegarder la trace comme résumé d'étape (`GITHUB_STEP_SUMMARY`) :",
  "BF4529C828823860A7DC": "Dans Azure DevOps, vous pouvez utiliser la [task.uploadSummary](https://learn.microsoft.com/en-us/azure/devops/pipelines/scripts/logging-commands?view=azure-devops\\&tabs=bash#uploadsummary-add-some-markdown-content-to-the-build-summary) dans votre pipeline pour téléverser la trace en tant que résumé.",
  "00446C0EC2AC898B57E3": "`--out-annotations` *file*",
  "354CF89C817D77B179DE": "Émet les annotations dans le fichier spécifié comme un tableau JSON, JSON Lines, [SARIF](https://sarifweb.azurewebsites.net/) ou un fichier CSV si le fichier se termine par `.csv`.",
  "774B3809559E9DF12138": "Utilisez JSON lines (`.jsonl`) pour agréger les annotations de plusieurs exécutions dans un seul fichier.",
  "611108B502D59DE8D79B": "`--out-data` *file*",
  "1A910F306F28F1630DE3": "Émet les données analysées au format JSON, YAML ou JSONL. Si un schéma JSON est spécifié et disponible, le résultat de la validation JSON est également enregistré.",
  "590BAA74834C2E556F11": "`--out-changelogs` *file*",
  "D0F6D6B458CED52956C5": "Émet les journaux des modifications dans le fichier spécifié en texte.",
  "052AC25EE1A8D739F3F2": "Pull Requests et Issues <a href=\"\" id=\"pull-requests\" />",
  "416EB6C5F992380B12A1": "La CLI peut mettre à jour une description et des commentaires de pull request/issue lorsqu'elle est exécutée dans un GitHub Action ou un pipeline Azure DevOps.",
  "3419135625E44D85AA15": "Configuration du workflow GitHub Action",
  "AFD20434AB7D7E97F469": "Mettez à jour votre configuration de workflow pour inclure ce qui suit :",
  "E39EF7A0572773BE3184": "ajoutez la permission `pull-requests: write` au workflow/étape",
  "58EA96FDF6969F1E7237": "définissez le secret `GITHUB_TOKEN` dans `env` lors de l'exécution de la CLI",
  "9555DB3B34707479E7BC": "Configuration Azure DevOps",
  "4B41B48A37893EA731C8": "ajoutez `<votre nom de projet> Build Service` dans le rôle **Collaborateur** au dépôt",
  "C56FB413FACB81DD6AA7": "passez les secrets aux scripts, y compris `System.AccessToken`",
  "CFEE2C16D6B268783F69": "`--pull-request-description` \\[tag]",
  "792257C708FA9F4AE4D0": "Lorsqu'il est exécuté dans un GitHub Action ou un pipeline Azure DevOps sur une pull request, la CLI insère la sortie du LLM dans la description de la pull request ([exemple](https://github.com/microsoft/genaiscript/pull/564))",
  "0ED3809884B3976733DA": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par différentes exécutions. La valeur par défaut est l'identifiant du script.",
  "2590E7DE9790C8741358": "`--pull-request-comment` \\[tag];",
  "1951B273675FB010FA66": "Met à jour ou ajoute un commentaire sur la pull request/issue avec la sortie du LLM ([exemple](https://github.com/microsoft/genaiscript/pull/564#issuecomment-2200474305))",
  "5B965BAC1A96B095DAF7": "`--pull-request-reviews`",
  "C1F092F39B882B739CC6": "Crée des commentaires de revue de pull request à partir de chaque [annotation](/genaiscript/reference/scripts/annotations) ([exemple](https://github.com/microsoft/genaiscript/pull/564#pullrequestreview-2151692644)).",
  "A6DD82DFA7F3512898FB": "En savoir plus",
  "35D320070FAA553FCE16": "La liste complète des options est disponible dans la [référence CLI](/genaiscript/reference/cli/commands#run).",
  "3FF7CCCF79781EF8016C": "Traduit par IA. Veuillez vérifier le contenu pour plus de précision.",
  "7FB8344E3525B6ED4AE4": "fichier|répertoire",
  "EAB8D8C1B172CE0E5531": "Vous pouvez lancer le [cli](/genaiscript/reference/cli) en tant que **serveur Web API** pour exposer les scripts en tant que points de terminaison REST.\nLe serveur est compatible OpenAPI 3.1 et utilise [fastify](https://www.fastify.io/) en interne.",
  "232E7702DE033045F485": "Scripts en tant que points de terminaison REST",
  "19DB41C657F4CEFBF0A3": "Le serveur Web API expose les scripts en tant que points de terminaison REST. Il utilise le titre, la description, les groupes et les tags pour générer une spécification OpenAPI 3.1 et un serveur avec fastify.",
  "9BB6C8D1978FD2BFBFBC": "Les paramètres des points de terminaison OpenAPI sont déduits automatiquement à partir des [paramètres du script](/genaiscript/reference/scripts/parameters) et des fichiers.\nLes paramètres OpenAPI remplissent ensuite l’objet `env.vars` dans le script comme d’habitude.",
  "5DF3D0F50D0B88718A71": "La sortie du point de terminaison OpenAPI est la sortie du script. C’est généralement le dernier message de l’assistant pour un script qui utilise le contexte de niveau supérieur.\nLa sortie du point de terminaison OpenAPI correspond à la sortie du script, typiquement le dernier message de l’assistant ou tout contenu passé à [env.output](/genaiscript/reference/scripts/output-builder).",
  "563AE5B602477A24D472": "Voyons un exemple. Voici un script `task.genai.mjs` qui prend en entrée un paramètre `task`, construit une invite, et renvoie la sortie du LLM.",
  "F531B82BD20B49FFF67F": "Un script plus avancé pourrait ne pas utiliser le contexte de niveau supérieur et utiliser à la place `env.output` pour transmettre le résultat.",
  "36A9C9ABB99727826C1A": "Route",
  "9237729D049B7300C579": "La route par défaut est `/api` et la spécification OpenAPI est disponible à `/api/docs/json`.\nVous pouvez modifier la route à l’aide de l’option `--route`.",
  "13B39E3CD764C32B00A2": "La spécification OpenAPI sera disponible à `/genai/docs/json`.\nVous pouvez également modifier le port avec l’option `--port`.",
  "9336C0CFB008B4F20D2B": "Le serveur sera disponible à l’adresse `http://localhost:4000/genai`.",
  "33A722DB0EE23D74B38E": "Script de démarrage",
  "196B0812E7A32EF7C222": "Vous pouvez spécifier un identifiant de script de démarrage dans la ligne de commande avec l’option `--startup`.\nIl sera exécuté après le démarrage du serveur.",
  "0B6F703DD5D3FC9B8791": "Vous pouvez utiliser ce script pour charger des ressources ou effectuer toute autre configuration nécessaire.",
  "78B696DD7CFBD042C079": "Filtrage des scripts",
  "AE3B15C687A98017DA0A": "Si vous devez filtrer les scripts exposés en tant que points de terminaison OpenAPI, vous pouvez utiliser le flag `--groups` et définir le groupe `openapi` dans vos scripts.",
  "6814D1F94D37564F603D": "Exécution de scripts depuis un dépôt distant",
  "7023F93A4C75DF715C26": "Vous pouvez utiliser l’option `--remote` pour charger des scripts depuis un dépôt distant.\nGenAIScript effectuera un clonage superficiel (shallow clone) du dépôt et exécutera le script depuis le dossier cloné.",
  "96A43D5D7967DE10DE47": "Il existe des flags additionnels pour contrôler le clonage du dépôt :",
  "6E7EF477181E656AF1B8": "`--remote-branch <branch>` : La branche à cloner depuis le dépôt distant.",
  "2D480DC4EF85ADD6D757": "`--remote-force` : Force le clonage même si le dossier cloné existe déjà.",
  "EDB105A9765AD7511EDC": "`--remote-install` : Installe les dépendances après le clonage du dépôt.",
  "2368B480DF73CD461542": "Comme toujours, soyez prudent lorsque vous exécutez des scripts provenant d’un dépôt distant.\nAssurez-vous de faire confiance à la source avant d’exécuter le script et envisagez de verrouiller sur un commit spécifique.",
  "E05AB61E140CD581E406": "Linting",
  "04F91874A807F93B84D4": "Vous pouvez utiliser [spectral](https://github.com/stoplightio/spectral) pour analyser vos spécifications OpenAPI.",
  "FB9E6B849E53BADE0789": "Enregistrez ce fichier `.spectral.yaml` à la racine de votre projet :",
  "6860DFA7D5D3ECD943D1": "Lancez le serveur API",
  "3052C5A126B951C96577": "Exécutez le linter spectral",
  "8E4EF482D250328E0D74": "Les bases de GenAIScript",
  "327F44E56EC8DAF1B703": "Introduction",
  "8B2F10CD9E944FCEBC7F": "GenAIScript est un cadre qui permet aux équipes, y compris aux non-développeurs, de créer et d'utiliser des scripts améliorés par l'IA pour soutenir leurs flux de travail. GenAIScript offre un support pour la rédaction et le débogage de scripts JavaScript incorporant des appels aux modèles fondamentaux et aux grands modèles de langage (LLM) [^1] dans leur exécution. GenAIScript est un cadre de programmation qui permet à ses utilisateurs de rédiger des scripts d'IA (que nous appelons GenAIScript), de déboguer ces scripts dans un environnement de développement qui est une extension de VS Code, et de packager ces scripts dans une interface en ligne de commande pouvant être déployée dans de nombreux contextes.",
  "D4E8DC7ED3F774DFD93B": "Notre extension VS Code facilite la rédaction d'un GenAIScript en écrivant du langage naturel en syntaxe markdown accompagné d'une petite quantité de programmation JavaScript stylisée. Notre cadre permet aux utilisateurs de tirer parti de plusieurs modèles LLM, de paramétrer les appels aux modèles, d'exécuter et de déboguer des scripts, de tracer la construction des prompts LLM et de fournir une trace complète de l'exécution depuis la construction du prompt jusqu'à la génération par le LLM et l'analyse du résultat du LLM. Notre cadre permet également d'extraire plusieurs formes de sorties des générations LLM, incluant des sorties sous forme de fichiers de différents types, des sorties destinées à être des modifications de fichiers existants et des sorties dans des formats structurés, tels que JSON.",
  "4C6DE9D6EB2EB20BA2B7": "Termes clés",
  "7A39FCB080306672CFAB": "**GenAIScript** Un programme JavaScript stylisé qui définit le contexte pour l'appel au LLM, permet l'exécution arbitraire de code JavaScript, prépare l'entrée du prompt pour le LLM, appelle le LLM et décompresse cette sortie du LLM selon les instructions données dans le prompt.",
  "267AB13EB02F73D6BE3B": "**GPVM** : Un système d'exécution qui, donné un GenAIScript, exécute ce GenAIScript, ce qui implique d'intégrer le contexte dans un prompt, d'appeler le LLM spécifié, et d'extraire le contenu du résultat du LLM.",
  "90CCFCBCE927F359439E": "**Extension GenAIScript pour VS Code** Un addon pour VS Code qui offre aux utilisateurs des méthodes faciles pour créer, éditer, exécuter et déboguer des GenAIScripts.",
  "899730C0C19FD17BBC6D": "**Modèles fondamentaux et LLMs** Bien que GenAIScript supporte actuellement différents LLMs, nous prévoyons d'incorporer à l'avenir des modèles fondamentaux additionnels au-delà des grands modèles de langage.",
  "78463AE90E8C6048A3FE": "Capacités",
  "3FC0DECD411E73BBF7E8": "Comportement du système",
  "022386C57C452F919BF7": "GenAIScript est un cadre généraliste de création de scripts AI permettant l'intégration fluide de l'exécution de code et des appels à des modèles fondamentaux/LLM. Un GenAIScript est un programme JavaScript dans un format stylisé qui permet aux utilisateurs de spécifier facilement le contexte et le prompt du LLM, d'invoquer un modèle spécifié, et de parser la sortie résultante selon les spécifications de l'utilisateur. Cette fonctionnalité permet même aux utilisateurs non programmeurs d'inspecter les résultats du modèle et de les vérifier pour en assurer la justesse.",
  "DEC24128FA72976F9EDD": "GenAIScript peut être écrit dans n'importe quel IDE, mais l'add-in GenAIScript pour VS Code rend particulièrement facile la création, l'exécution et le débogage de GenAIScripts. Les utilisateurs de GenAIScript peuvent mettre en œuvre des outils qui génèrent et éditent plusieurs fichiers avec un seul outil, et notre intégration avec VS Code exploite la fonctionnalité existante de refactorisation pour permettre aux utilisateurs de voir facilement les résultats de l'exécution de l'outil. L'add-in supporte la création d'un nouveau GenAIScript, l'invocation d'un GenAIScript donné, la traçabilité de l'exécution du GenAIScript dans l'établissement du contexte LLM et du prompt final, et la retranscription de la sortie LLM dans les éléments spécifiés par l'utilisateur. Des exemples de toutes ces capacités sont consultables dans les documents du dépôt GenAIScript : [microsoft/GenAIScript: Generative AI Scripting (github.com)](https://microsoft.github.io/genaiscript/)",
  "498035A205239414C1C4": "L'objectif de GenAIScript est de permettre à une large gamme d'utilisateurs potentiels d'innover en construisant des scripts propulsés par l'IA et d'identifier de nouvelles façons d'exploiter l'IA pour leurs tâches quotidiennes. Nous attendons que les développeurs professionnels, qui sont familiers avec l'écriture et l'utilisation de scripts pour améliorer leur productivité, soient les premiers utilisateurs de GenAIScript. GenAIScript leur offrira un avantage car ce cadre peut faire beaucoup de choses que les scripts existants écrits dans des langages de script traditionnels comme JavaScript ou Python ne peuvent pas faire. Bien que les développeurs puissent utiliser d'autres cadres, tels que langchain et Semantic Kernel, qui intègrent des appels aux LLM dans des langages tels que Python, ces cadres requièrent plus d'efforts utilisateur et bénéficient de moins de support IDE que GenAIScript. En fin de compte, parce que notre objectif est de rendre GenAIScript facile à rédiger, modifier, déboguer et exécuter, nous prévoyons qu'il sera utile bien au-delà des développeurs professionnels. Un impact majeur de GenAIScript sera de permettre aux non-développeurs d'innover et de construire des GenAIScripts qui améliorent leur productivité. Nous illustrons ce point avec des exemples ci-dessous.",
  "650D4ADFAACDD7393F17": "Documentation",
  "6538B4081EB5532E8A50": "Pour aider les utilisateurs à débuter avec GenAIScript, nous incluons dans notre dépôt une documentation qui illustre à travers des extraits de code le contenu de plusieurs GenAIScripts différents. La documentation montre à la fois à quoi ressemble le GenAIScript d'exemple et quel est l'effet produit par le GenAIScript agissant sur une entrée particulière. Bien que ces exemples soient destinés à expliquer la technologie, ils ne sont pas destinés à servir de base pour des outils écrits par les utilisateurs.",
  "C4664832D8713AD84B64": "Cas d'utilisation",
  "A6A2D2F990692915C323": "Usages prévus",
  "1544D220C1F62FDCA941": "GenAIScript peut être utilisé dans n'importe quel contexte où un script en ligne de commande écrit dans un autre langage pourrait être utilisé, mais les cas d'usage sont bien plus ambitieux car le LLM peut faire beaucoup plus que du code ordinaire. Voici quelques exemples :",
  "EE2BA563875B36FB431E": "**Vérification de potentielles incohérences dans un ensemble de fichiers de configuration ou autre contenu.** Utilisant le LLM, un GenAIScript peut inspecter des fichiers de configuration et exploiter la compréhension du LLM des erreurs courantes pour les détecter et les signaler. Avant les LLMs, les développeurs professionnels écrivaient des outils, comme lint[^2], qui sont des programmes complexes détectant les incohérences dans la syntaxe de leurs fichiers de code. Avec GenAIScript, des outils de vérification peuvent être écrits pour des scénarios beaucoup plus riches (comme la vérification de noms de variables inappropriés), et par des personnes qui ne sont pas des développeurs professionnels.",
  "78DA4EE7246C93C268E2": "**Automatisation de la traduction de documents :** Étant donné une documentation dans un dépôt rédigée dans une langue naturelle, un GenAIScript peut être écrit pour traduire cette documentation dans une autre langue. Pour un exemple spécifique de l'importance de GenAIScript pour cet usage, considérez la tâche de maintien de la localisation de la documentation MakeCode[^3]. La documentation MakeCode comporte près de 2 millions de fichiers, qui sont typiquement en markdown avec un mélange d'extraits de code. De nombreux documents sont partiellement traduits (au niveau des paragraphes). Pour vérifier la justesse des traductions de documents, il y a 3500 traducteurs bénévoles inscrits pour plus de 35 langues. On ne peut pas simplement appliquer Bing Translate pour ce cas d'usage, car cela détruit généralement les extraits de code. Avec GenAIScript, nous pouvons avoir un script qui passe en revue chaque fichier de documentation, récupère la version localisée actuelle et assemble un prompt pour demander au LLM de remplir les traductions manquantes, tout en laissant intactes les traductions existantes. Parce que le modèle LLM que nous utilisons a déjà été entraîné sur des exemples et de la documentation MakeCode, il connaît la syntaxe.",
  "38CE9BB7CF2475F17E60": "**Création d'une version courte d'un document plus long en résumant chaque chapitre.** Les LLMs sont très efficaces pour résumer des documents. Un GenAIScript peut être écrit pour prendre chaque chapitre d'un long document et le résumer dans une section d'un document plus court.",
  "C5EEC14B63A3DF54B209": "**Traduction d'un monologue en dialogue.** À partir d'un monologue tiré d'une transcription vidéo, un GenAIScript peut être écrit pour réécrire ce monologue en un dialogue entre deux personnes (semblable à des commentateurs sportifs discutant entre eux) afin de rendre la vidéo plus intéressante et accessible.",
  "0D89021A20AE6E401BDB": "Usages non prévus",
  "D4C9FDA2BEF29E9598B2": "GenAIScript est un cadre général pour la création de scripts. Par conséquent, un adversaire peut utiliser GenAIScript pour rédiger des scripts adversariaux pouvant être employés à des fins malveillantes. Tous les usages adversariaux de GenAIScript pourraient aussi être implémentés dans d'autres cadres d'extension linguistique LLM tels que Semantic Kernel, autogen et langchain, donc le danger des usages non prévus de GenAIScript provient de la possibilité qu'il facilite la rédaction de scripts adversariaux. Ce problème est présent dans toute infrastructure qui facilite la programmation, y compris des langages tels que PowerShell, JavaScript et Python, ainsi que des IDE comme VS Code et Visual Studio. Bien que nous ne puissions empêcher les usages non prévus, nous encouragerons les utilisateurs à considérer les pratiques d'IA responsable lorsqu'ils construisent des GenAIScripts. Nous fournissons plus de détails sur les problèmes liés à la sécurité et à la confiance dans [sécurité et confiance](https://microsoft.github.io/genaiscript/reference/security-and-trust/).",
  "C9FEFF9D812FA27FD573": "Bonnes pratiques pour les modèles fondamentaux",
  "6131F0EE7CC4A4F22377": "Nous encourageons vivement les utilisateurs de GenAIScript à utiliser des modèles fondamentaux et des LLMs qui supportent des atténuations robustes de l'IA responsable, comme les services Azure Open AI (AOAI). Ces services mettent continuellement à jour les mesures de sécurité et d'atténuation RAI pour refléter notre compréhension à jour sur la manière de déployer et d'utiliser les modèles fondamentaux de la manière la plus responsable. Voici des ressources pour aider à comprendre et appliquer les meilleures pratiques lors de l'utilisation de modèles fondamentaux pour les scripts et applications :",
  "41974C573665DD49ED12": "[Article de blog sur les fonctionnalités d'IA responsable dans AOAI présenté à Ignite 2023](https://techcommunity.microsoft.com/t5/ai-azure-ai-services-blog/announcing-new-ai-safety-amp-responsible-ai-features-in-azure/ba-p/3983686)",
  "A5AC6ECD96CC4A5678CD": "[Note de transparence pour Azure OpenAI Service](https://learn.microsoft.com/en-us/legal/cognitive-services/openai/transparency-note?tabs=text)",
  "54F0F569E27E7777D5B3": "[Meilleures pratiques du bureau d'IA responsable de Microsoft (ORA) sur l'utilisation des modèles AOAI](https://learn.microsoft.com/en-us/legal/cognitive-services/openai/overview)",
  "2AC954BA5BBF256EC484": "Nous recommandons de consulter la documentation [Content Safety](/genaiscript/reference/scripts/content-safety) pour plus d'informations sur la façon de se protéger contre les contenus nuisibles et les tentatives de contournement (jailbreaking).",
  "0C428B44CF3BEAA99A45": "Limitations",
  "54C6C46D327685A1F522": "GenAIScript est un cadre en évolution qui s'améliorera en fonction des retours des utilisateurs. Les limitations actuelles du cadre incluent une intégration dans un seul IDE (VS Code), un support interne pour les API OpenAI ainsi qu'un nombre relativement faible d'autres LLMs. Nous avons l'intention de permettre aux utilisateurs d'intégrer des appels à des services externes (comme RAG) dans GenAIScript pour fournir plus de contexte au LLM. Nous prévoyons également d'ajouter le support pour davantage de modèles fondamentaux au fur et à mesure de l'évolution des cas d'usage.",
  "40B5E31ED88D8609CEAA": "Nous anticipons aussi que l'accès à l'utilisation de GenAIScript évoluera. Nous avons exploré la possibilité d'invoquer le cadre GenAIScript dans le cadre d'une expérience VS Code Copilot Chat (hébergée dans VS Code Insider's Edition). Nous comprenons également que certains développeurs préféreraient implémenter leur GenAIScript avec Python plutôt qu'avec JavaScript. Nous prévoyons de construire un binding Python pour la création de GenAIScripts dans le futur.",
  "E083E645BE61CA9A9513": "Limitations techniques, facteurs opérationnels et plages",
  "A6B994A68268EF82D9DA": "GenAIScript n'utilise aucun modèle d'IA dans l'exécution du cadre lui-même. Les personnes utilisant GenAIScript pour rédiger leurs propres scripts IA seront soumises aux limitations techniques, facteurs opérationnels et plages du LLM IA que leur script utilise.",
  "643BC29EF9EE673740A7": "Bonnes pratiques pour améliorer les performances du système",
  "A46B930FFE2417F892CC": "GenAIScript encourage les utilisateurs à consulter les meilleures pratiques pour rédiger des prompts efficaces pour le LLM spécifique qu'ils invoquent dans leur outil.",
  "A1E0D70BB3879857B8F4": "En savoir plus sur l'IA responsable",
  "772047A9842E91E45F4B": "[Principes d'IA Microsoft](https://www.microsoft.com/en-us/ai/responsible-ai)",
  "10363C369317D7ADFF7C": "[Ressources Microsoft sur l'IA responsable](https://www.microsoft.com/en-us/ai/responsible-ai-resources)",
  "A770FAA93807F36BD471": "[Cours Microsoft Azure Learning sur l'IA responsable](https://docs.microsoft.com/en-us/learn/paths/responsible-ai-business-principles/)",
  "671ED3651F787736D4D8": "En savoir plus sur GenAIScript",
  "FC31B3B0AD1602D95D27": "Lisez-en plus sur GenAIScript sur notre site GitHub, [microsoft/GenAIScript: GenAI Scripting (github.com)](https://github.com/microsoft/genaiscript/)",
  "D9FAF49CACE78245206F": "Contactez-nous",
  "947941FCDAB161E16771": "Envoyez-nous vos retours sur ce document : zorn@microsoft.com, jhalleux@microsoft.com",
  "7DB779C3522F8E9E58ED": "À propos de ce document",
  "BE0C79326B93164E3971": "© 2024 Microsoft Corporation. Tous droits réservés. Ce document est fourni \"tel quel\" et à titre informatif uniquement. Les informations et opinions exprimées dans ce document, y compris les URL et autres références aux sites Web, peuvent changer sans préavis. Vous assumez les risques liés à son utilisation. Certains exemples sont donnés à titre d'illustration uniquement et sont fictifs. Aucune association réelle n'est destinée ou insinuée.",
  "FB9F6F08C6571187B766": "Ce document n'a pas pour but, et ne doit pas être interprété comme fournissant un avis juridique. La juridiction dans laquelle vous opérez peut avoir diverses exigences réglementaires ou légales qui s'appliquent à votre système d'IA. Consultez un spécialiste juridique si vous avez un doute concernant les lois ou réglementations pouvant s'appliquer à votre système, surtout si vous pensez qu'elles pourraient impacter ces recommandations. Sachez que toutes ces recommandations et ressources ne seront pas appropriées pour chaque scénario, et réciproquement, ces recommandations et ressources peuvent être insuffisantes pour certains scénarios.",
  "B2FE9A26B0541E00FA5D": "Publié : 18 mars 2024",
  "66C109A4674D8F785D54": "Dernière mise à jour : 18 mars 2024",
  "B67C3DF7E529D5C5F156": "Tout au long de ce document, lorsque nous faisons référence aux LLMs, nous entendons tout modèle fondamental compatible avec nos interfaces.",
  "51C4569DB88273B3CC49": "[Lint (logiciel) - Wikipédia](https://fr.wikipedia.org/wiki/Lint_(informatique))",
  "36DAE4A45C8947C51E75": "https://makecode.org/",
  "38EB7547CA27E8D8C8E4": "Nous discutons des différents risques de sécurité et des stratégies d'atténuation lors de l'utilisation de GenAIScript.\nGenAIScript hérite des mêmes risques de sécurité que l'exécution de scripts, et ajoute de nouvelles menaces dues à la nature des sorties générées par le LLM.",
  "C8EB6BFF16B52EA0E1ED": "Nous recommandons également de lire la [Note de transparence](/genaiscript/reference/transparency-note/)\npour comprendre les capacités et les limitations de GenAIScript.",
  "049F13D88D7BA6EB5E5D": "Le **Playground** est une application web auto-hébergée qui vous permet d'exécuter des scripts GenAIScript depuis une interface utilisateur conviviale. Il se place entre la CLI GenAIScript et l'intégration GenAIScript pour Visual Studio Code.",
  "3E00DA730A1D2694EA7F": "Le playground est encore en cours de développement.",
  "222858CCA707DA501331": "Lancement",
  "5530293631DF1E716A13": "Depuis la racine de votre espace de travail projet, exécutez",
  "F989E94098D138F1AB11": "puis accédez à l'URL affichée dans la console (généralement `http://127.0.0.1:8003/`).",
  "012F6BE443389B1078C6": "Dépôt distant",
  "6DE8D1A5AFC03782A048": "Vous pouvez exécuter le playground sur un dépôt distant en utilisant vos secrets `.env` actuels.",
  "9B6ACE4C493197C62C84": "Installation locale",
  "ACD923ADC0890AD5C7BD": "`npx` peut être lent au démarrage, surtout si vous lancez fréquemment le playground. Vous pouvez installer le playground localement avec",
  "5D3E7A129695C26C7607": "puis lancez",
  "D45FD0D6CEF9CD445DC9": "`--remote-install` : installe les dépendances après le clonage du dépôt.",
  "C535CC252731063494BD": "GenAIScript est un langage de script qui intègre les LLM comme une partie essentielle du processus de scripting, permettant aux utilisateurs de créer, déboguer et déployer facilement des scripts basés sur les LLM capables d'exécuter des tâches au-delà des capacités du code conventionnel. Ce guide de référence fournit une documentation complète pour GenAIScripts, incluant la syntaxe des scripts, les configurations LLM, l'extension VSCode et l'interface en ligne de commande.",
  "E2B7EFD5A975C1780DD2": "[Scripts](/genaiscript/reference/scripts) fournissent un cadre JavaScript spécifique au domaine pour construire des requêtes LLM.",
  "86EB4A1845FB2CE403CC": "[CLI](/genaiscript/reference/cli) documente l'interface en ligne de commande pour automatiser l'exécution des GenAIScripts.",
  "875C385D28C7F03F9B8C": "[Extension Visual Studio Code](/genaiscript/reference/vscode) offre un ensemble riche de fonctionnalités pour créer, déboguer et déployer des GenAIScripts.",
  "1B77101D2F0529F0E71F": "[GitHub Actions](https://docs.github.com/en/actions) est une plateforme d'intégration continue et de livraison continue (CI/CD) qui vous permet d'automatiser votre pipeline de construction, de test et de déploiement. Vous pouvez créer des workflows qui construisent et testent chaque pull request vers votre dépôt, ou déployer les pull requests fusionnées en production.",
  "A646DBFD12E59F2D38C6": "[Dernièrement](https://github.blog/changelog/2025-04-14-github-actions-token-integration-now-generally-available-in-github-models/), GitHub a également ajouté la possibilité d'utiliser les [GitHub Models](https://docs.github.com/en/github-models) dans les actions.",
  "4D0B631A9132F3FD298C": "La combinaison d'Actions et de Models vous permet d'exécuter GenAIScript dans le cadre de votre CI/CD.",
  "9F4A02B99B9B4B07D0C3": "Passez à la section [Actions personnalisées](#custom-actions) pour apprendre comment empaqueter un script GenAIScript en tant qu'action GitHub.",
  "B3E3A6B0AF9A35CFF4C7": "Exemples",
  "4FEB37178F8B28BFF18F": "[Étiqueteur d'issues GenAI](https://github.com/pelikhan/action-genai-issue-labeller/)",
  "C2E305FCECFDA26E90D3": "[Dédupliqueur d'issues GenAI](https://github.com/pelikhan/action-genai-issue-dedup/)",
  "3C775AF79F0A9520AA65": "[Analyseur vidéo d'issues GenAI](https://github.com/pelikhan/action-genai-video-issue-analyzer/)",
  "1B99406971A2C22FBA03": "[Commentateur de code GenAI](https://github.com/pelikhan/action-genai-commentor/)",
  "043214CA3FD03921616B": "Permissions GitHub Models",
  "E409FB8A211AD231DB31": "[Pour utiliser les Models dans une action GitHub](https://docs.github.com/en/github-models/use-github-models/integrating-ai-models-into-your-development-workflow#using-ai-models-with-github-actions), vous devez définir les `permissions` de l'action pour inclure `models: read`.",
  "8650E8B501156D4D29EC": "GenAIScript supporte nativement les GitHub Models, vous pouvez donc l'utiliser directement dans votre workflow GitHub Actions.",
  "6B34DDA46E43887CD7CE": "Utilisation de la CLI",
  "1220EE22FBE0C69FBF79": "La façon la plus simple d'utiliser GenAIScript dans une action GitHub est d'exécuter directement la [CLI](/genaiscript/reference/cli). Vous pouvez le faire en ajoutant une étape dans votre workflow qui exécute la commande `genaiscript`.",
  "63183A104F2CF3226731": "**Assurez-vous d'inclure le `GITHUB_TOKEN` dans les variables d'environnement** afin que GenAIScript puisse s'authentifier auprès des GitHub Models.",
  "934288FE09E035A51FF7": "Actions personnalisées <a id=\"custom-actions\" />",
  "8C623BD119009F7AED40": "GitHub supporte le packaging des tâches sous forme d'[actions personnalisées](https://docs.github.com/en/actions/sharing-automations/creating-actions/about-custom-actions), généralement dans un dépôt dédié. C’est un excellent moyen d'empaqueter un script IA et de le partager avec d'autres.",
  "1A5D1AFCD39D0EFA1C46": "La CLI GenAIScript fournit une commande pour générer/mettre à jour le code standard afin d'empaqueter un script sous forme d’une [action conteneur Docker](https://docs.github.com/en/actions/sharing-automations/creating-actions/creating-a-docker-container-action), ce qui permet de l'utiliser dans GitHub Actions quel que soit le langage utilisé pour écrire le script.",
  "36A9B8033FC13859CBC5": "Pour commencer,",
  "F85A8D3B291C59ADDDE8": "Créez un nouveau dépôt pour votre action.",
  "284EFF016ACE5A087B66": "Ouvrez un terminal à la racine de votre dépôt.",
  "8A49B6FCE2DF857EC3BE": "Exécutez la commande pour générer le squelette de l’action :",
  "DE1F5EC6BF7D5FEA6636": "Le générateur de squelette d’action va écraser les fichiers suivants :",
  "C9356C9814E57D0DED14": "`action.yml` Fichier des métadonnées de l'action",
  "341045A2D23FD9EF5D39": "`Dockerfile` Dockerfile pour l'action",
  "7CC4CD7F0D25663B7C37": "`README.md` Documentation pour l'action",
  "F49911E6B430D725BCA9": "`.gitignore` Fichiers à ignorer dans le dépôt",
  "6B2A410F4777265F38D2": "`.github/workflows/ci.yml` Workflow CI pour tester l'action",
  "DEB9A14008AEB3B7E432": "`package.json` Configuration du package pour l'action",
  "690E694EF5D76CFC30C9": "`devcontainer/devcontainer.json` Configuration du devcontainer pour VS Code",
  "1131A757FF24A3453A4F": "`devcontainer/Dockerfile` Dockerfile du devcontainer pour VS Code. Doit être synchronisé avec le Dockerfile de l'action.",
  "B66FBF9F12CDC8F52043": "Pour mettre à jour le squelette de l’action, vous pouvez relancer la même commande :",
  "6EB9BD5961FD738E1E51": "Métadonnées",
  "37BAE48FBA426DA1636F": "Le fichier `action.yml` contient les métadonnées de l’action. Elles sont extraites de différentes parties de votre projet :",
  "4FBB042149B333A1D99A": "Le `name` est dérivé de l’identifiant du script.",
  "6DEDA4927E15A3051F1D": "La `description` est dérivée du `title` du script.",
  "66BAD65EEF1457F16141": "Les `inputs` sont dérivés des [paramètres](/genaiscript/reference/scripts/parameters) du script (voir ci-dessous).",
  "A04D5DA3F75818A9228C": "Notez que la `script.description` est utilisée pour remplir le fichier `README.md`.",
  "A6043A867CF478412D97": "Entrées",
  "CE1C922FB470F67474E6": "La section `inputs` du fichier `action.yml` est générée automatiquement à partir des paramètres du script.\nChaque paramètre est converti en une entrée (input) portant le même nom, et le type est inféré à partir du type du paramètre.",
  "53716D7C9649F4864DD6": "Le fichier `action.yml` généré ressemblera à ceci :",
  "BD48BC13A77988AE7D40": "Il existe aussi des champs additionnels communs à toutes les actions GenAIScript :",
  "11F4FA2BF63372E2F425": "`files` : Spécifie un chemin de fichier pour alimenter la variable `env.files`. Pour retirer ce champ, mettez `accept: \"none\"` dans le script.",
  "C52AF30E1AEC86E30117": "`github_token` : **Cela est requis pour s'authentifier auprès des GitHub Models.**  \nIl deviendra `INPUT_GITHUB_TOKEN` lorsque le conteneur sera créé et GenAIScript le détectera automatiquement.",
  "36BF00D18C26C90533AC": "`github_issue` : Le numéro actuel de l’issue ou de la pull request GitHub.",
  "2228C88045FD30BD8EC5": "`debug` : Le filtre pour contrôler les messages de [logging](/genaiscript/reference/scripts/logging) de débogage.",
  "4810A02DEC1C69FB94A8": "Sorties",
  "D7273A40550CD2971C11": "L’action remplit quelques champs de sortie.",
  "2052EA4E7C466E180F30": "`text` : le texte généré par le script.",
  "A069C7D9150BECC73E76": "`data` : la structure de sortie analysée et convertie en chaîne JSON. Ce champ est rempli si vous fournissez un [responseSchema](/genaiscript/reference/scripts/schemas) dans le script et si le LLM peut générer une réponse conforme au schéma.",
  "B3430BA3BE0AF112DA66": "Branding",
  "B1400D46607B0880EA3D": "Le champ `branding` du `script` est utilisé pour [personnaliser l'apparence de l'action dans l'interface GitHub](https://docs.github.com/en/actions/sharing-automations/creating-actions/metadata-syntax-for-github-actions?versionId=free-pro-team%40latest&productId=actions&restPage=sharing-automations%2Ccreating-actions%2Creleasing-and-maintaining-actions#branding).",
  "1E5BD0233715797DC1F4": "Conteneurs",
  "AD075F1B91C6FE90F732": "Par défaut, GenAIScript utilise [node:lts-alpine](https://hub.docker.com/_/node/) comme image de base pour le conteneur de l'action.  \nVous pouvez changer cela en spécifiant une autre image de base dans la `cli`.",
  "38264D2B0BA88B3AA84C": "GenAIScript créera également un [devcontainer](https://code.visualstudio.com/docs/devcontainers/create-dev-container) afin que vous puissiez développer l’action dans un environnement conteneurisé (presque identique) à celui où elle s’exécute dans GitHub Action.",
  "30E982E8C960CAF90DF1": "ffmpeg, playwright et autres paquets",
  "964D26AC76A053015F58": "Pour garder le conteneur d’action léger, GenAIScript n’inclut pas `ffmpeg`, `playwright` ni d’autres paquets par défaut.  \nVous pouvez les ajouter au conteneur en les spécifiant dans la commande de la `cli`.",
  "2E767747E7500D0F6551": "Vous pouvez également ajouter tous les autres paquets nécessaires en les indiquant dans la commande `cli`.",
  "27E7079D0D92FE1374B5": "Tests de l’Action",
  "70011A70F87EE894F940": "Votre script devrait être testable localement en utilisant la commande `npm run dev`. N’hésitez pas à la modifier dans `package.json`.",
  "F2A67025AA9FE4C680AE": "Ou si vous souhaitez simuler l’environnement GitHub Action, vous pouvez définir les variables `INPUT_<paramètre>` dans l’environnement.",
  "F96B1FE9EC7BBBFE0973": "Workspace GitHub vs Workspace Action",
  "6537A8303C212BEC83A9": "Lors de l’exécution de l’action dans un conteneur, le contenu du dépôt de l’action est d’abord copié dans le répertoire `/github/action`. GitHub clone le dépôt dans le répertoire `/github/workspace`.",
  "44BC2FA5BA77D5D2ECF9": "Le `ENTRYPOINT` du `Dockerfile` est configuré pour lancer la CLI `genaiscript` dans le répertoire `/github/action`, puis il détecte la variable d’environnement `GITHUB_WORKSPACE` pour déterminer le répertoire de travail et change le `cwd` en conséquence.",
  "E806E16D11491ED1316F": "Ce mode est activé par l’option `--github-workspace` dans la commande `cli`.",
  "7228D0E9D8E1E072D81F": "GenAIScript prend en charge les fichiers de configuration locaux et globaux pour permettre la réutilisation des paramètres de configuration courants et des secrets entre plusieurs scripts.",
  "845E0EB2FFDE571A4988": "Résolution des fichiers .env",
  "A941447795653A390213": "GenAIScript va scanner et charger les fichiers `.env` suivants dans l’ordre suivant :",
  "B2F3528B2A84F56BF5D8": "Propriété `envFile` dans les fichiers de configuration (voir ci-dessous)",
  "E74BBEBB3FE59CFFDAA9": "Variable d’environnement `GENAISCRIPT_ENV_FILE`",
  "39873336A5F5A6153AB8": "Options de ligne de commande `--env`",
  "77055CBD200C3CF8E348": "Si aucune des options ci-dessus n’est définie, il essaiera de charger les fichiers suivants :",
  "1CDA45618681A3558043": "`~/.env`",
  "E1840084BDB6E24AEA25": "`./.env`",
  "7F865EB35C3303D5B281": "`./.env.genaiscript`",
  "6BB10E07F6C307EE88C5": "Résolution des fichiers de configuration",
  "04A8FC7A34E39179FE56": "GenAIScript va scanner les fichiers de configuration suivants\net fusionner leur contenu dans la configuration finale.",
  "491C467FF0ADB0AF550D": "`~/genaiscript.config.yaml`",
  "5E8A3660671EBE333F90": "`~/genaiscript.config.json`",
  "C184FF66BC377313B834": "`./genaiscript.config.yaml`",
  "9CB19DF54E5CDE503067": "`./genaiscript.config.json`",
  "A5B652E4699071DEACCA": "Les fichiers JSON supportent le format [JSON5](https://json5.org/) (y compris les commentaires, les virgules finales, etc.).",
  "7D3271B7BF3AC975B3EE": "Schéma",
  "873516FE72C3220D86DC": "Le schéma de configuration est disponible à l’adresse [https://microsoft.github.io/genaiscript/schemas/config.json](https://microsoft.github.io/genaiscript/schemas/config.json).",
  "873C3707FEB63946953B": "Propriété `envFile`",
  "30DE10384595E2BE1BFD": "L’emplacement final de `envFile` sera utilisé pour charger le secret dans les variables d’environnement. Elle supporte un seul fichier.",
  "416C582E276EF512488F": "Propriété `include`",
  "504A743CF94E4CB489E4": "La propriété `include` vous permet de fournir des chemins globaux pour inclure davantage de scripts.\nCombinée à un fichier de configuration global, cela permet de partager des scripts entre plusieurs projets.",
  "8EE12BE45D39BB1BA0FB": "Propriété `modelAliases`",
  "CFC2DFD8D056B1FCACE9": "La propriété `modelAliases` vous permet de définir des alias pour les noms de modèles.",
  "D161A57A6CCA87CB5C64": "Propriété `modelEncodings`",
  "D064426577D8F3383263": "La propriété `modelEncodings` vous permet de définir l’encodage pour le modèle.",
  "1C8670C502E7E2D24F89": "Débogage",
  "41643461C41EAA91EDCA": "Activez la catégorie de débogage `config` pour voir des informations supplémentaires sur la résolution de la configuration.",
  "CC2A013BBE6AFF9166D9": "Vous pouvez également activer d’autres catégories de débogage pour obtenir des journaux plus détaillés.",
  "E10D71BE6C277A17B31D": "![Une capture d'écran d'Azure AI Foundry.](./azure-ai-foundry.png)",
  "E3FF4B8B10D4FB32BBBF": "GenAIScript prend en charge nativement divers services de [Azure AI Foundry](https://learn.microsoft.com/en-us/azure/ai-foundry/).",
  "11AD527EB1B6E2B8EFD0": "Authentification",
  "21910BD607CBCDCA2716": "GenAIScript prend en charge l'authentification par clé via des variables d'environnement ainsi que l'authentification Microsoft Entra pour chaque service.",
  "343BCDCC0F59585F6594": "Services Azure OpenAI et IA",
  "4B3CD0A735A31F50DF38": "GenAIScript peut effectuer des inférences sur les LLM hébergés dans Azure AI Foundry.",
  "F3AD1CF1516DADEA3DE8": "GenAIScript prend en charge 4 types de déploiements Azure :",
  "E9E806CDEF74010B4EBC": "[Azure OpenAI](/genaiscript/configuration/azure-openai)",
  "96A58760B2863B7453E9": "[Azure AI Inference](/genaiscript/configuration/azure-ai-foundry##azure-ai-inference)",
  "427662048D3E60CCB75B": "[Azure OpenAI Serverless](/genaiscript/configuration/azure-ai-foundry/#azure-ai-openai-serverless)",
  "07895FC92C6C51983129": "[Modèles Serverless Azure AI](/genaiscript/configuration/azure-ai-foundry/#azure_serverless_models)",
  "3EA81FB6C017338E4443": "Recherche Azure AI",
  "0B293A92706A9B8DBDD5": "[Azure AI Search](https://learn.microsoft.com/en-us/azure/search/search-what-is-azure-search) est un moteur de recherche hybride puissant combinant recherche vectorielle et par mots-clés dans une base de données.",
  "CDC4EEF4D1599F7C79EC": "[Recherche Vectorielle](/genaiscript/reference/scripts/vector-search/#azure-ai-search)",
  "22405D7B8E55D9BFEBAC": "[Configuration](/genaiscript/configuration/azure-ai-search)",
  "FAD9CD47BC276C7A5833": "Sécurité de contenu Azure",
  "C0B308DA01BB9CD9EA3D": "[Azure Content Safety](https://learn.microsoft.com/en-us/azure/cognitive-services/content-safety/) est un service qui vous aide à identifier et filtrer les contenus nuisibles dans vos applications.",
  "E4F6B48E5E4A6383FBF2": "GenAIScript offre une prise en charge intégrée pour utiliser Azure Content Safety, depuis l'analyse d'une partie de l'invite jusqu'à l'analyse des réponses des LLM ou des serveurs MCP.",
  "0E812E2CCC4B8655560C": "[Configuration](/genaiscript/reference/scripts/content-safety/#azure-ai-content-safety-services)",
  "6437D0BA78ED08C3B3D9": "Les paramètres suivants peuvent être accessibles via la commande **Préférences : Ouvrir les paramètres utilisateur**.",
  "11FE06146AACEECCBB5F": "CLI",
  "7333433CAC4026332519": "Ces paramètres contrôlent la manière dont le serveur GenAIScript\nest exécuté depuis l'extension.\nPar défaut, l'extension utilise [npx](https://www.npmjs.com/package/npx) et la version actuelle de l'extension pour exécuter le CLI GenAIScript.",
  "BC26B6EC4103E4C4FB62": "Chemin",
  "84A6125C94CBDAE5FB7A": "Si vous avez une version spécifique du CLI installée, vous pouvez définir son chemin ici.",
  "789D27B357A09D992811": "Version",
  "0C17EB523BE546D4A5D8": "Par défaut, l'extension utilise npx et la version actuelle de l'extension. Vous pouvez remplacer le numéro de version avec ce paramètre.",
  "A8E99712CBEFDB597903": "Masquer le terminal du serveur",
  "3126AA8D111D81AD7DB4": "Par défaut, le terminal du serveur GenAIScript est caché après le démarrage du serveur. Activer ce drapeau ouvrira un terminal où vous pourrez inspecter les journaux du serveur GenAIScript.",
  "AEF1CAE1C9218FDE8854": "Diagnostics",
  "CBDE43D6CDB34E2DB849": "Ce drapeau active diverses options de journalisation supplémentaires et comportements pour aider à diagnostiquer les problèmes avec le serveur GenAIScript.",
  "40164E6D13C3BEE03992": "L'extension GenAIScript pour Visual Studio Code offre un moyen pratique d'exécuter des scripts directement depuis l'éditeur.",
  "5F29D356A1847277B702": "Il existe principalement deux façons d'exécuter des scripts :",
  "1DF129027C9B5FB9A906": "exécuter un script « directement ». Ce scénario est utile lors du débogage d'un script ou pour un script qui ne nécessite aucun fichier d'entrée.",
  "688664004F497918826F": "exécuter un script à partir de fichiers ou dossiers d'entrée. Ce scénario est utile lorsque vous souhaitez exécuter un script sur plusieurs fichiers ou dossiers.",
  "2A7CB8278B53E289CCD6": "Exécution directe des scripts",
  "478571C52640F3B9DCC8": "ouvrir un fichier GenAIScript dans l'éditeur",
  "D0890C60C978E6996858": "cliquer droit dans l'éditeur et sélectionner **Exécuter GenAIScript** dans le menu contextuel",
  "0596A478FF91517A1BEC": "ou cliquer sur l'icône **Exécuter GenAIScript** dans le coin supérieur droit de l'éditeur",
  "47EE6A45D60C2672FC92": "Cela lancera l'exécution du script en utilisant les fichiers d'entrée par défaut spécifiés dans le champ `files` du `script`.",
  "2995068278DD17632135": "Ce mode est utile lors du développement d'un script ou pour les scripts qui ne nécessitent aucun fichier d'entrée.",
  "A992D86120A99E1A450B": "Exécution des scripts à partir de fichiers ou dossiers d'entrée",
  "3F303F401E86AB8641E5": "Ce mode permet d’exécuter des scripts sur n’importe quelle combinaison de fichiers et dossiers, qui alimenteront `env.files`.",
  "426481EF7B3A9C2BEF0E": "Depuis la fenêtre de l’explorateur :",
  "AC89A1C5EA8D79E2C38A": "sélectionnez n'importe quel fichier ou dossier dans l'explorateur. Vous pouvez utiliser la touche `Ctrl` ou `Shift` pour sélectionner plusieurs fichiers ou dossiers.",
  "08E6EF33D37C8383E5DC": "cliquez droit et sélectionnez **Exécuter GenAIScript** dans le menu contextuel",
  "8726DD26253DC3856C40": "Depuis un éditeur",
  "891FBB6766ED4C263FB3": "ouvrez un fichier dans l'éditeur (pas un fichier GenAIScript)",
  "E6E1C15E1E08DD6F2AE5": "Utilisation du texte sélectionné dans votre script",
  "5B2028FA5202593D2395": "Chaque fois que vous lancez un script, GenAIScript récupère le texte sélectionné dans l’éditeur de texte actif et le stocke dans la variable `editor.selectedText`.",
  "50206C7C0607DD4C2A08": "Cette valeur sera indéfinie si vous exécutez votre script depuis la ligne de commande, vous devez donc gérer ce cas dans votre script.",
  "31407C3A5D1FFDDC0103": "Règles du fichier .gitignore",
  "27F0A2DBE88BC9249BC8": "GenAIScript tente de respecter les **règles `.gitignore` de premier niveau dans l'espace de travail du projet** (il ignore les fichiers .gitignore imbriqués). Cela signifie que si vous avez un fichier `.gitignore` dans votre projet, GenAIScript ignorera tous les fichiers ou dossiers exclus par Git.",
  "7B47F12FD43B7DA31A20": "Il existe des exceptions à cette règle :",
  "175D7A8ED82629867504": "si vous exécutez **Exécuter GenAIScript** sur des fichiers individuels, ces fichiers ne sont pas filtrés par `.gitignore` puisque vous les avez explicitement choisis. Les dossiers sont toujours filtrés.",
  "679589FBE81F1D4DFA49": "si vous spécifiez `---ignore-git-ignore` dans la ligne de commande, GenAIScript ignorera le fichier `.gitignore` et exécutera le script sur tous les fichiers et dossiers.",
  "CA2DD7C6A6FA19E06B4B": "GenAIScript est pris en charge par une extension [Visual Studio Code](https://code.visualstudio.com/) qui offre un ensemble complet de fonctionnalités pour créer, déboguer et déployer des GenAIScripts.",
  "5061B8FBFB99DE055FF3": "Le [Visual Studio Code Marketplace](https://marketplace.visualstudio.com/items?itemName=genaiscript.genaiscript-vscode) contient la dernière version stable de l’[extension](https://marketplace.visualstudio.com/items?itemName=genaiscript.genaiscript-vscode).",
  "AA89C32B38BA808BF154": "[Télécharger](https://marketplace.visualstudio.com/items?itemName=genaiscript.genaiscript-vscode)",
  "7922F4640E442286ABF7": "[Instructions d'installation](/genaiscript/getting-started/installation/#visual-studio-code-extension)",
  "70501802CD84E3B26A85": "[Exécution des scripts](/genaiscript/reference/vscode/running-scripts/)",
  "DBD9A03FFCDE44A37839": "[Intégration Copilot Chat](/genaiscript/reference/vscode/github-copilot-chat/)",
  "22C6E571ACE5F7854B36": "[Paramètres](/genaiscript/reference/vscode/settings/)",
  "6A2A680763F23F9D4413": "GenAIScript s'intègre avec [GitHub Copilot Chat](https://marketplace.visualstudio.com/items?itemName=GitHub.copilot-chat)\nen fournissant un **participant de chat** qui vous permet d'exécuter des scripts dans le contexte d'une conversation de chat,\net une **invite personnalisée** pour générer GenAIScript plus efficacement avec Copilot Chat.",
  "108EC66DAC13F93A4614": "Si vous devez vérifier votre quota de requêtes premium disponible pour GitHub Copilot, rendez-vous sur [Fonctionnalités](https://github.com/settings/copilot/features)",
  "990BC127513EB866A2EC": "Le [participant de chat](https://code.visualstudio.com/api/extension-guides/chat#parts-of-the-chat-user-experience) `@genaiscript` vous permet d'exécuter des scripts sans le contexte \nd'une conversation [GitHub Copilot Chat](https://marketplace.visualstudio.com/items?itemName=GitHub.copilot-chat).\nCela est utile pour exploiter des scripts existants dans une session de chat interactive.",
  "334BE9B251575231BB99": "La commande `/run` attend un identifiant de script comme premier argument (par exemple, `/run poem`). Le reste de la requête est \ntransmis au script sous la variable `env.vars.question`.",
  "BF9A3B401BB9FFA049E4": "Si vous omettez la commande `/run`, GenAIScript recherchera un script nommé `copilotchat`. S'il en trouve un, il l'exécutera.\nSinon, il vous demandera de choisir un script dans la liste des scripts disponibles.",
  "1B86AEF6ABBBA69171A2": "Si votre script ne spécifie pas de modèle, GenAIScript vous invitera à en choisir un.\nVous pouvez également spécifier quel modèle choisir dans la configuration du script en utilisant le fournisseur `github_copilot_chat`.",
  "F0FC38E7780394DBB875": "modèle actuellement sélectionné : `github_copilot_chat:current`",
  "1ADDD79AE9B6E02E6F8B": "gpt-4o-mini : `github_copilot_chat:gpt-4o-mini`",
  "CE9B7151C16B872DE299": "Lorsque GenAIScript vous invite à choisir un modèle, il stocke vos choix dans les paramètres de l'espace de travail\nsous",
  "5F0A99908E47E7F89166": "**Les modèles GitHub Copilot Chat sont uniquement disponibles dans Visual Studio Code.** Ils ne fonctionneront pas depuis\nles interfaces [cli](/genaiscript/reference/cli) ou [playground](/genaiscript/reference/playground).",
  "E068101E4F75C2E8356C": "Disponibilité des modèles",
  "D4F55142305AB847DA65": "Tous les modèles listés dans l'interface utilisateur de GitHub Copilot Chat ne sont pas disponibles pour les extensions tierces.\nLorsque GenAIScript tente d'accéder à un modèle non disponible, il vous en informe mais n'a pas\nde contrôle sur votre configuration d'accès aux modèles.",
  "BC8ED055101BF11EF91A": "Le contexte sélectionné par l'utilisateur dans Copilot Chat est converti en variables et transmis au script :",
  "A9A870A5621DD17864FA": "le contenu de l'invite est passé dans `env.vars.question`. L'identifiant du script est supprimé dans le cas de `/run`.",
  "68F82DD0C1AAB5919776": "le texte courant de l'éditeur est passé dans `env.vars[\"copilot.editor\"]`",
  "D8E25A2E5377F7E56447": "la sélection courante de l'éditeur est passée dans `env.vars[\"copilot.selection\"]`",
  "72DBD9217E3F7E5EF7A5": "toutes les autres références de fichiers sont transmises dans `env.files`",
  "1BBE5A0B2303339F710C": "`mermaid` générera un diagramme à partir de l'invite de l'utilisateur.",
  "ED0F09828428657B540B": "`websearcher` effectuera une recherche web pour l'invite de l'utilisateur\net utilisera le fichier en contexte dans la réponse.",
  "CADBA9F7F3B491E7CE01": "`dataanalyst` utilise les outils d'interprète de code Python pour\nrésoudre une question de calcul de données.",
  "FD702E887DD5B78E2083": "Historique",
  "B56A11471F759F4CBCC4": "L'historique des messages est transmis dans `env.vars[\"copilot.history\"]`. Il s'agit d'un tableau de `HistoryMessageUser | HistoryMessageAssistant` :",
  "FE6289CFB029232E628E": "Vous pouvez utiliser le chat `@genaiscript` pour intégrer l'exécution d'un script dans une conversation existante\nou pour continuer la conversation avec Copilot avec les résultats du script. Les résultats\ndu script sont réintégrés dans l'historique du chat et sont accessibles à tout copilot par la suite.",
  "E576FBA11867C7F965C3": "`@genaiscript /run tool` exécutera le script `tool` et réintégrera les résultats dans l'historique du chat.",
  "6933184DF8F3C79074AD": "`analyze the results` continuera la conversation avec les résultats du script.",
  "A26B40E561BEA0AF9C9C": "Le script suivant peut être utilisé comme modèle de départ pour créer le script par défaut lorsque l'utilisateur n'utilise pas la commande `/run`.",
  "ED632C0EDE1B3ACFC45A": "Les fonctionnalités suivantes ne sont actuellement pas prises en charge dans le participant de chat :",
  "C753A2BC184B2AA425F4": "Outils (`#tool`)",
  "2E2BBDE2DF436EFEB132": "Référence `Workspace`",
  "65F237D6C0F47724BD0B": "GenAIScript sauvegardera automatiquement un fichier instructions.md dans le dossier `.genaiscript/instructions`\nlorsque vous exécutez un script. Ce fichier contient les instructions utilisées pour générer le script.",
  "923646F96A6358E7888C": "Voici comment démarrer une session de chat en utilisant l'invite `genaiscript`.",
  "100AAC3B339B43830210": "Sélectionnez l'icône **Attacher le contexte** 📎 (`Ctrl+/`), puis sélectionnez **Instructions...**,\npuis choisissez l'invite **genaiscript.instructions.md**.",
  "6C23EAE3F5180F5B7158": "Incluez des instructions pour écrire un script ou répondre à une question concernant GenAIScript,\n`write a script that summarizes a video`.",
  "E183FEADE39D25FB5D5B": "Comme l'invite injecte la documentation complète de GenAIScript (plus de 700 ko au moment de la rédaction),\nil est recommandé d'utiliser un modèle avec un grand contexte comme Sonnet ou Gemini.",
  "A537CEEA554A57984448": "N'oubliez pas non plus que la conversation entière est renvoyée à chaque itération, cette technique\nfonctionne donc mieux pour une requête détaillée en une seule fois.",
  "4D2C8FDF295D23A310D3": "[GitHub Gists](https://gist.github.com/) sont un moyen simple de partager des extraits de code et des notes avec d'autres.\nCe sont essentiellement des dépôts Git qui peuvent être créés et partagés facilement.\nLes gists peuvent être publics ou secrets, et ils supportent la gestion des versions, ce qui en fait un excellent outil de collaboration.",
  "8EFD976CE0E83471D10B": "![Une capture d'écran de GistPad dans Visual Studio Code](./gistpad.png)",
  "BBEF98E50C9F08DD49FB": "Exécution de GenAIScript à partir des Gists",
  "7F287B51F8F679B6AE9D": "GenAIScript prend en charge les formats d'URL suivants pour exécuter des scripts directement depuis un gist.",
  "F844DBCECA27B12BE51E": "`gist://<identifiant du gist>/<nom du fichier>`",
  "C9EB07C18E7A619F33C3": "`vscode://vsls-contrib.gistfs/open?gist=<identifiant du gist>&file=<fichier>`",
  "C0A94708A61B2353486F": "Le fichier gist est mis en cache localement dans `.genaiscript/resources` puis exécuté. Si disponible,\nil utilise les informations de connexion GitHub pour accéder aux gists privés.",
  "8B8080015F20FAB9FFFE": "GenAIScript utilise des fichiers JavaScript, assurez-vous donc d'exécuter uniquement des gists en lesquels vous avez confiance.",
  "A739C00EC73F309ECBC7": "GistPad dans Visual Studio Code",
  "31AE238F056610022452": "L'[extension GistPad](https://marketplace.visualstudio.com/items?itemName=vsls-contrib.gistfs)\npour Visual Studio Code vous permet de créer, modifier et gérer des gists directement depuis votre éditeur.",
  "6B61DA24C146DEEBB34F": "Vous pouvez ouvrir un fichier dans un Gist et l'exécuter en utilisant la commande `genaiscript`.",
  "B26CB2D66294BB5D7838": "Vérification de type",
  "1DE05440A87FDD5361C5": "Pour activer la vérification de type, nous devons télécharger le fichier `genaiscript.d.ts` dans le gist et y ajouter une référence\nen ajoutant ce commentaire **en haut du fichier** :",
  "CE80E13A9356B42143C9": "Cela peut être fait automatiquement :",
  "FC8102FDD34F21C38BA9": "clic droit sur le fichier GenAIScript du Gist",
  "A0DFE9A013C2CB04FE2F": "sélectionnez `GenAIScript: Fix Type Definitions`",
  "D5C474AA587EC724643E": "Vous pourriez être invité à autoriser GenAIScript à utiliser votre compte GitHub. GenAIScript demandera un jeton avec le scope `gist` pour uploader les fichiers manquants.",
  "8C14EADB1948273A6EA3": "Pour charger les types de GenAIScript, il faudra \"pousser\" un peu le compilateur TypeScript :",
  "04FD5119F70B6596E187": "ouvrez le fichier `genaiscript.d.ts` depuis l'arborescence GistPad (cela charge les types en mémoire)",
  "2F498FCB0E6583BEB3A4": "ouvrez votre fichier GenAIScript dans l'arborescence GistPad et la vérification de type devrait fonctionner !",
  "20B7C470B9ECC60783D5": "Comme l'extension GistPad n'est pas un IDE complet, certaines limitations sont à noter :",
  "352FDF9CEBDEA7EA658F": "les imports ne se résoudront probablement pas",
  "CF4F3C77DE37D2885966": "GenAIScript s'exécute dans un environnement Node.JS (légèrement modifié) où des variables globales supplémentaires ont été ajoutées.\nCet environnement est configuré par le [cli](/genaiscript/reference/cli).\nPar conséquent, pour exécuter un GenAIScript dans un processus Node.JS \"vanilla\", vous devrez utiliser\n**l’API `run` de Node.JS**. Cette API charge et exécute un script GenAIScript dans un thread worker séparé.",
  "8D7DA0AF7B41FCE74172": "Cette page décrit comment importer et utiliser GenAIScript comme une API dans votre application Node.JS.",
  "7753E8C14E7C4756CFB5": "En supposant que vous ayez ajouté le cli comme dépendance dans votre projet,\nvous pouvez importer le [cli](/genaiscript/reference/api) de la manière suivante :",
  "A04BD6C3AD038A807B91": "Utilisation",
  "7484A2962DF619B257B4": "L’API peut être importée via des imports depuis **\"genaiscript/api\"**.",
  "26BD2DCE4EDBE4482C73": "Le wrapper `api.mjs` importé est un chargeur très léger, sans dépendance,\nqui crée un [thread worker Node.JS](https://nodejs.org/api/worker_threads.html) pour exécuter GenAIScript.",
  "DF882421E3044C11AB5A": "Pas de pollution des variables globales",
  "17E71BB1FAAC3F1EC308": "Pas d’effets secondaires sur le processus",
  "1A1E7D77D7E6EC10934A": "`run`",
  "414C1850FC39EAE577BC": "La fonction `run` encapsule la commande [cli run](/genaiscript/reference/cli/run).",
  "8033DBB5F89D3C4C03E8": "Variables d’environnement",
  "508D2AEFF487BA0CB6BB": "Vous pouvez définir les variables d’environnement pour le processus GenAIScript en passant un objet via le champ `env` dans les options. Par défaut, le worker héritera de `process.env`.",
  "2BB6B53267DB9352A653": "Certaines des [capacités de traitement vidéo](/genaiscript/reference/scripts/videos) sont également disponibles dans la CLI.",
  "D6DD6F5C4A2BED153DB4": "`video probe`",
  "2AD3BA35589513C57C9D": "Renvoie le résultat de `ffprobe` dans la console.",
  "874C14DC7962E2A556D6": "`video extract-audio`",
  "51F771A4E8FE4A2A6F10": "Extraie l'audio dans un format plus léger, optimisé pour la transcription.",
  "333B4EB0F2089AD04215": "`video extract-frames`",
  "C116DDAD95AC9D621E2E": "Extrait des captures d'écran de la vidéo. Vous pouvez spécifier des timestamps en secondes ou en `h:mm:ss`, ou un nombre de vidéos.",
  "069CC231AD70EE02BD41": "Exécute les tests dans les scripts en utilisant [promptfoo](https://www.promptfoo.dev/).",
  "FFD8E65FCE64B7CF45F8": "Vous pouvez remplacer les modèles utilisés dans les tests avec `--models` :",
  "A2E2D442D2575ED67E28": "Cette fonctionnalité nécessite d’ajouter `@genaiscript/api` aux dépendances de votre `package.json`.",
  "842941C43903CADB58D7": "visualiseur de résultats",
  "254E55A2F410E1CE12CC": "Exécutez la commande `test view` pour lancer le visualiseur des résultats de test :",
  "80BF90D74027306B0032": "Lancez un serveur web local utilisé pour exécuter le playground ou Visual Studio Code.",
  "F84285E5F83BD2E1C31C": "Exécutez depuis la racine de l’espace de travail :",
  "8752815C58FBC39FC9E2": "port",
  "26CF07825768C3FBDBD2": "Le port par défaut est `8003`. Vous pouvez spécifier le port en utilisant le drapeau `--port`.",
  "B4323010FBC2A8D13125": "Clé API",
  "5B0C364287600FDCDB2E": "La clé API est utilisée pour authentifier les requêtes vers le serveur. Vous pouvez spécifier une clé API en définissant le drapeau `--api-key` ou la variable d’environnement `GENAISCRIPT_API_KEY`.",
  "24C6997F2A928956670F": "ou",
  "DF3D7E25348C78AACE7D": "La clé API peut être définie dans l’en-tête `Authorization` d’une requête ou dans le paramètre de requête URL `api-key` (`http://localhost:8003/#api-key=my-api-key`)",
  "AC9CD23E12B11CA06625": "CORS",
  "ED4FFE1BF862B65D88DA": "Vous pouvez activer le [Cross Origin Shared Resource](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) en utilisant le drapeau `--cors` ou en définissant la variable d’environnement `GENAISCRIPT_CORS_ORIGIN`.",
  "B242FDE851B36006373B": "Réseau",
  "5C11F64A84724E2C6998": "Vous pouvez lier le serveur à `0.0.0.0` et le rendre accessible depuis le réseau en utilisant le drapeau `--network`. Ce drapeau est nécessaire pour rendre le serveur accessible depuis un conteneur.",
  "F4DB90C31C6C65275BB0": "Nous recommandons vivement de définir la clé API lors de l’exécution du serveur sur le réseau.",
  "541CE9DAB390F97FE01A": "Dockerisé",
  "EB7BC5D76FBE1336AABC": "Pour exécuter une image docker minimale avec le serveur, commencez par créer une image docker avec genaiscript et tout outil requis.",
  "1E3E003842E1BBE6AC90": "Cela crée localement une image `genaiscript` que vous pouvez utiliser pour lancer le serveur.",
  "E28F7B889ACCC2B694CB": "puis ouvrez `http://localhost:8003` dans votre navigateur.",
  "EF651AA6F7EAC04D9472": "Points de terminaison API OpenAI",
  "B272FDD3BBDE7C94AF07": "Le serveur implémente divers points de terminaison compatibles avec l’API OpenAI. Vous pouvez utiliser le serveur comme proxy vers l’API OpenAI en activant le drapeau `--openai`. Les routes peuvent être utilisées pour fournir un accès stable aux LLM configurés à d’autres outils tels que promptfoo.",
  "9EBBEA64585045F87C10": "Cela activera les routes suivantes :",
  "A5F7E4843A3C2BE653A5": "`/v1/chat/completions`",
  "E95E69F8C15E5748A431": "Principalement compatible avec l’API de complétions de chat d’OpenAI. Le serveur transmettra les requêtes à l’API OpenAI et retournera la réponse.",
  "C5633987F3D74DF8D05D": "`stream` n’est pas pris en charge.",
  "9FB230BE6D0E2E499474": "`/v1/models`",
  "3C4E2BB160E5BC2279DC": "Renvoie la liste des modèles et alias disponibles sur le serveur.",
  "C159DF1AC0C51459BF28": "Créez des commentaires de revue de pull request à partir de chaque [annotations](/genaiscript/reference/scripts/annotations)\n([exemple](https://github.com/microsoft/genaiscript/pull/564#pullrequestreview-2151692644)).",
  "517F04608C13AEA9932E": "L’interface en ligne de commande GenAIScript **`genaiscript`** exécute des scripts GenAIScript\nen dehors de Visual Studio et dans votre [automatisation](/genaiscript/getting-started/automating-scripts).",
  "5FDC77A2A78E82368562": "Prérequis",
  "86FFE9B9BFF27ECF90C6": "L’interface CLI est un paquet Node.JS hébergé sur [npm](https://www.npmjs.com/package/genaiscript).",
  "7E8BD9C44A23ADB5BCAA": "Installez [Node.JS LTS](https://docs.npmjs.com/downloading-and-installing-node-js-and-npm) (Node.JS inclut npm et npx).",
  "2AFDF71C1973831FF8B7": "Vous avez besoin d’au moins Node.JS v22 !",
  "38B4D31606433BF06579": "Installation",
  "AFB54B9C591DB28C8268": "Installez-le localement comme une `devDependency` dans votre projet.",
  "2F540409002257D98213": "Installez-le globalement.",
  "1FCFC708182ECEDD9255": "Vérifiez que votre version de node est au moins 20._ et npm 10._ en exécutant cette commande.",
  "5475FBB5744ECCF1756E": "Pas d’installation (`npx`)",
  "C1559A56191F300D6873": "`npx` est installé avec **Node.JS**.",
  "356636BCA9F4B145CE9C": "En utilisant [npx](https://docs.npmjs.com/cli/v10/commands/npx),\nvous pouvez exécuter la CLI sans aucune étape d’installation préalable.\n_npx_ installera l’outil à la demande. npx gère aussi les problèmes complexes\ndu système d’exploitation où l’outil n’est pas trouvé dans le chemin.",
  "9263D3A6764BEAC83F50": "Ajoutez `--yes` pour passer la confirmation, ce qui est utile dans un scénario CI.",
  "DA32E590070C6D0E3863": "Spécifiez la plage de versions pour éviter des comportements inattendus avec des installations mises en cache de la CLI avec npx.",
  "2D5C8D2B2AD926F317B1": "Scripts d’aide",
  "5DC2B2EAB02CD08D555B": "Pour vous assurer que les fichiers de définition TypeScript sont écrits et mis à jour,\nvous pouvez ajouter les scripts suivants à votre `package.json`.",
  "FFC08FA2D3CE012C6298": "`genaiscript` est aussi un raccourci qui facilite l’invocation de la CLI\navec `npm run` :",
  "ED46475BA62B9B9DEDE3": "Travail derrière un Proxy",
  "F29D375C12E9C3015A11": "Certains paquets optionnels utilisés par la CLI ne supportent pas une installation derrière un proxy HTTP,\nce qui est très courant en environnement d’entreprise.",
  "BA8D001DE73290DD3BA6": "Si votre environnement de travail nécessite de passer par un proxy,\nvous devriez utiliser `npm install --omit=optional`\npour que les paquets optionnels échouent proprement durant l’installation.",
  "5306AC6356A62A3383F3": "Si votre environnement de travail nécessite de passer par un proxy,\nvous pouvez définir l’une des variables d’environnement suivantes\n(`HTTP_PROXY`, `HTTPS_PROXY`, `http_proxy` ou `https_proxy`) pour que la CLI utilise un proxy,\npar exemple `HTTP_PROXY=http://proxy.acme.com:3128`.",
  "AC1ADC555DC5FBF9A086": "La CLI chargera les [secrets](/genaiscript/getting-started/configuration) depuis les variables d’environnement ou un fichier `./.env`.",
  "3E375CD933939DB51E6C": "Vous pouvez remplacer le nom par défaut du fichier `.env` en ajoutant le fichier `--env .env.local`,\nou même importer les deux.",
  "516A0EFB9F2DF0EAD1DD": "Créer un nouveau script",
  "3A98A9539792AA9D1D91": "Crée un nouveau fichier script dans le dossier `genaisrc`.",
  "B04A8603E572DD8BDCAE": "Compiler les scripts",
  "2CC76FE6FC0622E40E31": "Exécute le compilateur TypeScript pour détecter les erreurs dans les scripts.",
  "31324364539AFF0736B1": "Exécuter un script",
  "F0D58279AD1F6D3EB177": "[Exécute un script](/genaiscript/reference/cli/run) sur un fichier\net transmet la sortie LLM vers stdout. **Exécuter depuis la racine du workspace**.",
  "458CA9FE07757BF64AEE": "où `<script>` est l’identifiant ou chemin de fichier de l’outil à exécuter, et `[files...]` le nom du fichier spec sur lequel l’exécuter.",
  "4D8EFD848AABECFEBD28": "La CLI supporte aussi le piping de style UNIX.",
  "9C66F7A783A3A397C6B7": "Lister la configuration du modèle",
  "C835F971781F09B8E39E": "Exécutez la commande `scripts model` pour lister les scripts disponibles et leur configuration de modèle. Cela peut être utile pour diagnostiquer des problèmes de configuration dans les environnements CI/CD.",
  "5B62B4FA40E0A92C2651": "où \\[script] peut être un identifiant de script ou un chemin de fichier.",
  "B7C908046959C1E0BFD4": "Utiliser la CLI en tant qu’API Node.JS",
  "BECE2B986062CD49FC66": "La CLI peut être importée et [utilisée comme une API dans votre application Node.JS](/genaiscript/reference/api).",
  "4AC5251CC78677F57294": "À propos du mélange entre fichiers et `--vars`",
  "7AF6C47D4E02FDA93A3D": "Les deux paramètres `files` et `--vars` sont des arguments de ligne de commande variables. C’est-à-dire qu’ils consommeront toutes les entrées suivantes jusqu’à ce qu’une nouvelle option commence. Par conséquent, l’ordre est important lors de leur mélange. Il est préférable de placer les fichiers, puis de suivre avec l’option `--vars`.",
  "9F0D8B3305A3BDCD1A54": "[ambiguïté de parsing](https://github.com/tj/commander.js/blob/HEAD/docs/options-in-depth.md#parsing-ambiguity)",
  "59573FD72C931BEECE5D": "Sujets",
  "376E90C4790B5D57AACC": "Convertit un ensemble de fichiers, séparément, à l'aide d'un script.",
  "92922F9185C0B7A5FEC7": "où `<script>` est l'identifiant ou le chemin du fichier de l'outil à exécuter, et `<files...>` est le nom du fichier de spécifications sur lequel l'exécuter.\nContrairement à `run` qui traite tous les fichiers en une seule fois, `convert` traite chaque fichier individuellement.",
  "1E6B9CE425E7BEFC5EF2": "`convert` prend un ou plusieurs motifs [glob](https://en.wikipedia.org/wiki/Glob_\\(programming\\)) pour correspondre aux fichiers dans l’espace de travail.",
  "D10A44D0F1F798CA3740": "--excluded-files \\<files...>",
  "FBA678640062E8E38C33": "--exclude-git-ignore",
  "20CA6B1E35EBD40E54EB": "La sortie de chaque fichier est enregistrée dans un fichier nouveau ou existant. Vous pouvez contrôler la logique pour décider quelle partie de la sortie sauvegarder et où la sauvegarder.\nPar défaut, le résultat de la conversion d’un fichier `<filename>` est enregistré dans un fichier `<filename>.genai.md`.",
  "231CF6659C3D831B2F48": "--suffix \\<suffix>",
  "1BB91812DDF80118C12E": "L’option `--suffix` vous permet de spécifier un suffixe à ajouter au nom du fichier de sortie.",
  "E1B40AB5FA0A30A7FC3A": "GenAIScript \"délimite\" automatiquement la sortie dans le markdown correspondant au suffixe (après `.genai`). Ainsi, si le LLM génère",
  "84924FF3B5D3F891604B": "Le contenu converti dans `<filename>.genai.txt` sera `:)`.",
  "079571CBAB4FCC709ECF": "--rewrite",
  "A627E5FB828A5949C8AE": "Ce drapeau remplace `suffix` et indique à GenAIScript de réécrire le fichier original avec le contenu converti.",
  "C7B0B4FA843E6448216F": "--cancel-word \\<word>",
  "7C03D487E249ED74F280": "Spécifiez le mot-clé \"ignorer la sortie, rien à voir ici\" en utilisant le flag `-cw`.",
  "4A2872D7E817679396B0": "La liste complète des options est disponible dans la [référence CLI](/genaiscript/reference/cli/commands#convert).",
  "C5A3ECCF6DCABEB5AEB8": "Configure",
  "17ECC9012B80EDC8A08F": "Configurez et validez les connexions LLM.",
  "56EEF0F1D05EA10DB804": "Commande interactive pour configurer et valider les connexions LLM.",
  "44AD73C4D93F440AB7CD": "LLMs",
  "12BA179E36FD96EEF9AC": "L’action `configure llm` vous permet de configurer et de valider les connexions LLM. Cela est utile pour garantir que votre application peut communiquer avec les LLMs que vous souhaitez utiliser.",
  "31839FC95A4B8CE0EE64": "Action GitHub",
  "13791A8821660645B3EF": "L’action `configure action` génère la structure de fichiers pour publier un script en tant que [action GitHub personnalisée en conteneur](https://docs.github.com/en/actions/sharing-automations/creating-actions/creating-a-docker-container-action).",
  "41A1E96E75A82F6188EC": "La plupart des métadonnées de l'action sont extraites du script lui-même, vous n’avez qu’à fournir le nom du script. Elle exporte les fichiers générés dans `.genaiscript/action/<script-id>` par défaut, mais vous pouvez modifier cela lors de la mise à jour d’un projet d’action existant.",
  "EB0F570C4825AA65A12E": "## Actions personnalisées ",
  "D5380CBB9EA800EB7CC1": "Participant de chat `@genaiscript`",
  "9BD3020DABDE337ABD20": "Choix du script à exécuter",
  "8AC852675E31AEBC2517": "Choix du modèle",
  "DF722808CDBC12737EAD": "Contexte",
  "8DE08C2356F86E9EC85B": "Exemples",
  "30680C3DF716FE97C1E4": "Conversation continue",
  "21F2ABD094724BE71D19": "Script par défaut <a id=\"copilotchat\" href=\"\" />",
  "C856E20F37A20D0A8A36": "Fonctionnalités non prises en charge",
  "EAA894F0F4DD8A7D3508": "Instructions personnalisées `genaiscript` <a href=\"\" id=\"genaiscript-custom-prompt\" />",
  "3EAA3FF57707FA2BE6FD": "Sessions de chat augmentées",
  "6768C7863E5384832166": "Port",
  "D9EEF4DB22B2BA622134": "Le port par défaut est `8003`. Vous pouvez spécifier le port en utilisant l'option `--port`. ",
  "7482804C752E068B2127": "Clé API",
  "3F3D1CE9410B9C9A0A14": "ou la variable d'environnement ",
  "EFF6BF43C0C320C9D05A": "ou",
  "AB6FDF6C7D54799A9846": "La clé API peut être définie dans l'en-tête `Authorization` ",
  "0E9C4B506DC4B473A559": "d'une requête ou dans le paramètre de requête URL `api-key` (`http://localhost:8003/#api-key=my-api-key`) ",
  "53D24FD4F328C8F93BCC": "CORS",
  "C50FB00A3B99880AD09F": "Vous pouvez activer les ",
  "49EDCF32CEBFDF05F52A": "Ressources Partagées entre Origines (Cross Origin Shared Resource)",
  "6C4AC58796F421116D5F": "en utilisant l'option ",
  "E542B5BE86A1B14588D2": "`--cors` ou en définissant la variable d'environnement `GENAISCRIPT_CORS_ORIGIN`. ",
  "324EF919111EEE7A06A2": "Réseau",
  "C792741DD29D156BE7AD": "Vous pouvez lier le serveur à `0.0.0.0` ",
  "4F0BE2C76D797255E321": "et le rendre accessible depuis le réseau en utilisant l'option `--network`. Cette option est nécessaire pour rendre le serveur accessible depuis un conteneur. ",
  "55B4B23832A2CFA3F3FD": "Dockerisé",
  "FAD18BA65C2F585C6334": "Cela crée une image `genaiscript` localement que vous pouvez utiliser pour lancer le serveur. ",
  "67112EAC748387BEEEFB": "puis ouvrez `http://localhost:8003` dans votre navigateur. ",
  "86058B70D3C4CFF219FB": "Points de terminaison API OpenAI",
  "1461E9763457455C83C8": "Note de Transparence",
  "4C797A9E52142C945640": "Ne faites pas confiance aux scripts",
  "9B0D2D765306F014CC9F": "Ne faites pas confiance aux sorties LLM",
  "3906DE2110339D20062E": "Une extension est **désactivée** lorsque vous ouvrez un dossier en mode [Mode Restreint](https://code.visualstudio.com/docs/editor/workspace-trust) dans Visual Studio Code.",
  "4E2E2B8AF06257876C2A": "[Mode Restreint](https://code.visualstudio.com/docs/editor/workspace-trust)",
  "8F6E17C410FB44ED3407": "API",
  "6C55C39A9A2466001082": "Utilisation",
  "BB3F2F627157B3F5A7D0": "L’API peut être importée en utilisant des imports depuis ",
  "B632A3C1C9CB9568F623": "\"genaiscript/api\"",
  "4555FEF986CC6657C468": "le wrapper importé `api.mjs` est un chargeur minuscule, sans dépendance, qui\nlance un [thread worker Node.JS](https://nodejs.org/api/worker_threads.html) pour exécuter GenAIScript. ",
  "4CA3CC96F372B533F281": "Pas de pollution des variables globales",
  "9BDC24584E5CF34EF508": "Aucun effet secondaire sur le processus",
  "BC74BF3EDEE0449E567F": "fonction ",
  "60AD73EC72FC7AD47D26": "cli run",
  "B13DA320949B63AC2D91": "Variables d’environnement",
  "DD608DFF14F7D8EC0DA7": "Vous pouvez définir les variables d’environnement pour le processus GenAIScript en passant un objet comme champ `env` dans les options. Par défaut, le worker hérite de `process.env`. ",
  "8A9B50693A8B0483ED99": "L’interface en ligne de commande GenAIScript ",
  "EAC6607A1D2CA8A5DE00": "exécute des scripts GenAIScript en dehors de Visual Studio et dans votre ",
  "9216D8B1BEC14027658E": "automatisation",
  "8545F0AB706AFA311D2D": "Prérequis",
  "ECEB49CFB61D066485AE": "npm",
  "F032FED56E5D36FE7B33": "Installez ",
  "18387B9DC4EFDA179AEB": "Installation",
  "3AD5B965AC280EB00719": "Installez localement en tant que ",
  "8FDEF78E9E20EBC46528": "est installée avec ",
  "2BE4BE7D230C736BC8BA": "En utilisant ",
  "C337643E6DC40E39C2FA": "Ajoutez ",
  "AA4E07AA7F68C2B23437": "Scripts d’aide",
  "B6D5D39F314CAE98A0C7": "est également un script raccourci qui facilite l’invocation de la CLI avec ",
  "E0223D58DCAD3DFDBC1E": "Utiliser derrière un proxy",
  "9040D4A2A15B005E8694": "La CLI va charger les ",
  "33F2532989141FCECA93": "secrets",
  "CBD8DDC5388B5427F0FA": "à partir des variables d’environnement ou d’un fichier ",
  "C912D8AB27E5DAC6A716": "Vous pouvez remplacer le nom par défaut du fichier ",
  "573646FCB5067BE50AF4": ".env en ajoutant le fichier ",
  "1F2F0E02FE8879D9CAF3": "Créer un nouveau script",
  "97FCD5A893EF3DB95DBD": "Crée un nouveau fichier de script dans le dossier ",
  "59CFBAD60FAF6C44D776": "Compiler les scripts",
  "5039B87F49CC33B3DF54": "Exécuter un script",
  "7BAD855D25AF87436A36": "Exécutez depuis la racine de l’espace de travail",
  "38AE8126A940899FDAEE": "Lister la configuration du modèle",
  "D6D969392D152D15F0E2": "La CLI peut être importée et ",
  "D4AEC8EC8A663569509E": "À propos du mélange des fichiers et ",
  "767A21802A9A9EC97C11": "Les deux arguments variables de ligne de commande ",
  "9B2833D1C8FD33B37C9C": "et ",
  "EA32B52ABAD2D049BDFE": "ambiguïté d’analyse",
  "36CFE44B2029FA025172": "Sujets",
  "BAA47FB21C6FE577FA80": "désactivé",
  "38E7086CE25574291622": "lors de l'ouverture d'un dossier en ",
  "A3F1F38410D226C55896": "La sortie du LLM et la trace utilisent l'aperçu Markdown intégré de Visual Studio Code.\nPar défaut, [VS Code limite le contenu affiché dans l'aperçu Markdown](https://code.visualstudio.com/Docs/languages/markdown#_markdown-preview-security).\nCela inclut la désactivation de l'exécution de script et n'autorise le chargement des ressources que via `https`.",
  "4C3157D15CFCEEDA1C3A": "Ces assistants d'exécution fournissent une interface conviviale autour de l'écosystème [remark](https://github.com/remarkjs/remark), [mdast](https://github.com/syntax-tree/mdast), [unified](https://github.com/syntax-tree/unist) pour analyser et manipuler des documents Markdown.",
  "73BDF6BC6A9335D79792": "Pour bénéficier de la complétion de type, vous devrez installer le paquet `@types/mdast` en tant que dépendance de développement.",
  "5067E948CD93973936BB": "Manipulation de Markdown",
  "439084435C1A4773BA90": "charger les analyseurs",
  "33A619973B9C1866CFE2": "analyse en arbre mdast",
  "BD0F8AE53088074678C8": "parcourir l'arbre (voir la [documentation](https://unifiedjs.com/learn/recipe/tree-traversal/pnp))",
  "3E06BA6CCC819B59C7EA": "sérialiser l'arbre en Markdown",
  "5A4694FC5F2E98906742": "Des résultats surprenants se produisent lorsque vous demandez à plusieurs reprises au LLM de « l'améliorer » (voir [article de blog](https://minimaxir.com/2025/01/write-better-code/)).",
  "42164D5BA9C9F97AD416": "Dans cet exemple, nous utilisons la fonction `makeItBetter` du [runtime GenAIScript](/genaiscript/reference/runtime)\npour réaliser exactement cela : demander au LLM de l'améliorer pendant quelques cycles.",
  "6F009CD4997B7659F341": "Explication du code",
  "1064DCDF403CBF448867": "Passons en revue le script ligne par ligne :",
  "AAA47F1E89CC3A1C9F33": "Cette ligne importe la fonction `makeItBetter` depuis le runtime GenAIScript. Cette fonction est utilisée pour améliorer le code en répétant un ensemble d'instructions plusieurs fois.",
  "4E16E832937C12A76A68": "Cette ligne définit une constante nommée \"CODE\" qui représente les fichiers dans l'environnement. Elle met essentiellement en place le contexte pour le code qui doit être amélioré.",
  "E773F4C0531B4F6D3934": "Cette ligne est une invite pour le modèle IA. Elle demande au système d'analyser et d'améliorer le code. Le `$` est utilisé pour indiquer qu'il s'agit d'une instruction spéciale, non d'une commande de code classique.",
  "FF71600DDFC805A05149": "Cette ligne appelle la fonction `makeItBetter` avec une option pour répéter le processus d'amélioration deux fois. Elle enregistre un [participant de chat](/genaiscript/reference/scripts/chat-participants)\nqui injecte des messages dans la boucle de conversation du chat.",
  "F6DCF80905A5CA48A667": "La fonction `makeItBetter` ressemble plus ou moins à ceci. Elle enregistre une fonction de rappel qui est appelée à chaque tour de chat.",
  "85583C8A9AD62619B5E5": "Le runtime GenAIScript fournit des aides supplémentaires et permet d'utiliser le runtime dans n'importe quelle application Node.JS.",
  "4ED2CBFEF2B04D9939C9": "Pour utiliser le runtime, vous devrez installer GenAIScript dans votre projet.",
  "26E36059755EADEA14BA": "Initialisation",
  "FF1BE522F1832C9A9C62": "Si vous utilisez GenAIScript sans la CLI ou l'extension Visual Studio Code, vous devez initialiser le runtime avant d'utiliser les types ou fonctions globales.",
  "6CB142CDB9A0BAA20975": "Importer le runtime",
  "DD6CFFDCB897FE298D05": "Le runtime est disponible en tant que module. Vous pouvez l'importer avec le code suivant :",
  "F9F0481796E0CC9F6A8C": "Globaux",
  "BAE80AAFC12E011814C6": "Le runtime installe des parseurs globaux et des types de prompt en ligne. Cependant, le global `$`, `def`, etc. ne sont pas disponibles, les prompts en ligne le sont.",
  "9709D2B11EA41535455D": "Assistants",
  "7AB90F5CDE367E8A7278": "[cast](/genaiscript/reference/runtime/cast), convertir n'importe quelle donnée en sorties structurées",
  "99181C4B8C472080626D": "[classify](/genaiscript/reference/runtime/classify), classifier du texte",
  "D4ADD29111FAD030F3A0": "[makeItBetter](/genaiscript/reference/runtime/make-it-better), demander au LLM d'améliorer son résultat",
  "1BA101FAFCFD7DA201F0": "La fonction `classify` dans GenAIScript vous permet de catégoriser des entrées en fonction d'un modèle d'apprentissage automatique.\nElle fournit une interface simple pour exploiter la puissance des LLM pour les tâches de classification.",
  "4378EBDCE12CBE857B9B": "`classify` est défini dans le [runtime GenAIScript](/genaiscript/reference/runtime) et doit être importé. Il prend en entrée le texte à classer, un ensemble d'étiquettes (et des options pour le LLM) \net renvoie l'étiquette fournie par le LLM.",
  "E8A927A42FE66619078D": "L'invite encourage le LLM à expliquer ses choix **avant** de retourner l'étiquette.",
  "595EF78584AA7E5F3F21": "Les tokens des étiquettes sont renforcés à l'aide du logit-bias pour améliorer la fiabilité de la classification.",
  "848EA0254C9CA915A69C": "`classify` est fourni en tant que partie du runtime (une façon légèrement différente de regrouper les fonctionnalités de GenAIScript) et doit être importé en utilisant ce code...",
  "EF3F17AE06337B44B810": "Images",
  "0BFF879056E1BD25898F": "Vous pouvez passer une fonction qui prend un contexte d'invite\net construire la variable `DATA` de manière programmatique.\nCela vous permet de sélectionner des fichiers, des images et d'autres options GenAIScript.",
  "17B4C3026654697267B6": "Étiquettes",
  "31E3AE20FECCF72DED1E": "Le paramètre `labels` est un objet où les clés sont les étiquettes dans lesquelles vous souhaitez classer l'entrée, et les valeurs sont les descriptions de ces étiquettes. Le LLM utilise ces descriptions pour comprendre ce que chaque étiquette signifie.",
  "F07C34BB79B198C719BF": "Chaque identifiant d'étiquette doit être un mot unique qui s'encode en un seul token. Cela permet de renforcer l'étiquette à l'aide du logit-bias et d'améliorer la fiabilité de la classification.",
  "679841D2DB7E73B03F39": "Étiquette `other`",
  "CADB396CF0C3B4F28982": "Une étiquette `other` peut être automatiquement ajoutée à la liste\ndes étiquettes pour offrir une échappatoire au LLM lorsqu'il n'est pas capable de classer le texte.",
  "3C35D0795E74B754E446": "Explications",
  "8CEBDE3D5DCBA914F471": "Par défaut, l'invite de classification est réglée pour retourner un token (`maxToken: 1`) en tant qu'étiquette.\nVous pouvez activer l'émission d'une justification avant de retourner l'étiquette.",
  "27F701D81F5136119F94": "Modèle et autres options",
  "7B3D35621E94EF3C044C": "La fonction `classify` utilise par défaut l'[alias de modèle](/genaiscript/reference/scripts/model-aliases) `classify`.\nVous pouvez modifier cet alias ou spécifier un autre modèle dans les options.",
  "C033703FDBDBE5C783A2": "Les `options` sont transmises en interne à l’[invite en ligne](/genaiscript/reference/scripts/inline-prompts) et peuvent être utilisées pour modifier le comportement du LLM.",
  "F0867985AE3FDA21D0C3": "Évaluation de la qualité de la classification",
  "205B14921D02F13CA105": "GenAIScript renvoie la [logprob](/genaiscript/reference/scripts/logprobs) (et l'entropie) de l'étiquette de classification. Vous pouvez utiliser cette valeur pour évaluer la qualité du classement.",
  "867BF561F9EDC30CC24F": "Si l'étiquette a une probabilité élevée, cela signifie que c'est probablement une classification de bonne qualité. Une probabilité plus faible peut signifier que le LLM a hésité ou que d'autres étiquettes ont également été envisagées.",
  "F018AA5530178C110A0C": "Configuration",
  "4DE5F68DB2557A7885A0": "Vous pouvez désactiver les `logprobs` en définissant `logprobs: false` dans les options. Vous pouvez désactiver les `topLogprobs` en définissant `topLogprobs: false` dans les options.",
  "927E1A1358161C4FB32B": "Remerciements",
  "18FC283B36C662900085": "Cette fonction est inspirée de la classification dans [Marvin](https://www.askmarvin.ai/docs/text/classification/).",
  "D74C9FB412DDFD7A26D4": "La fonction `cast` dans GenAIScript permet de convertir du texte ou des images en données structurées.\nElle offre une interface simple pour exploiter la puissance des LLM afin d'extraire des données à partir de textes et d'images non structurés.",
  "E3B4215213714943625A": "`cast` est défini dans le [runtime GenAIScript](/genaiscript/reference/runtime) et doit être importé. Il prend le texte non structuré (ou les fichiers), un schéma JSON\net retourne les données extraites (ou une erreur).",
  "FB7F796D3582AF004A56": "`cast` est fourni en tant que partie du runtime (une façon légèrement différente d'emballer les fonctionnalités de GenAIScript) et doit être importé en utilisant ce code...",
  "FFED6962041C008394D2": "Images",
  "D578B15E0FBB0DC9C58F": "Vous pouvez passer une fonction qui prend un contexte de prompt\net construire la variable `DATA` de manière programmatique.\nCela vous permet de sélectionner des fichiers, des images et d'autres options GenAIScript. ",
  "53349ACABB223AEEC8E1": "Modèle et autres options",
  "CE53D2EBF3E96F6283C4": "La fonction `cast` utilise par défaut l'[alias de modèle](/genaiscript/reference/scripts/model-aliases) `cast`.\nVous pouvez modifier cet alias ou spécifier un autre modèle dans les options.",
  "00FC83C234082C86DF46": "options ",
  "6586D3C9EE593F4C77EC": "prompt en ligne",
  "6552767AB7FA01030775": "Remerciements",
  "C7C7CEDC12076B566475": "Cette fonction est inspirée de [Marvin](https://www.askmarvin.ai/docs/text/transformation/).",
  "A771B9660DC806F1EF44": "Commandes",
  "B0882D879EA5B4F2851A": "Liste de toutes les commandes CLI",
  "13FE33EDC0AD50A75803": "Une liste complète des commandes CLI et de leur texte d'aide respectif.",
  "2A04525AD6455682AC64": "`configure`",
  "D10EDBAA359B7582DF1C": "`configure llm`",
  "541DB3FAF4CB92606903": "`configure action`",
  "5148AA5936DDA5C46310": "`runs`",
  "10FD077F557B077544B7": "`runs list`",
  "9278EEF0B80CFB20D083": "`test`",
  "7ECE9141EB36AB2B347C": "`test run`",
  "A829B6A2731F4DAE00B2": "`test list`",
  "8965FCDC796BEF21A584": "`test view`",
  "2082AD96463C1AD697EE": "`convert`",
  "47FE08F7A407DC755A86": "`scripts`",
  "B920378E2BB384EEB775": "`scripts list`",
  "CA1DE8AE88B128C0DA6F": "`scripts create`",
  "4D82B54900D5EBE130EF": "`scripts fix`",
  "CF63CCE0751CC9CEA7D4": "`scripts compile`",
  "05B2A0DF06451AAEC6AC": "`scripts model`",
  "F8224EF910E5D4B69B00": "`scripts help`",
  "7E249976A47F2728A73D": "`cache`",
  "49B704FC3228B54A9FDA": "`cache clear`",
  "2A91342A416C1ECB45B4": "`video`",
  "3421EE3E5F5587606799": "`retrieval`",
  "92325B67ACB22D87DD31": "`retrieval index`",
  "A08B900E4FAFD6D3371B": "`retrieval vector`",
  "F9D40783F9ECD4409D99": "`retrieval fuzz`",
  "1FC882A7B2F08EEAA468": "`serve`",
  "B14ABA312D0759D2675C": "`mcp`",
  "F596D52B305AFD23AF5F": "`webapi`",
  "EA30949CDDBAC340E2FF": "`parse`",
  "32B15254BD1A876EC3CF": "`parse data`",
  "93A688D1EECB9182C414": "`parse fence`",
  "F9085998831A7BC36F17": "`parse pdf`",
  "EEE96F74ECC2321B2E74": "`parse docx`",
  "C7A725C8F0DDA1F25D5A": "`parse html`",
  "31E7D6F174E39C106786": "`parse tokens`",
  "320063B03B8F672FB2F0": "`parse tokenize`",
  "E30E0F5A0276F9983E1B": "`parse jsonl2json`",
  "38CB0B4FE6CA1F125DD7": "`parse prompty`",
  "7BA2EC85AF8CD7214DFB": "`parse jinja2`",
  "8CDE4C050F4B939632EB": "`parse secrets`",
  "E71ADA6F60F20BB5155C": "`parse markdown`",
  "11174262995A4F47B999": "`info`",
  "BA3210998ED5422216AB": "`info help`",
  "9ACEB07CA923D0358EA0": "`info system`",
  "050F2F94DB4500B02265": "`info env`",
  "FDEA83E61F9DDDFB9D0F": "`models`",
  "AFA9E3059FB6D202E711": "`models list`",
  "73D7105637500B78E87B": "`models alias`",
  "50F5696854CFC5E4AEB9": "Ces assistants d'exécution fournissent une interface conviviale autour de l'écosystème ",
  "192623A3E6C39167C4FB": "Manipulation Markdown",
  "DF63D9DB262EF5F90638": "charger les analyseurs",
  "99F451685FE47786D9A0": "analyse en arbre mdast",
  "6F8E42FB19B51DD0001E": "documentation",
  "1DBAD466B8B15714594C": "sérialiser l'arbre en Markdown",
  "F6EC65CADC0B34788F8E": "article de blog",
  "8A9DB6557BA71F49B63B": "fonction ",
  "1C62FB0FA0C558093A8E": "environnement d'exécution GenAIScript",
  "78E5AC2F684A61AFAFCA": "Explication du code",
  "39507031DE3F6475F25D": "Cette ligne importe la fonction `makeItBetter` depuis l'environnement d'exécution GenAIScript. Cette fonction est utilisée pour améliorer un code en répétant un ensemble d'instructions plusieurs fois. ",
  "8DC2440C3ED6DD127F83": "Cette ligne appelle la fonction `makeItBetter` avec une option pour répéter le processus d'amélioration deux fois. Elle enregistre un [participant au chat](/genaiscript/reference/scripts/chat-participants) qui injecte des messages dans la boucle de conversation du chat. ",
  "2E82891F0987341FE0E5": "Initialisation",
  "A9497DC41CBCE4873B95": "Importation du runtime",
  "0A19EAC13C2D14F37024": "Globaux\n\nLe runtime installe des parseurs globaux et des types de prompts en ligne. Cependant, les variables globales `$`, `def`, etc., ne sont pas disponibles pour les prompts en ligne.",
  "D89E1E87243AE9DCFE2C": "Aides\n\n* [cast](/genaiscript/reference/runtime/cast), convertir n'importe quelle donnée en sorties structurées\n* [classify](/genaiscript/reference/runtime/classify), classifier du texte\n* [makeItBetter](/genaiscript/reference/runtime/make-it-better), demander au LLM d'améliorer son résultat",
  "BB5CBD70C6C92E84770B": "cast",
  "86BF2481E9C51F0E210E": "classify",
  "3C08D7CB31DF6C1F8237": "makeItBetter",
  "D70A44F249EBE5A8C950": "`cast` est défini dans le [runtime GenAIScript](/genaiscript/reference/runtime) et doit être importé. Il prend le texte non structuré (ou les fichiers), un schéma JSON\net retourne les données extraites (ou une erreur). ",
  "4DEB2D7234FBF9C7D85B": "`cast` ",
  "C70EE2432839C578B414": "alias de modèle",
  "B7623FCC6968AA4CB400": "Cette fonction est inspirée de ",
  "CB2313051175EEE17C4D": "Marvin",
  "921465B539D0C533F20E": "L'invite encourage le LLM à expliquer ses choix ",
  "48CF6E189EF018F7E369": "avant",
  "30FCDC672876D5349F83": "Étiquettes",
  "DA8400263618A66BBAAC": "autre",
  "7DD987F39CD80F40B0D9": "Une étiquette `other` peut être ajoutée automatiquement à la liste\ndes étiquettes pour offrir une issue de secours au LLM lorsqu'il n'est pas capable de classer le texte. ",
  "427305F4B0FCFBDBD648": "Explications",
  "3DCE916E24C3466DE3F0": "Évaluation de la qualité de la classification",
  "84A131CBCB2A5C2C939B": "GenAIScript renvoie la ",
  "AA017C83AD5AD7F4E5DA": "logprob",
  "F75A622736216F065DA5": "Vous pouvez désactiver ",
  "5DA023F0C57ED477E333": "en mettant `topLogprobs: false` dans les options. ",
  "1FAFBAD4C2953A8035AC": "Cette fonction s'inspire de la classification dans ",
  "0507A6694E09C5D562E0": "[Z3](https://microsoft.github.io/z3guide/) est un prouveur de théorèmes haute performance développé par Microsoft Research. C'est un outil intégré de GenAIScript. Z3 est utilisé pour résoudre des formules logiques et peut être employé pour diverses applications, notamment la vérification de programmes, la résolution de contraintes et l'exécution symbolique.",
  "0A399AEC33BA4E493136": "GenAIScript utilise le paquet npm [z3-solver](https://www.npmjs.com/package/z3-solver) basé sur WebAssembly pour exécuter Z3.",
  "B02745931DE0CD87C408": "Instance Z3",
  "D8ACD2C4A80037D00243": "La méthode `host.z3()` crée une nouvelle instance de Z3. L'instance peut être utilisée pour exécuter des commandes Z3 et obtenir les résultats. L'instance `z3` est un wrapper autour du paquet npm [z3-solver](https://www.npmjs.com/package/z3-solver). L'instance `z3` possède la méthode `run` qui exécute la formule SMTLIB2 donnée et retourne le résultat.",
  "AEE3F73EE9C085467E4F": "Outil Z3",
  "497BBB8F5DD825FD3B6C": "Le script de l'outil `z3` (dans [system.z3](/genaiscript/reference/scripts/system#systemz3)) encapsule Z3 en tant qu'outil LLM utilisable dans GenAIScript. L'outil prend une formule SMTLIB2 en entrée et retourne la sortie de Z3.",
  "617C689FCC0302998EDD": "L'outil ne peut pas gérer des problèmes arbitraires, ce qui nous amène à l'agent.",
  "E7D3C0EA757999D0682A": "Agent Z3",
  "24B24A8F6543E2FD65C0": "Le script de l'agent `z3` (dans [system.agent-z3](/genaiscript/reference/scripts/system#systemagent_z3)) encapsule l'outil `z3` avec un LLM capable de (tenter de) formaliser des problèmes arbitraires en SMTLIB2.",
  "94B78474C416945FBCCC": "La conversation LLM allant du problème à la formule SMTLIB2 peut être incorrecte. Vérifiez vos résultats avec l'outil Z3. L'agent ne remplace pas l'outil Z3, mais offre un moyen d'utiliser Z3 avec des problèmes arbitraires.",
  "C1A9CF3A188C8BC0D4E0": "[YAML](https://yaml.org/) est un format de sérialisation de données lisible par l'homme, couramment utilisé pour les fichiers de configuration et l'échange de données.",
  "41A563FFFA0EC2BC3E81": "Dans le contexte de LLM, YAML est plus convivial pour l'algorithme du tokenizer et est généralement préféré à JSON pour représenter des données structurées.",
  "8E9AA21F1FED2C9A8A17": "`defData`",
  "E707148DB3AF84EE4FFF": "La fonction `defData` convertit un objet en YAML dans l'invite (et d'autres formats si nécessaire).",
  "4908AA1FF382F2F35B2F": "`YAML`",
  "DE3FF010F2F8A9C9AB99": "De la même manière que la classe `JSON` en JavaScript, la classe `YAML` dans LLM fournit des méthodes pour analyser et convertir en chaîne des données YAML.",
  "B73DE2A8D2294C27C487": "`parsers`",
  "5FC1FA15046DAEB330FA": "Les [parsers](/genaiscript/reference/scripts/parsers) fournissent également un analyseur tolérant pour YAML.\nIl renvoie `undefined` pour les entrées invalides.",
  "A634236DC239F154A6F4": "Schémas",
  "81A6688F85841324A73A": "Les schémas JSON définis avec [defSchema](/genaiscript/reference/scripts/schemas) peuvent également être utilisés pour valider les données YAML.",
  "E72B9384306AA02A240B": "La fonction `def` analysera automatiquement les fichiers XML et en extraira le texte.",
  "778C75A2586C89D245F6": "La fonction globale `XML.parse` lit un fichier XML et le convertit en un objet JSON.",
  "2FC903AA6E3A9C8EB385": "Les noms d'attributs sont précédés de \"@_\".",
  "2AD9DF2CCDA734A8EC4A": "RSS",
  "286418152AF12B14BDE0": "Vous pouvez utiliser `XML.parse` pour analyser un flux RSS en un objet.",
  "F35EBDE3DBEAC0BE39ED": "Étant donné que les flux RSS renvoient généralement une description en HTML rendu, vous pouvez utiliser `parsers.HTMLToText` pour la convertir en texte brut.",
  "FAA07AF259F1726F1E16": "Analyse et conversion en chaîne des fichiers de tableur Excel, xlsx.",
  "D1F004857F8EC9C9AED8": "Les [parsers](/genaiscript/reference/scripts/parsers) fournissent également un analyseur polyvalent pour XLSX. Il renvoie un tableau de feuilles (`name`, `rows`) où chaque ligne est un tableau d'objets.",
  "B1E7C649DFDCF263E76B": "Bien que la plupart des LLM ne prennent pas en charge les vidéos nativement, elles peuvent être intégrées dans des scripts en rendant des images et en les ajoutant comme images au prompt. Cela peut être fastidieux et GenAIScript fournit des assistants efficaces pour simplifier ce processus.",
  "18E8F316666B901BFDB6": "Configuration de ffmpeg",
  "C97333E4B39192030428": "Les fonctionnalités de rendu et d'analyse des vidéos reposent sur [ffmpeg](https://ffmpeg.org/) et [ffprobe](https://ffmpeg.org/ffprobe.html).",
  "6218FFBCA25F097C6402": "Sous Linux, vous pouvez essayer",
  "AF15017BA544182209FD": "Assurez-vous que ces outils sont installés localement et disponibles dans votre PATH, ou configurez les variables d'environnement `FFMPEG_PATH` / `FFPROBE_PATH` pour pointer vers l'exécutable `ffmpeg`/`ffprobe`.",
  "E4BCDD19625878308B14": "Extraction des images",
  "F7BDCE16AB96D9112197": "Comme indiqué ci-dessus, les LLM multimodaux prennent généralement en charge les images sous forme d’une séquence d'images (ou captures d'écran).",
  "66DB0FAED3DDE87BE7B0": "La fonction `ffmpeg.extractFrames` va rendre des images à partir d’un fichier vidéo et les retourner sous forme de tableau de chemins de fichiers. Vous pouvez utiliser le résultat directement avec `defImages`.",
  "38D723361D0AC928BD2F": "par défaut, extraire les images clés (intra-images)",
  "82DE327C5B7E9F16E987": "spécifiez un nombre d’images à l’aide de `count`",
  "EC7006A929269E170639": "spécifiez des horodatages en secondes ou en pourcentages de la durée de la vidéo avec `timestamps` (ou `times`)",
  "8A665DD0501F2F4A9F0B": "spécifiez la transcription calculée par la fonction [transcribe](/genaiscript/reference/scripts/transcription). GenAIScript extraira une image au début de chaque segment.",
  "BD4174ADD8F037FB6244": "spécifiez un seuil de scène (entre 0 et 1)",
  "D39B99D6B5D82BF89500": "Extraction de l’audio",
  "F0B5C494B9675E9BFC7F": "La fonction `ffmpeg.extractAudio` extraira l’audio d’un fichier vidéo au format `.wav`.",
  "7674DB7DEA130297CC99": "La conversion vers l’audio se fait automatiquement pour les vidéos lors de l’utilisation de [transcribe](/genaiscript/reference/scripts/transcription).",
  "89E3EFFEE3CA07032A53": "Extraction de clips",
  "20AA8FAD0E82D251FF84": "Vous pouvez extraire un extrait d’un fichier vidéo en utilisant `ffmpeg.extractClip`.",
  "7E81BE34397C006F9CE5": "Cette opération est assez rapide car elle ne nécessite pas de ré-encodage. Vous pouvez spécifier la taille de sortie mais cela sera beaucoup plus lent car cela nécessitera un ré-encodage.",
  "E0097576064DDA673DC2": "Analyse des vidéos",
  "178027EC0B630965313C": "Vous pouvez extraire les métadonnées d’un fichier vidéo en utilisant `ffmpeg.probe`.",
  "40C643600A7BD84F91C8": "Options personnalisées pour ffmpeg",
  "BB136958560F9B1ED4D0": "Vous pouvez personnaliser davantage la configuration de `ffmpeg` en passant `outputOptions`.",
  "6A75F797A34AADDDEA19": "Ou interagir directement avec le constructeur de commandes `ffmpeg` (qui est le constructeur de commandes natif de [fluent-ffmpeg](https://www.npmjs.com/package/fluent-ffmpeg)). Notez que dans ce cas, vous devez également fournir un « hash » de cache pour éviter le rerendu.",
  "90BBCCD4DB08361A4F9D": "Le [cli](/genaiscript/reference/cli/video) prend en charge diverses commandes pour exécuter les transformations vidéo.",
  "653F7B6C2EF256135528": "La fonction `retrieval.webSearch` effectue une recherche web en utilisant [Tavily](https://docs.tavily.com/) ou Bing Web Search.",
  "925AD3F981466F660320": "Pages Web",
  "6CE8036D5C457552CEF1": "Par défaut, l'API renvoie les 10 premières pages web dans le champ `webPages` sous forme d'un tableau de fichiers, de manière similaire à `env.files`. Le contenu contient l'extrait résumé retourné par le moteur de recherche.",
  "D4330EB6403DA2F90EDA": "Vous pouvez utiliser `fetchText` pour télécharger le contenu complet de la page web.",
  "B352E3FD834B596AD54F": "Configuration Tavily <a href=\"\" id=\"tavily\" />",
  "A822040FFCD81F0D9199": "L’[API Tavily](https://docs.tavily.com/docs/rest-api/api-reference#endpoint-post-search) donne accès à un moteur de recherche puissant pour les agents LLM.",
  "3DCA3562B819F7F0AB67": "Configuration de Bing Web Search <a href=\"\" id=\"bing\" />",
  "68EF75490525F303CA78": "L'API utilise [Bing Web Search v7](https://learn.microsoft.com/en-us/bing/search-apis/bing-web-search/overview) pour effectuer des recherches sur le web. Pour utiliser l'API, vous devez créer une ressource Bing Web Search dans le portail Azure et stocker la clé API dans le fichier `.env`.",
  "516D99B2A28AA44E4123": "Outil",
  "6FBEC58DDEB052FC6B29": "Ajoutez le script système [system.retrieval_web_search](https://github.com/microsoft/genaiscript/blob/main/packages/core/src/genaisrc/system.retrieval_web_search.genai.mjs) pour enregistrer un [outil](/genaiscript/reference/scripts/tools) qui utilise `retrieval.webSearch`.",
  "02B7F79262DC5A1DEEEB": "GenAIScript fournit diverses bases de données vectorielles pour supporter la recherche par embeddings et la génération augmentée par récupération (RAG).",
  "832A4C90B5C54517B58C": "Création de l'index",
  "9C6A6B253CA0B10C0233": "La fonction `retrieve.index` crée ou charge un index existant. La création de l'index prend en compte plusieurs options **qui ne doivent pas changer** entre les exécutions.",
  "E482BE720E39C6638E5E": "Index local",
  "EB5C78D10D88BC7F489B": "Par défaut, les vecteurs sont stockés localement dans des fichiers sous le dossier `.genaiscript/vector` en utilisant une base de données vectorielle locale basée sur [vectra](https://www.npmjs.com/package/vectra). Les embeddings sont calculés à l'aide de l'[alias de modèle]( /genaiscript/reference/scripts/model-aliases) `embeddings`.",
  "A56B13FD4A893EDA226F": "Les `embeddings` peuvent également être configurés via les options.",
  "7B3C22B695BE3D04470C": "L'index est sérialisé par défaut. Si vous souhaitez le réinitialiser à chaque exécution, définissez `deleteIfExists: true`.",
  "3C43C5D7766EA404E439": "Recherche Azure AI",
  "B6E43C4FF0187B4A2B8B": "GenAIScript prend également en charge l'utilisation d'un service [Azure AI Search](https://learn.microsoft.com/en-us/azure/search/search-what-is-azure-search). Azure AI Search utilise la [syntaxe de requête simple](https://learn.microsoft.com/en-us/azure/search/query-simple-syntax).",
  "EB9F0BABDF0EC9CF78BA": "Pour configurer le service, vous devrez définir les variables d'environnement `AZURE_AI_SEARCH_ENDPOINT` et `AZURE_AI_SEARCH_API_KEY` dans votre fichier `.env`. Veuillez consulter la [documentation d'authentification](https://learn.microsoft.com/en-us/javascript/api/overview/azure/search-documents-readme?view=azure-node-latest#authenticate-the-client) pour plus de détails.",
  "31EC7FCE97ABA163E54D": "La gestion supplémentaire de l'index peut être effectuée via le portail Azure.",
  "3C6F800A2710034E138B": "Configuration du modèle et du découpage",
  "8AE685F30C26BECBDEE1": "Le calcul des embeddings est effectué via les API LLM en utilisant le même jeton d'autorisation que l'API LLM.",
  "B4AAC2B26B2052C6A5C0": "Vous pouvez également configurer le découpage des fichiers d'entrée. Vous pouvez modifier cela en définissant les options `chunkSize` et `chunkOverlap`.",
  "B93BEF35B10B3C484DEF": "Indexation",
  "313EF8C780BD12513D97": "La fonction `index.insertOrUpdate` gère le découpage, la vectorisation et la mise à jour de la base de données vectorielle.",
  "9E1983916F3E5C34DB21": "Recherche",
  "6FA2E114EE4CFCA209DC": "La fonction `index.search` effectue une recherche (vectorielle ou hybride) en utilisant l'index.",
  "14E70711A3E094A9C301": "La valeur retournée est un tableau de fichiers avec le contenu reconstitué à partir des morceaux correspondants.",
  "920DBF10190F6529A492": "L'objet `env.vars` contient un ensemble de valeurs variables. Vous pouvez utiliser ces variables pour paramétrer votre script.",
  "66D6962BDA596A0566F2": "Paramètres de script",
  "460577B09C3352F8788E": "Il est possible de déclarer des paramètres dans l'appel de la fonction `script`. L'objet `env.vars` contiendra les valeurs de ces paramètres.",
  "10B41AE9B87B863992F9": "Lors de l'exécution de ce script dans VS Code, l'utilisateur sera invité à fournir des valeurs pour ces paramètres.",
  "0E8E60D965CC77723313": "Variables depuis la CLI",
  "0E968EB14D4BE783F944": "Utilisez le champ `vars` dans la CLI pour remplacer les variables. `vars` prend une séquence de paires `clé=valeur`.",
  "54CC7FFA86E12723476C": "Variables dans les tests",
  "AA340436F3A53CA0CD3E": "Vous pouvez spécifier des variables dans l'objet `tests` de la fonction `script`. Ces variables seront disponibles dans le contexte du test.",
  "45A0A776D739D82CF782": "GenAIScript fournit diverses fonctions pour obtenir une entrée utilisateur lors de l'exécution d'un script.\nCeci est utile pour créer une expérience \"humain dans la boucle\"\ndans vos scripts.",
  "6DAD1AEAD82A4BD77838": "Lors de l'exécution de [CLI](/genaiscript/reference/cli),\nl'entrée utilisateur se fait via le terminal.",
  "D1CF83B940390CBB2B82": "[TypeScript](https://www.typescriptlang.org/) est un langage de programmation fortement typé qui s'appuie sur JavaScript, vous offrant de meilleurs outils à toutes les échelles. Les scripts GenAIScript peuvent être écrits en TypeScript.",
  "F4096D2101F7C1836892": "De JavaScript à TypeScript",
  "8C59311336B4648B6F6E": "Vous pouvez convertir n'importe quel script existant en TypeScript en changeant l'extension du fichier en **`.genai.mts`**.",
  "617EFCD03876E6F37B6A": "Assurez-vous d'utiliser l'extension de fichier **`.mts`** - et non `.ts` -, qui oblige Node.JS à utiliser le système de modules [ESM](https://www.typescriptlang.org/docs/handbook/modules/guides/choosing-compiler-options.html).",
  "B9716A96D2F60E24EA7E": "Importer des fichiers sources TypeScript",
  "8EA185EEBE1B4E6FD5C7": "Il est possible d’[importer](/genaiscript/reference/scripts/imports) des fichiers sources TypeScript.",
  "E4EDB4247115D20F6A8F": "import",
  "35CF386E8BB06608311A": "GenAIScript vérifie-t-il les types des prompts ?",
  "1C1064096BDCEFA98C74": "Oui et non.",
  "C49EBD09CD39AC83B998": "La plupart des éditeurs modernes, comme Visual Studio Code, vérifient automatiquement les types dans les sources TypeScript.",
  "70D2009843AA61F92F9F": "Vous pouvez aussi lancer une compilation TypeScript avec la commande `scripts compile`.",
  "1E11E656AD884AC77BF1": "Cependant, à l'exécution, GenAIScript convertit le TypeScript en JavaScript **sans vérification des types** via [tsx](https://tsx.is/usage#no-type-checking).",
  "4DD95D82AB8554FF8703": "GenAIScript prend en charge la transcription et les traductions depuis les API similaires à OpenAI.",
  "955678E137BA2FA76710": "L'API de transcription utilise automatiquement [ffmpeg](https://ffmpeg.org/) pour convertir les vidéos en fichiers audio ([codec opus dans un conteneur ogg](https://community.openai.com/t/whisper-api-increase-file-limit-25-mb/566754)).",
  "D000960E2FAD1ACEB0AD": "Vous devez installer ffmpeg sur votre système. Si la variable d'environnement `FFMPEG_PATH` est définie, GenAIScript l'utilisera comme chemin complet vers l'exécutable ffmpeg. Sinon, il tentera d'appeler ffmpeg directement (il doit donc être dans votre PATH).",
  "DBDF67F946DA3DCDCAA0": "Modèle",
  "777936CA2D22D0BCBE89": "Par défaut, l'API utilise l'[alias de modèle](/genaiscript/reference/scripts/model-aliases) `transcription` pour transcrire l'audio. Vous pouvez également spécifier un alias de modèle différent en utilisant l'option `model`.",
  "2D6F719F7EF4A5D22CDE": "Vous pouvez utiliser le [service Web Whisper ASR](/genaiscript/configuration/whisperasr) pour exécuter Whisper localement ou dans un conteneur docker.",
  "320F6523BF83BB414DAA": "Segments",
  "10A4378EA073F40F7D02": "Pour les modèles qui le supportent, vous pouvez récupérer les segments individuels.",
  "B1ED624389EE5AA81BAD": "SRT et VTT",
  "E82DDC70AABFA19B8EAD": "GenAIScript génère également les segments aux formats [SRT](https://fr.wikipedia.org/wiki/SubRip) et [WebVTT](https://developer.mozilla.org/en-US/docs/Web/API/WebVTT_API).",
  "1ADE7BA3048EDD7D8596": "Traduction",
  "1DE77B04660DD3081EBD": "Certains modèles prennent également en charge la transcription et la traduction en anglais en une seule passe. Dans ce cas, activez l'option `translate: true`.",
  "360F109CF54F3CFEE87F": "Cache",
  "88F530877D761743CF78": "Vous pouvez mettre en cache les résultats de la transcription en définissant l'option `cache` à `true` (ou un nom personnalisé).",
  "7D303C9F6A377B59599E": "ou un sel personnalisé",
  "5876C8533CBED7ACC08F": "Parseurs VTT et SRT",
  "ACF6F4A08CEF118CCD45": "Vous pouvez analyser les fichiers VTT et SRT en utilisant la fonction `parsers.transcription`.",
  "BB88415CE781D4B38A11": "Le module d'aide `tokenizers` fournit un ensemble de fonctions pour diviser le texte en tokens.",
  "43D42503287260A6B425": "Choisir votre tokeniseur",
  "E3FAD41A40BE43F9339D": "Par défaut, le module `tokenizers` utilise le tokeniseur `large`. Vous pouvez changer de tokeniseur en passant l'identifiant du modèle.",
  "B815757F5CAF86AEBB78": "`count`",
  "2B3587C28D5B09C267C1": "Compte le nombre de tokens dans une chaîne de caractères.",
  "51EFE82DA22A7EA3E3E7": "`truncate`",
  "9C7A3F8F14BD52B34587": "Supprime une partie de la chaîne pour respecter un budget de tokens",
  "EB4B423548125CB72439": "`chunk`",
  "8C639EBC63EBD8E311F3": "Divise le texte en segments d'une taille de tokens donnée. Le segment essaie de trouver des frontières de découpage appropriées en fonction du type de document.",
  "6A406D007A293F0399B8": "Vous pouvez configurer la taille des segments, le chevauchement et ajouter des numéros de ligne.",
  "F1B3817628DC1A50C77A": "Il est possible de définir des tests pour les scripts LLM, afin d’évaluer la qualité des sorties du LLM au fil du temps et selon les types de modèles.",
  "0279C73DA335DCB09C24": "Les tests sont exécutés par [promptfoo](https://promptfoo.dev/), un outil d’évaluation de la qualité des sorties des LLM.",
  "CBAD8F8023306A2953A2": "Vous pouvez également détecter des vulnérabilités de l’IA, telles que les biais, la toxicité et les problèmes de factualité, en utilisant la fonctionnalité [redteam](/genaiscript/reference/scripts/redteam).",
  "9C19A8550A2B19E44F9C": "Définition des tests",
  "1DB966C7C17699A49EE8": "Les tests sont déclarés dans la fonction `script` de votre test.\nVous pouvez définir un ou plusieurs tests (sous forme de tableau).",
  "6522BC146EE56A7F971C": "Modèles de test",
  "FCCB9A298246E60FF797": "Vous pouvez spécifier une liste de modèles (ou d’alias de modèles) à tester.",
  "E50A8314D310A8A20083": "Le moteur d’évaluation (PromptFoo) exécutera chaque test pour chaque modèle de la liste.\nCette configuration peut être remplacée par l’option `--models` en ligne de commande.",
  "2317A0B212D9235EA1A7": "Fichiers de test externes",
  "6B9FD6343EF0880255C4": "Vous pouvez aussi spécifier le nom de fichiers de test externes aux formats JSON, YAML, CSV, ainsi que des fichiers JavaScript `.mjs` ou `.mts` qui seront exécutés pour générer les tests.",
  "10F9A33C16D3F0213FE3": "Les fichiers JSON et YAML supposent que les fichiers contiennent une liste d’objets `PromptTest` et vous pouvez valider ces fichiers à l’aide du schéma JSON disponible à [https://microsoft.github.io/genaiscript/schemas/tests.json](https://microsoft.github.io/genaiscript/schemas/tests.json).",
  "2B5B94EAAE109F8BF9DE": "Les fichiers CSV supposent que la première ligne est l’en-tête et que les colonnes correspondent principalement aux propriétés de l’objet `PromptTest`.\nLa colonne `file` doit contenir un nom de fichier, la colonne `fileContent` contient le contenu d’un fichier virtuel.",
  "A2AA39D27AA77D48287A": "Les fichiers JavaScript doivent exporter une liste d’objets `PromptTest` ou une fonction qui génère cette liste.",
  "7BA739B54241CD7AF2F7": "`files`",
  "44A3B6BCAEC26E51DD17": "`files` prend une liste de chemins de fichier (relatifs à l’espace de travail) et remplit la variable `env.files` pendant l’exécution du test. Vous pouvez fournir plusieurs fichiers en passant un tableau de chaînes.",
  "5F1937004E79F11F28E1": "`rubrics`",
  "D85A00A50DC537EF8228": "`rubrics` vérifie si la sortie du LLM correspond aux exigences données,\nen utilisant un modèle de langage pour noter la sortie selon la rubrique (voir [llm-rubric](https://promptfoo.dev/docs/configuration/expected-outputs/model-graded/#examples-output-based)).\nVous pouvez spécifier plusieurs rubriques en passant un tableau de chaînes.",
  "2C5EF7B75E9FF79433A0": "GPT-4 requis",
  "19AA7ABAE1E58ADDF6C8": "Les tests avec `rubrics` nécessitent une configuration OpenAI ou Azure OpenAI avec un modèle `gpt-4` dans le fichier `.env`.",
  "98349725CE54B33D610D": "`facts`",
  "EE41ACDAC9467D93DD50": "`facts` vérifie la cohérence factuelle (voir [factuality](https://promptfoo.dev/docs/guides/factuality-eval/)).\nVous pouvez spécifier plusieurs faits en passant un tableau de chaînes.",
  "7FBAF9244A45DE10A865": "étant donné une complétion A et une réponse de référence B, évalue si\nA est un sous-ensemble de B, A est un sur-ensemble de B, A et B sont équivalents,\nA et B divergent, ou A et B diffèrent,\nmais la différence n’a pas d’importance du point de vue de la factualité.",
  "E8A662FFDF819160713F": "gpt-4o requis",
  "3E19F928942F08A5FA00": "Les tests avec `facts` nécessitent une configuration OpenAI ou Azure OpenAI avec un modèle `gpt-4o` dans le fichier `.env`.",
  "37375338B0DBEC821AC7": "`asserts`",
  "4977C2B6A57732307176": "Autres assertions disponibles sur\n[assertions et métriques de promptfoo](https://promptfoo.dev/docs/configuration/expected-outputs/).",
  "559518BED481A1A42FE4": "`icontains` (`not-icontains`) la sortie contient une sous-chaîne, insensible à la casse",
  "7535182F012CB04ACFBE": "`equals` (`not-equals`) la sortie est égale à la chaîne",
  "88F37B0798D033DE5EEF": "`starts-with` (`not-starts-with`) la sortie commence par la chaîne",
  "899FB7643135A6C3D697": "`contains-all` (`not-contains-all`) la sortie contient toutes les sous-chaînes",
  "8276CBDEFB42C4EB69FF": "`contains-any` (`not-contains-any`) la sortie contient n’importe quelle sous-chaîne",
  "291F9B7E7443F2834D92": "`icontains-all` (`not-icontains-all`) la sortie contient toutes les sous-chaînes, insensible à la casse",
  "F8715761E4CDE6BE040F": "transformer",
  "45274599A9E4C5712761": "Par défaut, GenAIScript extrait le champ `text` de la sortie avant de l’envoyer à PromptFoo.\nVous pouvez désactiver ce mode en définissant `format: \"json\"` ; dans ce cas, les `asserts` sont exécutés sur la sortie brute du LLM.\nVous pouvez utiliser une expression JavaScript pour sélectionner une partie de la sortie à tester.",
  "2F6661203BDAD374D769": "Exécution des tests",
  "838EBF3489209BFEE0E8": "Vous pouvez exécuter les tests depuis Visual Studio Code ou depuis la [ligne de commande](/genaiscript/reference/cli).\nDans les deux cas, genaiscript génère un [fichier de configuration promptfoo](https://promptfoo.dev/docs/configuration/guide)\net exécute promptfoo dessus.",
  "E09BC3305FCF92C7C4D2": "Visual Studio Code",
  "744FBD45C8D252D1A285": "Ouvrez le script à tester",
  "B666A4108163704FF69B": "Cliquez droit dans l’éditeur et sélectionnez **Run GenAIScript Tests** dans le menu contextuel",
  "C893809B35D5D8B99D21": "La [vue web promptfoo](https://promptfoo.dev/docs/usage/web-ui/) s’ouvrira automatiquement\net se rafraîchira avec les résultats des tests.",
  "22E72061417559355D26": "Ligne de commande",
  "7118C9E6724D57B9009C": "Exécutez la commande `test` avec le fichier script en argument.",
  "095056FFA3E78863C807": "Vous pouvez spécifier des modèles supplémentaires à tester en utilisant l’option `--models`.",
  "24DD67E78CFF5C992A1D": "GenAIScript fournit des API pour publier un message, avec des fichiers joints, sur un canal donné de [Microsoft Teams](https://www.microsoft.com/en-us/microsoft-teams/) et son partage de fichiers SharePoint.",
  "0AB9ACD91F90083BC378": "en utilisant la CLI, pour publier le résultat de la génération IA",
  "AAE08B1D1037FAD71D60": "en utilisant l'API, pour publier un message avec des pièces jointes",
  "626B2AB4AE7590AF1756": "GenAIScript utilise le client d’authentification Azure pour interagir avec Microsoft Graph. Connectez-vous à votre compte en utilisant l’interface en ligne de commande Azure CLI.",
  "78B36AC0F2A82E053BE4": "Pour utiliser l’intégration Microsoft Teams avec le [CLI](/genaiscript/reference/cli), vous devez fournir une URL de lien vers un canal Teams.",
  "7A055F6E93FE2EF457FA": "API",
  "DFE3B0ACF8F0058288D7": "L’API fonctionne en créant un client pour le canal, puis en appelant `postMessage`.",
  "F2029D161E3FC78654CE": "Vous pouvez également joindre des fichiers au message. Les fichiers seront téléchargés dans le dossier SharePoint Files.",
  "14664CCD6B9F7E617EE5": "Ajoutez une description au fichier pour renseigner ces métadonnées. La description peut être en markdown et sera rendue en HTML dans Teams autant que possible.",
  "1ED87639EC3FF43C2F27": "Pour les vidéos, GenAIScript divisera la description en un sujet/message afin de remplir les deux champs dans Microsoft Stream.",
  "FECFD12E263523712592": "Les invites système sont des scripts qui sont exécutés et injectés avant la sortie de l'invite principale.",
  "48D5CBA68C6E6E9E4774": "`system.*.genai.js` sont considérés comme des modèles d'invites système",
  "FE9B0F3E8EA05AA44DB4": "Les invites système sont non listées par défaut",
  "F0F6AEB4417F695476B8": "Les invites système doivent utiliser `system` au lieu de `script`",
  "4FD16A4A80A9264F57A8": "Les invites système sont exécutées avec le même environnement que l'invite principale",
  "9ACD070D355D2870DBEC": "Les invites système doivent avoir une fonction par défaut et utiliser le `ctx` passé dans la fonction.",
  "E26C40B2A6D68B38ED7F": "Pour utiliser les invites système dans un script, remplissez le champ `system` avec les identifiants des scripts.",
  "7E6EF2866AC952FF958F": "Il est également possible de peupler le script système en incluant les noms d'outils\nce qui entraîne l'importation de l'outil dans le script.",
  "4FD8137B8DEEEF80BBD4": "Paramètres et variables",
  "231D0EE2F937198809E0": "Le système supporte aussi les paramètres comme un script mais les noms de paramètres seront automatiquement préfixés\navec l'identifiant du script",
  "BB99DE080B22211DFCB4": "déclarez et utilisez le paramètre dans le script système",
  "8F57B568592790ACCEEC": "remplacez la valeur du paramètre dans le script script",
  "F60AE983C63191651BB2": "remplacez la valeur du paramètre dans une instance du script système",
  "2F034D672F1B2F9C1178": "Invites système automatisées",
  "F015B4C9F6AD6AE9C961": "Lorsqu'elles ne sont pas spécifiées, GenAIScript inspecte le code source du script\npour déterminer un ensemble raisonnable d'invites système ([code source](https://github.com/microsoft/genaiscript/blob/main/packages/core/src/systems.ts)).",
  "0CE34A62297477132559": "Le mélange par défaut est",
  "852F667029B73A368F5F": "system",
  "EC5C7E7D2820CF548AE1": "system.output_markdown",
  "A6AAFAD0C27AA2679700": "system.explanations",
  "CD2EB88B20D20EC50BC8": "system.safety_jailbreak",
  "37A9710D70EE6FF56DA8": "system.safety_harmful_content",
  "D8AF85D103DD2AD17308": "system.safety_protected_material",
  "C12AA44622D1B6A4E0CB": "Au-delà du défaut, d'autres scripts système sont injectés en fonction de la correspondance de mots-clés.",
  "5FA7BF8FF5545602FC43": "Invites Système Intégrées",
  "E117A01927D9F4DA02CD": "GenAIScript est livré avec un certain nombre d'invites système qui prennent en charge des fonctionnalités comme la création de fichiers, l'extraction de différences ou\nla génération d'annotations. Si elles ne sont pas spécifiées, GenAIScript recherche des mots clés spécifiques pour activer les différentes invites système.",
  "51FA71F1E1288B531F52": "`system`",
  "42477CDB8C16264A526F": "Invite système de base",
  "2032A5F52196611ABF59": "`system.agent_data`",
  "6173068489960DE1ACD8": "Agent capable d'interroger des données dans des fichiers",
  "D01120B61C28BEB636F1": "`system.agent_docs`",
  "8F0FAA76C4790442F09A": "Agent capable d'interroger la documentation.",
  "5E4EAD1219DCC6F829FD": "`system.agent_fs`",
  "DC562386BE8CCF1AF629": "Agent capable de trouver, rechercher ou lire des fichiers pour accomplir des tâches",
  "0B5255951D2170F0696C": "`system.agent_git`",
  "4259B78C057FBB8E3740": "Agent capable d'interroger Git pour accomplir des tâches.",
  "233FBD06CE5086D1D6A4": "`system.agent_github`",
  "9491F9F83EECD22BDEA5": "Agent capable d'interroger GitHub pour accomplir des tâches.",
  "02E192FBD9F5E55658E4": "`system.agent_interpreter`",
  "88A34BD2581C07037C8F": "Agent capable d'exécuter des interprètes de code pour Python, Math.",
  "DCBA3BF98820B0786E89": "`system.agent_mcp`",
  "5E18CDD3A961597D4E65": "Agent du protocole de contexte modèle",
  "F8B488656EBEE3B1CD3C": "Enveloppe un serveur MCP avec un agent.",
  "5D41108657386C71D0C1": "`system.agent_planner`",
  "8990104484ACFEB877E2": "Un agent planificateur",
  "753759DB38770F5BB2AB": "`system.agent_user_input`",
  "A5BA5A8393C259F2DBA6": "Agent pouvant poser des questions à l'utilisateur.",
  "01C6C2E526FD83459473": "`system.agent_video`",
  "8C13286FE25617BC7F75": "Agent pouvant traiter des vidéos",
  "6EA7EDF834F01DB29E49": "`system.agent_web`",
  "33C6DF5DE5E0550E61AC": "Agent capable de rechercher sur le web.",
  "CA4525E4EF0853EFDE9D": "`system.agent_z3`",
  "A38B6DA4F628CFFE1363": "Agent capable de formaliser et résoudre des problèmes avec Z3.",
  "16F05B0147994CEB062B": "`system.annotations`",
  "FC1C0FF42517143DEE4E": "Émet des annotations compatibles avec GitHub Actions",
  "1AC43447AAE1B277173C": "Les workflows GitHub Actions prennent en charge les annotations ([En savoir plus...](https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-error-message)).",
  "3CAC94CF763E22FD531D": "`system.assistant`",
  "24E8A156BADB86C2BD59": "Invite d'assistant utile.",
  "D122E0FAF05F504AE420": "Une invite pour un assistant utile provenant de https://medium.com/@stunspot/omni-f3b1934ae0ea.",
  "8295BEF5191D7CFF2B5F": "`system.chain_of_draft`",
  "886736F36EE742AFF048": "Raisonnement de chaîne de brouillon",
  "F86B4F4AC55D4A77548A": "Technique de raisonnement chaîne de brouillon. Plus d'informations sur https://learnprompting.org/docs/intermediate/zero_shot_cot.",
  "2FCD4C232F658DE2F216": "`system.changelog`",
  "7372C0C8992EEF13F86D": "Génère des modifications de formatteur de journal de modifications",
  "2DF5828239D7EF478BBD": "`system.cooperation`",
  "62C57A4B1F2AD7DFF8D8": "Principes de coopération de la maxime de Grice.",
  "56BB842DF7CD58DC6796": "`system.diagrams`",
  "F4A176C336955EAAE73E": "Générer des diagrammes",
  "1D279BCDA1CCF252702D": "`system.diff`",
  "A74A332A90BEC1AF0EEC": "Génère des différences concises de fichiers.",
  "9F4F8A3EA509AD585D37": "`system.do_not_explain`",
  "A9D827D4D78684F6A523": "Ne pas expliquer",
  "C8B12D264C6CB0DE9420": "`system.english`",
  "9D59EA86A18EB0754916": "Utiliser la sortie en anglais",
  "CED2B989F59714093635": "`system.explanations`",
  "A817A03EDFC8F7F69CE1": "Expliquez vos réponses",
  "42503D0CC53E879FCF7B": "`system.fetch`",
  "537EDFCCBB9460E3B368": "Un outil qui peut récupérer des données d'une URL",
  "A26E09308CC91F9D4806": "outil `fetch` : récupérer des données d'une URL depuis des domaines autorisés.",
  "36DD5E5B5E88998A7F00": "`system.files`",
  "C5985B7B29E13DA54322": "Génération de fichiers",
  "1225EA13FD60BF17B7DF": "Enseigne le format de fichier pris en charge par GenAIScripts",
  "F9B905F373ACD7D6DDC0": "`system.files_schema`",
  "3262C780BAD79D1078C9": "Appliquer des schémas JSON aux données générées.",
  "9714CEDA933848F2D7BB": "`system.fs_ask_file`",
  "3A270A07CB1EB89D1FEF": "File Ask File",
  "8FF2F56A52B759502D30": "Exécuter une requête LLM contre le contenu d'un fichier.",
  "C6D1EA8436A82B0147CE": "outil `fs_ask_file` : exécute une requête LLM sur le contenu d'un fichier. Utilisez cet outil pour extraire des informations d'un fichier.",
  "70C181EF59D80B6AB0B4": "`system.fs_data_query`",
  "969264E786D318948D19": "Un outil qui peut interroger des données dans un fichier",
  "287667DA8FAB7617748A": "outil `fs_data_query` : interroger des données dans un fichier en utilisant la syntaxe GROQ",
  "D6FCE75492CA3D18D3AE": "`system.fs_diff_files`",
  "5365B8CEEA5BD345BFB2": "File Diff Files",
  "C4BC31E374E76F8817D6": "Outil pour calculer un diff entre deux fichiers.",
  "510E974F6A1E36BA579B": "outil `fs_diff_files` : calcule un diff entre deux fichiers différents. Utilisez git diff pour comparer les versions d'un fichier.",
  "418C4446DDADCDAFE457": "`system.fs_find_files`",
  "09A52AA86915F5822431": "File find files",
  "1E70B666A4BE105E2EBF": "Trouver des fichiers avec glob et regex de contenu.",
  "230B0A18E13ED834B80D": "outil `fs_find_files` : trouve des fichiers correspondant à un motif glob. Utilisez pattern pour spécifier une expression régulière à rechercher dans le contenu du fichier. Faites attention à ne pas demander trop de fichiers.",
  "7443C48EBE1BE5F765C4": "`system.fs_read_file`",
  "07F00BAEEDF48587598F": "File Read File",
  "63F6E067C232DB7893CB": "Fonction pour lire le contenu d'un fichier en texte.",
  "38A61BF7264EBC42910B": "outil `fs_read_file` : lit un fichier comme texte depuis le système de fichiers. Retourne undefined si le fichier n'existe pas.",
  "CDBD15CEE84E6813D1A3": "`system.git`",
  "2FD5F7FF5FDE35FAB6A1": "opérations de lecture git",
  "505687BF0F4AEA31BC63": "Outils pour interroger un dépôt git.",
  "E9FCBE63202E0469B13B": "outil `git_branch_default` : obtient la branche par défaut en utilisant le client.",
  "3F627741D47509F6D65A": "outil `git_branch_current` : obtient la branche courante en utilisant le client.",
  "318B8C00BC6E9BDBA234": "outil `git_branch_list` : liste toutes les branches en utilisant le client.",
  "E5D7B47CF2CC5ADEA99E": "outil `git_list_commits` : génère l'historique des commits avec la commande git log.",
  "AF02CF9248323246EEC5": "outil `git_status` : génère le statut du dépôt en utilisant le client.",
  "0E8960932B26FDD33185": "outil `git_last_tag` : obtient le dernier tag en utilisant le client.",
  "6444CBA2B7BAE376ADA6": "`system.git_diff`",
  "7F46956D1B4410C9609E": "diff git",
  "28DEECE81A4AAD86C0C5": "outil `git_diff` : calcule les diffs de fichiers en utilisant la commande git diff. Si le diff est trop grand, il retourne la liste des fichiers modifiés/ajoutés.",
  "8EBD26A9491C50C6F0B8": "`system.git_info`",
  "07160CE4D520FCC6D5B3": "Information sur le dépôt Git",
  "0E9E75153153DB9EACFF": "`system.github_actions`",
  "749FC9DDCE545B11915F": "workflows github",
  "44062F9B773B63A5B947": "Interroge les résultats des workflows GitHub actions. Préférez utiliser les diffs pour comparer les logs.",
  "0877FCE7B9E5EB2F7FC8": "outil `github_actions_workflows_list` : liste tous les workflows github.",
  "24AA7650B5BBA8AFCB05": "outil `github_actions_jobs_list` : liste tous les jobs pour une exécution de workflow github.",
  "51B165FFB152AEAF531A": "outil `github_actions_job_logs_get` : télécharge le log de job de workflow github. Si le log est trop grand, utilisez 'github_actions_job_logs_diff' pour comparer les logs.",
  "79248D1F52970F542B7E": "outil `github_actions_job_logs_diff` : compare deux logs de job de workflow github.",
  "AE87AEA19F511400712B": "`system.github_files`",
  "AD14CFC0DB3D6ED266AE": "Outils pour interroger les fichiers GitHub.",
  "DCAD9264535DB94A5EB8": "outil `github_files_get` : obtenir un fichier d'un dépôt.",
  "81A398AB60C161709E12": "outil `github_files_list` : lister tous les fichiers d'un dépôt.",
  "C16FFE68FB21F5DA6C8F": "`system.github_info`",
  "1D7FEC04E5A121D973C7": "Informations générales sur GitHub.",
  "DA4759A592D5547F5FAA": "`system.github_issues`",
  "1A507C95467B1F76720D": "Outils pour interroger les issues GitHub.",
  "E2058A8586B376A4CE78": "outil `github_issues_list` : liste toutes les issues d'un dépôt.",
  "C517167B88F5F6B897FD": "outil `github_issues_get` : obtient une issue unique par numéro.",
  "0E5342304FFDC35D7EA2": "outil `github_issues_comments_list` : obtient les commentaires pour une issue.",
  "8BE32A3772BAD15E8FEE": "`system.github_pulls`",
  "8C1DF6E712675B5E23B6": "Outils pour interroger les pull requests GitHub.",
  "A0B75DF58E110526F11F": "outil `github_pulls_list` : liste toutes les pull requests d'un dépôt.",
  "1407FA0EA6F7CD091D63": "outil `github_pulls_get` : obtient une pull request unique par numéro.",
  "90A03FF016EDB9AD4183": "outil `github_pulls_review_comments_list` : obtient les commentaires de revue pour une pull request.",
  "F51A29FCFEE582C6397E": "`system.math`",
  "4D0113874D44EA1BC438": "Évaluateur d'expressions mathématiques",
  "4B1C6D84B6F8AC73D8D6": "Enregistre une fonction qui évalue les expressions mathématiques",
  "5EC48A77421ED0B6155D": "outil `math_eval` : évalue une expression mathématique. Ne tentez PAS de calculer vous-même, utilisez cet outil.",
  "01DE2F3A719D8A8A1D6C": "`system.mcp`",
  "3BD52F83FBFF8152D887": "Charge les outils depuis un serveur Model Context Protocol",
  "611193AF290E5BAD1C26": "Ce script système doit être configuré avec une configuration de serveur MCP.",
  "CD35D658302EDE760733": "`system.md_find_files`",
  "0C9547DC3206A0146DB0": "Outils pour aider dans les tâches de documentation",
  "7440517969633CC6663E": "outil `md_find_files` : obtient la structure des fichiers markdown/MDX de la documentation. Retourne le nom de fichier, titre, description pour chaque correspondance. Utilise pattern pour spécifier une expression régulière à rechercher dans le contenu du fichier.",
  "8C6FF0DE9D06F56C7C1A": "`system.md_frontmatter`",
  "2415C001C6C79CFEEE23": "Lecteur de frontmatter Markdown",
  "16C76DF641E34879144D": "Enregistre un outil qui lit le frontmatter d'un fichier markdown ou MDX.",
  "3732C167D96D522E2736": "outil `md_read_frontmatter` : lit le frontmatter d'un fichier markdown ou MDX.",
  "7085423CD7F34318A348": "`system.meta_prompt`",
  "1D3B687B9A641AF5E596": "Outil qui applique les directives de meta-invite d'OpenAI à une invite utilisateur",
  "C12F2B6A05CE6DC9D0E4": "Outil modifié de meta-invite provenant de https://platform.openai.com/docs/guides/prompt-generation?context=text-out.",
  "3BEDAE67EC662BE31D3A": "outil `meta_prompt` : outil qui applique les directives de meta-invite d'OpenAI à une invite utilisateur. Modifié de https://platform.openai.com/docs/guides/prompt-generation?context=text-out.",
  "9708EEB2CF2E562D2756": "`system.meta_schema`",
  "B5C1583542A3DCBB4267": "Outil qui génère un schéma valide pour le JSON décrit",
  "5B95678C73F36C6EB40F": "Générateur de méta schéma d'OpenAI depuis https://platform.openai.com/docs/guides/prompt-generation?context=structured-output-schema.",
  "1FD143B1EB22DC4DDD7C": "outil `meta_schema` : génère un schéma JSON valide pour le JSON décrit. Source https://platform.openai.com/docs/guides/prompt-generation?context=structured-output-schema.",
  "685928AD8A476C47E392": "`system.node_info`",
  "F1CC2075F1E37DEBAAE0": "Informations concernant le projet actuel",
  "28B203A9A2E2947CD483": "`system.node_test`",
  "E2008AA7692A0928B60B": "Outils pour exécuter des tests node.js",
  "4A011B4272880A751FA2": "outil `node_test` : compiler et tester le projet actuel avec `npm test`",
  "4FCE64D4D99CC7419A59": "`system.output_ini`",
  "02363A646E215813E92E": "Sortie INI",
  "6FA43C27033CF4CE0AD5": "`system.output_json`",
  "8C13E4DB25B0ED01DAE8": "Sortie JSON",
  "F94D7FD757CDE08D5460": "`system.output_markdown`",
  "C34F2B1C5951D00306E5": "Invite système de sortie Markdown",
  "8FC6A6920EA7343B4258": "`system.output_plaintext`",
  "C72F2E31B29EC3C9FE17": "Sortie texte brut",
  "1B02C2B689A8BE5D9B6D": "`system.output_yaml`",
  "059B7A07A1D2EDE4E3C0": "Sortie YAML",
  "335A704B829955EF40E9": "`system.planner`",
  "24E6E22F5FFED0D49A8A": "Instruction pour faire un plan",
  "920ADAFCBF29DFD05796": "`system.python`",
  "26C60AA7BB19DAF43CB1": "Expert en génération et compréhension de code Python.",
  "CF572A2BF7D7C03D2A29": "`system.python_code_interpreter`",
  "342230BFB2901086B267": "Exécution Dockerisée du code Python pour l'analyse de données",
  "9ABB1C140EDA46FCDE7A": "outil `python_code_interpreter_run` : exécute du code python 3.12 pour l'analyse de données dans un conteneur docker. Retourne la sortie du processus. Ne pas générer de visualisations. Seules les packages numpy===2.1.3, pandas===2.2.3, scipy===1.14.1, matplotlib===3.9.2 sont disponibles. Pas de connectivité réseau. Ne pas tenter d'installer d'autres packages ou faire des requêtes web. Vous devez copier tous les fichiers nécessaires ou passer toutes les données car le code python s'exécute dans un conteneur séparé.",
  "A73798BF024260790747": "outil `python_code_interpreter_copy_files_to_container` : copie des fichiers du système de fichiers du workspace vers le conteneur. Pas de chemins absolus. Retourne le chemin de chaque fichier copié dans le conteneur python.",
  "ACE878DE2905A17D80F9": "outil `python_code_interpreter_read_file` : lit un fichier depuis le système de fichiers du conteneur. Pas de chemins absolus.",
  "8B1B848A5474541B5CCE": "`system.python_types`",
  "F8AEC0A7ECAA973ECB2E": "Développeur Python qui ajoute des types.",
  "3033DD12F787FA67780C": "`system.retrieval_fuzz_search`",
  "736DD0636BE68F4CAE0C": "Recherche floue en texte intégral",
  "BD78398379A3083D32E3": "Fonction pour faire une recherche floue en texte intégral.",
  "36A2CC4A37B15DAD1A1D": "outil `retrieval_fuzz_search` : recherche des mots-clés en utilisant le texte intégral des fichiers et une distance floue.",
  "9429B239BCDF847B6193": "`system.retrieval_vector_search`",
  "D4FCD4D0A6E8EDEF2DEF": "Recherche vectorielle par embeddings",
  "4814958A3033149B71C5": "Fonction pour faire une recherche en utilisant la distance de similarité des vecteurs embeddings.",
  "B6F19E7D079062BE59D8": "outil `retrieval_vector_search` : recherche dans les fichiers en utilisant les embeddings et la distance de similarité.",
  "A4AE8120B0446205CC82": "`system.retrieval_web_search`",
  "A7ECD4A98FDCF92963DB": "Recherche web",
  "B4AC25FB0478E2A024B3": "Fonction pour faire une recherche web.",
  "459EEFFA8CB320E1F408": "outil `retrieval_web_search` : recherche sur le web pour une requête utilisateur en utilisant Tavily ou Bing Search.",
  "2F037068F643DCC7BF5E": "`system.safety_canary_word`",
  "9EA54C08B3D2EAFA25E9": "Protection contre la fuite d'invite de mot canari",
  "87AD5FD8CCD293787F5F": "Injecte un mot canari dans les invites système et surveille la sortie générée pour des fuites.",
  "47EEA27487DF1D1C116B": "`system.safety_harmful_content`",
  "9EDD1350AB8DA6ED3548": "Invite de sécurité contre contenu nuisible : haine et équité, contenu sexuel, violence, auto-mutilation",
  "F08DD93101FA9F6255FA": "Ce script système doit être considéré pour la génération de contenu (qu'elle soit fondée ou non), les chats multi-tours et single-tours, Q&A, réécriture et scénarios de résumé. Voir https://learn.microsoft.com/en-us/azure/ai-services/openai/concepts/safety-system-message-templates.",
  "9B9B81F2674A65844ABE": "`system.safety_jailbreak`",
  "69825C0E6C2A3B82F4AC": "Script de sécurité pour ignorer les instructions dans les sections de code.",
  "6F4A8387899337585A43": "`system.safety_protected_material`",
  "120EA5E7438A747562E7": "Invite de sécurité contre le contenu protégé - Texte",
  "22AB2B363D3FDD6785B5": "Ce script système doit être considéré pour des scénarios tels que : génération de contenu (fondée et non fondée), chat multi-tours et single-tours, Q&A, réécriture, résumé et génération de code. Voir https://learn.microsoft.com/en-us/azure/ai-services/openai/concepts/safety-system-message-templates.",
  "9D8FF004BC9068719185": "`system.safety_ungrounded_content_summarization`",
  "072C801C6467E9148546": "Invite de sécurité contre le contenu non fondé dans le résumé",
  "24B3DEC2E795BC1FE68C": "Doit être considéré pour des scénarios tels que le résumé. Voir https://learn.microsoft.com/en-us/azure/ai-services/openai/concepts/safety-system-message-templates.",
  "8EC038DCD67298FAE074": "`system.safety_validate_harmful_content`",
  "AA40483095247092A234": "Utilise le fournisseur de sécurité de contenu pour valider la sortie LLM pour contenu nuisible",
  "AA1D56AC8C64361C3AD3": "`system.schema`",
  "89A7A8CDA053CF63DC30": "Support de JSON Schema",
  "CD8BA45D2D5A34AD7ADE": "`system.tasks`",
  "E06A95B6D39A63F85966": "Génère des tâches",
  "795E3DC0F8D57A234F4B": "`system.technical`",
  "973242FCD5C5B3863D91": "Rédacteur Technique",
  "F764F3FC33B297849467": "`system.think`",
  "741AA966FFE8ED35EEB8": "L'outil think",
  "A2BA59D61C62CA6750E2": "L'outil 'think' d'Anthropic défini dans https://www.anthropic.com/engineering/claude-think-tool. Utilise l'alias de modèle 'think'.",
  "05C50ED1F948AF833DE5": "outil `think` : utilisez l'outil pour réfléchir à quelque chose. Il n'obtiendra pas de nouvelles informations ni ne changera la base de données, mais ajoutera simplement la pensée au journal. Utilisez-le lors d'un raisonnement complexe ou si une mémoire cache est nécessaire.",
  "FE17688E5B10B5979574": "`system.today`",
  "39808B0312BA6AA19D2C": "Date du jour.",
  "50F7B35CCBCCF1117D5F": "`system.tool_calls`",
  "68B074C1007379978C94": "Support des appels d'outils ad hoc",
  "E54A48F694F6015027B8": "`system.tools`",
  "8875838259A5C8C43A9C": "Support des outils",
  "696ABDB90A34B2508987": "`system.transcribe`",
  "8159FDE431B08B1EE866": "Outil de transcription vidéo",
  "5BE17F6852CF64DD7FA9": "outil `transcribe` : génère une transcription à partir d'un fichier audio/vidéo en utilisant un modèle de reconnaissance vocale.",
  "C2E488F7C6D0EDC21FA0": "`system.typescript`",
  "A9849E3525997EBAF14D": "Développeur expert TypeScript",
  "872E5CF3CC0AFA6C30D4": "`system.user_input`",
  "10F1C42A76A109A72E20": "Outils pour poser des questions à l'utilisateur.",
  "549B26A0084BFF9D8E71": "outil `user_input_confirm` : demande à l'utilisateur de confirmer un message.",
  "3118E6FDDC127975287A": "outil `user_input_select` : demande à l'utilisateur de sélectionner une option.",
  "99B272A33EFEF3D0320F": "outil `user_input_text` : demande à l'utilisateur de saisir du texte.",
  "08917AB10C25BCE16D2A": "`system.video`",
  "B7FC9305EF3C3B5EA003": "Outils de manipulation vidéo",
  "EB81926C5EF5573C3BED": "outil `video_probe` : analyse un fichier vidéo et retourne les informations méta.",
  "05375401BAE753B04B66": "outil `video_extract_audio` : extrait l'audio d'un fichier vidéo vers un fichier audio. Retourne le nom du fichier audio.",
  "F89C567898E33F01CEF3": "outil `video_extract_clip` : extrait un clip d'un fichier vidéo. Retourne le nom du fichier vidéo.",
  "A10440193CCE2DA745D7": "outil `video_extract_frames` : extrait des images d'un fichier vidéo",
  "D3F2F8FB5E58C9139C52": "`system.vision_ask_images`",
  "6B3A81D9900DC0504230": "Vision Ask Image",
  "EE37430667EAB59CA66A": "Enregistre un outil qui utilise un modèle de vision pour exécuter une requête sur des images",
  "C628FCAE5019385E3AF7": "outil `vision_ask_images` : utilise un modèle de vision pour exécuter une requête sur plusieurs images",
  "D664F9ACD20B1D62C160": "`system.z3`",
  "3540042E2E04145B6E44": "Z3",
  "C92D2445A483440B3C7A": "Résout les systèmes de contraintes en utilisant le solveur de contraintes Z3.",
  "57A3FAE4DA22259FD43A": "outil `z3` : résout un problème SMTLIB2 en utilisant le solveur de contraintes Z3. Envoyez les problèmes un par un. Utilisez cet outil si vous avez besoin d'exécuter Z3.",
  "E91CC4F7A0A5B9524FFE": "`system.zero_shot_cot`",
  "2CA2AC4079FDCB8BD215": "Chaîne de raisonnement Zero-shot",
  "2B0575BA26D46F7DD095": "Technique de chaîne de raisonnement Zero-shot. Plus d'informations sur https://learnprompting.org/docs/intermediate/zero_shot_cot.",
  "721EB0D935637BCA7107": "GenAIScript prend en charge la génération de sorties structurées avec des réparations automatiques des données. Il peut exploiter la validation de schéma intégrée fournie par les fournisseurs de LLM ou exécuter sa propre validation selon les besoins.",
  "8F9B40017988FD40019D": "Les sorties structurées sont configurées grâce à deux indicateurs : `responseType`, qui contrôle le format des données, et `responseSchema` qui contrôle la structure des données.",
  "6EAF00791D8B1800FEFA": "Type de réponse",
  "7FE590EF50C1F3B9B82E": "Le type de réponse est contrôlé par l'argument optionnel `responseType` et offre les options suivantes :",
  "FD67BF7A4DF8AB1ED721": "`json` : demander au LLM de produire une sortie JSON valide.",
  "28BA1E3CAF75931873BF": "`yaml` : demander au LLM de produire une sortie YAML valide.",
  "AB7769C482003315EAA4": "`json_object` : utiliser la sortie JSON intégrée d'OpenAI",
  "8A23908738A1426183C8": "`json_schema` : utiliser la sortie JSON intégrée d'OpenAI avec validation de schéma JSON",
  "4F27A140864E2C308846": "Notez que `text` et `markdown` sont également supportés pour configurer la sortie du LLM.",
  "48F2294A3FAFFC8F1A10": "`json`",
  "3A16E959DDF8C5350C89": "Dans ce mode, GenAIScript invite le LLM à produire une sortie JSON valide. Il valide également la sortie et tente de la réparer si elle n'est pas valide.\nCe mode est implémenté par GenAIScript et ne dépend pas du support des fournisseurs de LLM.",
  "6805B9257FEE40975DCA": "La validation du schéma est appliquée si `responseSchema` est fourni.",
  "DC1658E1DFB1DCA9AA71": "`yaml`",
  "2CF66738512EACB0188E": "`json_object`",
  "13F19D325F42D982EE3B": "Dans ce mode, GenAIScript invite le LLM à produire une sortie JSON valide. Il valide également la sortie et tente de la réparer si elle n'est pas valide.\nCe mode repose sur le support intégré des LLM comme OpenAI.",
  "BC2B79C93182ECD03E3C": "`json_schema`",
  "064025C19B231FD54D54": "La sortie structurée est une fonctionnalité qui vous permet de générer des données structurées au format de données, par exemple avec un [schéma JSON](/genaiscript/reference/scripts/schemas). Ce mode est plus strict que `json_object`.",
  "FDFA7983000346C0F5BF": "Pour activer ce mode, définissez `responseType` sur `json_schema` et fournissez un objet `responseSchema`.",
  "487D52135C17F8E3B8F5": "Notez qu'il existe [plusieurs restrictions](https://platform.openai.com/docs/guides/structured-outputs/how-to-use) sur les fonctionnalités des schémas prises en charge par ce mode.",
  "4A5C00EAC4953929C227": "`additionalProperties: true` n’est pas supporté.",
  "772FB3718EA5F1813DA2": "tous les champs optionnels (par exemple ceux qui ne sont pas dans `required`) seront retournés et peuvent être `null`.",
  "FC8077D35672C69F0A3D": "Schéma de réponse",
  "CF29F2DC0FFF6523B4B8": "Vous pouvez spécifier un [schéma](/genaiscript/reference/scripts/schemas) via `responseSchema` qui activera automatiquement le mode de sortie structurée. La sortie sera validée contre ce schéma, et GenAIScript tentera de réparer la sortie si elle n'est pas valide. Le script échouera si la sortie ne correspond pas au schéma.",
  "DED7A908FFBF865CA33C": "Schémas en ligne",
  "C46C0C668C97F827FACB": "Notez que cette section s'applique à la sortie entière d'une conversation. Vous pouvez également utiliser des [schémas en ligne](/genaiscript/reference/scripts/schemas) et utiliser un mix markdown/données que GenAIScript analysera.",
  "16BC37E9820C00E0242C": "Choix",
  "B54915BA0E22BF0A0E7B": "Si vous souhaitez créer un LLM-comme-juges et ne cherchez qu'à obtenir des sorties dans un ensemble de mots donné, vous pouvez aussi envisager d'utiliser des [choix](/genaiscript/reference/scripts/choices) pour augmenter la probabilité que le modèle génère les mots spécifiés.",
  "AFACE8ED99CD43BFBD7B": "`cast`",
  "F89518FA781ABEB013D3": "La fonction [cast](/genaiscript/reference/runtime/cast) est une [aide d'exécution GenAIScript](/genaiscript/reference/runtime) pour convertir du texte/images non structurés en données structurées.",
  "04D260FAA4DF65F861C2": "Les métadonnées sont une carte de paires clé-valeur utilisées pour activer les complétions stockées — une fonctionnalité dans OpenAI et [Azure OpenAI](https://learn.microsoft.com/en-us/azure/ai-services/openai/how-to/stored-completions) qui vous permet de stocker et de récupérer des complétions pour une invite donnée. Cela est utile pour les processus de distillation et d'évaluation.",
  "ADBB6CE1862A7E663B4D": "Vous pouvez attacher jusqu'à 16 paires clé-valeur à un objet. Cela est utile pour stocker des informations supplémentaires sous un format structuré et pour interroger des objets via l'API ou le tableau de bord.",
  "049D155543DF93317ED0": "Les clés sont des chaînes de caractères d'une longueur maximale de 64 caractères. Les valeurs sont des chaînes de caractères d'une longueur maximale de 512 caractères.",
  "7305B900E6B29D5068CB": "L'objet `env.secrets` est utilisé pour accéder aux secrets depuis l'environnement. Les secrets sont généralement stockés dans le fichier `.env` à la racine du projet (ou dans le `process.env` pour l'interface en ligne de commande).",
  "D6C391FBB391C410C691": "Vous devez déclarer la liste des secrets requis dans `script({ secrets: ... })` afin de pouvoir les utiliser dans le script.",
  "74FE6542F11F8662011D": "déclarez l'utilisation dans `script`",
  "E97C1566C9A5828158F2": "accédez au secret dans le script via `env.secrets`",
  "88554563C5064ADC482A": "On ne devrait pas avoir de secrets dans sa base de code, mais parfois cela arrive. \nPour vous aider à éviter cela, nous avons une fonctionnalité d'analyse des secrets qui scannera votre base de code à la recherche de secrets \net vous avertira si certains sont trouvés.",
  "4D51B703DD8118ACAA06": "La fonctionnalité d'analyse des secrets n'est en aucun cas exhaustive et ne doit pas être considérée comme la seule méthode \npour sécuriser votre base de code. C'est une fonctionnalité basée sur le meilleur effort qui vous aidera à éviter les erreurs communes.",
  "64F53549F2DF2A7E1047": "Motifs pris en charge",
  "3E8AEF6D3DC3E63C7FD6": "Par défaut, l'ensemble des motifs de secrets est presque vide et défini à l'adresse [https://github.com/microsoft/genaiscript/tree/main/packages/core/src/config.json](https://github.com/microsoft/genaiscript/tree/main/packages/core/src/config.json).",
  "AFF8517456E6FCA8ECFE": "Cette liste n'est pas complète par conception, et doit être mise à jour afin de correspondre à vos besoins.",
  "EFB11892D57D6E9FF3E2": "Vous pouvez trouver des exemples de motifs à [https://github.com/mazen160/secrets-patterns-db/](https://github.com/mazen160/secrets-patterns-db/).",
  "91F1119C11EC35EC54BF": "Messages analysés",
  "A9D40EEFA5068DDE6ED6": "Par défaut, tous les messages envoyés aux LLM sont scannés et expurgés si ils contiennent des secrets.",
  "07BA664935BD56FA8099": "Vous pouvez désactiver complètement l'analyse des secrets en définissant l'option `secretScanning` à `false` dans votre script.",
  "BB3C241428C719551652": "Configuration des motifs",
  "CFB5DA9C3A1E537107FF": "Si vous avez un motif spécifique que vous souhaitez rechercher, vous pouvez le configurer dans votre \n[fichier de configuration](/genaiscript/reference/configuration-files).",
  "31A3B58038E02DAD56AA": "- ne pas utiliser `^` ou `$` dans votre motif regex",
  "16B7849E93C1234F843B": "Désactivation des motifs",
  "085CA0F9EDE3D012E6D4": "Attribuez la valeur `null` ou `false` à la clé du motif pour le désactiver.",
  "81BEDB70FA6CE39E9F46": "Vous pouvez tester vos motifs sur des fichiers en utilisant la CLI.",
  "E446696EE2B36F5D92CD": "Il est possible de forcer le LLM à générer des données conformes à un schéma spécifique. Cette technique fonctionne assez bien et GenAIScript fournit également une validation automatique « au cas où ».",
  "F972F5618F2AB36C7708": "Vous remarquerez que le schéma pris en charge par GenAIScript est beaucoup plus simple que la spécification complète du JSON schema. Nous recommandons d'utiliser des schémas simples afin d'éviter de perturber le LLM ; vous pourrez ensuite les adapter au format de données spécifique à votre application.",
  "2693473800F44FBC79D2": "Schémas JSON",
  "71712AF82DD405556563": "Un schéma JSON est un langage déclaratif qui permet de valider la structure des données JSON. Il définit les types de données attendus, les propriétés et les contraintes pour les objets JSON. Les schémas JSON sont largement utilisés dans les APIs, les fichiers de configuration et les formats d'échange de données pour garantir que les données respectent une structure spécifique. Les schémas JSON sont définis au format JSON et peuvent être utilisés pour valider des données JSON par rapport au schéma défini. GenAIScript supporte les schémas JSON pour définir la structure des données que vous souhaitez générer.",
  "3CB9493AC6D940793B8E": "`responseSchema`",
  "497A57E69803CFCB7FDB": "Utilisez `responseSchema` pour définir un schéma JSON/YAML pour la sortie du prompt.",
  "06E3F9FCC32F16C62B4D": "Lorsque vous utilisez `responseSchema`, vous pouvez utiliser `responseType` pour spécifier comment le schéma doit être encodé dans la requête.",
  "F2C54376661E103EE2FB": "`responseType: \"json\"` : Le schéma est encodé dans un message système et validé par GenAIScript.",
  "9EAFA8677B979DE568E5": "`responseType: \"json_object\"` : Le schéma est encodé dans la requête, en utilisant le support natif de sortie structurée du LLM. Il est également validé par GenAIScript.",
  "E45431090F3306CA017E": "Les deux approches présentent des compromis et dépendent généralement du LLM que vous utilisez.",
  "18DEAA27C64813EFDAD3": "Vous pouvez aussi l'appliquer à `runPrompt` et GenAIScript analysera et validera la sortie par rapport au schéma, puis la stockera dans le champ `json`.",
  "CA5E1001E934523EDE8E": "`defSchema`",
  "A5B8472DFA5DABF3FB41": "Utilisez `defSchema` pour définir un schéma JSON/YAML pour la sortie du prompt.",
  "26D492DDC4DC0F9F35EF": "<summary>👤 utilisateur</summary>",
  "0B0A8821308FE980BE74": "<summary>🤖 assistant</summary>",
  "9AC047FE1D2268769F9F": "Support natif de zod",
  "9ECBF1D69CCA4CCD88C9": "Le [runtime GenAIScript](/genaiscript/reference/runtime) expose le module `z`.",
  "43DAE3A4F2D31693A615": "Un type [Zod](https://zod.dev/) peut être passé dans `defSchema` et sera automatiquement converti en schéma JSON. GenAIScript exporte également l'objet `z` de Zod pour plus de commodité.",
  "17FB1D498C9487E051BB": "Encodage des prompts",
  "650F58548B8D333275AC": "Suivant l'approche [\"All You Need Is Types\"](https://microsoft.github.io/TypeChat/docs/introduction/) de TypeChat, le schéma est converti en types TypeScript avant d'être injecté dans le prompt du LLM.",
  "22CC6FC016D870F56D03": "Vous pouvez modifier ce comportement en utilisant l'option `{ format: \"json\" }`.",
  "4AD4501CE343BDC707A4": "Lire la trace !",
  "D082CEDBEE329FAFFF2A": "La trace vous permet de voir la source du schéma et le prompt rendu, et le [cli](/genaiscript/reference/cli) écrira aussi les fichiers TypeScript générés dans le dossier de sortie.",
  "31745F905D4B93097FF7": "<summary>schéma CITY_SCHEMA</summary>",
  "9BC8E2D68DFB219F0B8E": "source :",
  "3A4589B34E16BD821653": "prompt (rendu en typescript) :",
  "2BCD822A815CFEDAF3ED": "Utiliser le schéma",
  "138BC1F940327CE8584E": "Puis dites au LLM d'utiliser ce schéma pour générer des données.",
  "E90125A8B3932C41C629": "Validation",
  "5BC3A60C57E974C421F5": "Lorsqu'une charge utile JSON/YAML est générée avec l'identifiant de schéma, GenAIScript valide automatiquement la charge utile par rapport au schéma.",
  "A2293BDE3EF7D9FE2D47": "Tous les formats de données ne se valent pas ! Certains formats comme JSON introduisent une ambiguïté et peuvent perturber le LLM.\n[En savoir plus...](https://betterprogramming.pub/yaml-vs-json-which-is-more-efficient-for-language-models-5bc11dd0f6df).",
  "E51C1DBE2BA99C2AEBC9": "Réparation",
  "F85F81C0D5BC71ECE5CE": "GenAIScript tentera automatiquement de réparer les données en envoyant des messages supplémentaires au LLM avec la sortie de l’analyse.",
  "A33AD0FDC5C08EFC21E2": "Validation à l'exécution",
  "12CA08826AF36528B2DB": "Utilisez `parsers.validateJSON` pour valider le JSON lors de l'exécution du script.",
  "FF854C151499970937CA": "La plupart des APIs sur l’objet `workspace` qui analysent les données supportent également une option `schema` pour valider les données.",
  "571051A75C3D6E222BA4": "remark",
  "EC337AA7CCDBAD8297D7": "mdast",
  "5F0BD7188419DB8A15AD": "unified",
  "43AEA00143FFEC8B8B24": "[Z3]",
  "DCA71A2AD5B8A27BF52D": "GenAIScript utilise le paquet npm [z3-solver] basé sur WebAssembly pour exécuter Z3. ",
  "C24DDAE08CAB06A543CA": "z3-solver",
  "C54A2B93E7818B9B9E9B": "Instance Z3",
  "F2615007422F4168CB55": "instance z3 est un wrapper autour du paquet npm ",
  "0BE3F6056360778996BC": "instance z3 possède la méthode ",
  "014597F60C68B8BE98FC": "Outil Z3",
  "E13D651333D91CF1CC73": "Agent Z3",
  "0067C51ECB5B15E43E1E": "[YAML]",
  "4ED88A9DCAA0F47896D5": "De la même manière que la classe `JSON` en JavaScript, la classe `YAML` dans LLM fournit des méthodes pour analyser et sérialiser les données YAML. ",
  "1AB21CC87279E1CA54C8": "[parsers]",
  "BCFB38E1FA3B2604BA97": "Schémas",
  "F30E8B05D15CE8F680F1": "Les schémas JSON définis avec ",
  "1A50825384BD4EA94441": "defSchema",
  "F7319BBC8AAD8D26CDD5": "La fonction globale `XML.parse` lit un fichier XML et le convertit en un objet JSON. ",
  "84B3D3443AF6E7629A12": "RSS",
  "3594E56A869CD2E01862": "Vous pouvez utiliser `XML.parse` pour analyser un flux RSS en un objet. ",
  "89C5D5780E85B34E0EA1": "exécute une recherche sur le web en utilisant ",
  "98677B9508184225566A": "Tavily",
  "544D968A0C0479E460DB": "Pages Web",
  "EF9E7E0328A320BCEB83": "Configuration Tavily ",
  "F292A4F076EEE64B2C68": "API Tavily",
  "458C732178312E721318": "Configuration Bing Web Search ",
  "F8E7159AE8D1B5EDB266": "L'API utilise ",
  "F2D986144B79B4D50216": "Bing Web Search v7",
  "E4BF07794E3B9FAA818F": "Outil",
  "EE9EBB34B2B6E6435FBC": "Ajoutez le script système ",
  "456B7B72CAC43FE4DBB5": "système ",
  "FA49DB86AEDFBEF0DA3B": "outil",
  "F99E38F3DD92A794CDBF": "qui utilise ",
  "902F0D0A575AF295F647": "Configuration de ffmpeg",
  "05BB27CB21A829A5E7D1": "Les fonctionnalités pour rendre et analyser des vidéos reposent sur ",
  "4FD489DBE3F1CB25ED04": "ou configurez les variables d'environnement `FFMPEG_PATH` ",
  "8EAE1CDCA5DE9747742B": "ou configurez les variables d'environnement `FFPROBE_PATH` pour pointer vers l'exécutable ",
  "34F24B2772D0E0476496": "Extraction des images",
  "056A63E4DA1269E5CB3A": "spécifiez un nombre d'images en utilisant ",
  "E8B4404E27F3B1D1802E": "spécifiez les horodatages en secondes ou en pourcentage de la durée de la vidéo en utilisant ",
  "6DED451EA771C8BC44EF": "spécifiez la transcription calculée par la fonction ",
  "133EA64399EE3826EF6A": "Extraction de l'audio",
  "2C57432B96BA2E05424F": "extrait l'audio d'un fichier vidéo au format ",
  "FE005DED50D53871BC33": "La conversion en audio se fait automatiquement pour les vidéos lors de l'utilisation de ",
  "58B1AB81ED61339086CA": "Extraction de clips",
  "56E0AB126127F4DE8CE5": "Vous pouvez extraire un clip d'un fichier vidéo en utilisant ",
  "2E1136887634FA544462": "Analyse des vidéos",
  "C309B6AAEE0A1CFB9F52": "Vous pouvez extraire des métadonnées d'un fichier vidéo en utilisant ",
  "E3DB0685CDA72C764434": "Options ffmpeg personnalisées",
  "F733DCAC9FA736EC7E4A": "Vous pouvez personnaliser davantage la configuration ",
  "15B3FAF9492AAD562AD2": "en transmettant `outputOptions`. ",
  "08AB27CD69FC1864E24B": "Ou interagir directement avec le générateur de commandes `ffmpeg` ",
  "C5231DF4FB52AA3A95B7": "Création d'index",
  "C27A9C9EBD640471CA32": "qui ne doivent pas changer",
  "4856FEE2DE9063CABF9B": "Index local",
  "04CB3295DD05FEB835DE": "dossiers en utilisant une base de données vectorielle locale basée sur ",
  "82FC0FCCE0F11A020F39": "vectra",
  "16B76372088203175A60": "GenAIScript prend également en charge l'utilisation d'un service ",
  "30191D4F161D901A9CD3": "syntaxe de requête simple",
  "2311DE538924C9468C10": "et ",
  "A93186346AC83FA4A66B": "variables d'environnement dans votre fichier ",
  "9E482FD363338684BB8C": "documentation d'authentification",
  "9417D65911DFBF044A82": "Configuration du modèle et du découpage",
  "72AAF87C01A4E87E8932": "Indexation",
  "0FE2233263364456C323": "Recherche",
  "AF79873997E1F9F760C9": "Paramètres du script",
  "B68E7B4A621862713960": "Il est possible de déclarer des paramètres dans l'appel de la fonction `script`. L'objet `env.vars` contiendra les valeurs de ces paramètres. ",
  "E42E21675A22EB205665": "Variables depuis la CLI",
  "F5F128D8D186A6253D72": "Utilisez le champ `vars` dans la CLI pour remplacer les variables. vars prend une séquence de paires `clé=valeur`. ",
  "94316C6B43854894C498": "Variables dans les tests",
  "735985E6635D6DEEBB13": "Vous pouvez spécifier des variables dans l'objet `tests` de la fonction `script`. Ces variables seront disponibles dans le scope des tests. ",
  "2BE4AE24BEF2CD32CCAF": " ",
  "6AAA046F315995BA18D8": "`host.confirm`",
  "F91D033FE9E97A2BCDDC": "Pose une question à l’utilisateur et attend une réponse oui/non. Elle retourne un `boolean`.",
  "8C79EF6E63A45A1B6E49": "`host.input`",
  "BF421C48784279D8FDE2": "Pose une question à l’utilisateur et attend une saisie de texte. Elle retourne une `string`.",
  "2BC6BF6D999C1B2EB41F": "`host.select`",
  "BED2F0D9FE2CDDD3A9D9": "Pose une question à l’utilisateur et attend une sélection dans une liste d’options.\nElle retourne une `string`.",
  "F5F131FB2D292181E38D": "Intégration Continue",
  "CE680EDF68739F49C068": "Les fonctions d’entrée utilisateur retournent `undefined`\nlorsqu’elles sont exécutées dans des environnements CI.",
  "71A113D3AAE485D74E43": "[TypeScript](https://www.typescriptlang.org/) est un langage de programmation fortement typé qui s'appuie sur JavaScript, vous offrant de meilleurs outils à n'importe quelle échelle. Les scripts GenAIScript peuvent être écrits en TypeScript.",
  "FBFB44BBDF9EDD951BB4": "De JavaScript à TypeScript",
  "D78209BD7AA4837BA821": "Vous pouvez convertir n'importe quel script existant en TypeScript en changeant l'extension du nom de fichier en ",
  "0C467C82F65DA8752DEE": "Assurez-vous d’utiliser l’extension de fichier ",
  "A1B5EEE9EDA65BD1D480": "et non `.ts`, ce qui oblige Node.JS à utiliser le système de modules [``ESM``](https://www.typescriptlang.org/docs/handbook/modules/guides/choosing-compiler-options.html). ",
  "472080279BB80F27F100": "ESM",
  "844AB400A2C1BC344D8C": "Importer des fichiers source TypeScript",
  "45EA10673478449C4C9F": "Il est possible de ",
  "8AE3E96D60F9522216BB": "importer",
  "EB53E5E7E99550323FE7": "Est-ce que GenAIScript vérifie les types dans les prompts ?",
  "4445B2F76C634A3253B7": "Vous pouvez également lancer une compilation TypeScript avec la commande ",
  "0B98FF7E893B95D4A5D8": "sans vérification de types",
  "0287EEEA5B9918B23494": "via ",
  "263A4A071EDA16294EBB": "tsx",
  "22FF28B594A1E53B571A": "L'API de transcription utilisera automatiquement ",
  "E2AFD60A428FCC08B1C4": "ffmpeg",
  "D6973AAADC1D44A7033D": "le codec opus dans un conteneur ogg",
  "C165759599358EA5BEE1": "Modèle",
  "28112969F36C75985280": "le service Web Whisper ASR",
  "33222A380A5ED30DD343": "Segments",
  "40C1E4E397A418983675": "SRT et VTT",
  "E7035EE7C06740B9D5D6": "GenAIScript génère les segments aux formats ",
  "3DFF71FE240D611FAC33": "SRT",
  "84F8D6F769837A643EE5": "WebVTT",
  "EB1CADD153A07936EC4D": "Traduction",
  "3909E383BD0CB7305FEF": "Cache",
  "91B810A5782665E4BE23": "Vous pouvez mettre en cache les résultats de transcription en définissant l'option ",
  "D2031EC311C09BE95DF9": " ",
  "4AFA775D7140E1B9F63D": "ou un \"sel\" personnalisé",
  "9575963382D99BCF20D0": "Vous pouvez analyser les fichiers VTT et SRT en utilisant la fonction ",
  "82C22F99AD58E19521A1": "Choisir votre tokenizeur",
  "62DAFC511B381670E896": "le module ",
  "3AF8C50798FEB6C3E42A": "Supprime une partie de la chaîne pour respecter un budget de tokens",
  "1B049C10FFABB2D28A31": "Les tests sont exécutés par ",
  "9E4CCB63323A2FC049E9": "redteam",
  "4356E6115E0F5C1EDE08": "Définition des tests",
  "8596F8C08379B93EAF08": "Les tests sont déclarés dans la fonction `script` de votre test.\nVous pouvez définir un ou plusieurs tests (tableau). ",
  "0D4D1985BB734C257559": "Tester les modèles",
  "07EB460384096AA7F84E": "Fichiers de test externes",
  "4374D677DB75AA84CC81": "Les fichiers JSON et YAML supposent que les fichiers sont une liste d'objets ",
  "A8136E24A4C938142C3B": "`PromptTest` ",
  "965FF79E6F5CFD14B68F": "Les fichiers CSV supposent que la première ligne est l'en-tête et que les colonnes correspondent principalement aux propriétés de l'objet ",
  "31B7DA774F472BE65FF1": "Les fichiers JavaScript doivent exporter une liste d'objets ",
  "B1DAE138B6BCDF4444C2": "`PromptTest` ",
  "714DDF279B75D130CBBB": "llm-rubric",
  "54DBDAD89667AA32D2B9": "GPT-4 requis",
  "722F56F7F3C3C48CFCEC": "facts ",
  "320CE271F1982C377CD0": "gpt-4o ",
  "919CE97C84963CE4E5EA": "factuality",
  "3A86C24DF7A79109B899": "gpt-4o requis",
  "E2BADE0F3ED76BC8561F": "Autres assertions sur ",
  "B87E8B2FB728EA38D64D": "assertions et métriques promptfoo",
  "3D2A61BBE65068AFB800": "transformation",
  "24F9F4D7D14B2EB4A355": "Exécution des tests",
  "B0F8FE975C7210AD9F64": "Vous pouvez exécuter les tests depuis Visual Studio Code ou en utilisant la ",
  "62B51CFFD55289C35E48": "ligne de commande",
  "3B7F7521A5770159106E": "fichier de configuration promptfoo",
  "531E15AB4F97F34AFB02": "Ouvrez le script à tester",
  "23B9583FEFE1C5914EC9": "Faites un clic droit dans l'éditeur et sélectionnez ",
  "FDBD2518C6A0311ABB2B": "Exécuter les tests GenAIScript",
  "A125B0E3CF53082910CE": "dans le menu contextuel",
  "D6FA628D6B723358CD03": "vue web promptfoo",
  "D8B3EA427DE50BCB3E18": "Ligne de commande",
  "D87E237C25C9532D551B": "Vous pouvez spécifier des modèles supplémentaires à tester en passant l'option ",
  "3DCEAA67E087CEFD6111": "Microsoft Teams",
  "3E194AF9E57817B928E5": "Pour utiliser l’intégration Microsoft Teams avec le ",
  "BE44A3F474F06817D824": "API",
  "6B19F55DBFEE2C2C37CB": "sont considérés comme des modèles d'invite système",
  "F46A1DBB508534B676CE": "Les invites système ne sont pas listées par défaut",
  "44907D2299729B307B62": "Les invites système doivent utiliser le ",
  "EA9CCC396693BD220BDB": "au lieu de ",
  "EDF906895EACD97F8628": "Les invites système sont exécutées avec le même environnement que l'invite principale",
  "2D55E19E827988C4C26D": "Les invites système doivent avoir une fonction par défaut et utiliser le ",
  "3172B336AA469B617F70": "Paramètres et variables",
  "3FFCC3A62D9160467A63": "Le système prend également en charge les paramètres comme les scripts mais les noms des paramètres seront automatiquement préfixés\navec l'identifiant du script",
  "6CA4C85936FB4193883E": "déclarer et utiliser le paramètre dans le script système",
  "37E7A89601F134484A29": "remplacer la valeur du paramètre dans le script script",
  "43B502C3FF6976729686": "remplacer la valeur du paramètre dans une instance du script système",
  "4108A6ED405B80F90453": "Invites système automatisées",
  "D320B8FEF8D459940F3F": "code source",
  "DCD4FEF5CF35A36AFF6D": "Le mélange par défaut est",
  "A054589B3421588DA63B": "système",
  "BF5BFBB0A1E4213A488A": "Invites système intégrées",
  "D191591C83B79B57AD54": "Invite système de base",
  "3133B0EAC01DBE113AFE": "Agent capable d'interroger des données dans des fichiers",
  "86664BCF1E3A1ECE3A89": "Agent du protocole de contexte de modèle",
  "A7FD039A2335A3E0C7AC": "Un agent planificateur",
  "8474C4093F1EA499850A": "Agent capable de travailler sur la vidéo",
  "1381E54BFF2342C58090": "Émet des annotations compatibles avec GitHub Actions",
  "9FAE34ED2A6A79AB521E": "Une invite pour un assistant utile de ",
  "54DE4374FB3459E8C215": "Raisonnement de chaîne de brouillon",
  "ECF36382A9477F814826": "Générer des modifications formatées du changelog",
  "188F5C6C3D995422AB54": "Générer des diagrammes",
  "0B085951BF6D90CA1A50": "Ne pas expliquer",
  "F548ACEB05D71DBCFB50": "Utiliser la sortie en anglais",
  "0BD81B364E98F1480365": "Expliquez vos réponses",
  "50F7C5610CD63BD533BD": "Un outil capable de récupérer des données depuis une URL",
  "8E28A8ACB311788149BE": "outil ",
  "7F13F7352361EDE0C1A3": "Génération de fichiers",
  "803FBD1B85CDD7D52002": "Enseigne le format de fichier supporté par GenAIScripts",
  "AF35569A521C92F7DAF7": "Interroger un fichier avec un LLM",
  "58D5396DFD5408303163": "Un outil pouvant interroger des données dans un fichier",
  "BAC500B1B382D0242984": "Différence de fichiers",
  "DEDFA9990F6E1529C563": "Trouver des fichiers",
  "54515B3E9497FC8BAC48": "Lire un fichier",
  "C828073E7C76B42F4201": "Opérations de lecture git",
  "5B13B398B6725D329A68": "diff git",
  "BD849F14F72768256B88": "Informations sur le dépôt Git",
  "E0F04ADBC9CE59B864AB": "workflows github",
  "420A90376A1B4E6695A7": "Évaluateur d'expressions mathématiques",
  "0DFD0C65DD8F28DB1B13": "Enregistrer une fonction qui évalue des expressions mathématiques",
  "C3033995DB412BDE8FB2": "Charge des outils depuis un serveur Model Context Protocol",
  "6B25208CC86934C1C13C": "Outils pour aider aux tâches de documentation",
  "52E98E9D09BD6B9A3E3A": "Lecteur de frontmatter Markdown",
  "8825158566BA52F20CD1": "Outil qui applique les directives d'OpenAI pour les méta-invites à un prompt utilisateur",
  "1069F95AE7A730D1F95F": "Outil méta-invite modifié de ",
  "DC7CC0F72C2AB2FFDB79": "Outil qui génère un schéma JSON valide pour le JSON décrit",
  "17D790E146200D5AA590": "Générateur de méta-schéma d'OpenAI de ",
  "67FA9076B8B630D9F6FC": "Informations sur le projet actuel",
  "28470999CEAC28FC289E": "Sortie INI",
  "8AFA69DDFE47793D39EE": "Sortie JSON",
  "FCF1623E8E6229F5369A": "Invite système pour sortie en Markdown",
  "FE867DBA76D4979844A8": "Sortie texte brut",
  "81C728E82CEE1C04DA0D": "Sortie YAML",
  "063370DB4DD37AD9A271": "Instruction pour faire un plan",
  "38CC9B16E25E2D6E61FE": "Exécution de code Python dans un conteneur Docker pour l'analyse de données",
  "CFA237A69A00DED5EF8C": "Recherche floue en texte intégral",
  "A6A23C8ABE4E9551CBA5": "Recherche vectorielle par embeddings",
  "C95ECA95C693D8602C2B": "Recherche Web",
  "F6EE728874E1A872D1D3": "Protection contre les fuites de prompt via mot canari (Canary Word)",
  "6DE1518941919E49B543": "Invite de sécurité contre le matériel protégé - Texte",
  "DEB1459ECF5FB6B70C0F": "Invite de sécurité contre le contenu infondé dans la synthèse",
  "4CD7004246E1A85B5B76": "Utilise le fournisseur de sécurité de contenu pour valider la sortie LLM contre le contenu nuisible",
  "0745D4853EF2774ED53D": "Support du JSON Schema",
  "AB1B4739662181D72E82": "Génère des tâches",
  "3F744E45291B50F87BF1": "Rédacteur technique",
  "85FE7E3F8D39F3501E6D": "L'outil think",
  "49BB2767DD72C354D947": "L'outil 'think' d'Anthropic tel que défini dans ",
  "D5641D8CD74A678DB5C1": "Support d'outils ad hoc",
  "F3BDA8A8B3EDBBE978B9": "Support des outils",
  "495BD43AA402058BB703": "Outil de transcription vidéo",
  "7C5BBBEC91053E18AA31": "Développeur expert TypeScript",
  "3F9492D99DFB3735F6AA": "Outils de manipulation vidéo",
  "FFE1769405B4817EE111": "Vision Ask Image",
  "BE81DE2DCEBB7300BE3B": "Outil qui utilise un modèle de vision pour exécuter une requête sur des images",
  "2B0EF2440E44FEE7F561": "Chaîne de pensée zero-shot",
  "DF6260987A834F703AC7": "Type de réponse",
  "D20AA460A24C5B2A176E": "Le type de réponse est contrôlé par l’argument optionnel `responseType` et offre les options suivantes : ",
  "9EF66FFD140B79A71F80": "Notez que `text` et `markdown` sont également supportés pour configurer la sortie du LLM. ",
  "BAD830C11425FDA3D35B": "La validation du schéma est appliquée si `responseSchema` est fourni. ",
  "A4F064D27421F21549BF": "`responseType` ",
  "06A60B43B1CE2CCCCDDA": "et fournissez un objet `responseSchema`. ",
  "20CCDE8E9B32B494DC33": "Schéma de réponse",
  "78785D73FF1BF4A53FE3": "Schémas intégrés",
  "03343B67FE9E419FB9DA": "schémas intégrés",
  "0154AD77C14CBE7C9F2F": "Choix",
  "70BFAB90D4D9F08531D2": "choix",
  "017B293C7A2E99EA2F6E": "La fonction [cast](/genaiscript/reference/runtime/cast) est un ",
  "17FF002B4285B897FD33": "assistant d’exécution GenAIScript",
  "DB1AA735FCBCA5C28A75": "Les métadonnées sont une carte de paires clé-valeur utilisées pour activer les complétions stockées — une fonctionnalité dans OpenAI et ",
  "917EEAF9EAA5E800E43F": "Vous devez déclarer la liste des secrets requis dans ",
  "F38F5DAB8678B7E33385": "déclarez leur utilisation dans `script` ",
  "D6CD770D6516FDAE9159": "accédez au secret dans le script via `env.secrets` ",
  "A27618BF5DEDB98AB5FE": "Motifs pris en charge",
  "033B4F3EC0113E7845E6": "Par défaut, l'ensemble des motifs de secrets est presque vide et défini à ",
  "CC1FBDEA62B7BE1CA601": "Vous pouvez trouver des exemples de motifs à ",
  "A7C08E87038DFDD3DD30": "Analyse des messages",
  "15A240E5265769FE1D26": "Vous pouvez désactiver complètement l'analyse des secrets en définissant l'option `secretScanning` sur `false` dans votre script. ",
  "6127A066C63E92FEF21E": "Configuration des motifs",
  "9089220D2E490763312D": "fichier de configuration",
  "AAD2953F2119A4457631": "n'utilisez pas ",
  "5D0FDE0588D6E4EF651F": "dans votre expression régulière",
  "63F325834E5D82E5DD17": "Désactivation des motifs",
  "93093CD64B2EB6E2636B": "Définissez la clé du motif sur `null` ou `false` pour le désactiver. ",
  "2BA58DB520AAB6F825D9": "VS Code limite le contenu affiché dans l’aperçu Markdown.\nCela inclut la désactivation de l’exécution de script et n’autorise le chargement des ressources que via `https`.",
  "E45F3A563CFA2D3FADF2": "Nous recommandons également la lecture de la [Note de Transparence](/genaiscript/reference/transparency-note/)\npour comprendre les capacités et les limites de GenAIScript. ",
  "5547EA2EDE58573B68AA": "Ne faites pas confiance aux scripts",
  "CE6DE312457904D8FCE4": "Étant donné que les fichiers GenAIScript `.genai.mjs` sont des fichiers JavaScript exécutables et utilisent en réalité un environnement d'exécution JavaScript (VSCode ou Node), il est essentiel de comprendre que le script peut faire tout ce que JavaScript peut faire. Cela inclut la lecture et l’écriture de fichiers, la réalisation de requêtes réseau, et l’exécution de code JavaScript arbitraire.",
  "FBD36B85B17823081BF1": "Ne faites pas confiance aux sorties de LLM",
  "61FD9F82B61BCFD00DE8": "Un script de confiance pourrait utiliser des fichiers malveillants du contexte pour générer une sortie malveillante. Par exemple, en substituant des fichiers dans le projet avec un nouveau code malveillant.",
  "90770987D833D5AADCEB": "dans Visual Studio Code, utilisez l’aperçu de refactorisation",
  "8C06364191D5F5A1C9AD": "dans votre CI/CD, créez une demande de tirage avec les modifications et examinez-les",
  "69BCA1CDD51AF2AEF1D5": "Confiance de l’espace de travail dans Visual Studio Code",
  "CAACBD9E198341968C69": "L’extension est **désactivée** lors de l’ouverture d’un dossier en [Mode Restreint](https://code.visualstudio.com/docs/editor/workspace-trust) dans Visual Studio Code.",
  "5DCA07E1C0CB2DC36A71": "Aperçu Markdown dans Visual Studio Code",
  "D20D03A260EE5F21DE18": "Depuis que les fichiers GenAIScript `.genai.mjs` sont des fichiers JavaScript exécutables et utilisent en fait un environnement d'exécution JavaScript (VSCode ou Node). Il est important de comprendre que le script peut faire tout ce que JavaScript peut faire. Cela inclut la lecture et l’écriture de fichiers, la réalisation de requêtes réseau, et l’exécution de code JavaScript arbitraire. ",
  "DC056875B1DEF0B0E0D2": "Ne pas exécuter `.genai.mjs` scripts provenant de sources non fiables. ",
  "D1D5911588D768B2AE24": "L’extension est **désactivée** lors de l'ouverture d'un dossier en [Mode Restrictif](https://code.visualstudio.com/docs/editor/workspace-trust) dans Visual Studio Code. ",
  "4FE248ACD83CD724482A": "Aperçu Markdown dans Visual Studio Code",
  "96032E2DFF6A1720D005": "Ne pas exécuter les scripts `.genai.mjs` provenant de sources non fiables.",
  "CCAF051B2EAC591B6483": "ffprobe",
  "2331B714B9D70DC660B7": "/",
  "C5E76BF847886DB3CE44": "transcribe",
  "A22E9160C3B53AF2826E": "fluent-ffmpeg",
  "7B51984256D4837DC6BB": "Lorsque vous exécutez le [CLI](/genaiscript/reference/cli),\nla saisie de l’utilisateur se fait via le terminal. ",
  "275A3E28512A3165F91B": "Les fonctions de saisie utilisateur renvoient `undefined`\nlorsqu’elles sont exécutées dans des environnements CI. ",
  "65EB25B9A31F4683EA93": "La sortie structurée est une fonctionnalité qui vous permet de générer des données structurées au format de données comme avec un ",
  "7A71A53D27745AEEC9D4": "schéma JSON",
  "EE40C1EB347AF7285CC9": "Notez qu'il existe ",
  "4049301161251E009C34": "plusieurs restrictions",
  "B5EA2FADA124766D1264": "Vous pouvez spécifier un ",
  "D9D63AF1D55ABE345369": "schéma",
  "239DB3CC3C3F92B4D209": "![Une complétion enregistrée](./stored-completions.png)",
  "52DD8770ABD9AF66F6A3": "Schémas JSON",
  "D27142E45541359B3703": "Utilisez ",
  "8BC6451160321F01028B": "Lors de l’utilisation de ",
  "CAAC868122D749E4E2E8": "pouvez également l’appliquer à ",
  "5DADA76DD8B23FF0023B": "et GenAIScript analysera et validera la sortie par rapport au schéma\net la stockera dans le champ ",
  "74ED1B9B79BC3DC0DFB0": "👤 utilisateur",
  "A44BCFDB4F4D21D29EF9": "🤖 assistant",
  "7B56E2FCE319DEB568D3": "Support natif de zod",
  "A6187B6FB829E5E41148": "expose le module ",
  "7157E2ABEDB0E9354828": "Zod",
  "6A9BEC90C4F473BAFF1E": "peut être passé dans ",
  "7B0D6E7BBE8E6F4EE366": "Encodage de l’invite",
  "3216DAD34F2D8FE8BCEB": "Suivant l’approche ",
  "0C68C5611D9C19E7754F": "« Tout ce dont vous avez besoin, ce sont des types »",
  "7BA536A63D0C09F9BEA2": "Vous pouvez changer ce comportement en utilisant l’option ",
  "B3AFD429140D1D8E6ACA": "Lire la trace !",
  "9DFE34CE187B0AD8719F": "La trace vous permet de voir la source du schéma et l’invite rendue\net la ",
  "344AF0F70BC19F199CE3": "schéma CITY_SCHEMA",
  "B0205D9672D93CBC3DE7": "Utiliser le schéma",
  "CABEA41CA45BCE5ABF92": "Validation",
  "A7ACC8125A942F435BD2": "Réparation",
  "2136CE06A9B4015D40B3": "Validation à l’exécution",
  "2143520ED702B1AD2901": "La plupart des API sur l’objet ",
  "56BABC7A2A0E1659C5DE": "Carnet de tutoriel",
  "99A5214D01A85C5FCDAB": "Apprenez à utiliser GenAIScript avec ce carnet tutoriel interactif contenant des blocs de code JavaScript exécutables.",
  "570D3FACCE0FFFB3C808": "Ce carnet est un tutoriel GenAIScript. C'est un document Markdown où chaque section de code JavaScript est un GenAIScript exécutable. Vous pouvez exécuter chaque bloc de code individuellement et voir les résultats dans la section de sortie sous le bloc de code. Pour ouvrir ce carnet dans Visual Studio Code, appuyez sur **F1** et lancez **GenAIScript : Créer un carnet Markdown GenAIScript**.",
  "FA4FA995F1164E55FADC": "Suivez les étapes dans [configuration](https://microsoft.github.io/genaiscript/getting-started/configuration) pour configurer votre environnement et l'accès au LLM.",
  "234A259CD09EA2470947": "Invite en tant que code",
  "56FCF629A04E4414ACE7": "GenAIScript vous permet d’écrire des invites sous forme de programme JavaScript. GenAIScript exécute votre programme ; génère des messages de chat ; puis gère le reste de l’interaction avec l’API LLM.",
  "C8F687BE24DFD0A9C460": "Écrire dans l’invite avec `$`",
  "95E77C5AF9564EF6A43A": "Commençons par un simple programme hello world.",
  "D39D2816710765A50031": "<summary>🤖 assistant </summary>",
  "95762DF44BA6CEC9B605": "La fonction `$` formate les chaînes et les écrit dans le message utilisateur. Ce message utilisateur est ajouté aux messages du chat et envoyé à l’API LLM. Sous l'extrait, vous pouvez consulter à la fois le message **utilisateur** (généré par notre programme) et la réponse de l’**assistant** (LLM).",
  "4B04D148C233A5522032": "Vous pouvez exécuter le bloc de code en cliquant sur le bouton **Exécuter la cellule** en haut à gauche du bloc de code. Par défaut, il utilisera les LLMs de différents fournisseurs. Si vous devez utiliser un autre modèle, mettez à jour le champ `model` dans l’en-tête YAML au début du document. De nombreuses options sont documentées dans [configuration](https://microsoft.github.io/genaiscript/getting-started/configuration).",
  "9B68D817CC7CC90310B4": "Une fois l’exécution terminée, vous aurez également une entrée **trace** supplémentaire qui vous permet d’examiner les détails internes de l’exécution GenAIScript. Cela est très utile pour diagnostiquer les problèmes avec vos invites. La trace peut être assez volumineuse, elle n’est donc pas sérialisée dans le fichier markdown.",
  "F05E3FAB5A955FE882FC": "Vous pouvez utiliser la boucle JavaScript `for` et séquencer plusieurs appels `$` pour ajouter du texte au message utilisateur. Vous pouvez également utiliser des expressions internes pour générer du contenu dynamique.",
  "484A4C395E81FADD172D": "Pour récapituler, GenAIScript exécute et génère des messages utilisateur ; ceux-ci sont envoyés au LLM. Vous pouvez consulter le message utilisateur (et d’autres) dans la trace.",
  "2843131F308AB24F77AF": "`def` et `env.files`",
  "B1C654B28784FE14A238": "La [`fonction def`](https://microsoft.github.io/genaiscript/reference/scripts/context/#definition-def) vous permet de déclarer et d’assigner des **variables LLM**. Le concept de variable est surtout utile pour importer des données contextuelles, en particulier des fichiers, et s’y référer dans le reste de l’invite.",
  "C0D8F9BA8ACFF378EC08": "Dans GenAIScript, la variable [`env.files`](https://microsoft.github.io/genaiscript/reference/scripts/context/#environment-env) contient la [liste des fichiers dans le contexte](https://microsoft.github.io/genaiscript/reference/script/files), qui peut être déterminée par une sélection utilisateur dans l’interface, les arguments CLI ou préconfigurée comme dans ce script. Vous pouvez modifier les fichiers dans `env.files` en éditant le champ `files` dans l’en-tête YAML au début du document.",
  "D6A0ACEFB3DA7526C7F6": "Filtrage de `env.files`",
  "3CE2E30D381F2FEA3FBC": "Lorsque vous utilisez GenAIScript depuis l’interface utilisateur, il est courant d’appliquer un script à un dossier entier. Cela signifie que vous recevrez un ensemble de fichiers dans `env.files`, y compris certains non nécessaires. La fonction `def` offre différentes options pour filtrer les fichiers, comme l’option `endsWith`.",
  "491F9F519C7D46DEF52B": "`def` propose également `maxTokens` qui tronque la taille du contenu à un nombre de tokens. Le contexte LLM est limité !",
  "6368D26E6B51A353BA58": "Outils",
  "6F68BA4A29479A4DAE35": "Vous pouvez enregistrer des fonctions JavaScript comme outils que le LLM appellera selon les besoins.",
  "AA943EEC9D4D471DA4B2": "Sous-invite",
  "2E29DF977C75C9421128": "Vous pouvez exécuter des LLM imbriqués pour effectuer des tâches sur d’autres modèles plus petits.",
  "B34142630E8B22A1F7CE": "Automatisation des scripts",
  "36901DA01682580DF9FF": "Apprenez à automatiser vos scripts en utilisant l'interface en ligne de commande GenAIScript pour un traitement par lot efficace et une intégration dans les pipelines CI/CD.",
  "675ED27265ABE2A6DC03": "Une fois que vous avez un script qui vous convient, vous pouvez l'automatiser en utilisant l'[interface en ligne de commande](/genaiscript/reference/cli).",
  "C189FBDB1662EFCA1E25": "Exécution d'un script avec la CLI",
  "6684C71D04BA9AF721AA": "L'utilisation de base de la CLI est de [lancer](/genaiscript/reference/cli/run/) un script avec un nom d'outil et une liste de fichiers.",
  "369D9A0E76686E45B27D": "où `<script_id>` est le nom du script (par exemple le nom de fichier sans `.genai.mjs`) et `<...files>` est une liste de fichiers sur lesquels exécuter le script.",
  "C5A10C3A73777D8450AB": "La CLI utilisera les secrets dans le fichier `.env`, remplira `env.files` avec `<...files>`, exécutera le script et affichera la sortie sur la sortie standard.",
  "BAF9EB9B36E0E639CC89": "[npx](https://docs.npmjs.com/cli/v10/commands/npx) vous permet d'exécuter une commande à partir du [package npm genaiscript](https://www.npmjs.com/package/genaiscript) (installé localement ou récupéré à distance). Ajoutez le drapeau `--yes` pour accepter automatiquement toutes les invites sans confirmation.",
  "269C4DAFAB0C4494A59E": "Vous pouvez utiliser la CLI pour exécuter vos scripts dans un pipeline CI/CD. La CLI renverra un code de sortie non nul si le script échoue, ce qui peut être utilisé pour faire échouer le pipeline.",
  "6E80E756DE19E6555A6F": "Appliquer les modifications",
  "B132343D08D367E2C06E": "Ajoutez l'option `--apply-edits` à la CLI pour écrire automatiquement les modifications dans les fichiers.",
  "936F69B3F8947464C330": "Un LLM peut générer du code arbitraire qui peut être nuisible à votre système. Nous vous recommandons de réviser le code modifié avant de l'exécuter. Cela peut se faire via une branche séparée et une demande de tirage. Vous pouvez également utiliser un [conteneur](/genaiscript/reference/scripts/container) pour exécuter le script dans un environnement isolé.",
  "7F6F72D98A6FB57BEF4D": "Consultez la section [Sécurité et confiance](/genaiscript/reference/security-and-trust) pour plus d'informations.",
  "9C038942914832B5A02E": "Action GitHub",
  "80ED44025902D49EB122": "[GitHub Actions](https://docs.github.com/en/actions) est une plateforme d'intégration continue et de livraison continue (CI/CD) qui vous permet d'automatiser votre pipeline de construction, de test et de déploiement. Cette section explique comment intégrer votre GenAIScript dans les workflows et demandes de tirage de GitHub Actions.",
  "9E927782F571A8A16519": "[GitHub Models](https://github.com/marketplace/models) offrent un moyen intégré d'exécuter une inférence LLM à partir d'une action GitHub.",
  "3C5A5F0D03C82B3AC88D": "Configurer GitHub Models",
  "3CAB1A1516BBEB9DF282": "Pour utiliser GitHub Models, vous devez ajouter la permission `models: read` à votre workflow, transmettre le secret `GITHUB_TOKEN` à la CLI, et configurer la CLI pour utiliser GitHub Models. Cela peut se faire en définissant le fournisseur LLM sur `github` dans la CLI.",
  "63F42B10EE5F7ACABA0E": "Configurer secrets et variables",
  "BBB35572AC9B28BA58DB": "Configurez les [secrets](https://docs.github.com/en/actions/security-guides/using-secrets-in-github-actions) et les [variables](https://docs.github.com/en/actions/learn-github-actions/variables) sur votre dépôt ou organisation afin que GenAIScript puisse se connecter à votre LLM.",
  "924823A6A11ADE6D615F": "Les secrets et variables doivent correspondre au fichier `.env` de votre environnement local.",
  "BF3B2210B4CC39EBE4E9": "Exécution d'un script",
  "3281DBBD94FE9CC90A6D": "Utilisez la [CLI](/genaiscript/reference/cli/run/) pour exécuter le script dans une action GitHub.",
  "0349502DCB63C7DD86ED": "Assurez-vous de transmettre les secrets et variables au script pour permettre l'accès au LLM.",
  "DC5CA52D7973FEF4F1D4": "Utilisez l'option `--out <path>` pour stocker les résultats dans un répertoire afin de pouvoir les télécharger comme artefact.",
  "6B273B19EB50F0DE74F7": "Ajouter la trace au résumé de l'action",
  "D55A242BD5A0F23DEC73": "Utilisez l'option `out-trace` pour écrire la trace dans le fichier de résumé, `$GITHUB_STEP_SUMMARY` (voir [exemple](https://github.com/microsoft/genaiscript/actions/runs/9370477073#summary-25797526178)).",
  "6B10ACDDBB7D58F6CA8E": "Diff",
  "6F730FD085086857A8BA": "Vous pouvez utiliser `git.diff` pour exécuter une commande [git](https://git-scm.com/) `diff` afin de récupérer les modifications dans la branche courante.",
  "57E712CE268EC738ECB0": "Notez que vous devrez récupérer la branche `origin/main` pour que cette commande fonctionne dans une action.",
  "46213FF0DE2E1F305BD0": "Stockage des résultats dans les artefacts",
  "E4483942BFE3315C1E98": "Assurez-vous que le répertoire contenant les résultats est téléchargé comme artefact. Vous pouvez consulter la trace en ouvrant le fichier `res.trace.md` dans l’artefact compressé.",
  "017FD3C0CA76CFFC4AAC": "Azure OpenAI avec un principal de service",
  "A3A5C7CED36A62657990": "La documentation officielle de l'[action azure login](https://github.com/Azure/login?tab=readme-ov-file#azure-login-action) contient des étapes détaillées pour configurer l'accès aux ressources Azure depuis GitHub Actions.",
  "EC3CB1AD696556F77B54": "La [connexion avec OpenID Connect (OIDC)](https://github.com/Azure/login?tab=readme-ov-file#login-with-openid-connect-oidc-recommended) est la solution recommandée dans les pages de documentation Azure.",
  "1E35D8023EB095D1FA11": "Les étapes ci-dessous montrent comment configurer l'action de connexion Azure pour accéder à la ressource OpenAI **en utilisant un secret client de principal de service**.",
  "1B42FB3A07D0E2489A7D": "Créez un principal de service en suivant le guide [connect from azure secret](https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure-secret#prerequisites).",
  "1D2430C1FDE0F76437F2": "Attribuez un rôle quelconque au principal de service (par exemple **Lecteur**) dans votre abonnement Azure. Vous en avez besoin pour vous connecter.",
  "37FE10313C715173D096": "Attribuez le rôle **Cognitive Services OpenAI User** au principal de service. Vous en avez besoin pour que le principal de service puisse accéder à la ressource OpenAI.",
  "945AD32986FD92CF3EC9": "Configurez le secret [AZURE_CREDENTIALS](https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure-secret#create-a-github-secret-for-the-service-principal) dans votre dépôt GitHub avec les identifiants du principal de service.",
  "5AEE3161373DE460684E": "Configurez la variable `AZURE_OPENAI_API_ENDPOINT` dans les variables GitHub Actions de votre dépôt.",
  "8081FBBF45FA38BCD64A": "Ajoutez l'étape suivante dans votre workflow GitHub pour vous connecter à Azure.",
  "51ADB3FF8DF154C176E4": "Mettez à jour chaque étape qui invoque la [CLI](/genaiscript/reference/cli) pour inclure la variable `AZURE_OPENAI_API_ENDPOINT`.",
  "17F69915BC981D924229": "Demande de tirage GitHub",
  "D76A1C54D2B870237B90": "Si votre action GitHub est déclenchée par un [événement de demande de tirage](https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request), vous pouvez utiliser les options suivantes pour ajouter des commentaires : description, conversation et revues.",
  "E04312D6F422DC5375FF": "Pour créer des commentaires, le workflow doit avoir la permission `pull-requests: write` et le secret `GITHUB_TOKEN` doit être transmis au script.",
  "60C8E76329B20FFE5518": "Mettre à jour la description",
  "23386985D12274A60AA2": "L'option `--pull-request-description` insère la sortie du LLM dans la section de la demande de tirage (voir [exemple](https://github.com/microsoft/genaiscript/pull/504)). La commande accepte un argument optionnel de chaîne pour identifier de manière unique ce commentaire, il est utilisé pour mettre à jour le commentaire (par défaut c'est l'id du script).",
  "1EC6C7AAFEE8D235D035": "Si vous souhaitez exécuter ce script lorsque la demande de tirage est prête pour révision, utilisez les événements [`ready_for_review`](https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request), `opened`, `reopened`.",
  "F7737D53C15A4B626FC2": "Le commentaire est encadré par deux commentaires XML (`<genaiscript begin [id]>`, `<genaiscript end [id]>`) pour permettre une identification et une suppression faciles. Veuillez les conserver.",
  "A88663F2738BA0DE9E21": "Commentaire de conversation",
  "92C152FF87B27A0E9AB3": "L'option `--pull-request-comment` ajoute la sortie du LLM en tant que commentaire à la conversation de la demande de tirage (voir [exemple](https://github.com/microsoft/genaiscript/pull/504#issuecomment-2145273728)). L'argument optionnel est un identifiant pour le commentaire (par défaut l'id du script) afin qu'un seul commentaire apparaisse pour cet id.",
  "8A1E1174BE4F12BAF868": "Commentaires de revue",
  "055E1488E821D9BF8673": "Utilisez l'option `--pull-request-reviews` pour convertir les [annotations](/genaiscript/reference/scripts/annotations) en commentaires de revue **sur le dernier commit** de la demande de tirage (voir [exemple](https://github.com/microsoft/genaiscript/pull/504#pullrequestreview-2093960791)).",
  "7CD5D42F4CCCEA214F82": "GenAIScript essaiera automatiquement d'ignorer les commentaires de revue en double et de ne créer que les nouveaux.",
  "8D698B6AB172306F017E": "Pour collecter les modifications du dernier commit dans la branche de la demande de tirage (voir [article intéressant](https://www.kenmuse.com/blog/the-many-shas-of-a-github-pull-request/)), vous pouvez essayer cette commande git :",
  "D7701468DC3E47FF71B9": "Meilleures pratiques",
  "6BE4D10EFA2EE6C6DA9F": "Suggestions pour utiliser GenAIScripts de manière plus efficace",
  "227F50D7B6D385360FDF": "GenAIScript permet aux utilisateurs de chatbot de créer des scripts réutilisables",
  "726ADE161E945CF6FA51": "Si vous avez utilisé un chatbot basé sur un LLM, comme ChatGPT, vous connaissez les types de choses que les LLM peuvent faire et que les logiciels ordinaires (qui n'utilisent pas de LLM) ne peuvent pas. Par exemple, les LLM peuvent examiner un document, écrire de la poésie et analyser des images, juste comme point de départ (avec la réserve qu'ils font parfois des erreurs). GenAIScript vous permet d'écrire une invite qui est intégrée dans un cadre JavaScript afin que l'invite puisse être paramétrée, testée, déboguée, réutilisée et exécutée depuis une ligne de commande.",
  "7BE681F65EC72671D286": "Fournir au modèle le contexte dont il a besoin à partir des documents",
  "7827304A8439775FE79C": "GenAIScript permet aux utilisateurs d'ajouter des documents à leurs invites. Cela permet au LLM d'avoir plus d'informations de fond liées à la tâche qu'on lui demande d'effectuer. Dans un GenAIScript, la commande JavaScript [`def`](/genaiscript/reference/scripts/context) donne au LLM le contenu d'un document et définit un nom qui peut être utilisé dans l'invite pour faire référence à ce document. Les formats de documents standard, comme [pdf](/genaiscript/reference/scripts/pdf) et [docx](/genaiscript/reference/scripts/docx) sont pris en charge, vous n'avez donc qu'à nommer les fichiers et nos bibliothèques extraieront automatiquement le texte. Vous pouvez paramétrer davantage le contexte d'entrée en utilisant [`env.files`](/genaiscript/reference/scripts/context).",
  "64FB45A2048E47108408": "Concentrez un GenAIScript pour que le LLM fasse bien une seule chose",
  "870E707ED0C548657F9B": "Supposons que je veuille utiliser un GenAIScript pour rédiger un livre blanc. Plutôt que de demander au modèle d'écrire tout le document en une seule invite, je diviserais la tâche en différentes parties : écrire l'introduction, rédiger les recommandations, écrire la conclusion, etc. En décomposant le problème en sous-problèmes, vous pouvez déboguer le script pour accomplir correctement la tâche spécifique, puis passer à la suivante.",
  "C127939020673197D957": "Utilisez la sortie d'un GenAIScript comme entrée pour un autre",
  "3984F958E4C534C36075": "En combinant les deux points ci-dessus, vous pouvez créer une collection de scripts interconnectés qui accomplissent un objectif plus ambitieux. Selon votre niveau d'expertise, la combinaison peut être réalisée en utilisant l'interface en ligne de commande des scripts [CLI](/genaiscript/reference/cli) et en utilisant un logiciel traditionnel pour les connecter.",
  "0264B52EC6338FD591D2": "Utilisez le bon LLM ou autre modèle de base pour la tâche",
  "E8C13A6375C32EC865F5": "Il existe actuellement de nombreux choix différents de modèles d'IA. Nous expliquons comment connecter plusieurs d'entre eux avec GenAIScript dans [configuration](/genaiscript/getting-started/configuration). Ils varient en capacités et en coût, certains étant disponibles en open source et utilisables (avec le bon GPU) gratuitement. Consultez la documentation du LLM ou autre modèle spécifique que vous utilisez pour comprendre comment écrire des invites qui communiquent efficacement la tâche que vous voulez que l'IA accomplisse. Les paramètres varient entre les LLM, par exemple, la taille du contexte d'entrée autorisée, alors assurez-vous que le contenu que vous voulez transmettre au LLM tient dans la taille de sa fenêtre de contexte.",
  "CA6BD3737937C4FD826C": "Configurez votre connexion LLM et les secrets d'autorisation avec des variables d'environnement pour une intégration fluide.",
  "9EB7B9246DADA411D6F3": "Vous devrez [configurer](/genaiscript/configuration) la connexion LLM et les secrets d'autorisation.\nVous pouvez utiliser des modèles distants (comme OpenAI, Azure, etc.) et des modèles locaux (comme Ollama, Jan, LMStudio, etc.) avec GenAIScript.",
  "6CBF4BE52F6833EDFD61": "Il existe quelques raccourcis où GenAIScript détectera automatiquement la configuration ; sinon, vous devrez suivre [les instructions de configuration](/genaiscript/configuration).",
  "5A86051E1E66C3D39F69": "dans Visual Studio Code avec GitHub Copilot Chat installé, GenAIScript utilisera automatiquement les modèles Copilot Chat",
  "CD3C2499ADF45D0F997D": "dans un GitHub Codespace, GenAIScript utilisera automatiquement les modèles GitHub",
  "0DA0524A0A8D839483D3": "si Ollama fonctionne, GenAIScript utilisera automatiquement les modèles Ollama",
  "32740759FFBECA18C6D7": "**Si aucun de ces scénarios ne s'applique, suivez [les instructions de configuration](/genaiscript/configuration).**",
  "AA4ACF246FDA21296066": "Étapes suivantes",
  "0EC622969D9AC250DAA6": "Écrivez votre [premier script](/genaiscript/getting-started/your-first-genai-script).",
  "B1C0FBE7DA691E240BE1": "Débogage des scripts",
  "982EF83F4A612E855C7F": "Apprenez à déboguer les fichiers GenAIScript à l'aide du débogueur de Visual Studio Code pour dépanner efficacement et améliorer vos scripts d'automatisation JavaScript.",
  "9C86345C8153AB4F4955": "Les fichiers de script GenAIScript sont des JavaScript exécutables et peuvent être débogués à l'aide du [débogueur de Visual Studio Code](https://code.visualstudio.com/Docs/editor/debugging), comme tout autre programme JavaScript.",
  "7D0C4E7CC94CA58036F8": "GenAIScript fournit également un [journalisation légère intégrée](/genaiscript/reference/scripts/logging) pour vous aider à dépanner vos scripts sans débogueur.",
  "C18649A79D853D358AA4": "Démarrer une session de débogage",
  "A46377D7F4F8DC739BFF": "Ouvrez le fichier `.genai.mjs` à déboguer et ajoutez des points d'arrêt.",
  "00A9A59B5F2B2EA60873": "Depuis les fichiers env",
  "9F1468CA35E2D9B1E88F": "Cliquez droit dans l'éditeur du fichier que vous souhaitez dans `env.files`.",
  "0182F07DCDBDD5D80680": "Sélectionnez GenAIScript dans le sélecteur.",
  "FC33246BAB32E3E80FB6": "Depuis le script lui-même",
  "6B306CFFDADBCF24E986": "Ajoutez un champ `files` dans la fonction `script`",
  "EB28B5B1CA104A17C3C5": "Cliquez sur le bouton icône **Déboguer** dans le menu de l'éditeur (caché sous le bouton d'exécution).",
  "EE05299D8696FC1A67F4": "Le débogueur lancera le [cli](/genaiscript/reference/cli) et exécutera le script en mode débogage.\nLe débogueur s'arrêtera aux points d'arrêt que vous avez définis.",
  "78486E1BED8333F79B21": "Le JavaScript s'exécute dans un processus Node externe. Par conséquent,",
  "C4F9855B2BA909FC39F1": "L'aperçu et la sortie de la trace ne sont pas pris en charge pendant le débogage.",
  "47419D5C4BC6D195F5E3": "Étapes suivantes",
  "2D55A58238A12284B531": "Continuez à itérer sur le script ou [ajoutez des tests](/genaiscript/getting-started/testing-scripts).",
  "A4C8E6F05EC8028DB073": "Installation",
  "EBD61C18FAD8854A105F": "Apprenez comment installer GenAIScript en tant qu'extension Visual Studio Code ou l'utiliser via la ligne de commande pour une intégration fluide dans votre flux de travail de développement.",
  "FD5B27DCFD7A825B1DD3": "GenAIScript est disponible en tant que [ligne de commande](#command-line) ou [extension Visual Studio Code](#visual-studio-code-extension).",
  "C1894F0FC4E65F9DCF6E": "Node.JS",
  "5838C3EEBB723E81B23F": "GenAIScript nécessite [Node.JS](https://nodejs.org/) pour fonctionner.\nNous recommandons d'installer la version LTS en utilisant un [gestionnaire de versions node](https://docs.npmjs.com/downloading-and-installing-node-js-and-npm).",
  "9553E3BE740CFA0DA676": "Installez Node.JS (node) [avec un gestionnaire de paquets](https://nodejs.org/en/download/package-manager).\n**Vous avez besoin d'au moins Node.JS v22.**",
  "2CA8581BD6E7AA1A080E": "Vérifiez votre installation",
  "016C2459008E36964BD5": "Vous devriez voir une version similaire ou supérieure aux versions suivantes :",
  "C922647CCAC184117B37": "Extension Visual Studio Code",
  "CCF7B003B2D284CA044A": "Installez [Visual Studio Code](https://code.visualstudio.com/Download).",
  "08212CD208E4EC94515A": "Visual Studio Code est un éditeur de code source léger mais puissant qui fonctionne sur votre bureau et est disponible pour Windows, macOS et Linux.",
  "9E8B3AD5B5898C01FB1A": "Ouvrez le dossier de votre projet dans Visual Studio Code.",
  "56E98C53705CD09BADA3": "Cliquez sur la vue **Extensions**",
  "373D2E5FFABBAEA79B35": "Cherchez **genaiscript** et cliquez sur **Installer**.",
  "AED26F5929BA15352094": "Si l'installation réussit, vous verrez l'icône dans la vue **Extensions**.",
  "D36928E562D680DFCC5D": "(Optionnel) Cliquez sur l'icône ⚙️ roue dentée sur la page de l'extension et sélectionnez **Ajouter aux recommandations de l'espace de travail**.",
  "3D861337EBC38A8803E2": "Pour installer une version spécifique de l'extension, nous recommandons de stocker le fichier `genaiscript.vsix`\ndans votre dépôt et d'utiliser les étapes d'installation manuelle.",
  "43F39F8E64C8B6825635": "Profil par défaut pour le terminal",
  "9E4E51CAE75BF1BD0419": "GenAIScript lance un serveur node dans le terminal par défaut. Si le terminal par défaut n'est pas configuré\nou ne supporte pas node.js, vous devrez peut-être le mettre à jour dans vos paramètres utilisateur/espace de travail.",
  "9A209283170E34FDCCDB": "Ouvrez la palette de commandes `Ctrl+Shift+P` et recherchez `Terminal : Sélectionner le profil par défaut`.",
  "B45DCD25C074B87EBD8A": "Sélectionnez un profil de terminal comme **Git Bash**",
  "B39D19574F302ABECCC9": "Installation manuelle (avancé)",
  "7717DE8061413C523966": "La dernière version de développement de l'extension est également disponible via les releases GitHub. Cela permet d'accéder\naux correctifs de bugs avant la sortie sur le marketplace.",
  "B494A89B82852E6281FD": "Ouvrez la [dernière release](https://github.com/microsoft/genaiscript/releases/latest/) sur GitHub",
  "227007ECB12068ACA3D9": "Téléchargez le fichier `genaiscript.vsix` dans le dossier racine de votre projet",
  "E0334C9051A26BA26F26": "...",
  "FA05659DB83CCB35334D": "dossier .genaiscript/ créé par l'extension pour stocker les fichiers de support",
  "5B7FC0030F8607784386": "cache/ divers fichiers cache",
  "A110A87318D2631F20C0": "retrieval/ caches de la base de données de récupération",
  "7EEFEC41707BFF522D9D": "... fichiers de support",
  "AE10BD216805B97DFA05": "**genaiscript.vsix**",
  "2BCCFAE8880DCE161206": "Ouvrez votre projet dans Visual Studio Code",
  "EA9A9F5DE0805BE9ECFE": "Cliquez droit sur le fichier `.vsix` et sélectionnez **Installer l'extension VSIX...**",
  "B0546EA14632CC636AA3": "Support de Cursor",
  "E073AE8EB97971EDEFBE": "GenAIScript peut être installé dans [Cursor](https://cursor.sh/how-to-install-extension)\nen suivant les étapes d'installation manuelle.",
  "519409B1C35D533D4BD4": "Ligne de commande",
  "638CDF674738A63B95F1": "L'outil en ligne de commande [genaiscript](/genaiscript/reference/cli/) vous permet d'exécuter votre GenAIScript\ndepuis n'importe quel terminal.",
  "85417FFD341027BBC111": "`npx` installera et mettra en cache automatiquement l'interface en ligne de commande.",
  "00518DA40B056B3194B6": "**npx peut être lent**. Apprenez comment installer localement dans la [référence CLI](/genaiscript/reference/cli/).",
  "7F1ADC9EC9F4672BE09B": "DevContainer",
  "445DD09B92D53E07C08F": "Vous pouvez ajouter ce fichier dans votre projet pour utiliser GenAIScript dans un\n[DevContainer](https://containers.dev/), il contient un minimum d'outils pour commencer.",
  "7CE756619B89E14A21D7": "La définition du devcontainer sera automatiquement utilisée par\n[GitHub CodeSpaces](https://docs.github.com/en/codespaces/setting-up-your-project-for-codespaces/adding-a-dev-container-configuration/introduction-to-dev-containers),\nle [cli devcontainer](https://github.com/devcontainers/cli)\nou diverses [intégrations éditeur](https://containers.dev/supporting).",
  "49921ECEA85207EFD4B6": "Configurons les [informations de connexion LLM](/genaiscript/getting-started/configuration)",
  "A7C64AE12910F7A673DA": "Test des scripts",
  "084A5401C471EEABFF18": "Apprenez comment déclarer et exécuter des tests pour vos scripts afin d'assurer leur exactitude et leur fiabilité.",
  "4AF944283609ADFACC47": "Il est possible de déclarer des [tests](/genaiscript/reference/scripts/tests) dans la fonction `script` pour valider la sortie du script.",
  "17B8ABD4EB2270223258": "Déclaration des tests",
  "19FB53BD17C081EE0735": "Les tests sont ajoutés sous forme d'un tableau d'objets dans la clé `tests` de la fonction `script`.",
  "FDFEB3DD5E96D553E2DC": "Spécification des modèles",
  "E8B25FAFB45D387F5776": "Vous pouvez également spécifier un ensemble de modèles (et d'alias de modèles) pour exécuter les tests. Chaque test sera exécuté pour chaque modèle.",
  "2300A4D2CE0F2ED31520": "Les `testModels` peuvent aussi être remplacés via la ligne de commande.",
  "A529F0E05A466EFD797B": "Ouvrez la [vue Test Explorer](https://code.visualstudio.com/docs/python/testing).",
  "A1ACE56A562DD48E6850": "Sélectionnez votre script dans l'arborescence et cliquez sur le bouton avec l'icône `play`.",
  "77EF4B43FACEDE71176D": "Ligne de commande",
  "66A6559D242B59962298": "Exécutez cette commande depuis la racine de l'espace de travail.",
  "3E036E589A1634DA2B62": "Limitations connues",
  "6ED5C3C3CD9B7891E3AE": "Actuellement, promptfoo considère la source du script comme le texte de l'invite. Par conséquent, il n'est pas possible d'utiliser des assertions qui dépendent également du texte d'entrée, comme `answer_relevance`.",
  "A4CBC7094048E0842E2F": "En savoir plus sur les [tests](/genaiscript/reference/scripts/tests) dans la référence.",
  "35E0ABE076A61ABA73F1": "[Automatisez](/genaiscript/getting-started/automating-scripts) l'exécution de scripts en utilisant l'interface en ligne de commande ([CLI](/genaiscript/reference/cli)).",
  "745A8CBABB201D442C85": "F1",
  "A4766F22C35134BC67ED": "et exécutez ",
  "B6C7ECC5F8E8A2FB62A1": "Suivez les étapes dans ",
  "C3331EAB0B6BAF3B0F9D": "configuration",
  "79CB491B55EAA9EAC50B": "Invite en tant que code",
  "7FB11A9D8F45F2F44D34": "Écrire dans l'invite ",
  "8C569B37CB210AEFE6E1": "🤖 assistant ",
  "515E7D192900CE7E60E2": "utilisateur",
  "EF1EB10B93670166A95C": "assistant",
  "BBA03D52D5038D6FB33B": "Vous pouvez exécuter le bloc de code en cliquant sur le bouton ",
  "6C35989AFA51DD3AF97E": "Exécuter la cellule",
  "DB5FC2982FF848BE8B8E": "trace",
  "67AC91298B865443B926": "Vous pouvez utiliser la boucle JavaScript ",
  "8461BF07D8E5AD7242A1": "for ",
  "F9F2F15D75F77B01D6DB": "fonction",
  "B9226AAD7E768212FF20": "vous permet de déclarer et d’assigner ",
  "CE0D171E861D2717FF6C": "variables LLM",
  "B966EC0277773D4E8905": "variable ",
  "C6C44D66099BB656A88E": "liste des fichiers dans le contexte",
  "8EC01A00468D92CC7FBD": "en modifiant le champ ",
  "87F603421B43C4ED96DB": "Filtrage ",
  "CCF834024801FB1BC535": "fournit également ",
  "977A627608E78114AABA": "Outils",
  "09737762BCF6A0624B71": "Sous-invite",
  "E0721CD691A2C95D8640": "Votre premier script GenAI",
  "1024CCAADF999C29799D": "Apprenez à créer et à exécuter votre premier script GenAI pour automatiser les interactions avec les modèles de langage.",
  "F54C6CD3FD0C74ACD643": "GenAIScript utilise un JavaScript stylisé avec une syntaxe minimale.\nIls sont stockés sous forme de fichiers JavaScript (`genaisrc/*.genai.mjs`) ou TypeScript (`genaisrc/*.genai.mts`) dans votre projet.\nL'exécution d'un genaiscript crée l'invite qui sera envoyée au LLM.",
  "70A136C85AD04FC43296": "Le fichier résultant sera placé dans le dossier `genaisrc` de votre projet.",
  "52F5B4330992C45F5BFC": "…",
  "93793A1AFB5DE944DA43": "Les scripts genaisrc sont créés ici par défaut",
  "522A9A9D19A5E8E25F8C": "genaiscript.d.ts (définitions de types TypeScript)",
  "0D68FC5C2E817CD7F501": "tsconfig.json (configuration du compilateur TypeScript)",
  "8818F46C1D46A91872FA": "**proofreader.genai.mts**",
  "06DF0CE2609EC823432F": "Regardez cette vidéo pour apprendre comment booster la puissance de GenAIScript dans GitHub Copilot Chat.",
  "C10F8A41064374AE6E5C": "l'Invite",
  "B9FF9D25BC0AC10A7F96": "L'exécution du GenAIScript génère une invite (et plus)\nqui est envoyée au modèle LLM.",
  "AFD7DE9D9FCDD832F39A": "La fonction de chaîne de modèle ` $``...`` ` formate et écrit la chaîne dans l'invite ;\nqui est envoyée au LLM.",
  "A823EBC1839C02C47497": "le Contexte",
  "0029BF05971FE074407E": "GenAIScript expose le contexte via la variable `env`. Le contexte est implicitement défini par l'emplacement où vous commencez à exécuter le script.",
  "36C68AEB8E00086F640F": "vous pouvez faire un clic droit sur un dossier et `env.files` contiendra tous les fichiers imbriqués dans ce dossier.",
  "9D55D33867FFE4922206": "vous pouvez faire un clic droit sur ou dans un fichier et `env.files` contiendra uniquement ce fichier.",
  "BDA79B3F42AD9AB9E85E": "vous pouvez exécuter le script en utilisant l’[interface en ligne de commande](/genaiscript/reference/cli) et spécifier le contenu de `env.files` dans les arguments CLI.",
  "1BACBFA1FC8BDF21B712": "la Tâche",
  "11CCD4A51BB36E17CB53": "La fonction `$` est utilisée pour construire le texte de l’invite, elle rend et écrit le texte dans l’invite\n(`$` est un [template literal](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals)).",
  "98D5BEDEBB0978C44C92": "les Métadonnées",
  "F0D76DCD79CFD0A6DC81": "Vous pouvez ajouter un appel à la fonction `script` pour fournir des métadonnées sur le script\net le modèle. Les métadonnées sont utilisées pour afficher le script dans l’interface utilisateur et configurer le modèle LLM.",
  "CAFCEDCFDD0FB08956A8": "Les propriétés `title`, `description` et `group` sont utilisées pour afficher le script dans l’interface utilisateur\net peuvent être utiles lorsque l’utilisateur recherche un script.",
  "70211829A9F923A667DB": "![Une capture d’écran d’un éditeur de texte montrant une tâche intitulée \"Technical proofreading\" avec la description \"Reviews the text as a tech writer.\" Un lien hypertexte intitulé \"documentation\" est à droite.](../../../assets/vscode-select-script.png)",
  "F423501BF53C84E7BC5E": "Suivez le [guide Prompt As Code](/genaiscript/guides/prompt-as-code) pour approfondir la génération programmatique d’invites",
  "16C4658060F4F33FE4D8": "[Exécutez votre script](/genaiscript/getting-started/running-scripts) depuis Visual Studio Code.",
  "E7DCFFF66400713052D8": "Vous devrez ",
  "259728C6182CF73551DD": "configurer",
  "3A560BB085538CD46981": "les instructions de configuration",
  "F414C25C3262C14FE270": "Écrivez votre ",
  "691F0BBDB271EE692A25": "premier script",
  "D63801CB07EAE99D078D": "interface en ligne de commande",
  "E552DDD02AE153C0C0B9": "Exécution d'un script avec la CLI",
  "1C75FBE958062FC3FE03": "L'utilisation de base de la CLI est de ",
  "3E693A2AC561830F99AC": "lancer",
  "BB837C3425CF435AAE1A": "La CLI utilisera les secrets du fichier ",
  "A061CF1C48DBC90150BA": "avec ",
  "4CB0D5824408BDC9B7A9": "vous permet d'exécuter une commande\ndepuis le paquet npm ",
  "D3AB5278F9BFF58C95D0": "genaiscript npm package",
  "9170B23F4A2CD707B566": "Appliquer les modifications",
  "80DA4C0486D547385075": "conteneur",
  "9AB64636B053A4A18E8F": "Consultez ",
  "C2DA0599D41A3F7AF7B0": "Sécurité et confiance",
  "56910C85FADDD61CBABE": "Configurer GitHub Models",
  "0ED7E2628431F6078018": "Configurer les secrets et variables",
  "2B37224D03677A4CCEE6": "Configurez la variable ",
  "A8B0FCC29F20866E5584": "variables",
  "D77E8727140E7EB666A9": "Les secrets et variables doivent correspondre au fichier ",
  "4998890F689733CDBA7E": "Exécution d'un script",
  "8D57B669B224A5F94C29": "utilisez l'option ",
  "488389388CA1D6FF6E85": "Ajouter la trace au résumé de l'action",
  "0F4ED4FE545C77DA8B82": "Différence",
  "6FECD46A4663B665692F": "pour exécuter une commande ",
  "E4E44A1D2466D61792BA": "git",
  "329804C1C0FA2618901D": "Notez que vous devrez récupérer la branche ",
  "306166022FFF459EB8F7": "Stocker la sortie dans des artefacts",
  "3425C53CD3BE42582E63": "Azure OpenAI avec un principal de service",
  "2ED9F16C33B268F86BB7": "La documentation officielle de l' ",
  "D91FE8562DE35722A4EC": "action de connexion Azure",
  "FE6B142ECA61A1EBABF1": "Les étapes ci-dessous montrent comment configurer l'action de connexion Azure pour accéder à la ressource OpenAI ",
  "E729A4B02821E3652068": "en utilisant un secret de client de principal de service",
  "67ACB6BA5707B2796D03": "Créez un principal de service en suivant le guide ",
  "32323BF84BACD184AF23": "connexion via un secret Azure",
  "21CCE0FDC30D6BAA6AC0": "Lecteur",
  "2921CD6B2AAC66558292": "Attribuez le rôle ",
  "440D2942EB590CFB25D0": "Utilisateur des services cognitifs OpenAI",
  "7F370EFF5C3A62020E01": "AZURE_CREDENTIALS",
  "87F8C17ADDD388C0A4F6": "mettez à jour chaque étape qui invoque la ",
  "E69BFC7E70B274452BB6": "CLI ",
  "19920546102C596901EF": "Pull request GitHub",
  "C484213BA612946EA882": "Si votre GitHub Action est déclenchée par un ",
  "792D8E9FC4CDAC09C561": "événement de pull request",
  "5F45C9A22872F692F9EE": "permission",
  "D62A6A20470BFAB12ECC": "et le secret ",
  "421B233B4868F0E96528": "Mettre à jour la description",
  "77C3E9F96AF39007F1D2": "Commentaire de conversation",
  "36C7B850381BB926AE7D": "Commentaires d'examen",
  "E381F2B9DD6A7AFB7552": "pour convertir ",
  "3CBDA059E30422BF97E9": "en commentaires d'examen ",
  "A6D298F3E02E68A31146": "sur le dernier commit",
  "F477EC099BC040CD5704": "super article de blog",
  "FF596138FAAE5D792933": "GenAIScript permet aux utilisateurs de chatbot de créer des scripts réutilisables",
  "14C1C742D3FDED8F5BCE": "Fournir au modèle le contexte dont il a besoin à partir des documents",
  "B089E2591A85F9A68E28": "pdf",
  "5801ED3C450E4AD876FD": "docx",
  "EDBD0E746D85418268E3": "Concentrez un GenAIScript sur une tâche précise que le LLM doit bien accomplir",
  "B9C80A60804F3ACBBA0B": "Utilisez la sortie d'un GenAIScript comme entrée pour un autre",
  "834B2A35CFF2F44ACC3F": "Utilisez le bon LLM ou autre modèle fondamental adapté à la tâche",
  "7EDA52E98AF136F9B907": "Les fichiers de script GenAIScript sont des fichiers JavaScript exécutables et peuvent être débogués\nen utilisant le [débogueur Visual Studio Code](https://code.visualstudio.com/Docs/editor/debugging), tout comme n'importe quel autre programme JavaScript. ",
  "3FA30273126FB68CA0C1": "GenAIScript offre également un [journal léger intégré](/genaiscript/reference/scripts/logging) pour vous aider à\ndépanner vos scripts sans utiliser de débogueur. ",
  "301381F6DFC5925C1295": "Démarrer une session de débogage",
  "2FEFE1B9D10AC40B1568": "Ouvrez le fichier `.genai.mjs` à déboguer et ajoutez des points d'arrêt. ",
  "9EA68237CE2DE6A0401A": "Depuis les fichiers env",
  "FCBEEE810DA19FBFD301": "Cliquez avec le bouton droit dans l'éditeur du fichier que vous souhaitez dans `env.files`. ",
  "C4F7CCE3879A9587685D": "Depuis le script lui-même",
  "246BE2D05F23057C6ABA": "Ajoutez un champ `files` ",
  "3CCAD439C8D838841805": "dans la fonction `script` ",
  "A8FE6BE1ADB002823ED5": "Cliquez sur l'icône ** ",
  "F8498B2CF8F950D9DF0D": "Déboguer",
  "71E3080FE8ED81A680F3": "Le débogueur lancera le [cli](/genaiscript/reference/cli) et exécutera le script en mode débogage.\nLe débogueur s'arrêtera aux points d'arrêt que vous avez définis. ",
  "97A4B0E996EE1ED45247": "Continuez à itérer sur le script ou ",
  "2379EF35E9B219012733": "ajoutez des tests",
  "42195E6B6D0CDFB2386C": "GenAIScript est disponible en tant que ",
  "978EEA723B361EA8C3B0": "ou en tant qu'[Extension Visual Studio Code](#visual-studio-code-extension). ",
  "37D504732965FD44F9BE": "GenAIScript nécessite [Node.JS](https://nodejs.org/) pour fonctionner.\nNous recommandons d’installer la version LTS en utilisant un [gestionnaire de versions node](https://docs.npmjs.com/downloading-and-installing-node-js-and-npm). ",
  "4E540BCE5A4039B43304": "gestionnaire de versions node",
  "9E52D0FDE4976B365795": "avec un gestionnaire de paquets",
  "AF61440A20B79AE494D7": "Vérifiez votre installation",
  "099F6CAA76F7C9E2AC31": "Extension Visual Studio Code <a id=\"visual-studio-code-extension\" href=\"\" />",
  "8BFACC4D3E37E9A980EF": "Extensions",
  "31974FC4EA1EB83CDD56": "vue",
  "BEEC2C4854543311E5FF": "Recherchez ",
  "1AE527ADE5B187E48784": "genaiscript",
  "DD5A34274212AB8BC7A0": "et cliquez sur ",
  "ACB6129A9AF480FD0BBA": "Installer",
  "CEF60EDFAE4627730C68": "Ajouter aux recommandations de l’espace de travail",
  "7E0BA746B772615B23BF": "Profil par défaut pour le terminal",
  "89994730EE8A876698B5": "Ouvrez la palette de commandes ",
  "28BE6673F61B1EE7FA7A": "et recherchez ",
  "EA10ABD7DA1D8B53B8BC": "Sélectionnez le profil de terminal comme ",
  "87DEC5FB4729B281A8E2": "Git Bash",
  "4BC2B96584243D67C6DC": "dernière version",
  "A61905EC8BC06FA50FB7": "sur GitHub",
  "24A25896844385C15C43": "Téléchargez le ",
  "3801030D8E1200F13606": "dans le dossier racine de votre projet",
  "86AD68861FD424937F47": "cache/ différents fichiers de cache",
  "53604C1765C86A8ECB83": "retrieval/ caches de la base de données de récupération",
  "7A302350B9672E6AFA7F": "Ouvrez votre projet dans Visual Studio Code",
  "19649EFBE4790A90EE80": "Cliquez-droit sur le ",
  "322B1FBCC8F451BB48A8": "fichier `.vsix` et sélectionnez **Installer l’extension VSIX...** ",
  "49162CCFE904876D7D7B": "Support de Cursor",
  "69519528F7C25E9C0189": "GenAIScript peut être installé dans ",
  "4552375F1CC690D8E9F3": "Cursor",
  "C8635B49B6C072CCF0BC": "Ligne de commande <a id=\"command-line\" href=\"\" />",
  "69F880E9C39F4C7A387F": "npx peut être lent",
  "C259E3FE4D15006E374D": "référence CLI",
  "36A58D839556521D9354": "DevContainer",
  "8F16160EF86361D6B05D": "Vous pouvez ajouter ce fichier dans votre projet pour utiliser GenAIScript dans un ",
  "BFD7699E39825A1D8AEC": "La définition devcontainer sera automatiquement utilisée par ",
  "1E655B7BF27F398211BC": "GitHub CodeSpaces",
  "05EA737257AFA18E8DB7": "cli devcontainer",
  "2750857DE48A89FBD401": "ou diverses ",
  "2C2684F4DC889A01A943": "intégrations d’éditeurs",
  "773F21BBE535A5C3FC21": "Configurons ",
  "F405F5699D7D09A9EE84": "les informations de connexion LLM",
  "8204FCA7A17DAB3E7EE6": "Il est possible de déclarer ",
  "B197A3915F78488AB5AF": "tests",
  "AAF6A766F9B91B599A19": "Déclaration des tests",
  "F953F03D5A6AD2868988": "Les tests sont ajoutés sous forme d'un tableau d'objets dans la ",
  "2711683D151AA0568C71": "clé ",
  "F391701184808044F504": "Spécification des modèles",
  "E73F1195082C633BA9E0": "vue Explorateur de tests",
  "B2AFCEF8032456C6A438": "Sélectionnez votre script dans l'arborescence et cliquez sur le bouton icône `play`. ",
  "BDFA1BA8D85FDE0359AD": "Ligne de commande",
  "27659694B0F576615C17": "Limitations connues",
  "3FD870E64E231DC0A3BF": "En savoir plus sur ",
  "A0AA07C5A05EF4EB595B": "Automatiser",
  "88256F3D577593C663C6": "Le fichier résultant sera placé dans le dossier ",
  "8223B2B30D94A50D4BE8": "…",
  "23E7FFACF9CB1558D224": "Les scripts genaisrc sont créés ici par défaut",
  "0F063E4725E4B097BC87": "Le Prompt",
  "F16FFA1CC5A1A1A68FE4": "Le Contexte",
  "02E2419784694EA52BB0": "GenAIScript expose le contexte via la variable ",
  "FE5EA2BA1EC6B9482238": "vous pouvez faire un clic droit sur un dossier et ",
  "3F2B2BB4743D6458D00F": "vous pouvez faire un clic droit sur ou dans un fichier et ",
  "B73EAB4B4815FEDAA2C0": "vous pouvez exécuter le script en utilisant l’interface en ligne de commande ",
  "A8488684E951713879CE": "et spécifier le contenu de ",
  "F635154DFC7ECAC5863F": "la Tâche",
  "8BBFD2B07873270942EE": "est une ",
  "5D457A5EFD86C6366BCB": "template literal",
  "094F9A9C9B87F9169D5B": "les Métadonnées",
  "4BCBD977CF37552EB00D": "Vous pouvez ajouter un appel à la fonction ",
  "96B74B6BC50D94644931": "Suivez le ",
  "B7E4D4939BCB97C803FF": "Guide du Prompt en tant que Code",
  "796CA3AAC38BB8B190D5": "pour approfondir la génération programmatique de prompts",
  "C729BD092734E75EFFF2": "Exécutez votre script",
  "C6FE869A6EF68C14AF0E": "Le débogueur Visual Studio Code",
  "EAA484319A4FFF0EA533": "journalisation légère intégrée",
  "12015AD0FCB949F9D60F": "Extension Visual Studio Code ",
  "250DECBB9A972A785A03": "Ligne de commande ",
  "AD0D3560F6146F8F6659": "Zine rencontre les Pull Requests (et plus)",
  "AF8353511BB8005AD5C8": "Une réflexion sur l'influence des nouveaux générateurs d'images et leurs impacts sur les ressources de développement logiciel telles que les pull requests.",
  "807532206C70B76C7C17": "La disponibilité de nouveaux générateurs d'images comme OpenAI `gpt-image-1` ouvre la porte à d'innombrables nouvelles façons de visualiser et d'annoter les artefacts logiciels.",
  "CA4FB6CCC846FB292E42": "Ça fonctionne aussi pour les **sketchnotes !**",
  "25D8525B657F8FFAD77C": "Zines",
  "B2923CC120392A14EFCA": "[\"Zine\"](https://en.wikipedia.org/wiki/Zine) est une forme d'art graphique populaire qui combine texte et images pour raconter une histoire. Peut-on demander au LLM de générer un zine à partir d'un diff de pull request ? *voix robotique hors ligne : Oui, nous le pouvons*.",
  "9D836179438B2954B11C": "Le script ci-dessous est une transformation en 2 étapes à l'aide du LLM du pull request en zine :",
  "7A09963BCCE85974CBA7": "utiliser `gpt-4.1-mini` pour transformer le diff en une invite pour génération d'image",
  "D194D5A1D1B57E504EE5": "utiliser `gpt-image-1` pour générer l'image à partir de cette invite",
  "96FB80985A6319FB163E": "un peu de plomberie pour téléverser l'image générée dans une branche et l'ajouter à la description de la pull request",
  "D3D19E72E1703E9FFDED": "https://github.com/microsoft/genaiscript/pull/1505",
  "9E3CACF12A5C685CBF7C": "![Une illustration style bande dessinée illustre un processus pour localiser des fichiers dans un répertoire. Un détective éclaire les fichiers avec une lampe torche, identifiant les répertoires et gérant les fichiers ignorés. \"Développez !\" est mis en valeur par des fleurs épanouies. Une personne triste tient une pancarte \"Aucun fichier trouvé !\". En bas, des URI analysées sont résolues en ressources et fichiers rassemblés sur un tapis roulant.](https://raw.githubusercontent.com/microsoft/genaiscript/refs/heads/genai-assets/522d1313a72276c6e257e8515aef10cefca29020918382165d523bed3ac84744.jpg)",
  "C5ADC36E2FF7E0B77EF9": "https://github.com/microsoft/genaiscript/pull/1503",
  "2101830FD3D6D3BD6250": "![Une illustration style dessin animé explique un workflow GitHub : une mascotte GitHub tient une URL d'asset, un robot téléverse des assets avec des options de format, un tapis roulant de cache de fichiers gère style, qualité et taille, une pieuvre corrige les chemins d'URL, des diagnostics montrent des messages générés, une personne vérifie les URLs, et un \"Pull Request Zine\" montre un diff de pull request.](https://raw.githubusercontent.com/microsoft/genaiscript/refs/heads/genai-assets/ac75c0e82897b9bc80b7bdbab503dacdee16da762f1048ae20d163c4d1b5e7ac.jpg)",
  "7EE4DD503636BF9186E5": "https://github.com/microsoft/genaiscript/pull/1507",
  "D5167A43B7B1BECF7102": "![Une illustration style bande dessinée présente un outil d'annotation pour le raffinage du code. Elle met en avant des fonctionnalités comme la suggestion de corrections d'erreurs, une analyse améliorée pour la détection de fautes de frappe, et l'intégration avec Git blame pour suivre l'auteur du code. Le visuel inclut des icônes, des bulles de texte, et un personnage avec une loupe soulignant un meilleur feedback et un suivi plus intelligent.](https://raw.githubusercontent.com/microsoft/genaiscript/refs/heads/genai-assets/1a2f6bff55de7c004d46cfd9b014b598f2be4903702095aaea02c01c95e0df4d.jpg)",
  "DCD44F0DFF26229E95A8": "https://github.com/microsoft/genaiscript/pull/1506",
  "86690F51CC918FD24DF5": "![L'image illustre un processus modulaire pour gérer les éléments UI et schéma, comprenant six panneaux : Schéma des paramètres, Concept uiGroup, Nettoyage de schéma, Nettoyage d'exemples, Types étendus, et Rendu UI regroupé. Chaque panneau utilise icônes et diagrammes pour représenter des étapes comme organiser les paramètres, grouper les éléments UI, nettoyer les schémas, étendre les types, et rendre les composants UI regroupés.](https://raw.githubusercontent.com/microsoft/genaiscript/refs/heads/genai-assets/1b560d071efb015942678ffc705eac01e0d1dad8fd1e88ab521c0283a535a278.jpg)",
  "1C685AD2002CE296B3EF": "Sketchnotes (mise à jour)",
  "E9899EF7A19CC1B8472F": "[\"Sketchnotes\"](https://sketchyideas.co/sketchnotes/) est un autre style de prise de notes visuelle qui combine des éléments dessinés à la main avec du texte pour transmettre des informations. C'est une excellente façon de résumer une pull request et de la rendre plus attrayante.",
  "C47A936A1EDA2D79CE9F": "https://github.com/microsoft/genaiscript/pull/1510",
  "5CD0E22E5F45FAE94626": "![Un diagramme de flux illustrant un processus de vérification de version Node.js pour TerminalServerManager. Il implique la vérification de l'installation et de la version de Node.js (≥20), l'utilisation de constants.ts, un flux de promesses, et des commandes comme \"node cliPath serve\" ou \"npx serve,\" avec des messages d'erreur pour Node.js manquant ou obsolète.](https://raw.githubusercontent.com/microsoft/genaiscript/refs/heads/genai-assets/034e747af0809c2ed0ed02f5e980cce1f48a6f80e0a3c63818694d3afa34647a.jpg)",
  "1225CD16A989B55A5C0A": "https://github.com/microsoft/genaiscript/pull/1511",
  "036D0BE7ADC4A8113DD4": "![Un diagramme visuel présente une fonctionnalité combinant zines et pull requests. Il montre un diff PR conduisant aux sketchnotes, qui sont une prise de notes visuelle avec dessins, puis la génération d'un résumé PR. Le texte met en avant les nouvelles invites d'images AI pour créer des sketchnotes, avec des icônes d'idées, dessins, et collaboration.](https://raw.githubusercontent.com/microsoft/genaiscript/refs/heads/genai-assets/d9461598f48703dceb7e4dd381292b713c993dbbde2dec3f2b2b18858d774dfb.jpg)",
  "5A1DD5ED63ABDB79D217": "Qu'en est-il des autres styles ?",
  "9069BB6DC9E72FE4B42E": "Pour pousser l'idée encore plus loin, nous pouvons demander au LLM de choisir un style graphique aléatoire et de générer un diff de pull request dans ce style. Cette idée a été appliquée dans [https://github.com/microsoft/genaiscript/pull/1512](https://github.com/microsoft/genaiscript/pull/1512).",
  "E16BB14FD4296AECC175": "collage",
  "22A005434689FF8D5D97": "![Un diagramme coloré illustre un « Pull Request Visual Renderer » entouré de créations comme des bandes dessinées, infographies, zines, sketchnotes et art découpé en papier. Des flèches relient des éléments comme du code, une loupe, et un upload cloud, symbolisant un workflow.](https://raw.githubusercontent.com/microsoft/genaiscript/refs/heads/genai-assets/0cfbcad27efd026c72d23b2d75e801add50a67a7061585e8c680299e2fe8dae6.jpg)",
  "FAB59F69F6FA561862C9": "mural",
  "3C94350BB6D39FABC900": "![Une illustration présentant un processus de rendu visuel de pull request avec des éléments interconnectés comme branches, genres, et images de sortie. Elle comporte des icônes d'engrenages, ampoule, cadenas, GitHub, et des chemins visuels vibrants reliant les composants, symbolisant workflows et créativité.](https://raw.githubusercontent.com/microsoft/genaiscript/refs/heads/genai-assets/a672ed828a6fa1e5dc2561f120f9c35353a2ba27a10cc285a0d40c4a68581e66.jpg)",
  "218B48A281A3F2C2DB3A": "illustration éditoriale",
  "9C9E451F8C45BA7EB4E7": "![Une illustration d'une personne travaillant sur ordinateur avec le texte \"Pull Request Visual Renderer\" à l'écran, entourée d'éléments visuels dynamiques tels que graphiques, diagrammes et icônes abstraites représentant données et collaboration.](https://raw.githubusercontent.com/microsoft/genaiscript/refs/heads/genai-assets/c5478b3f3015ee93578984a0c19874b5310fb556290309995077fb1f6077daa9.jpg)",
  "184A1850D6EBE6AF7FC6": "À venir",
  "0FFC631E70677AA62F63": "Le zine est une manière ludique de visualiser le diff de la pull request. Ce n'est pas parfait mais c'est attrayant et peut-être que c'est tout ce dont vous avez besoin pour inciter quelqu'un à revoir votre PR !",
  "4EF1DB0D56BEDD8C1B66": "Il y aura d'autres façons de visualiser le logiciel à l'avenir, grâce à ces incroyables générateurs d'images.",
  "4BCF9D17629AB1BFFA71": "Revamping the views...",
  "2D9E142DD594883C56C5": "Annonçant la nouvelle vue GenAIScript.",
  "0394744CAA7FAE847C1E": "Dans le passé, notre visualisation dans Visual Studio Code reposait sur la fonction d’aperçu Markdown intégrée. Elle fonctionnait très bien, mais parfois ce n’était pas suffisant. Nous voulions offrir une expérience plus interactive à nos utilisateurs. Nous avons donc décidé de créer une vue web personnalisée pour GenAIScript.",
  "0BB3B5B0D95C58EFCA4D": "Recréer cette vue nous donne également plus de contrôle sur la prise en charge du rendu de divers sousformats Markdown comme les diagrammes mermaid, les annotations, les mathématiques, ...",
  "D28FB69BDD46163138BA": "![Une capture d'écran de la vue GenAIScript.](./webview.png)",
  "846D68A2814C2A9DDCEB": "Accéder à la vue en dehors de Visual Studio Code",
  "CD78BF2408B122292F37": "Par conséquent, vous pouvez désormais accéder à la vue GenAIScript en dehors de Visual Studio Code. Cela signifie que vous pouvez maintenant **exécuter** vos scripts dans un navigateur ou toute autre application compatible avec les vues web.",
  "5670F98721C2F904C708": "Lancez la commande [serve](/genaiscript/reference/cli/serve) depuis le [cli](/genaiscript/reference/cli) pour démarrer le serveur et suivez les instructions pour ouvrir la vue dans votre navigateur.",
  "C051083B5674637078BD": "Écoutez le podcast",
  "154FC6C4104FC1DDEF57": "Si vous n'avez pas envie de lire quoi que ce soit, écoutez notre podcast.",
  "2C147DA0081162902FB0": "Nous avons créé un podcast à partir de l'aide de Google\\'s NotebookLM (pour que vous n\\'ayez pas à le faire). Le voici...",
  "81FCD2C217661EA2276A": "[lien direct](/genaiscript/podcasts/overview.wav)",
  "3ABBDBB832DA33388379": "Que la vidéo soit !",
  "D0EB948EE6524AA48677": "Ajoutez des vidéos à vos appels LLM.",
  "5C702D0677DE40FFCE7A": "La dernière version inclut la prise en charge de l'inclusion de vidéos et de transcriptions audio dans vos scripts.",
  "9CD31DF62A6A412F82BE": "Supposons que vous souhaitiez analyser un fichier vidéo. Pour la plupart des LLM qui supportent les images, vous devrez extraire des captures d'écran à des horodatages précis, puis les envoyer sous forme de séquence d'images. Choisir ces horodatages peut être un défi car vous risquez d'épuiser la fenêtre de contexte. GenAIScript fournit des assistants pour résoudre ces tâches fastidieuses liées à l'analyse vidéo avec les LLM.",
  "BB457EEB8E56256A5CCE": "consultez la [documentation](/genaiscript/reference/scripts/videos).",
  "16C83C2B8871DC5EE7E8": "outils et agents",
  "76170AEBB759787BDAAD": "Nous proposons également d'encapsuler les nouvelles fonctionnalités dans des [outils](/genaiscript/reference/scripts/tools) et des [agents](/genaiscript/reference/scripts/agents) afin que vous puissiez les utiliser dans vos scripts.",
  "AA2B0D526F19922D6E41": "Par exemple, pour inclure l'outil d'extraction de frames afin que le LLM puisse l'appeler, vous pouvez utiliser l'extrait suivant :",
  "F67E75BC632AF328D85D": "Ou laissez simplement l'agent travailler sur la vidéo pour vous.",
  "4002E63176464A0B7B64": "Video Introduction",
  "730029AD533078624B18": "une première démonstration de GenAIScript en action dans VSCode.",
  "E0E82E8DB536BB4D4145": "La toute première vidéo tutoriel sur GenAIScript est disponible sur YouTube.",
  "6405AC7C417E11B17311": "Il a fallu un certain temps pour remettre en place l'installation, mais nous sommes maintenant prêts à commencer la série de tutoriels\nsur GenAIScript. Utilisez les discussions si vous souhaitez suggérer un sujet pour la prochaine vidéo.",
  "C5D10122BC57C5EA33A1": "2.0 - Une bibliothèque Node.JS",
  "A387141EED7A10B6456D": "GenAIScript v2.0 introduit une refonte architecturale majeure avec\ndes paquets TypeScript appropriés, des types unifiés, une migration vers pnpm, et une\nexpérience développeur améliorée.",
  "7A2C4AFF2D654545C46B": "GenAIScript 2.0 représente une étape architecturale importante. Nous avons restructuré fondamentalement la base de code pour libérer l'exécution du runtime de sa dépendance au CLI, permettant à GenAIScript de fonctionner nativement dans n'importe quelle application Node.js.",
  "F7B6CC946F01E9138D8E": "**Vos scripts existants restent en grande partie compatibles**. La plupart des changements se font en coulisses, bien que nous ayons introduit quelques modifications de rupture au niveau du CLI et de certaines API pour améliorer la maintenabilité à long terme.",
  "9CB2D7A9CF67537FB15B": "Support des outils Agentic",
  "27BEEE1D2D6A355BE7EB": "La bibliothèque standard Agentic d'outils d'IA en TypeScript est optimisée à la fois pour une utilisation en TS et pour une utilisation basée sur LLM, ce qui est vraiment important pour les tests et le débogage.",
  "AC146C561EA623C9FBF3": "[Agentic](https://agentic.so/) est une bibliothèque standard d'outils d'IA en TypeScript optimisée à la fois pour une utilisation en TS et pour une utilisation basée sur LLM, ce qui est vraiment important pour les tests et le débogage.",
  "870FCFDF45BF53F8B258": "Agentic prend en charge une variété d'API en ligne, comme Bing, Wolfram Alpha, Wikipedia, et bien plus. Vous pouvez enregistrer n'importe quel [outil Agentic](https://agentic.so/tools/) dans votre script en utilisant `defTool`. Voici un exemple d'utilisation de l'outil Weather :",
  "768BF264D87474333929": "[Documentation Agentic](https://agentic.so/sdks/genaiscript)",
  "3D301277F20AD929439A": "[Documentation GenAIScript](https://microsoft.github.io/genaiscript/guides/agentic-tools/)",
  "A940C29ACDDCC6EDA818": "Super Charge Copilot Chat",
  "16B896534985BBD8D761": "Boostez votre conversation Copilot avec ces astuces et conseils.",
  "E17F12B50BF793FBBC3E": "Visual Studio Code v100 a légèrement modifié la façon d'ajouter l'invite `genaiscript` à la session de chat.",
  "926403CE12994FDB3736": "[Suivez ce guide](/genaiscript/reference/vscode/github-copilot-chat/#genaiscript-custom-prompt)",
  "AA1D99B6BCDEFA296D4A": "Connaissez-vous une astuce géniale pour faire de GitHub Copilot Chat un expert en GenAIScript ?\nVoici comment vous pouvez booster votre chat Copilot avec une technique simple.",
  "670F8034F324E86C6E85": "**Ajoutez toute votre documentation à la session de chat !**",
  "3D317A0423E0E2E79CFF": "Ça paraît fou ? Pas vraiment ! GenAIScript contient d'innombrables exemples d'utilisation des API. Il suffit de compresser\nla documentation pour qu'elle tienne dans la fenêtre de contexte.",
  "B57E91E1A1EDECF53831": "Comment puis-je essayer cela ?",
  "90EEEAA35D896BEC6E81": "Avec la dernière version de GenAIScript, vous pouvez désormais ajouter une invite **`genaiscript`** à votre session de chat.\nCette invite, créée par l'équipe GenAIScript, inclura la documentation GenAIScript\ndans le contexte pour aider le fournisseur de LLM à mieux répondre.",
  "DB835A1050136B3A65CA": "Comment cela fonctionne-t-il ?",
  "4814A0BD75D2567775B4": "La dernière version de GitHub Copilot Chat ajoute la prise en charge des [prompts réutilisables](https://code.visualstudio.com/docs/copilot/copilot-customization#_reusable-prompt-files-experimental).\nGitHub Copilot Chat a également ajouté la prise en charge de l'indexation locale de l'espace de travail, ce qui aide à gérer de grandes quantités de contexte.",
  "B621B3BF53F0F2DEA8BE": "GenAIScript tire parti de ces fonctionnalités en ajoutant un prompt personnalisé qui inclut la documentation GenAIScript.",
  "188B60939B7BC425DF4B": "À suivre",
  "280814B61AED749FF8C5": "Cette technique est vraiment nouvelle et il y a probablement beaucoup d'améliorations à apporter.",
  "58E5356121E20911A3E7": "Scripts as MCP tools!",
  "C2331B0C81418050F803": "Découvrez comment GenAIScript peut désormais faire apparaître n'importe quel script comme un outil MCP.",
  "F0F390664212AA18FCB6": "🚀 Le [Protocole de contexte de modèle (MCP)](https://modelcontextprotocol.io/introduction) bouscule le monde de la technologie, et nous sommes ravis d'annoncer que GenAIScript est en première ligne de cette révolution !",
  "B777BA7BBB5F46849080": "Avec l'adoption rapide du MCP, des outils comme GitHub Copilot Chat intègrent déjà le support (disponible dès aujourd'hui en version Insider), et [Copilot Studio](https://www.microsoft.com/en-us/microsoft-copilot/blog/copilot-studio/introducing-model-context-protocol-mcp-in-copilot-studio-simplified-integration-with-ai-apps-and-agents/) a également annoncé leur compatibilité.",
  "4C02718A152E42866207": "Pour suivre ces avancées passionnantes, **[GenAIScript vous permet désormais d'exposer des scripts comme des outils MCP](/genaiscript/reference/scripts/mcp-server)**. Imaginez les possibilités ! Les outils MCP fonctionnent de manière similaire aux outils LLM, où le modèle linguistique (LLM) décide du moment où les appeler, rendant votre processus de développement plus intelligent et plus efficace.",
  "468C57185FAF29F09DE7": "Plongez dans l'avenir du scripting avec GenAIScript et MCP. Consultez la [documentation](/genaiscript/reference/scripts/mcp-server) pour commencer.",
  "014B3B9E03E3840CE2C7": "Search and Transform",
  "8E31796812F3205D1C46": "Explore how GenAIScript automates the search and\n transformation of patterns across multiple files, enhancing efficiency in\n development tasks.",
  "85EA652E7BD6313183A5": "Avez-vous déjà été confronté à une situation où vous devez rechercher dans plusieurs fichiers de votre projet, trouver un motif spécifique, puis lui appliquer une transformation ? Cela peut être une tâche fastidieuse, mais ne vous inquiétez pas ! Dans cet article de blog, je vais vous présenter un script GenAIScript qui fait exactement cela, automatisant le processus et vous faisant gagner du temps. 🕒💡",
  "F1FBAF57028EDA48F253": "Par exemple, lorsque GenAIScript a ajouté la possibilité d'utiliser une chaîne de commande sous forme de chaîne de caractères dans\nle commande `exec`, nous avons dû convertir tout script utilisant",
  "995360BE5EAD88887CA1": "en",
  "C3047DBF3445AD7C8F0F": "Le guide [Search And Transform](/genaiscript/guides/search-and-transform) couvre les détails de cette nouvelle approche...",
  "59013E6D360B3E7EA251": "Prompting is the New Scripting: Meet GenAIScript - Yohan Lasorsa - dotJS 2025",
  "3E712C01DC82CD3436B6": "[Yohan Lasorsa](https://www.linkedin.com/in/yohanlasorsa/) a donné une conférence à dotJS 2025 sur GenAIScript, une nouvelle méthode pour interagir avec les modèles d’IA en utilisant un langage de Script.",
  "DC8A5BE870714F8FF211": "Yohan Lasorsa est un Principal Developer Advocate chez Microsoft, un Expert Google pour Angular, et un auteur et contributeur open-source actif.\nFort d’une expérience de plus de 15 ans dans la recherche appliquée, le mobile, l’IoT et l’architecture cloud,\nil a travaillé sur des systèmes à faible niveau jusqu’au développement web full-stack.\nQue ce soit pour créer des applications ou des projets DIY, il aime partager ses connaissances et repousser les limites du possible.",
  "0F3448CA6C801FB3CC7A": "Playground, o1 et DeepSeek",
  "CB587EBAF2D892AD1D53": "Le playground est une interface web légère pour exécuter des scripts GenAIScript.",
  "2C8F154C962073356802": "La nouvelle version de 2025 apporte un certain nombre de nouvelles fonctionnalités et la prise en charge de nouveaux modèles.",
  "E92B86ADF6D91CCED214": "Playground",
  "70B4071563CE89D287A6": "Le [Playground](/genaiscript/reference/playground) est une application web auto-hébergée qui vous permet d’exécuter des scripts GenAIScript via une interface conviviale. Il se situe entre l’interface en ligne de commande (CLI) de GenAIScript et l’intégration GenAIScript dans Visual Studio Code.",
  "1C6F7385CC1A45732F38": "o1",
  "FDAC66FB38D04CD6F978": "GenAIScript prend en charge les différentes variantes des modèles [OpenAI o1](https://openai.com/o1/) (mini, preview, ...). Il ajoute aussi la prise en charge d’outils.",
  "CC5315E1C9E955798CF8": "o1 est également disponible sur [GitHub Models](https://github.com/marketplace/models/azure-openai/o1/playground) !",
  "22B57916FF3635FB92D5": "DeepSeek",
  "D9DAB09B61C4881DD951": "GenAIScript prend en charge [DeepSeek V3](https://www.deepseek.com/) via leur API OpenAI.",
  "B5702CA7330FB2C7FE80": "Découvrez la nouvelle API pour appeler genaiscript depuis d'autres scripts typescript.",
  "70E20F10D207AE1C77F6": "Une demande de fonctionnalité récurrente était de pouvoir exécuter GenAIScript de manière programmatique depuis d'autres scripts. Nous sommes heureux d'annoncer que nous avons publié une API Node.JS pour GenAIScript. Cette API vous permet d'appeler GenAIScript depuis d'autres scripts TypeScript (v1.83+).",
  "E9D8B151D3D356FD6F48": "[Documentation](https://microsoft.github.io/genaiscript/reference/api/)",
  "C9E834DACC053168EEDF": "Vous devrez ajouter [genaiscript](https://www.npmjs.com/package/genaiscript) en tant que dépendance (dev) à votre projet.",
  "7B39B1A0864E7969422B": "L’API `run`",
  "19E23CEBEF9E51F826F0": "L’API `run` est conçue pour imiter le comportement de l’interface en ligne de commande (CLI) de GenAIScript. Elle prend les mêmes arguments que la CLI et retourne les mêmes résultats. Cela vous permet d’appeler GenAIScript depuis d’autres scripts TypeScript.",
  "36272BBE8ABD1C7E9B11": "L’objet résultat contient la liste complète des messages, ainsi que des informations analysées supplémentaires telles que les fichiers modifiés, les diagnostics, etc.",
  "0D25C658CF3409A7B43A": "Ne touchez pas à mon processus",
  "D7BD69D17B1B2063D9B7": "Du côté de l’appelant, [l’implémentation de run](https://github.com/microsoft/genaiscript/blob/main/packages/cli/src/api.ts) est une fonction sans dépendance ni effet secondaire. Elle crée un thread worker où GenAIScript effectue le travail.",
  "76B8F1B9F57B1160B5E5": "Aucune variable globale ajoutée",
  "B84E6BCC658D6BE44633": "Aucun package chargé",
  "F4F5531C3DBE3E467B83": "Quelques centaines de `b` de mémoire utilisées",
  "018792098DC5E9765A8B": "Aidez-nous à l’améliorer !",
  "005F4070CFA5FBE63AA1": "Évidemment, il s’agit d’un premier jet et nous pourrions mieux faire en proposant des callbacks pour le suivi de progression. Envoyez-nous vos retours !",
  "DC6035957E973726C92D": "Sirènes sans faille",
  "9502A5F0D5B87DFBB9D9": "Réparation automatique des diagrammes Mermaid",
  "675AC7A4BE90247E4BD0": "[Les diagrammes Mermaid](https://mermaid.js.org/) sont une méthode populaire pour créer des [diagrammes](/genaiscript/reference/scripts/diagrams) en markdown.\nIls sont utilisés dans de nombreux projets, [y compris dans GitHub Markdown](https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/creating-diagrams).\nÉtant donné qu'il existe de nombreux exemples de diagrammes mermaid dans la nature,",
  "470D7B139D3C792F41DC": "il n'est pas surprenant que les modèles de langage (LLM) soient assez bons pour en générer.",
  "209F4B6AC80341AF3742": "Diagrammes Mermaid dans Markdown",
  "DC1D0EFDCE8017274361": "Mermaid prend en charge plusieurs types de diagrammes ainsi que plusieurs options pour contrôler l’apparence des nœuds et des arêtes.\nVous pouvez essayer différents diagrammes dans le [aire de jeux Mermaid](https://www.mermaidchart.com/play)",
  "B33C13E7B5357B6E9D14": "Voici un exemple simple d'organigramme :",
  "3020F2D0B0ED9BDCC648": "Ce markdown sera rendu sous la forme d'un organigramme en mode aperçu (et sur GitHub !) :",
  "4FDC597C06F6E4CA629D": "Erreurs de syntaxe",
  "4E7A0FB65EB0EA0B4A61": "Un problème avec Mermaid est que... la syntaxe a de l’importance et les LLM se trompent parfois.\nIntroduisons une erreur de syntaxe dans l’exemple ci-dessus.",
  "05FCEEAF372E3D07F689": "Maintenant, Mermaid ne parvient pas à analyser et le diagramme n’est pas rendu :",
  "465B8173B79BB7D77DAE": "Dans la plupart des cas, le LLM est capable de corriger l'erreur de syntaxe et de générer un diagramme valide en utilisant le message d’erreur.",
  "2E51E791E3540A18FC58": "Réparation automatique",
  "B4BA8C5CF815A2A1DC90": "Nous avons ajouté un \"réparateur\" dans l’invite système [system.diagrams](/genaiscript/reference/scripts/system#systemdiagrams).\nLe réparateur recherche les blocs de code `mermaid` dans la sortie et tente de les analyser.\nSi le diagramme présente des erreurs d'analyse, le réparateur ajoute un message au chat pour les corriger.",
  "569B46A5A347140B7457": "Voici une trace d’un script simple qui génère un diagramme à partir de n’importe quel code.",
  "A723CBCBE501D386A730": "Nous exécutons la [cli](/genaiscript/reference/cli) avec le script `mermaid.genai.mjs` et le fichier [runpromptcontext.ts](https://github.com/microsoft/genaiscript/tree/main/packages/core/src/runpromptcontext.ts).",
  "005A80E403884AFD2C17": "Première tentative",
  "4733D4C7F2B1452F1FF0": "Le script génère une invite avec le code et les instructions pour générer un diagramme.",
  "E63242D5F154B745A9D4": "Erreur de syntaxe détectée, réparateur activé",
  "C0F011909F2C41BEB7CC": "Le diagramme mermaid généré contient une erreur de syntaxe.",
  "6E806493632C487653ED": "Le réparateur entre en jeu et répond à l’assistant avec un message pour corriger l’erreur. La conversation complète du chat est renvoyée au LLM,\ny compris le message d’erreur.",
  "E8940B7EB91906E36BBA": "Le LLM répare le diagramme",
  "5EE1F7E73B44301A584C": "Dans ce cas, le LLM parvient à réparer le diagramme et à générer un diagramme mermaid valide.",
  "B9251202F57DC932251E": "Le diagramme réparé",
  "678E6FD929CF2B4ED72E": "Enfin, le diagramme réparé est renvoyé à l’utilisateur :",
  "1315729AFF6754601859": "Puis-je analyser moi-même les diagrammes mermaid ?",
  "3DD74AC2A3627395332B": "Oui, vous pouvez utiliser `parsers.mermaid` pour analyser les diagrammes mermaid dans vos scripts\nde manière programmatique.",
  "F359A05987D75FF94CC1": "Validation des outils MCP",
  "06CAB1CED7CD3E897F54": "Apprenez à configurer la validation du contenu pour les outils du protocole Model Context (MCP) dans GenAI Script.",
  "FC068D2CC2EE2E1EF0BD": "GenAIScript a ajouté plusieurs fonctionnalités pour sécuriser les outils du protocole Model Context (MCP) et atténuer des attaques spécifiques telles que le rug pull, l’empoisonnement d’outils ou l’injection de prompt.",
  "FFEC17B0AA47EB24B1BC": "À partir de la `v1.127`, vous pouvez configurer les options suivantes comme [documenté ici](/genaiscript/reference/scripts/mcp-tools#security) :",
  "284B4BC6D1B060638A5B": "hachage de la signature des outils pour prévenir les attaques de rug pull, où la liste des outils est modifiée sans que vous le sachiez.",
  "2DEA7E2C367A7568A471": "détection d’injection de prompt utilisant un [scanner de sécurité du contenu](/genaiscript/reference/scripts/content-safety). Cela analysera à la fois le fichier de définition des outils, pour éviter **l’empoisonnement d’outils**, et chaque sortie d’outil, pour prévenir **l’injection de prompt**.",
  "763043A0A9EC75AAEB05": "en fait, chaque outil peut être instrumenté avec une analyse de sécurité du contenu.",
  "794B255536AF7FE62273": "Avons-nous terminé ?",
  "EDD3E499B5221824610B": "Il reste encore de nombreux autres aspects de sécurité à considérer lors de l’utilisation des outils MCP, ces fonctionnalités n’en sont que quelques-unes.",
  "34B188F85E119201A4DC": "Ressources MCP",
  "0DF06EF0B4846BBBFC84": "Apprenez à publier des ressources MCP sans effort grâce à GenAIScript.",
  "6136C93F19DBF8A10DA2": "Ressources MCP",
  "EC4CD556B67A93844B55": "Dans un [article précédent](/genaiscript/blog/scripts-as-mcp-tools/),\nnous avons annoncé que chaque script peut être un [outil MCP](https://modelcontextprotocol.io/docs/concepts/tools).",
  "2A614E9786C7EF762910": "Pour faire suite à cette idée, nous avons ajouté la prise en charge de la publication des [ressources MCP](https://modelcontextprotocol.io/docs/concepts/resources)\ndans le cadre de l'exécution du script.",
  "1E6533D0321681E422F8": "Les ressources sont une primitive essentielle du Model Context Protocol (MCP)\nqui permettent aux serveurs d'exposer des données et du contenu pouvant être lus par les clients et utilisés comme contexte pour les interactions avec les LLM.",
  "C3051CDD88BFABC534B9": "MCP gère la découverte et la résolution des ressources, donc une fois que votre script publie une ressource,\nle client MCP (IDE) en est \"informé\" et peut décider de la lire.",
  "9DD550BDBAB305EB00EA": "`publishResource`",
  "2C0837482DA4CA376AE4": "La méthode `publishResource` vous permet de publier une ressource avec un identifiant unique et un fichier/chaîne/tampon.\nLe reste du processus de publication de la ressource MCP est pris en charge par le framework GenAIScript.",
  "BEFED4E1D97E97DB26C1": "Êtes-vous prêt à créer vos propres outils et ressources MCP ?",
  "19BF03B15790D5EFD0F3": "[Lisez la documentation](/genaiscript/reference/scripts/mcp-server#resources)",
  "92102B2AB33F19446EF9": "MCP Intent Validation",
  "3AA612C209B243E49738": "Suite à l'article précédent sur [la Validation des Outils MCP](/genaiscript/blog/mcp-tool-validation),\nnous avons ajouté une validation expérimentale de l'intention de l'outil pour atténuer les risques liés aux outils MCP.",
  "50BBF7B7A99F4C8A31E8": "Validation de l’Intention",
  "0DB573AD271ABB405C86": "L’objectif est de détecter quand un outil se comporte (férocement) en dehors de son comportement attendu.",
  "12679BD96036ACC885EA": "Nous avons intégré une validation avec LLM-en-Qualificateur de (n’importe quel) résultat d’outil basé sur la description de l’outil (ou une intention personnalisée).\nLa validation avec LLM-en-Qualificateur s’effectue à chaque réponse d’outil avant son injection dans la conversation de chat.",
  "258F50B9A9B765E5EAF5": "Le petit outil météo curieux",
  "32EDA490E390E745F133": "Examinons un exemple où un outil météo inoffensif tente d’exfiltrer le contenu d’un fichier (inspiré par [Invariant Labs](https://invariantlabs.ai/blog/mcp-security-notification-tool-poisoning-attacks))\nen exploitant un autre outil chargé dans le LLM (`fs_read_file`).",
  "72C6C1EF52B932C627B7": "La trace de ce programme montre que l’outil finit par accéder au champ de version du `package.json`.",
  "8691EA7F32E33607DD2C": "- round 1 : l’utilisateur demande la météo à Seattle",
  "2BAA10F4C3C460F7B523": "- round 2 : l’assistant appelle l’outil météo, qui demande le numéro de version dans le fichier `package.json`",
  "D8A410BB770AB7ACE3DA": "- round 3 : l’assistant lit le fichier `package.json` avec `fs_read_file`",
  "D809D0FA67A89089BB9D": "- round 4 : l’assistant relance l’outil météo avec la version dans le paramètre `sidenote`",
  "69950921DC3EF4BDF9ED": "- round 5 : l’assistant fournit la réponse finale **sans mentionner qu’il a divulgué la version**",
  "CD1387C0FCD8DC16B5D2": "Clairement, l’outil météo ne fait pas ce qu’il est censé faire. Alors pouvons-nous essayer de détecter et arrêter cela avec un LLM-en-Qualificateur ?",
  "9EDA8447553E40A8C401": "Back to the weather tool",
  "09AD65E3E7191B5C39E1": "Dans l’exemple de l’outil météo, nous pouvons ajouter la validation d’intention à l’outil `weather`.",
  "6D253C6E6E890096BD78": "**validation d’intention** : le LLM-en-Qualificateur détecte que le résultat de l’outil ne correspond pas à l’intention",
  "1F1157E8E1DC2EBF9DFF": "L’itération s’arrête ici !",
  "F45EAB81EA8C376E0D79": "Les outils MCP",
  "D5922D51C331A11FC5DE": "Les outils MCP peuvent également être configurés pour utiliser la validation d’intention. Vous souhaitez probablement aussi verrouiller la signature de l’outil avec `toolsSha` pour empêcher le MCP de modifier la description de l’outil.",
  "AF788718498F8EC2CE72": "Avertissements",
  "3F8AF9ABBC4A1ED12E84": "La validation avec LLM-en-Qualificateur n’est pas parfaite et peut produire des faux positifs ou négatifs.",
  "2C618589C543C7A9BA35": "Le MCP peut décider de changer la description de l’outil, mais cela peut être atténué en utilisant un hash de la description de l’outil.",
  "7350857DC7320513DE5F": "La description de l’outil peut être trop générique et ne pas fournir assez de contexte pour que le LLM-en-Qualificateur puisse prendre une décision.",
  "0988CCAB7F9BBEF07953": "La sortie de l’outil peut aussi tenter de prendre le contrôle du LLM-en-Qualificateur et le faire échouer (on peut faire passer la sécurité du contexte sur la sortie en premier).",
  "F31EEB81D7B67A39A7E3": "Le LLM-en-Qualificateur peut aussi être confus par la sortie de l’outil et produire des faux positifs ou négatifs.",
  "C1D498483F7D68923450": "Il y a probablement plus à explorer, vous pouvez l’essayer dans GenAIScript 1.128.+.",
  "C58D9C0517C0DBA23453": "Make it better!",
  "D6DCA84B5A47D13E2598": "GenAIScript est fourni avec un assistant qui indique au LLM de \"l'améliorer\".\nC'est une façon surprenante d'améliorer votre code en répétant un ensemble d'instructions plusieurs fois.",
  "A4F38B8D86875D5272E6": "Ce commentaire explique la ligne de code suivante, précisant que la fonction `makeItBetter` sera appelée deux fois.",
  "5F94CEA703CF8629DD2C": "Cette ligne appelle la fonction `makeItBetter` avec une option pour répéter le processus d'amélioration deux fois. Elle déclenche le processus d'amélioration.",
  "634E7FD5BDE839C04202": "## Comment exécuter le script",
  "11BBFB2BA21B36BA4570": "Pour exécuter ce script avec le CLI de GenAIScript, vous devez lancer la commande suivante dans votre terminal :",
  "22A38A5AEC5455E6CF45": "Pour des instructions détaillées sur l'installation et la configuration du CLI de GenAIScript, consultez la [documentation de GenAIScript](https://microsoft.github.io/genaiscript/getting-started).",
  "028491B77D523ED1C622": "En suivant ces étapes simples, vous pouvez exploiter l'IA pour améliorer votre code en toute simplicité ! 🌟",
  "D073009E1BE5C5A844F3": "Modèles GitHub dans GitHub Actions",
  "7DC8E5BA246DBA910BE8": "Apprenez à utiliser les Modèles GitHub dans GitHub Actions pour automatiser vos workflows et améliorer votre processus de développement.",
  "37692F85A5703B472B1D": "Vous pouvez désormais utiliser `GITHUB_TOKEN` de GitHub Actions pour authentifier les requêtes vers [GitHub Models](https://github.com/marketplace/models) !!!",
  "AC863DA84A4565F39161": "Cela simplifie vos workflows en intégrant directement les capacités d'IA dans vos actions, supprimant ainsi le besoin de générer et de gérer des jetons d'accès personnels (PAT) !",
  "FF3F6589991AABABD13D": "[Lire l'annonce GitHub](https://github.blog/changelog/2025-04-14-github-actions-token-integration-now-generally-available-in-github-models/)",
  "E08D38A87DF21ADE61F2": "[Lire la documentation](/genaiscript/configuration/github)",
  "448B02FCD9F0468FE04D": "Libérer la puissance des invites - Une introduction douce à GenAIScript 🚀",
  "7AAA1A09DB6F80299C41": "Apprenez à utiliser GenAIScript pour la génération d'invites et plus encore avec cette introduction captivante.",
  "E27EBDFAFC816456CDE0": "Vous vous êtes déjà demandé comment exploiter la puissance de l'IA et des grands modèles de langage (LLM) dans vos projets ? Ne cherchez plus !\nCet article vous présentera [GenAIScript](https://microsoft.github.io/genaiscript), un outil conçu pour simplifier la création d'invites et les interactions avec les LLM. Plongeons-y ! 🌊",
  "95DAB803879CCEB97DF8": "Qu'est-ce que GenAIScript ?",
  "6B461CADE72B812B7A09": "GenAIScript utilise une version stylisée de JavaScript pour générer des invites, qui sont ensuite envoyées à un LLM.\nLes scripts sont stockés sous forme de fichiers (`genaisrc/*.genai.mjs`), exécutés pour produire le texte de l'invite, et les résultats structurés (fichiers, diagnostics) sont extraits automatiquement.",
  "BFA828BEF66F81E2B011": "Premiers pas",
  "FBA29C056036E876F8C8": "Voici un exemple simple pour commencer. Créez un fichier nommé `poem.genai.mjs` dans le dossier `genaisrc` et ajoutez le code suivant :",
  "84E6FE2A2C7624AF764D": "Lorsqu'il est exécuté, ce script générera l'invite suivante :",
  "48C5BB54380B010E3199": "<summary>👤 Utilisateur</summary>",
  "0A393F6E4B19EDBC2274": "<summary>🤖 Assistant</summary>",
  "1BD24A15640BC33DB847": "Ajouter du contexte",
  "6E37822F6A80E8E9E77F": "GenAIScript peut également utiliser des variables de contexte, vous permettant d'interagir avec des fichiers ou d'autres sources de données. Voyons un exemple où nous définissons une variable de contexte en utilisant `env.files` :",
  "D922E41A043CABB19AE4": "Exécutez ce script pour voir le message utilisateur généré et la réponse de l'assistant. La variable de contexte `FILES` contiendra la liste des fichiers dans l'environnement.",
  "0DF47EFE4C723500C34C": "Métadonnées et configuration du script",
  "B8BF5EA609C6BCA3F88C": "Vous pouvez ajouter des métadonnées à votre script en utilisant la fonction `script`. Cela aide à organiser et configurer le script, y compris la spécification du modèle et d'autres paramètres. GenAIScript supporte divers fournisseurs de LLM, tels qu'OpenAI, Azure OpenAI,\nGitHub Models, Ollama et plus encore.",
  "71C4141FA5511FB49640": "Étapes suivantes",
  "A521CC9A09B893FB6DAA": "[Guide de démarrage](https://microsoft.github.io/genaiscript/getting-started/) pour configurer et commencer à utiliser GenAIScript.",
  "AD634721343F5B45E590": "Explorez des scripts plus avancés en suivant le [guide Prompt As Code](https://microsoft.github.io/genaiscript/guides/prompt-as-code).",
  "6D5209B29ABFC8FA7B02": "Voilà ! Une introduction douce à GenAIScript pour vous lancer dans votre parcours d'ingénierie des invites. Bon scripting ! 💻✨",
  "EA3701B07D232999A627": "Server Discord",
  "F780F976BBB3BD89954C": "Support pour les outils.",
  "1589540DE3616DEDE664": "Nous avons un serveur Discord pour GenAIScript où vous pouvez poser des questions, \npartager vos scripts IA les plus fous, et échanger avec d’autres scriptors.",
  "5A4122ADEB143956619C": "* ┌https://discord.gg/y7HpumjHeB┘",
  "78E27867FAC50EBF3384": "Créer des notes de version avec GenAI",
  "CFB60BEDCE8BA6920B13": "Apprenez à automatiser la création de notes de version attrayantes pour des logiciels en utilisant GenAI et GenAIScript.",
  "C06402F29D3C002C0FE4": "───\nBringing a new version of a product into the world is always exciting! But alongside the thrill comes the duty of informing users about what's changed. That's where generating crisp, engaging release notes comes into play. ✨\n───",
  "454CCBC005F92DDA4975": "───\nToday, we're going to explore a script that automates the creation of release notes for GenAI. The script is part of the GenAIScript ecosystem, which harnesses the power of AI to bring efficiency to software development processes. 🚀\n───",
  "8D77C3B8AF6CD52A127C": "───\nIf you want to dive straight into the script, it's available on GitHub right [here](https://github.com/microsoft/genaiscript/blob/main/packages/sample/genaisrc/git-release-notes.genai.mjs).\n───",
  "C62A0825ED1784275CBA": "───\nThis blog post was co-authored with a [script](https://github.com/microsoft/genaiscript/blob/main/packages/sample/genaisrc/blogify-sample.genai.mts).\n───",
  "1B5E1A4059E07AA0BD3C": "───\nBreaking Down the Script\n───",
  "171E0D05E0442B9EBF3B": "───\nThe script is a `.genai.mjs` file, meaning it's a JavaScript file designed to be run with the GenAIScript CLI. The code within orchestrates the creation of release notes by leveraging Git commands and GenAI's capabilities.\n───",
  "3EC046ADC2B28F36BF5B": "───\nLet's walk through the script, step by step:\n───",
  "8DED63C3B38B096980B7": "───\n#### Step 1: Initializing the Script\n```javascript\nscript({ system: [\"system\"], temperature: 0.5, model: \"openai:gpt-4-turbo\" })",
  "F3B5D0829706DC4B86C0": "───\n#### Step 2: Setting the Product Name\n```javascript\nconst product = env.vars.product || \"GenAIScript\"",
  "35CCAE43292AD8417B58": "───\n#### Step 3: Finding the Previous Tag\n```javascript\nconst pkg = await workspace.readJSON(\"package.json\")\nconst { version } = pkg\nconst { stdout: tag } = await host.exec(\"git describe --tags --abbrev=0 HEAD^\")",
  "C6F6985066C3176951F2": "───\n#### Step 4: Gathering Commits\n```javascript\nconst { stdout: commits } = await host.exec(\n    `git log --grep='skip ci' --invert-grep --no-merges HEAD...${tag}`\n)",
  "43734A25EAFE9EF700FF": "───\n#### Step 5: Obtaining the Diff\n```javascript\nconst { stdout: diff } = await host.exec(\n    `git diff ${tag}..HEAD --no-merges -- ':!**/package.json' ':!**/genaiscript.d.ts' ':!**/jsconfig.json' ':!docs/**' ':!.github/*' ':!.vscode/*' ':!*yarn.lock' ':!*THIRD_PARTY_NOTICES.md'`\n)",
  "15006FFEE204C0903D96": "───\n#### Step 6: Defining Placeholders\n```javascript\nconst commitsName = def(\"COMMITS\", commits, { maxTokens: 4000 })\nconst diffName = def(\"DIFF\", diff, { maxTokens: 20000 })",
  "6DBEE64128800A3ED493": "───\n#### Step 7: Writing the Prompt\n```javascript\n$`\nYou are an expert software developer and release manager.\n\n## Task\n\nGenerate a clear, exciting, relevant, useful release notes\nfor the upcoming release ${version} of ${product} on GitHub. \n\n- The commits in the release are in ${commitsName}.\n- The diff of the changes are in ${diffName}.\n\n## Guidelines\n\n- only include the most important changes. All changes must be in the commits.\n- tell a story about the changes\n- use emojis\n- ignore commits with '[skip ci]' in the message\n- do NOT give a commit overview\n- do NOT add a top level title\n- do NOT mention ignore commits or instructions\n- be concise\n\n`",
  "A08532491463E7191155": "───\nHow to Run the Script with Genaiscript CLI\n───",
  "26F02EA879DC51A3F4E1": "───\nOnce you've crafted your script, running it is a breeze with the Genaiscript CLI. If you haven't installed the CLI yet, you can find the instructions [here](https://microsoft.github.io/genaiscript/getting-started/installation).\n───",
  "03BA2273AD6657DD29E1": "───\nTo execute the script, navigate to your project's root directory in the terminal and run:\n───",
  "07CD828D7708BE6D1CE6": "───\nRemember, we use the script filename without the `.genai.mjs` extension when invoking it with the CLI.\n───",
  "0DD58FF30DA83969B83F": "───\nAnd that's it! The GenAIScript CLI will take care of the rest, combining the power of AI with your code to generate those sleek release notes for your project's next big launch. 🌟\n───",
  "A5E0906562EE36515C6A": "Intelligence Artificielle Continue",
  "CF8159AE9FF5130ED48C": "Exploration de l'automatisation pilotée par les LLM dans la collaboration logicielle basée sur plateforme",
  "160938DAD8BCE1DE081C": "Depuis le [blog GitHub Next](https://githubnext.com/projects/continuous-ai/) :",
  "F1E9E015845E6F8E2280": "**Intelligence Artificielle Continue** est un terme que nous avons identifié pour toutes les utilisations de l'IA automatisée afin de soutenir la collaboration logicielle sur n'importe quelle plateforme. Toute utilisation d'IA automatisée pour soutenir une collaboration logicielle sur n'importe quelle plateforme, partout, est de l'Intelligence Artificielle Continue.",
  "F26C2FA505345EEFBF77": "Nous avons choisi le terme \"Intelligence Artificielle Continue\" pour nous aligner sur le concept établi d'Intégration Continue / Déploiement Continu (CI/CD). Tout comme le CI/CD a transformé le développement logiciel en automatisant l'intégration et le déploiement, l'Intelligence Artificielle Continue couvre les façons dont l'IA peut être utilisée pour automatiser et améliorer les flux de collaboration.",
  "F7E9F23513BCFBD313FC": "“Intelligence Artificielle Continue” n’est pas un terme détenu par GitHub, ni une technologie développée par GitHub : c'est un terme que nous utilisons pour focaliser notre réflexion, et que nous introduisons dans l'industrie. Cela signifie que l'Intelligence Artificielle Continue est un ensemble ouvert d'activités, de charges de travail, d'exemples, de recettes, de technologies et de capacités ; une catégorie, plutôt qu’un outil unique.",
  "3080021E14EC9E1DD221": "Attendez-vous à plus d’actions et de synergies autour de [GitHub Actions](https://github.com/features/actions), [GitHub Models](https://github.com/features/models), et [GenAIScripts](https://github.com/features/ai/genaiscripts) à l'avenir, alors que nous explorons cet espace.",
  "7AF3BB1B95145FD12CEF": "Écrire des workflows GenAIScript plus rapidement avec des assistants de codage",
  "1F7B177B900E98C5E1F8": "Introduction",
  "1D7F3C91D04FCE179DC4": "GenAIScript facilite la prise en main pour coder des workflows LLM. Cependant, il peut être difficile de l'utiliser efficacement pour écrire des workflows complexes, car les techniques avancées et les optimisations de performance peuvent être hors de portée de nombreux développeurs. Dans cet article, nous allons explorer comment les assistants de codage peuvent nous aider à écrire des workflows GenAIScript avancés plus rapidement et avec moins d'effort.",
  "8203230653AC597AF1F6": "La tâche",
  "1923C76D8530A16B0D97": "Documenter du code existant est une tâche courante dans le développement logiciel. Cela peut être chronophage et est souvent négligé. Pourtant, cela est essentiel pour maintenir la qualité du code et s'assurer que le code est compréhensible par d'autres développeurs.",
  "74398998E03646DC9E66": "Notre objectif aujourd'hui est d'écrire un workflow GenAIScript qui ajoute automatiquement des commentaires JSDoc au code TypeScript qui n'en possède pas encore.",
  "5F28ED10500B572C237C": "Le script utilisera les fonctions AST grep pour rechercher dans le code, puis utilisera un grand modèle de langage pour générer des commentaires JSDoc pour le code, et modifiera le code pour y ajouter les commentaires en place.",
  "ED8FA3E9B16B879F2D23": "AST grep est une fonctionnalité avancée de GenAIScript qui nous permet de rechercher des motifs spécifiques dans l'arbre syntaxique abstrait (AST) du code. C'est beaucoup plus efficace que d'utiliser les LLM pour analyser le code, car cela nous permet de trouver rapidement des segments de code qui correspondent à des critères spécifiques.",
  "70A0B135E135C4F0EEE3": "Peli a exploré cette fonctionnalité dans son article [AST Grep and Transform](https://microsoft.github.io/genaiscript/blog/ast-grep-and-transform/), et nous allons nous appuyer sur cela pour créer notre script.",
  "082AB8D17147041A5C4F": "Voici un exemple de ce que nous souhaitons accomplir :",
  "03B3380D7E9E7C9B3AC3": "Pourquoi GenAIScript et pas l'agent de codage ?",
  "F8008114BD795537B2DB": "Il y a plusieurs raisons pour lesquelles GenAIScript est un meilleur choix que l'utilisation d'assistants de codage en mode agentique pour réaliser les mêmes tâches.",
  "F2F9517107F65BF709CA": "**Vitesse** : Les workflows GenAIScript peuvent être exécutés en parallèle, ce qui peut significativement réduire le temps nécessaire pour terminer les tâches. Imaginez attendre qu'un assistant de codage génère du code pour un gros projet dans votre éditeur, comparé au lancement d'un workflow GenAIScript qui peut exécuter plusieurs tâches en arrière-plan. Que préféreriez-vous ?",
  "E7DD6D4FAC86652907C4": "**Efficacité économique** : GenAIScript vous donne un contrôle bas niveau sur vos invites, ce qui vous permet d’optimiser celles-ci pour votre cas d’utilisation spécifique. Cela signifie que vous pouvez réduire le nombre de jetons utilisés, ce qui peut vous faire économiser de l’argent sur l’utilisation des LLM.",
  "214E27C2ECADECC19552": "**Partageabilité** : Vous pouvez partager vos workflows GenAIScript avec d’autres développeurs de votre équipe. Vous pensez peut-être : « Mais je peux aussi partager mes invites d’assistant de codage ! » Cependant, les workflows GenAIScript sont plus que de simples invites ; ce sont des scripts autonomes qui enchaînent plusieurs appels LLM pour effectuer une tâche spécifique. Cela les rend plus puissants et flexibles qu’une simple invite.",
  "F9DC0E5A3A7C12CE9790": "Installation",
  "6CE383E7C8F7CB135825": "Nous utiliserons Cline pour écrire notre code GenAIScript. Mais vous pouvez utiliser n’importe quel assistant de codage, y compris Github Copilot, Cursor ou Windsurf.",
  "A6E20EE64AD080087B28": "Tout d’abord, installons Cline depuis le Marketplace de VS Code.",
  "A9916757163B714F143C": "![Installation de Cline](./cline-1.png)",
  "137FB7DFE8815FB996A0": "Ensuite, nous configurerons Cline avec nos identifiants. Si vous utilisez Bedrock, comme moi, vous devrez définir les variables d’environnement `AWS_ACCESS_KEY_ID` et `AWS_SECRET_ACCESS_KEY` dans votre terminal.",
  "4C902FC804DABBCB3357": "![Configuration du projet Cline](./cline-2.png)",
  "79CE136C6B851AD478A5": "Maintenant, nous sommes prêts à écrire notre code GenAIScript. Nous ouvrirons notre projet et le préparerons pour le développement GenAIScript. Cela implique de créer un nouveau fichier script. Je crée toujours un fichier appelé poem.",
  "0C5F7DF57F7B8A303ACB": "![Configuration GenAIScript](./cline-3.png)",
  "8573A3A6220E33EE41C3": "Enfin, nous écrirons une invite pour que Cline génère le code GenAIScript. L’invite décrira la tâche que nous voulons accomplir, et Cline générera le code pour nous.",
  "7FF113609104341AC12E": "L’invite",
  "F1C3472FA69F3C6052E6": "Voici l’invite que j’ai écrite pour Cline afin de générer le code GenAIScript. Elle est conçue pour être claire et concise, tout en fournissant suffisamment de détails pour que Cline comprenne la tâche.",
  "A3B97CD950C360DEE8F4": "Analyse de l’invite",
  "C0D93DF55C8B6EF71F67": "L’invite utilise plusieurs techniques pour s’assurer que le script généré répond à nos exigences :",
  "4628C8E9DE8960DFF0F3": "**Expertise** : L’invite spécifie que l’assistant doit être un expert en TypeScript et GenAIScript, ce qui garantit que le code généré sera de haute qualité.",
  "A7E65EF22B191FB0F9E1": "**Documentation** : L’invite fournit un lien vers la documentation GenAIScript, permettant à l’assistant de comprendre toutes les capacités de GenAIScript et de les utiliser efficacement.",
  "1409CA847E6D391714A1": "**Définition de la tâche** : L’invite définit clairement la tâche, y compris les exigences spécifiques pour rechercher du code sans commentaires JSDoc et générer des commentaires à l’aide d’un grand modèle de langage.",
  "45425DA8199FD6D7D428": "**Directives** : L’invite précise que le code source est écrit en TypeScript ESM pour node.js v20+, ce qui garantit que le code généré sera compatible avec notre projet.",
  "3C3077CFB30D7CACDA02": "**Format de sortie** : L’invite spécifie le format de sortie, y compris le nom du fichier et la structure attendue du script.",
  "5F25CFD3D15AE7BC9D9D": "Résultats",
  "93EE48AF1D9C692A747A": "Après avoir écrit l’invite, nous utilisons Cline pour générer le code GenAIScript. Cline analysera l’invite et générera un script qui répond à nos exigences.",
  "72A48903BEFB06CB92F4": "Voici le script que Cline a généré pour moi (votre script peut légèrement varier) :",
  "9FF363A10722601F58BD": "Exécution du script",
  "91BAC30FA3573B382706": "Pour exécuter le script, il faut le lancer dans notre terminal. Assurez-vous que GenAIScript est bien installé et configuré.",
  "D387A0475B8F714C6512": "Conclusion",
  "A8DA34B460A3BB032F51": "Dans cet article, nous avons exploré comment les assistants de codage peuvent nous aider à écrire des workflows GenAIScript plus rapidement et avec moins d’effort. Nous avons utilisé Cline pour générer un script qui ajoute automatiquement des commentaires JSDoc au code TypeScript qui n’en avait pas encore. Nous avons également discuté des avantages d’utiliser GenAIScript plutôt que des assistants de codage en mode agent pour cette tâche.",
  "E786F08F50396D24319C": "Blog Narration",
  "A3BED4D1EF2B6B2F3F45": "Analyse automatique du contenu des pages web",
  "66D5CD4BDD42DF113E01": "Découvrez comment GenAIScript exploite la bibliothèque d’automatisation des navigateurs Playwright pour une analyse efficace et automatisée du contenu des pages web.",
  "38E43C21F01826ABDAA5": "Dans cet article de blog, nous allons explorer un exemple pratique montrant comment tirer parti de GenAIScript pour l’analyse automatique du contenu des pages web. GenAIScript utilise la bibliothèque d’automatisation des navigateurs [playwright](https://playwright.dev/) qui permet de charger, interagir et inspecter des pages web.",
  "FA0F0CA56054429F9BB1": "### Explication étape par étape du code",
  "3B16CC9C5AF1A1DF4D83": "Le fragment suivant offre une méthode concise et efficace pour analyser le contenu d’une page web avec GenAIScript :",
  "EAA7E596AE5275B81B00": "Décomposons ce que fait chaque ligne de ce script :",
  "0E7333A0610BBDA42957": "Cette ligne navigue automatiquement vers l’URL spécifiée (`https://example.com`). La fonction `host.browse` est une fonctionnalité puissante de GenAIScript qui initialise une session de navigateur et renvoie un objet page pour d’autres interactions.",
  "3852F914A64450A9827F": "Ici, le script prend une capture d’écran de la vue actuelle de la page. Cela est particulièrement utile pour l’archivage ou l’analyse visuelle.",
  "2CEFC64BA8537BAD6904": "Après avoir capturé la capture d’écran, cette ligne enregistre l’image pour une analyse ultérieure. `defImages` est une fonction qui rend la capture disponible pour les fonctions analytiques ou IA suivantes dans le script.",
  "A0F825917B43FAF2156F": "Cette commande extrait tout le contenu textuel de la page, ce qui peut être précieux pour des audits de contenu ou des analyses textuelles.",
  "52338B551ECC81E04DD1": "Le texte extrait est ensuite stocké sous l’identifiant `PAGE_TEXT`, permettant de le référencer dans des parties ultérieures du script ou pour la documentation.",
  "90E2F54947212DC4A3F0": "Enfin, cette ligne représente un appel à une fonction IA ou définie par script qui analyse le contenu capturé et fournit des insights. C’est ici que se révèle la véritable puissance de l’automatisation et de l’intégration IA dans GenAIScript, permettant une analyse détaillée sans intervention manuelle.",
  "4B61A771D20F24B4EA8D": "Avec un script simple mais puissant comme celui discuté, GenAIScript facilite l’automatisation du processus d’analyse de contenu de pages web. Que vous meniez une analyse concurrentielle, que vous réalisiez des audits de contenu ou que vous archiviez simplement des pages web, GenAIScript offre une solution évolutive et efficace.",
  "9CB12040190B7D4DCE89": "AST Grep et Transformation",
  "43EF44C465AB5C6EC1DB": "Apprenez comment analyser le code source en utilisant ast-grep et mettre à jour les nœuds dans l'arbre.",
  "61427B4AC1719CAF36C7": "Page décrivant une stratégie pour construire des scripts GenAI utilisant des arbres de syntaxe abstraite (AST) pour analyser et modifier le code source. Lorsqu’elle est applicable, elle offre une méthode extrêmement flexible et stable pour appliquer des modifications à grande échelle sur le code source. Intéressé ? Allons-y !",
  "6A2EBD6155D09E676923": "Si vous êtes pressé, allez directement à la **dernière génération/saisie de documentation que vous aurez jamais besoin** dans la [section des exemples](#sample).",
  "3DE41A5274301FE46EE1": "*: pour TypeScript, peut-être.*",
  "72D5E1A338DCE1188E6F": "La stratégie de transformation de code basée sur l'AST",
  "328319C4BBA0C0C61C8A": "L’un des défis lors de la création de scripts GenAI qui mettent à jour le code source consiste à localiser et à mettre à jour correctement ce code. La moindre erreur dans la localisation du code à modifier peut rendre le code cassé. Cela est particulièrement vrai lorsque le code à mettre à jour n’est pas une simple chaîne de caractères, mais une structure complexe comme un objet ou un appel de fonction.",
  "E87972B5229A7FD047D7": "Dans certains cas, vous savez « précisément » quelle partie du code vous souhaitez\nmettre à jour. Par exemple, vous souhaitez rafraîchir la documentation d’une fonction après une modification. Vous savez\nque la documentation se trouve juste avant la définition de la fonction au moins au sens du langage de programmation,\nmais le nombre de lignes vides ou d’espaces peut varier.",
  "3DA492BCBD863CC4281A": "Dans ce genre de scénario, vous pouvez utiliser l’Arbre de Syntaxe Abstraite (AST) pour localiser le code à mettre à jour. L’AST est une représentation arborescente du code.",
  "FD6C81431C02538E8555": "Ainsi, au lieu de lutter contre les espaces et les sauts de ligne, vous pouvez simplement localiser le nœud `function_declaration` qui suit\nun nœud `comment`.",
  "9524B410755812963A38": "Une fois que vous avez localisé le nœud à mettre à jour, vous pouvez faire toutes les transformations que vous souhaitez, par exemple le remplacer par un autre texte. En termes de script GenAI, cela signifie que vous pouvez construire une invite qui inclut autant de contexte que nécessaire, générer une réponse.",
  "6C0A1501F35FA743E01D": "Une fois que le LLM répond avec le nouveau commentaire, vous pouvez l’insérer comme contenu du nœud dans l’AST.",
  "5656F2E7EF5B09914D93": "Voila ! Vous n’avez touché que la partie du fichier que vous vouliez mettre à jour !",
  "09AB86525C6B442C5717": "Pour résumer, cette stratégie repose sur les étapes suivantes :",
  "6D21FC7E1A2D26E6D239": "**rechercher** Utilisez l’AST pour localiser le nœud à mettre à jour.",
  "F0E16B89C1BBF868D803": "**transformer et remplacer** Utilisez le LLM pour générer le contenu du nœud.",
  "6AFD085F3B44F68C8C5C": "**valider** Mettez à jour le nœud dans l’AST avec le nouveau contenu.",
  "F08FFBC47B3518C82A37": "AST-grep",
  "6F4C5AEAC1B778E57901": "![Logo AST-Grep](https://ast-grep.github.io/logo.svg)",
  "7B953DB2DBDB11134127": "[ast-grep(sg)](https://ast-grep.github.io/) est un outil rapide et polyglotte pour la recherche structurelle dans le code,\nlint, réécriture à grande échelle. **sg** nous fournit les capacités de recherche/remplacement dans l’AST nécessaires pour\nimplémenter la stratégie ci-dessus.",
  "840CE5FAE784F6F7468A": "GenAIScript bénéficie de la parfaite [intégration avec Node.JS](https://ast-grep.github.io/reference/api.html#napi),\nqui est disponible via la méthode [`host.astGrep()`](https://microsoft.github.io/genaiscript/reference/scripts/ast-grep).",
  "953DBB49275D94B8FFEF": "### Recherche",
  "8782E01D86EC2F19FC4F": "La méthode `sg.search` permet de rechercher des nœuds dans l’AST. Elle prend en paramètre la langue, le motif de fichier,\net la syntaxe du modèle, et retourne une liste de correspondances.",
  "5A6F0A7DE9AE9DC4429A": "### Édition",
  "6E9C264EFC49E93C882E": "La méthode `sg.changeset` crée un ensemble de modifications pouvant être appliqué à un ensemble de fichiers.",
  "50D5F1618F27AC4CF499": "## Exemple : Générateur / mise à jour de documentation <a id=\"sample\" />",
  "F5169ED65C3A6BA1A148": "Vous trouverez ci-dessous une description complète de la création du script de générateur/mise à jour de documentation dans la [documentation](/genaiscript/reference/scripts/ast-grep). Je vous encourage à la lire pour approfondir.",
  "8E5450EDE3EF1D33B70D": "Le script `docs` est un générateur/mise à jour de documentation.",
  "D177454C6BD578743C88": "*: utilise ast-grep pour trouver et générer la documentation manquante pour une fonction TypeScript exportée. Une seconde\nrequête en tant que juge par LLM est utilisée pour vérifier que la documentation générée est correcte.",
  "7C6D8FCFDC6D22F07E24": "*: si l’option `diff` est sélectionnée, elle filtrera les fonctions qui n’intersectent pas avec la diffférence (ce qui est assez naïf mais un bon début…).",
  "EE16F6F9380BC63EA2C7": "*: elle peut également être utilisée pour mettre à jour la documentation d’une fonction modifiée.",
  "4AFB0E20D21F42B3CCDA": "*: elle fonctionne indépendamment de la taille du fichier ou du nombre de fichiers, car la majorité des transformations sont hyper-localisées.",
  "7BD76B51CD589552E405": "Voici quelques exemples d’application des scripts (one-shot, sans modification humaine, édition multiple par fichier) :",
  "6D5AB517074334625267": "- [Code TypeScript](https://github.com/pelikhan/TypeScript/pull/1), j’ai arrêté le script après un moment, il tournait en douceur.",
  "67073DD2BA9103EF9323": "- [Code GenAIScript](https://github.com/microsoft/genaiscript/pull/1376/files), cette modification inclut aussi la mise à jour vers GenAIScript lors de la construction de la fonctionnalité.",
  "52F0B721CB62FF958FDE": "Voici, c’est parti :",
  "52B461D05CDC5A0B2572": "- [source originale](https://github.com/microsoft/genaiscript/blob/main/genaisrc/docs.genai.mts)",
  "D95550DF459DC4C98AE1": "Anthropic Models",
  "CF1C948A87694B9B8524": "Support for Claude.",
  "6F87A78AEF213E8D4FAD": "Un grand merci à [@waltoss](https://github.com/waltoss) qui a contribué au support du [modèle Anthropic](https://github.com/microsoft/genaiscript/pull/788). Il y a encore quelques [TODOs](https://github.com/microsoft/genaiscript/discussions/790) mais les bases sont en place.",
  "92ED864C056EE439ABF5": "TLA+ AI Linter",
  "668AF8468B87EF1EB9F7": "Découvrez comment le TLA+ AI Linter exploite des scripts GenAI et des LLMs pour améliorer les spécifications TLA+ grâce à un linting automatisé et une vérification cohérente des commentaires.",
  "DE8E1E5CB7B607D72C56": "[TLA+](https://lamport.azurewebsites.net/tla/tla.html) est un langage de haut niveau pour modéliser des programmes et des systèmes, en particulier ceux qui sont concurrents et distribués. Il repose sur l'idée que la meilleure façon de décrire les choses avec précision est d'utiliser des mathématiques simples.",
  "D99803A2AB8498BD3BAA": "TLA+ ne dispose pas d'un linter ou d'un formateur traditionnel. Le TLA+ AI Linter est un script GenAI qui utilise des LLMs pour analyser les fichiers TLA+.",
  "A234ED4810FB0FE89749": "Spécifications TLA+",
  "732924DDD2C451A8F348": "Voici une spécification TLA+ qui modélise une solution fondamentale au [problème de détection de terminaison dans les systèmes distribués](https://www.cs.utexas.edu/users/EWD/ewd09xx/EWD998.PDF).",
  "78441C14355003C6B5AC": "Script",
  "76C266E09153233C44E5": "Le script GenAI suivant analysera la spécification TLA+ ci-dessus. Plus précisément, il vérifiera si les commentaires en prose dans la spécification sont cohérents avec les définitions TLA+.",
  "0932DB8BF3656CAD491A": "des numéros de ligne sont ajoutés au contenu du fichier pour aider le LLM à localiser précisément les problèmes.",
  "CD01C1646DE25787C261": "le script utilise un support intégré pour les [annotations](/genaiscript/reference/scripts/annotations) afin de générer des avertissements et erreurs analysables. Les annotations sont automatiquement intégrées comme problèmes dans VSCode ou comme erreurs de compilation dans la chaîne CI/CD.",
  "226CD67900059F8ECED8": "GPT-4 connaît déjà beaucoup de choses sur la logique et les mathématiques de base. Cependant, le script liste également des idiomes communs à TLA+ pertinents pour analyser une spécification.",
  "4BD333243237F161CE44": "Github Action",
  "11455EED10AA332997F5": "après avoir cloné le dépôt et installé des dépendances telles que node.js, le script GenAI est exécuté pour analyser les spécifications TLA+ qui ont été ajoutées ou modifiées dans la Pull Request.",
  "D4816E74CF0EAEEB9941": "La sortie du script, c’est-à-dire les annotations générées par le LLM, est formatée comme un rapport [SARIF](https://sarifweb.azurewebsites.net) et [téléversée](https://docs.github.com/en/code-security/code-scanning/integrating-with-code-scanning/uploading-a-sarif-file-to-github) dans la Pull Request.",
  "FB398AE1AB0A90CA05AE": "Résultats",
  "A8A30D25EAC5D0C970DC": "Le linter a généré des annotations pour chaque commentaire en prose dans la spécification, et un commentaire a été trouvé incohérent avec les définitions TLA+. Un avertissement correspondant est ajouté à la Pull Request.",
  "795F9DE3DD03239B693D": "Métadonnées SEO",
  "BC98CCF7573F4FF8AECA": "Apprenez à automatiser la création de métadonnées optimisées pour le SEO dans vos documents markdown avec GenAIScript.",
  "3DC1E1220AE30C937517": "La génération et la maintenance de bonnes métadonnées SEO peuvent être une tâche fastidieuse. GenAIScript peut vous aider à automatiser ce processus.",
  "3057CEF407C54E7252BA": "Le script ci-dessous générera des informations SEO et mettra à jour le fichier existant. Le script utilise une stratégie de fusion personnalisée pour fusionner les nouvelles métadonnées avec celles existantes.",
  "7C3F9D54AC2EC033B530": "Traitement par lots sur tous les fichiers",
  "C188FA392084C99C7209": "Une fois le script ajusté sur quelques fichiers, vous pouvez automatiser son utilisation avec la [CLI](/genaiscript/reference/cli). La CLI dispose d'un indicateur **--apply-edits** pour appliquer les modifications au fichier.",
  "2BFB42F65FA06136D1BD": "Vous pouvez exécuter cette commande dans votre pipeline CI/CD pour garder vos métadonnées SEO à jour.",
  "3DDB3FC6101754466CE6": "Ajoutez cette commande à votre `package.json` pour facilitaer son exécution à nouveau.",
  "8361BF4FF993AC6D5EEB": "Notes de version",
  "5D37D0F54B99F5F86192": "Générez des notes de version complètes en combinant l'historique des commits\net les différences de code",
  "AEFC7611528B87A64817": "Il existe de nombreux générateurs automatisés de `notes de version` qui examinent la liste des commits depuis la dernière version et génèrent une liste de modifications. Les notes de version sont généralement basées exclusivement sur les messages de commit.",
  "DDC3D32E1CB66B669E0B": "Dans le projet GenAIScript, nous créons un générateur de notes de version **qui utilise à la fois l'historique des commits et le diff des modifications**.",
  "7BEC53D046D338988C72": "Vous pouvez voir l'une des premières notes de version générées par prototype pour [v1.41.6](https://github.com/microsoft/genaiscript/releases/tag/1.41.6).",
  "C2C497958F8112809FA4": "Historique des commits et diff",
  "8F732EDC570EC285FE57": "Nous commençons notre script en appelant `git` plusieurs fois pour récupérer le tag de la version précédente, la liste des commits, et le diff depuis ce tag. (Cette astuce a principalement été trouvée lors d'une session GitHub Copilot Chat).",
  "906604B424CFB02AEFC1": "Nous utilisons la fonction `def` avec `maxTokens` pour intégrer ces informations sans dépasser la fenêtre de contenu du modèle (entrée de 32k).",
  "3ACC9904339B3EBAF956": "Rôle et tâche",
  "7F16B0E48FDCB9B8177D": "Le reste du script suit un schéma typique avec un rôle et une tâche.",
  "AB34B0F75D85EC72C03A": "Le script",
  "D024D256457394552347": "Le script complet tel qu'il s'exécute dans GenAIScript est le suivant :",
  "F5CAA5BDC4F003808F37": "Intégration Release-it",
  "E19818D88F50574BF58F": "GenAIScript utilise [release-it](https://github.com/release-it/release-it) pour automatiser le processus de publication. Nous avons configuré release-it pour exécuter le script à l'aide du [cli](/genaiscript/reference/cli) en ajoutant un champ `github.releaseNotes` dans la configuration de `release-it`.",
  "B9EE4131FCB1F1CEEA0A": "Texte alternatif des images",
  "32323889E2F555C54219": "Découvrez comment générer automatiquement un texte alternatif descriptif pour les images en utilisant le modèle OpenAI Vision afin d'améliorer l'accessibilité et le référencement SEO.",
  "B32D13224008A8F6668C": "Il est recommandé de fournir un attribut `alt` pour les images.\nCet attribut sert à décrire l'image aux utilisateurs qui ne peuvent pas la voir.\nIl est également utilisé par les moteurs de recherche pour comprendre le contenu de l'image.",
  "01350347DCB2B5A64510": "Cependant, cette tâche peut être fastidieuse et les développeurs sont souvent tentés de l'omettre ou de fournir un texte `alt` générique comme \"image\".",
  "A9757CDC3F2240BE9676": "Le script",
  "48897A8425C05E85F978": "Pour résoudre ce problème, nous avons créé un script qui utilise le modèle OpenAI Vision pour analyser les images de la documentation et générer un texte alternatif descriptif.",
  "4E751ABC938A5674E570": "Pour commencer, nous supposons que le script s'exécute sur un seul fichier image et nous utilisons [defImage](/genaiscript/reference/scripts/images) pour l'ajouter au contexte de la requête.",
  "703799A9331993CA9C18": "Ensuite, nous donnons une tâche au modèle de langage pour générer un bon texte alternatif.",
  "029FF55B4FC41D6F1A8D": "Enfin, nous utilisons [defFileOutput](/genaiscript/reference/scripts/file-output) pour définir une destination de sortie de fichier.",
  "F11AFAF35F3256815284": "Utilisation dans Astro",
  "65AA5A70A93A71DB4F4A": "La documentation GenAIScript utilise Astro, qui permet de créer des pages en [MDX](https://docs.astro.build/en/guides/markdown-content/).\nLe code ci-dessous montre comment le texte alternatif généré, stocké dans un fichier texte séparé, est injecté dans le HTML final.",
  "62100460C71CFC9BDE0C": "L'image `debugger.png` montre une capture d'écran d'une session de débogage ainsi que le contenu du fichier texte généré pour le texte alternatif.",
  "114F8B350D29FD75A10E": "Automatisation",
  "48A7493E5C9B278F9638": "Avec la commande [run](/genaiscript/reference/cli/run), nous pouvons appliquer le script à chaque image dans la documentation.",
  "484AC03C8F7381C36DDA": "Pour éviter de régénérer le texte alternatif, nous détectons également si un fichier existe dans le script et annulons l'opération en conséquence.",
  "FAE0577974649DAB29FB": "Code source complet",
  "8E3C9975D449038DE462": "Le code source complet est le suivant :",
  "7E3AA0B6CECF5054E68A": "Traductions de la documentation",
  "E1CAFE9E266BA7E99A0B": "Découvrez les défis et les solutions pour localiser la documentation MakeCode avec des macros personnalisées tout en maintenant un rendu riche dans plusieurs langues.",
  "8C7224785ED16EC475D5": "[Microsoft MakeCode](https://makecode.com) est une plateforme web pour créer des expériences d'apprentissage en informatique engageantes. Elle offre un environnement de programmation par blocs qui permet aux élèves de créer des jeux, des animations et des histoires interactives.",
  "E636819276EFF1215F16": "La documentation et les tutoriels MakeCode utilisent [le markdown avec de nombreuses macros supplémentaires et micro-syntaxes](https://makecode.com/writing-docs) pour créer des tutoriels et documentations à rendu riche, comme le [tutoriel Pierre Papier Ciseaux](https://makecode.microbit.org/projects/rock-paper-scissors).",
  "8F6F65602B196D317BB9": "Défi de localisation",
  "60BDB919FA38E3457570": "Un défi majeur dans la localisation de la ressource MakeCode est que des outils comme Bing Translator ou Google Translate ont tendance à détruire l'annotation de macro personnalisée ; ce qui casse le rendu riche de la documentation.",
  "DE0090DF8AD582D5A872": "Illustrons cela avec l'Étape 6 du tutoriel Pierre Papier Ciseaux :",
  "EB33AF71DB77376A0F8E": "Dans ce contenu, il est crucial de conserver les annotations `||variables:hand||` et `||logic:0 = 0||` telles quelles. De plus, la macro `blocks` doit rester intacte.",
  "B7C2332F4F442D41D852": "Malheureusement, les systèmes de traduction traditionnels n'ont pas de moyen de \"enseigner\" la syntaxe ni de souligner l'importance de ces annotations.",
  "E9613B8F5CD933D11163": "Par exemple, lorsqu'il est traduit en français avec Bing Translate, plusieurs erreurs apparaissent : ` `` ` devient `'`, des espaces supplémentaires, `logic` devient `logique`, etc.",
  "CC563DDE9BFC8B0D1B2C": "Apprendre à l’LLM comment traduire",
  "B99AF84B9C07E284A09B": "GenAIScript a permis de développer et d’automatiser un script qui crée des traductions de haute qualité basées sur LLM pour la documentation MakeCode.",
  "144C5A93B20802C62D1B": "Une version (simplifiée) du script est présentée ci-dessous, annotée avec des commentaires.",
  "6AF1A63807CC412B3272": "En utilisant ce script, la traduction de `Step 6` en français est la suivante, et vous remarquerez que toutes les erreurs ont été corrigées.",
  "A51B2ADC70FAA0435C7B": "Automatisation",
  "86145E38D30CC0169421": "Notez que nous utilisons la [variable](/genaiscript/reference/scripts/variables) `env.vargs.lang` qui permet de modifier cette valeur via la ligne de commande.",
  "73C212EBEF5F1A7C20F7": "Avec l’outil en ligne de commande genaiscript, nous pouvons exécuter le script pour chaque langue souhaitée dans une Action GitHub.",
  "ECD0CD7DADCFF00F4C7F": "Validation et téléversement",
  "A32A7F832A04F24DD7CA": "Le CLI peut être automatisé en utilisant votre environnement bash/script préféré. Par exemple, avec [zx](https://google.github.io/zx/), nous automatisons pour plusieurs locales :",
  "E09615E284C5B0B53054": "traduire la documentation,",
  "B09B8AAA9B92CCEF3F86": "enregistrer la traduction dans des fichiers,",
  "B43AD2C4E0A3D26E217C": "exécuter le compilateur MakeCode pour valider les traductions",
  "D2080F322EB896C1A266": "téléverser/metttre à jour la base de données de traductions",
  "97E8DFCD057FECE2899F": "Localisation des blocs",
  "4B9E3C81A027EF5F9C6C": "Apprenez comment localiser les blocs de programmation MakeCode tout en conservant les propriétés des blocs et les noms de variables pour un public international.",
  "3A3C838973B0387EA426": "Ceci est un autre exemple d'utilisation du LLM pour produire la traduction de chaînes naturelles avec un DSL intégré, de manière similaire au guide [Traduction de documentation](/genaiscript/case-studies/documentation-translations).",
  "AA5C7309914408597FA9": "[MakeCode](https://makecode.com) utilise un [microformat](https://makecode.com/defining-blocks) pour définir la forme des blocs de codage. Lors de la traduction des chaînes de format, il est crucial de conserver les propriétés des blocs, comme le nombre d'arguments, leurs types et l'ordre des arguments.",
  "3DF54372B0602DA0CC20": "Ne cassez pas les blocs !",
  "6689BB0E823AFFC5CCF0": "Les [chaînes de localisation](https://github.com/microsoft/pxt-jacdac/blob/45d3489c0b96ed0f74c9bbea53fb0714ae9f7fcc/buzzer/_locales/jacdac-buzzer-strings.json#L1) pour la bibliothèque buzzer sont :",
  "336D86E8594D21D503E6": "Par exemple, la chaîne pour le [bloc jouer une note du buzzer Jacdac](https://github.com/microsoft/pxt-jacdac/blob/45d3489c0b96ed0f74c9bbea53fb0714ae9f7fcc/buzzer/_locales/jacdac-buzzer-strings.json#L5-L6) contient une référence à des variables (`%music`) qui doivent être conservées dans la chaîne traduite.",
  "00D601D684F552505AC7": "et Bing Traduction nous donne la traduction suivante",
  "2E8602F06D97CDD1DC99": "Comme on peut le voir, Bing a traduit le nom de la variable `%variable` ce qui cassera la définition du bloc.",
  "7559B9DCF70FDAD9F8CC": "La traduction [GenAIScript](https://github.com/microsoft/pxt-jacdac/blob/45d3489c0b96ed0f74c9bbea53fb0714ae9f7fcc/buzzer/_locales/de/jacdac-buzzer-strings.json#L5) est correcte.",
  "7308D1BA52B27A94D121": "Si vous regardez attentivement dans le code source du script, vous trouverez dans l'invite des instructions pour manipuler correctement les variables.",
  "06304E7708E7D40D1F0A": "Format de données personnalisé",
  "9F284EFE394BB265F449": "Un autre défi avec les traductions est que la chaîne localisée contient souvent des caractères échappés qui cassent des formats comme JSON ou YAML. Par conséquent, nous utilisons un format simple personnalisé `key=value` pour encoder les chaînes, afin d'éviter les problèmes d'encodage. Nous utilisons la fonctionnalité `defFileMerge` pour convertir le fichier clé-valeur analysé et les fusionner avec les traductions existantes.",
  "57082B868F799ABCF22D": "Paramétrage pour l'automatisation",
  "4190935618E4DACF9B98": "Le code de langue `langCode` est récupéré depuis les [variables](/genaiscript/reference/scripts/variables) `env.vars` ou par défaut à `de`.",
  "448C89039B09667D3B1B": "Cette technique permet de reconfigurer ces variables depuis la ligne de commande en utilisant l'argument `--vars lang=fr`.",
  "00641BDBE9E8E515967D": "Script",
  "DB4A1FB115F30EF45AE3": "Le script complet est montré ci-dessous.",
  "44F9D751DF4EDD9A4055": "Le résultat de ce script peut être consulté dans cette [pull request](https://github.com/microsoft/pxt-jacdac/pull/108).",
  "720265F482E157ED8D74": "Pratiques exemplaires pour Bicep",
  "1DFEE03ADAFD429C4765": "Apprenez comment appliquer les meilleures pratiques aux fichiers Azure Bicep pour une infrastructure en tant que code plus efficace et plus facile à maintenir.",
  "1D695FC0A8F89542A545": "[Azure Bicep](https://learn.microsoft.com/en-us/azure/azure-resource-manager/bicep/overview?tabs=bicep) est un langage spécifique à un domaine (DSL) pour déployer de manière déclarative des ressources Azure.\nC'est un langage conçu pour être plus lisible\net plus facile à maintenir afin de définir les ressources Azure.",
  "D1E81F033BD706D43050": "Bicep est livré avec un [linter](https://learn.microsoft.com/en-us/azure/azure-resource-manager/bicep/linter) qui détecte différentes erreurs, mais propose également\ndes meilleures pratiques en ligne qui ne sont pas entièrement couvertes par le linter.",
  "7EBCA6CB31DC4D6BAEA0": "Application Web Basique Linux",
  "CF1A4A8582FD4F9098D0": "Le fichier suivant est un fichier Bicep qui déploie une application web avec un plan de service d'application Linux.\nC’est l’exemple de modèle **microsoft.web/webapp-basic-linux/main.bicep**\ndans le [bac à sable Bicep](https://azure.github.io/bicep/).",
  "185F69C69D1AE02E128D": "Le fichier est conforme au `linter`, mais certaines améliorations peuvent être apportées en suivant les meilleures pratiques.\nLe script suivant appliquera les meilleures pratiques au fichier Bicep.",
  "DD3E4421B9583C53D317": "le script utilise un support intégré pour les [annotations](/genaiscript/reference/scripts/annotations)\npour générer des avertissements et des erreurs analysables. Les annotations sont automatiquement intégrées comme problèmes\ndans VSCode ou comme erreurs de build dans la chaîne CI/CD.",
  "8BC58FA14F378B3C3B23": "ajout du support pour ignorer les faux positifs en utilisant le commentaire `#disable-next-line genaiscript`",
  "E0512B21DA4184FF2BFD": "GPT-4 connaît déjà les meilleures pratiques pour Bicep, il n’est pas nécessaire de les répéter !",
  "BBF0A9BB653609809612": "Le LLM génère 3 annotations pour le fichier Bicep. Les annotations sont affichées\nsous forme de lignes ondulées dans VSCode.",
  "A3265006359AF84ED7D7": "Le fournisseur `windows` prend en charge [AI for Windows Apps](https://learn.microsoft.com/en-us/windows/ai/) qui offre des modèles locaux à la pointe de la technologie, avec support matériel NPU.",
  "CCA4C8C9A52D899993BE": "Installez l’extension [AI Toolkit pour Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-windows-ai-studio.windows-ai-studio).",
  "1DE97BAF04676D76B312": "Ouvrez le **Catalogue de modèles** et ajoutez un modèle depuis la section d’exécution **Modèles ONNX**.",
  "BF085D53506EF3E9409D": "Faites un clic droit sur le modèle dans la vue Explorateur et sélectionnez **Copier le nom du modèle**.",
  "42D57356E924B29463EA": "Définissez le nom du modèle dans votre script avec le nom du modèle que vous avez copié.",
  "08C5D87FD4F02F8BB91E": "Voir le [guide de démarrage rapide de l’Azure AI Toolkit](https://learn.microsoft.com/en-us/windows/ai/toolkit/toolkit-getting-started).",
  "2E13492C83D4515591D6": "Whisper ASR WebServices",
  "1DE5B38EF2D54F390F7E": "Ce fournisseur `whisperasr` permet de configurer une tâche de [transcription](/genaiscript/reference/scripts/transcription) \npour utiliser le projet [Whisper ASR WebService](https://ahmetoner.com/whisper-asr-webservice/).",
  "D96E9C90FD930F833E14": "Ce service whisper peut fonctionner localement ou dans un conteneur docker (voir la [documentation](https://ahmetoner.com/whisper-asr-webservice/)).",
  "2DB9F027957D934712F5": "Vous pouvez également remplacer l'alias du modèle `transcription` pour modifier le modèle par défaut utilisé par `transcribe`.",
  "C350595860B77C1A0CA7": "[vLLM](https://docs.vllm.ai/) est une bibliothèque rapide et facile à utiliser pour l'inférence et le déploiement des grands modèles de langage (LLM).",
  "14E14C8BA7A570340C9C": "Le fournisseur est `vllm` et le nom du modèle est ignoré.",
  "7805128FAC11CBE7EB0F": "[SGLang](https://docs.sglang.ai/) est un framework de déploiement rapide pour les grands modèles de langage et les modèles de langage visuel.",
  "89983678E1085444191A": "Le fournisseur est `sglang` et le nom du modèle est ignoré.",
  "F48274D068BE83065F59": "Vous pouvez configurer le fournisseur OpenAI pour utiliser à la place le service [OpenRouter](https://openrouter.ai/docs/quick-start) en définissant `OPENAI_API_BASE` sur `https://openrouter.ai/api/v1`.\nVous aurez également besoin d'une [clé API](https://openrouter.ai/settings/keys).",
  "24B98B230094B4DE9509": "Utilisez ensuite le nom du modèle OpenRouter dans votre script :",
  "5B21018528D2C4749FAF": "Par défaut, GenAIScript définira l'URL et le nom du site sur `GenAIScript`, mais vous pouvez remplacer ces réglages avec vos propres valeurs :",
  "67366D381CCB87E24B3D": "`openai` est le fournisseur de modèle de chat OpenAI.\nIl utilise les variables d'environnement `OPENAI_API_...`.",
  "90BB501166A38950E35D": "[Mettez à niveau votre compte](https://platform.openai.com/settings/organization/billing/overview) pour accéder aux modèles.\nVous obtiendrez des erreurs 404 si vous n'avez pas de compte payant.",
  "174BAC49DC53B2A6E518": "Créez une nouvelle clé secrète depuis le [portail des clés API OpenAI](https://platform.openai.com/api-keys).",
  "71C95504ADE8866DB2D9": "Mettez à jour le fichier `.env` avec la clé secrète.",
  "EB5A2A4802E529E230E9": "Trouvez le modèle que vous souhaitez utiliser\ndans la [référence API OpenAI](https://platform.openai.com/docs/models/gpt-4o)\nou dans le [Playground de chat OpenAI](https://platform.openai.com/playground/chat).",
  "9267E721070C37859D41": "Définissez le champ `model` dans le `script` au modèle que vous voulez utiliser.",
  "064C7BA1C77D99617CEB": "Configuration par défaut du modèle",
  "8C1B52246477DB133DAC": "Utilisez `GENAISCRIPT_MODEL_LARGE` et `GENAISCRIPT_MODEL_SMALL` dans votre fichier `.env` pour définir le modèle par défaut et le modèle léger.",
  "989BACD6308F73C40F95": "Journalisation",
  "73B1E71654D5E37AC660": "Vous pouvez activer les [espaces de noms de journalisation](/genaiscript/reference/scripts/logging) `genaiscript:openai` et `genaiscript:openai:msg` pour obtenir plus d'informations sur les requêtes et réponses :",
  "C4602CB0D1C537AF2A6D": "[Ollama](https://ollama.ai/) est une application de bureau qui vous permet de télécharger et d'exécuter des modèles localement.",
  "3B86C900214155D57C53": "L'exécution d'outils localement peut nécessiter des ressources GPU supplémentaires selon le modèle que vous utilisez.",
  "16CF687DEA395B0261D6": "Utilisez le fournisseur `ollama` pour accéder aux modèles Ollama.",
  "0042BE1A5ACC9319D458": "GenAIScript utilise actuellement la couche de compatibilité API OpenAI d'Ollama.",
  "EF5192BECFCB1DC66347": "Lancez l'application Ollama ou",
  "6FB9F2D79AA5A72C4684": "Mettez à jour votre script pour utiliser le modèle `ollama:phi3.5` (ou tout autre [modèle](https://ollama.com/library) ou provenant de [Hugging Face](https://huggingface.co/docs/hub/en/ollama)).",
  "19A0D1E94A0133B2C376": "GenAIScript téléchargera automatiquement le modèle, ce qui peut prendre un certain temps en fonction de la taille du modèle. Le modèle est mis en cache localement par Ollama.",
  "F268AFF3AF789E8DC421": "Si Ollama s'exécute sur un serveur, un autre ordinateur ou sur un port différent,\nvous devez configurer la variable d'environnement `OLLAMA_HOST` pour vous connecter à un serveur Ollama distant.",
  "D2CB56230CB77DEE40EC": "Vous pouvez spécifier la taille du modèle en l'ajoutant au nom du modèle, comme `ollama:llama3.2:3b`.",
  "E429B136FB6C6D4DC40D": "Ollama avec les modèles Hugging Face",
  "0F68BC1C0F7BB7D06A27": "Vous pouvez également utiliser les [modèles GGUF](https://huggingface.co/models?library=gguf) de [Hugging Face](https://huggingface.co/docs/hub/en/ollama).",
  "E3FE1594D23DA76D31C4": "Ollama avec Docker",
  "678A0F694859A0D70488": "Vous pouvez facilement exécuter Ollama dans un conteneur Docker.",
  "51382B4915D706F8C860": "si vous utilisez un [devcontainer](https://code.visualstudio.com/devcontainers)\nou un [GitHub Codespace](https://github.com/features/codespaces),\nassurez-vous d'ajouter l'option `docker-in-docker` dans votre fichier `devcontainer.json`.",
  "ACB46378B75D438A80C7": "démarrez le [conteneur Ollama](https://ollama.com/blog/ollama-is-now-available-as-an-official-docker-image)",
  "D643606B6159EFCD3289": "arrêtez et supprimez les conteneurs Ollama",
  "951BF38BA8F7AAF5C253": "Ajoutez ces scripts à votre fichier `package.json` pour faciliter le démarrage et l'arrêt du conteneur Ollama.",
  "B4A8AB498415EE41BBE1": "Le fournisseur `mistral` vous permet d'utiliser les [Modèles Mistral AI](https://mistral.ai/technology/#models)\nen utilisant l'[API Mistral](https://docs.mistral.ai/).",
  "92ED6E33E52855BE4D79": "Inscrivez-vous pour un [compte Mistral AI](https://mistral.ai/)\net obtenez une clé API depuis leur [console](https://console.mistral.ai/).",
  "24D6F14DA6D6A2E92EFB": "Ajoutez votre clé API Mistral AI au fichier `.env` :",
  "5507F77A74CC9ED8A06E": "Mettez à jour votre script pour utiliser le `model` de votre choix.",
  "7852A3C7840C16663CA0": "[LocalAI](https://localai.io/) agit comme une API REST de remplacement prête à l’emploi, compatible avec les spécifications de l’API OpenAI pour l’inférence locale. Il utilise des modèles Open Source gratuits et fonctionne sur des CPU.",
  "CBD428514C8FA477FD45": "LocalAI agit comme un remplacement d’OpenAI, vous pouvez consulter le [mapping des noms de modèles](https://localai.io/basics/container/#all-in-one-images) utilisé dans le conteneur, par exemple `gpt-4` est mappé à `phi-2`.",
  "01B0C6608B838174665C": "Installez Docker. Voir la [documentation LocalAI](https://localai.io/basics/getting_started/#prerequisites) pour plus d’informations.",
  "9B5C828209A41609E360": "Mettez à jour le fichier `.env` et définissez le type d’API à `localai`.",
  "4D354BAC5E982FC4F0F5": "Pour démarrer LocalAI dans Docker, exécutez la commande suivante :",
  "962CD8BCC4EDB960AF91": "Le fournisseur `lmstudio` se connecte au serveur sans interface [LMStudio](https://lmstudio.ai/) et permet de faire fonctionner des LLM locaux.",
  "AB495F7D9C829A11E6EA": "Installez [LMStudio](https://lmstudio.ai/download) (v0.3.5+)",
  "08E1EA537C4A66695E84": "Ouvrez LMStudio",
  "AFDB6B17E1C77798A810": "Ouvrez le [Catalogue de modèles](https://lmstudio.ai/models),\nsélectionnez votre modèle et chargez-le au moins une fois afin qu'il soit téléchargé localement.",
  "91CFBD12F34E4A2E36B7": "Ouvrez les paramètres (icône roue dentée) et activez **Activer le service LLM local**.",
  "2444D009F1204AA05900": "GenAIScript suppose que le serveur local est par défaut à l'adresse `http://localhost:1234/v1`.\nAjoutez une variable d'environnement `LMSTUDIO_API_BASE` pour changer l'URL du serveur.",
  "CD66F1A24EC464F90A53": "Trouvez l'**identifiant API** du modèle dans la fenêtre des modèles chargés, puis utilisez cet identifiant dans votre script :",
  "35675ED006F0698D1C9E": "GenAIScript utilise la [CLI LMStudio](https://lmstudio.ai/docs/cli)\npour télécharger les modèles à la demande.",
  "57CE0047A18E6E68041C": "La spécification de la quantification n'est actuellement pas prise en charge.",
  "E4E53DD3281A237BB5C9": "LM Studio et les modèles Hugging Face",
  "2949AE5AA10DD04C7976": "Suivez [ce guide](https://huggingface.co/blog/yagilb/lms-hf) pour charger des modèles Hugging Face dans LMStudio.",
  "D88560E0AED956DE63BF": "Jan",
  "4EBC2339E58BB27DE080": "Le fournisseur `jan` se connecte au serveur local [Jan](https://jan.ai/).",
  "390DDFF0CDF2F1F6B1E1": "[Jan](https://jan.ai/)",
  "CEAB62EF01B67C71EA85": "Ouvrez Jan et téléchargez les modèles que vous envisagez d’utiliser. Vous trouverez l'identifiant du modèle dans la page de description du modèle.",
  "E502CC2AAADC41897B4F": "Cliquez sur l’icône **Serveur API Local** (en bas à gauche), puis sur **Démarrer le serveur**.",
  "F09A362C120DA2DA844E": "Laissez l’application de bureau ouverte !",
  "EDE43CCDC546C515788B": "Pour utiliser les modèles Jan, employez la syntaxe `jan:modelid`.\nSi vous changez l’URL par défaut du serveur, vous pouvez définir la variable d’environnement `JAN_API_BASE`.",
  "401F69DAF4757296A6EC": "[https://llamafile.ai/](https://llamafile.ai/) est une application de bureau mono-fichier qui vous permet d'exécuter un LLM localement.",
  "7BE2A5BF285C2DDE2EEC": "Le fournisseur est `llamafile` et le nom du modèle est ignoré.",
  "885D53016F9087742B54": "[LLaMA.cpp](https://github.com/ggerganov/llama.cpp/tree/master/examples/server)\npermet également d'exécuter des modèles localement ou d'interfacer avec d'autres fournisseurs de LLM.",
  "47E99BE42698A261BEA0": "Mettez à jour le fichier `.env` avec les informations du serveur local.",
  "6D3E8CA4F6166C7DD9AC": "La passerelle proxy [LiteLLM](https://docs.litellm.ai/) fournit une API compatible OpenAI pour exécuter des modèles localement.\nConfigurez les clés `LITELLM_...` pour définir la clé et, éventuellement, l'URL de base.",
  "3ADEAB3541637847CFFD": "Utilisez le fournisseur `litellm`.",
  "43A466DC3D941C8A121B": "fournisseur `jan` se connecte au serveur local [``Jan``](https://jan.ai/). ",
  "884F1D8679E7F5C21144": "Jan",
  "0ED6CD40B4B22FF25485": "Serveur API Local",
  "98939C9A32C7686B3665": "Démarrer le serveur",
  "BDC0BE6DF66962F44C38": "Gardez l'application de bureau en cours d'exécution !",
  "7D3B525721E9A706E64F": "Vous devez configurer la connexion LLM et les secrets d'autorisation. Vous pouvez utiliser des modèles distants (comme OpenAI, Azure, etc.) et locaux (comme Ollama, Jan, LMStudio, etc.) avec GenAIScript.",
  "B928E3C2C0F6882295D0": "Sélection du modèle",
  "3ED814D9E31EB12EA1C4": "Le modèle utilisé par le script est configuré via le champ `model` dans la fonction `script`.\nLe nom du modèle est formaté en `provider:model-name`, où `provider` est le fournisseur du LLM\net `model-name` est spécifique au fournisseur.",
  "1959F3CF9F15144BD04A": "Modèles large, small, vision",
  "01097344F7238E9311B9": "Vous pouvez également utiliser les [alias de modèle](/genaiscript/reference/scripts/model-aliases) `small`, `large`, `vision` pour utiliser les modèles petits, grands et activés pour la vision configurés par défaut.\nLes modèles larges correspondent généralement à la gamme de raisonnement gpt-4 d'OpenAI et peuvent être utilisés pour des tâches plus complexes.\nLes petits modèles sont dans la gamme gpt-4o-mini d'OpenAI, et sont utiles pour des tâches rapides et simples.",
  "C1DEA31A9BA0F35C8365": "Les alias de modèles peuvent aussi être remplacés via la [commande cli run](/genaiscript/reference/cli/run),\nles variables d'environnement ou un fichier de configuration. [En savoir plus sur les alias de modèles](/genaiscript/reference/scripts/model-aliases).",
  "80AF609D9ECFD38C43D6": "ou en ajoutant les variables d'environnement `GENAISCRIPT_MODEL_LARGE` et `GENAISCRIPT_MODEL_SMALL`.",
  "C5A09D955FD1F482076A": "Vous pouvez aussi configurer les alias par défaut pour un fournisseur LLM donné en utilisant l'argument `provider`.\nLes valeurs par défaut sont documentées sur cette page et affichées dans la sortie console.",
  "825EBB90890D44B4CFE8": "Alias de modèles",
  "FE84B35234CB8135A08D": "En fait, vous pouvez définir n'importe quel alias pour votre modèle (seuls les caractères alphanumériques sont autorisés)\nvia des variables d'environnement nommées `GENAISCRIPT_MODEL_ALIAS`\noù `ALIAS` est l'alias que vous souhaitez utiliser.",
  "E6240C6704FC0D3B283B": "Les alias de modèles sont systématiquement mis en minuscules lors de leur utilisation dans le script.",
  "93F8ECE45244B7570A45": "Fichier `.env` et fichier `.env.genaiscript`",
  "A2B789DA92D216DCF4A0": "GenAIScript utilise un fichier `.env` (et `.env.genaiscript`) pour charger les secrets et informations de configuration dans les variables d'environnement du processus.\nGenAIScript peut charger plusieurs fichiers `.env` pour configurer l'environnement.",
  "6ACA0E16171FF97B266F": "Créez ou mettez à jour un fichier `.gitignore` à la racine de votre projet et assurez-vous qu'il inclut `.env`.\nCela garantit que vous ne commettez pas accidentellement vos secrets dans votre gestionnaire de version.",
  "C884B5B11E494B0F05A0": "Créez un fichier `.env` à la racine de votre projet.",
  "B4804DF90DCBFBE780B3": ".gitignore",
  "ED324834DF81A1036581": "**.env**",
  "9EF5347BDBC17E528CD8": "Mettez à jour le fichier `.env` avec les informations de configuration (voir ci-dessous).",
  "7EB0F43EEC0FEA97A3B6": "Ne pas commettre les secrets",
  "059B4CD40B8C22686A09": "Le fichier `.env` ne doit jamais être commité dans votre gestionnaire de version !\nSi le fichier `.gitignore` est correctement configuré,\nles fichiers `.env` et `.env.genaiscript` apparaîtront grisés dans Visual Studio Code.",
  "E485F1CF6926530E1D59": "Emplacement personnalisé du fichier .env",
  "F2BD4B8E7C3BEB6C0E4F": "Vous pouvez spécifier un emplacement personnalisé pour le fichier `.env` via la CLI ou une variable d'environnement.",
  "2E9478E06C0D6D57B233": "GenAIScript charge par défaut les fichiers `.env` suivants dans cet ordre :",
  "E1A6AA2F09DA847EDC2A": "`~/.env.genaiscript`",
  "6422BD9502832749F65F": "en ajoutant l'argument `--env <...files>` à la CLI. Chaque fichier `.env` est importé dans l'ordre et peut écraser les valeurs précédentes.",
  "B17AE400AE87FDB18291": "en définissant la variable d'environnement `GENAISCRIPT_ENV_FILE`.",
  "41322386D763D7226B57": "en spécifiant l'emplacement du fichier `.env` dans un [fichier de configuration](/genaiscript/reference/configuration-files).",
  "3576B873708929752E4D": "Pas de fichier .env",
  "18C99B43562491D944F6": "Si vous ne souhaitez pas utiliser de fichier `.env`, assurez-vous de remplir les variables d'environnement\ndu processus genaiscript avec les valeurs de configuration.",
  "F021ACA402195C3B7078": "Voici quelques exemples courants :",
  "26148E142CBCD72396B7": "Utilisation de la syntaxe bash",
  "D7E3E11FF683F1700FCE": "Configuration GitHub Action",
  "83B36BF68ABB718CE8A4": "Commande `configure`",
  "17C7311A0BC3AEE6922F": "La commande [configure](/genaiscript/reference/cli/configure) est une commande interactive pour configurer et valider les connexions LLM.",
  "804556F3594B80D5CF41": "Conteneurs de développement sous Windows",
  "D9140F98D09D36DCDFA1": "Vous pouvez utiliser les [Dev Containers](https://code.visualstudio.com/docs/devcontainers/tutorial) pour créer facilement un environnement de développement conteneurisé.",
  "7C02A77942F62C097ACF": "Installez [WSL2](https://learn.microsoft.com/en-us/windows/wsl/install)",
  "445C580C64D90D85EE4C": "Installez [Docker Desktop](https://docs.docker.com/get-started/get-docker/). Assurez-vous que le service Docker est en cours d'exécution.",
  "178E014E98AF6EF5366B": "Ouvrez Visual Studio Code",
  "375BF824FD3E92787AC4": "Installez l'[extension dev container](vscode:extension/ms-vscode-remote.remote-containers) dans VSCode",
  "18C1756C93E24FFB48F7": "Ouvrez la palette de commandes (`Ctrl`+`Shift`+`P`) et tapez _Nouvel environnement de développement conteneurisé..._",
  "29D4C7B811B5DE1BC357": "Sélectionnez l'image `Node.JS & TypeScript`.",
  "9564740C27FD0BCE01A8": "Echo",
  "79E0835C4F750AD461E1": "Le fournisseur `echo` est un fournisseur LLM sans exécution qui renvoie les messages sans appeler de LLM.\nIl est particulièrement utile pour le débogage lorsque vous souhaitez voir la requête LLM résultante sans l'envoyer.",
  "09BA21876CB4DD648650": "Echo répond avec les messages du chat sous forme markdown et JSON, ce qui peut être utile pour le débogage.",
  "F449B3E263AA8F890069": "None",
  "B42F504274907B43CB95": "Le fournisseur `none` empêche l'exécution du LLM. Il est typiquement utilisé dans un script de premier niveau qui utilise exclusivement des prompts en ligne.",
  "4FBFAD1F8B7AE57A9259": "Fournisseur personnalisé (compatible OpenAI)",
  "E47A100F963C6470058F": "Vous pouvez utiliser un fournisseur personnalisé compatible avec l'[API de génération de texte OpenAI](https://platform.openai.com/docs/guides/text-generation).\nCela est utile pour exécuter des LLM sur un serveur local ou un autre fournisseur cloud.",
  "60419F64913859ADDFFD": "Par exemple, pour définir un fournisseur `ollizard`, vous devez configurer la variable d'environnement `OLLIZARD_API_BASE` avec l'URL du fournisseur personnalisé,\net `OLLIZARD_API_KEY` si nécessaire.",
  "ABA7264B9E2679F6C7FC": "Vous pouvez ensuite utiliser ce fournisseur comme n'importe quel autre fournisseur.",
  "7B4296CBBEC60A6E92B3": "Variables d'environnement spécifiques au modèle",
  "A0A22FC8524B1AF06F7A": "Vous pouvez fournir différentes variables d'environnement\npour chaque modèle nommé en utilisant le préfixe `PROVIDER_MODEL_API_...` ou `PROVIDER_API_...`.\nLe nom du modèle est mis en majuscules et\ntous les caractères non alphanumériques sont convertis en `_`.",
  "B2A551A6C948960D2B56": "Cela permet d'avoir diverses sources de calcul de LLM\npour différents modèles. Par exemple, activer le modèle `ollama:phi3`\nfonctionnant localement, tout en conservant les informations de connexion du modèle `openai` par défaut.",
  "12F34365F4D4A00B69B3": "Exécution derrière un proxy",
  "90F2CCCADCFD2867167B": "Vous pouvez définir les variables d'environnement `HTTP_PROXY` et/ou `HTTPS_PROXY` pour exécuter GenAIScript derrière un proxy.",
  "91EA2753524442FBE74D": "Vérification de votre configuration",
  "FBC3D52D48D11197D508": "Vous pouvez vérifier votre configuration en exécutant la commande `genaiscript info env` [command](/genaiscript/reference/cli).\nElle affichera les informations de configuration actuelles analysées par GenAIScript.",
  "7E9FEED0947870AF922B": "Le fournisseur `huggingface` vous permet d'utiliser les [modèles Hugging Face](https://huggingface.co/models?other=text-generation-inference) via [Text Generation Inference](https://huggingface.co/docs/text-generation-inference/index).",
  "07CAB7556D08B9625D1B": "Pour utiliser les modèles Hugging Face avec GenAIScript, suivez ces étapes :",
  "D74C68EE8545C2B37568": "Inscrivez-vous pour un [compte Hugging Face](https://huggingface.co/) et obtenez une clé API depuis leur [console](https://huggingface.co/settings/tokens).\nSi vous créez un token **Fined Grained**, activez l'option **Make calls to the serverless inference API**.",
  "7B60FDEF75F2A73D7698": "Ajoutez votre clé API Hugging Face au fichier `.env`\nen tant que variables `HUGGINGFACE_API_KEY`, `HF_TOKEN` ou `HUGGINGFACE_TOKEN`.",
  "6443E680FAB49442D043": "Trouvez le modèle qui correspond le mieux à vos besoins en visitant les [modèles HuggingFace](https://huggingface.co/models?other=text-generation-inference).",
  "57B0B8A78AFAD4CF528C": "Mettez à jour votre script pour utiliser le `model` que vous avez choisi. ",
  "0A0286C722958C0C7F0E": "Certains modèles peuvent nécessiter un compte Pro.",
  "0B1CBD04CD37B9B6C311": "Journalisation",
  "AD6DD9DF18E582A0CEBB": "Vous pouvez activer les [espaces de noms de journalisation](/genaiscript/reference/scripts/logging) `genaiscript:huggingface` et `genaiscript:huggingface:msg` pour obtenir plus d'informations sur les requêtes et réponses :",
  "28C24287ECD5D24824F9": "Google AI",
  "952CCC45AB7695AE7391": "Google AI <a href=\"\" id=\"google\" />",
  "7194720F37ECB97A7E08": "Le fournisseur `google` vous permet d'utiliser les modèles Google AI. Il vous donne accès",
  "3301E1B0228D7DD772EE": "GenAIScript utilise la couche de [compatibilité OpenAI](https://ai.google.dev/gemini-api/docs/openai) de Google AI, donc certaines [limitations](https://ai.google.dev/gemini-api/docs/openai#current-limitations) s'appliquent.",
  "4FFE6CB5A379CCCDE198": "`seed` n'est pas pris en charge et est ignoré.",
  "6CE637CD976DBDC1DCDF": "Les [outils de secours](/genaiscript/reference/scripts/tools#fallbacktools) sont activés en utilisant Google pour compléter la couche de compatibilité OpenAI. (Voir [forum](https://discuss.ai.google.dev/t/gemini-openai-compatibility-multiple-functions-support-in-function-calling-error-400/49431)).",
  "AB130200B6566F78B6CA": "Ouvrez [Google AI Studio](https://aistudio.google.com/app/apikey) et créez une nouvelle clé API.",
  "BF7338A7129C60D81C20": "Mettez à jour le fichier `.env` avec la clé API.",
  "94F027985E13374A62E7": "Trouvez l'identifiant du modèle dans la [documentation Gemini](https://ai.google.dev/gemini-api/docs/models/gemini) et utilisez-le dans votre script ou CLI avec le fournisseur `google`.",
  "DD02C24638E9B6C885FE": "puis utilisez l'identifiant du modèle dans votre script."
}