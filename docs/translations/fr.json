{
  "7FF4A579A373349036EF": "Ces aides d’exécution fournissent une interface conviviale autour de l’écosystème [remark](https://github.com/remarkjs/remark), [mdast](https://github.com/syntax-tree/mdast), [unified](https://github.com/syntax-tree/unist) pour analyser et manipuler des documents Markdown.",
  "B97AD2FDFF4E97817CD3": "Pour bénéficier de l’auto-complétion des types, vous devrez installer le paquet `@types/mdast` comme dépendance de développement.",
  "93ECBC1CC890D2DC0948": "Manipulation du Markdown",
  "88EE574108F304F2E1E4": "charger les analyseurs",
  "2B652AE7037011442E86": "analyser vers un arbre mdast",
  "742232A1BD5BD5EEEEA4": "parcourir l’arbre (voir [documentation](https://unifiedjs.com/learn/recipe/tree-traversal/pnp))",
  "750B426709E8940B01A1": "sérialiser l’arbre en Markdown",
  "F4636CADBC2A666FBFB7": "Traduit par IA. Veuillez vérifier l’exactitude du contenu.",
  "79EF8B2E271C874BAA96": "AST Markdown",
  "3526D43E3CA409573EEA": "Utilisez les assistants mdast pour analyser et manipuler des documents Markdown",
  "7BCCEFB7560D860413A8": "Ces assistants d’exécution fournissent une interface conviviale autour de l’écosystème ",
  "72A2D793C3933AC7B54F": "remark",
  "FBBFCF9090E78B6ED0BD": "mdast",
  "AB2B271B70D622C7C40F": "unified",
  "EDCAC3B7B8A44DD6E9B9": "Manipulation de Markdown",
  "DBE692B4EC10B9D69A77": "charger les parseurs",
  "24DD3D375620BA2E27FE": "analyser en un arbre mdast",
  "F1E1700040109CBC4AAE": "documentation",
  "12FFE51BCC2B286B4C6B": "sérialisation de l’arbre en Markdown",
  "B5632118C596F848B38F": "Rends-le meilleur",
  "5E6406CB923D1137EFD0": "Demandez au LLM d'améliorer votre code !",
  "846A65BBFBDB5D7A2040": "Des résultats surprenants peuvent survenir lorsque vous demandez à plusieurs reprises au LLM de « rendre le code meilleur » (voir [l'article de blog](https://minimaxir.com/2025/01/write-better-code/)).",
  "5F6AEEAF9C5DB07E58EB": "Dans cet exemple, nous utilisons la fonction `makeItBetter` issue du [runtime GenAIScript](/genaiscript/reference/runtime)\npour faire exactement cela : demander au LLM d'améliorer le code plusieurs fois de suite.",
  "2946CE2544A8D3FF5A60": "Explication du code",
  "17972F2C0933103843D4": "Passons en revue le script ligne par ligne :",
  "B5E76D5EF2BC3EF33185": "Cette ligne importe la fonction `makeItBetter` depuis le runtime GenAIScript. Cette fonction permet d'améliorer le code en répétant un ensemble d'instructions plusieurs fois.",
  "0ABD72BA1B83214A9B9B": "Cette ligne définit une constante nommée \"CODE\" qui représente les fichiers présents dans l'environnement. Elle sert essentiellement à définir le contexte du code à améliorer.",
  "085701A33A1A5C149618": "Cette ligne constitue une instruction destinée au modèle d'IA. Elle demande au système d'analyser et d'améliorer le code. Le symbole `$` indique qu’il s’agit d’une instruction spéciale et non d’une commande de code ordinaire.",
  "4D7BFCEC4671F285F44D": "Cette ligne appelle la fonction `makeItBetter` avec l'option de répéter le processus d'amélioration deux fois. Elle enregistre un [participant de chat](/genaiscript/reference/scripts/chat-participants)\nqui insère des messages dans la boucle de conversation du chat.",
  "B72B1AFD443BAA80A3C1": "La fonction `makeItBetter` ressemble approximativement à ceci. Elle enregistre une fonction de rappel qui est appelée\nà chaque tour de chat.",
  "A9B2D345DF43BB1B20F9": "Traduit avec l'IA. Veuillez vérifier l'exactitude du contenu.",
  "F512D12B575136C48094": "Exécution",
  "8820F2E65F24B6FF7553": "Fichiers d’exécution de GenAIScript",
  "369C65ED0AB4DE53B945": "Le runtime GenAIScript fournit des utilitaires supplémentaires et permet d’utiliser le runtime dans n’importe quelle application Node.JS.",
  "5DF31CC5A0F179B2A675": "Pour utiliser le runtime, vous devrez installer GenAIScript dans votre projet.",
  "71F829482FF3037D1E9B": "Initialisation",
  "6616E4FC1CB50706BD13": "Si vous utilisez GenAIScript sans l’interface en ligne de commande (CLI) ou l’extension Visual Studio Code, vous devez initialiser le runtime avant d’utiliser des types ou fonctions globaux.",
  "060551809329824D3F50": "Importer le runtime",
  "F1002A15BF0194AEAAE1": "Le runtime est disponible en tant que module. Vous pouvez l’importer avec le code suivant :",
  "C7DBA0A35BA2C4171A92": "Globaux",
  "D7493B12AADED6603FDF": "Le runtime installe des analyseurs globaux et des types de prompts en ligne. Toutefois, les globaux `$`, `def`, etc. ne sont pas disponibles, uniquement dans les prompts en ligne.",
  "96C5D7950B16049FC159": "Utilitaires",
  "1A54BA8A8C9F0C0D810D": "[cast](/genaiscript/reference/runtime/cast), convertissez n’importe quelle donnée en sorties structurées",
  "A0D8B70FD74F22DFC2AD": "[classify](/genaiscript/reference/runtime/classify), classifiez du texte",
  "71E804F6C62963A8BDA9": "[makeItBetter](/genaiscript/reference/runtime/make-it-better), demandez au LLM d’améliorer son résultat",
  "685083958DFB534AF522": "Traduit avec l’IA. Veuillez vérifier l’exactitude du contenu.",
  "3F0FF3AC2B44C4D03C2E": "Note de transparence",
  "0D2BA6A84801CDC0849B": "Découvrez le framework GenAIScript, ses capacités, ses cas d'utilisation et les meilleures pratiques pour une intégration responsable de l'IA.",
  "F7B20F89CB18CB9FDEB2": "Principes de base de GenAIScript",
  "666C8A568549D57A7BBF": "Introduction",
  "509980F6C6171F029501": "GenAIScript est un framework qui permet aux équipes, y compris les non-développeurs, de créer et d'utiliser des scripts enrichis par l'IA pour soutenir leurs flux de travail. GenAIScript offre un support pour la création et le débogage de scripts JavaScript qui intègrent des appels à des modèles fondamentaux et à des LLM [^1] lors de leur exécution. GenAIScript est un framework de programmation qui permet à ses utilisateurs de concevoir des scripts d’IA (que nous appelons des GenAIScripts), de les déboguer dans un environnement de développement qui est une extension de VS Code, et de les emballer dans une interface en ligne de commande pouvant être déployée dans de nombreux contextes.",
  "1752F06F93BCFB7E3783": "Notre extension VS Code facilite la création d'un GenAIScript en rédigeant du langage naturel en syntaxe markdown, accompagné d'une petite quantité de code JavaScript stylisé. Notre framework permet aux utilisateurs d'utiliser plusieurs modèles LLM, de paramétrer les appels aux modèles, d'exécuter et de déboguer des scripts, de tracer la construction des invites LLM et de fournir une trace complète de l'exécution, de la construction de l'invite à la génération LLM jusqu’au parsing du résultat. Notre framework permet également d'extraire plusieurs formes de sortie des générations LLM, y compris des fichiers de différents types, des sorties destinées à modifier des fichiers existants et des formats structurés tels que JSON.",
  "31F02CCCC06DAF40776C": "Termes clés",
  "BB3CB4AA12204D253059": "**GenAIScript** Un programme JavaScript stylisé qui définit le contexte de l'appel LLM, permet l'exécution de code JavaScript arbitraire, met en forme l'entrée pour l'invite LLM, appelle le LLM et décompresse la sortie du LLM selon les instructions fournies dans l'invite.",
  "8E9C3FF3C8B20F1E4B12": "**GPVM** : Un système d’exécution qui, étant donné un GenAIScript, exécute le GenAIScript, ce qui consiste à intégrer le contexte dans une invite, à appeler le LLM spécifié, puis à extraire le contenu du résultat du LLM.",
  "CF948EC6529EBD682ECD": "**Extension GenAIScript pour VS Code** Un module complémentaire à VS Code qui fournit aux utilisateurs des moyens simples de créer, éditer, exécuter et déboguer des GenAIScripts.",
  "E3A9576BF30A39932FCE": "**Modèles fondamentaux et LLM** Bien que GenAIScript prenne actuellement en charge plusieurs LLM, nous prévoyons d'intégrer à l'avenir d'autres modèles fondamentaux au-delà des grands modèles de langage.",
  "945C3D2782AFAB4CBD5B": "Capacités",
  "0D290653CFADCF82456D": "Comportement du système",
  "545B10697CDCE9E4BC55": "GenAIScript est un framework généraliste pour la création de scripts IA, facilitant l'intégration fluide de l'exécution de code avec l’appel à des modèles fondamentaux/LLM. Un GenAIScript est un programme JavaScript possédant une structure stylisée permettant aux utilisateurs de définir facilement le contexte et l’invite du LLM, d’invoquer un modèle donné et de parser le résultat selon les spécifications de l’utilisateur. Cette fonctionnalité permet même aux non-programmeurs d’inspecter les résultats du modèle et de les vérifier pour s’assurer de leur exactitude.",
  "6840B1A8F944A2F28690": "GenAIScript peut être écrit dans n'importe quel IDE, mais l’extension GenAIScript pour VS Code facilite particulièrement la création, l’exécution et le débogage. Les utilisateurs de GenAIScript peuvent créer des outils qui génèrent et éditent plusieurs fichiers avec un outil unique, et notre intégration avec VS Code exploite les fonctionnalités existantes de refactoring pour permettre aux utilisateurs de visualiser facilement les résultats de l'exécution de l'outil. L’extension prend en charge la création d’un nouveau GenAIScript, l’invocation d’un GenAIScript donné, le traçage de l’exécution du GenAIScript pour constituer le contexte LLM et l'invite finale, ainsi que l’extraction de la sortie du LLM dans les éléments spécifiés par l’utilisateur. Des exemples de toutes ces fonctionnalités sont consultables dans la documentation du dépôt GenAIScript : [microsoft/GenAIScript: Generative AI Scripting (github.com)](https://microsoft.github.io/genaiscript/)",
  "1CCD56019836A67BC5D7": "Le but de GenAIScript est d’offrir à un large éventail d'utilisateurs la possibilité d’innover en créant des scripts dopés par l’IA et d’identifier de nouveaux moyens de tirer parti de l’IA dans leur quotidien. Nous pensons que les développeurs professionnels, habitués à écrire et utiliser des scripts pour gagner en productivité, seront les premiers adoptants de GenAIScript. Ces utilisateurs y gagneront car GenAIScript permet de réaliser de nombreuses tâches impossibles à accomplir par les scripts classiques en JavaScript ou Python. Bien que les développeurs puissent utiliser d’autres frameworks comme langchain ou Semantic Kernel pour intégrer l’appel à des LLM en Python, ces frameworks requièrent plus d’efforts côté utilisateur et offrent moins de prise en charge IDE que GenAIScript. Au final, parce que notre objectif est de rendre GenAIScript facile à écrire, modifier, déboguer et exécuter, nous anticipons une utilité bien au-delà des seuls développeurs professionnels. Un impact majeur de GenAIScript sera d’autoriser les non-développeurs à innover et créer des GenAIScripts qui décuplent leur efficacité. Nous illustrons ce point par les exemples ci-dessous.",
  "CC55833481713E920F20": "Documentation",
  "A6729A3C07955C6196F2": "Pour aider les utilisateurs à se lancer avec GenAIScript, nous proposons dans notre dépôt une documentation illustrant, sous forme d’extraits de code, le contenu de plusieurs GenAIScripts différents. La documentation montre à la fois l’aspect du GenAIScript exemple et l’effet produit sur une entrée particulière. Bien que ces exemples servent à expliquer la technologie, ils ne sont pas destinés à constituer une base pour les outils écrits par les utilisateurs.",
  "5C3E3FA677B539923CFB": "Cas d’utilisation",
  "571ADECC016B869C69EF": "Usages prévus",
  "8F0F4882061EB75BDC06": "GenAIScript peut être utilisé dans tout contexte où un script en ligne de commande dans un autre langage de programmation pourrait être utilisé, mais les cas d’utilisation sont bien plus ambitieux car un LLM peut faire bien plus qu’un code ordinaire. Voici quelques exemples :",
  "B070B9DB961CB7074751": "**Vérification des incohérences potentielles dans une collection de fichiers de configuration ou d'autres contenus.** En utilisant le LLM, un GenAIScript peut examiner des fichiers de configuration et tirer parti de la compréhension du LLM des erreurs de configuration courantes pour les détecter et les signaler. Avant les LLM, les développeurs professionnels écrivaient des outils, comme lint[^2], qui sont des programmes complexes détectant les incohérences dans la syntaxe de leurs fichiers de code. Avec GenAIScript, des outils de vérification peuvent être écrits pour des scénarios bien plus riches (comme la détection de noms de variables inappropriés), et ce, par des personnes qui ne sont pas des développeurs professionnels.",
  "58FB4A63A834B0EEEEE1": "**Automatisation de la traduction de documents :** Étant donné une documentation dans un dépôt écrite dans une langue naturelle, un GenAIScript peut être écrit pour traduire cette documentation dans une autre langue. Un exemple concret soulignant l’importance de GenAIScript pour ce cas d’usage est la localisation de la documentation MakeCode[^3]. La documentation MakeCode comprend près de 2 millions de fichiers, généralement en markdown mêlé à des extraits de code. Beaucoup de documents sont seulement partiellement traduits (au niveau du paragraphe). Pour vérifier la correction des traductions, il existe 3 500 traducteurs bénévoles enregistrés pour plus de 35 langues. On ne peut pas simplement appliquer Bing Translate dans ce cas, car cela détruirait en général les extraits de code. Avec GenAIScript, nous pouvons avoir un script qui parcourt chaque fichier de documentation, extrait la version localisée actuelle et assemble une invite pour demander au LLM de compléter uniquement les traductions manquantes, en préservant celles déjà en place. En outre, le modèle LLM que nous utilisons a déjà été entraîné sur les exemples et la documentation MakeCode, il est donc sensibilisé à la syntaxe.",
  "21585E7480908FF8505C": "**Création d'une version courte d'un rapport long en résumant chaque chapitre.** Les LLM sont très efficaces pour résumer des documents. Un GenAIScript peut être écrit pour prendre chaque chapitre d’un long document et en faire un résumé dans une section d’un document plus court.",
  "E5AA04CAD63B51C07215": "**Conversion d'un monologue en dialogue.** À partir d’un monologue tiré d’une transcription vidéo, un GenAIScript peut être conçu pour réécrire ce monologue en un dialogue entre deux personnes (comme des commentateurs sportifs se répondant) afin de rendre la vidéo plus attrayante et accessible.",
  "7107F4F150B767FF0251": "Usages non prévus",
  "499509D43560BA0BA370": "GenAIScript est un framework généraliste pour la création de scripts. De ce fait, un adversaire peut utiliser GenAIScript pour créer des scripts malveillants à des fins nuisibles. Tous les usages adversariaux de GenAIScript pourraient aussi être mis en œuvre via d’autres frameworks d’extension pour LLM tels que Semantic Kernel, autogen et langchain, de sorte que le risque lié aux usages non prévus de GenAIScript vient du fait qu’il pourrait être plus facile d’écrire de tels scripts. Ce problème est présent dans toute infrastructure qui facilite la programmation, y compris des langages comme PowerShell, JavaScript ou Python, ainsi que les IDE comme VS Code et Visual Studio. Bien que nous ne puissions empêcher les usages non souhaités, nous encourageons les utilisateurs à considérer les bonnes pratiques d’IA responsable lors du développement de leurs GenAIScripts. Plus de détails sur les questions de sécurité et de confiance dans [sécurité et confiance](https://microsoft.github.io/genaiscript/reference/security-and-trust/).",
  "E774D98775FFE8DCC6A6": "Bonnes pratiques pour les modèles fondamentaux",
  "ED248459D087FB8AAB7B": "Nous encourageons fortement les utilisateurs de GenAIScript à utiliser des modèles fondamentaux et LLM qui intègrent de solides mesures d’atténuation pour une IA responsable, telles que les services Azure Open AI (AOAI). Ces services mettent constamment à jour leurs protections et mécanismes RAI pour refléter l’état de l’art en matière de déploiement et d’utilisation responsables des modèles fondamentaux. Voici quelques ressources pour comprendre et appliquer les meilleures pratiques lors de l’usage de tels modèles pour des scripts et applications :",
  "55DF4CD98E6500E69CD4": "[Article de blog sur les fonctionnalités d’IA responsable dans AOAI présentées à Ignite 2023](https://techcommunity.microsoft.com/t5/ai-azure-ai-services-blog/announcing-new-ai-safety-amp-responsible-ai-features-in-azure/ba-p/3983686)",
  "0BD0BBD21D7C12F84E23": "[Note de transparence pour Azure OpenAI Service](https://learn.microsoft.com/en-us/legal/cognitive-services/openai/transparency-note?tabs=text)",
  "524145D4421C216641A6": "[Pratiques recommandées de l’Office Microsoft pour l’IA Responsable (ORA) sur l’utilisation des modèles AOAI](https://learn.microsoft.com/en-us/legal/cognitive-services/openai/overview)",
  "4827501BD0A13A1CA4E2": "Nous recommandons de consulter la documentation sur la [Sécurité des contenus](/genaiscript/reference/scripts/content-safety) pour en savoir plus sur les moyens de se prémunir contre les contenus préjudiciables et le contournement des protections.",
  "05840F73CE80625B27C3": "Limitations",
  "5375FA8B4EC06464CC80": "GenAIScript est un framework en évolution qui s'améliorera grâce aux retours des utilisateurs. Les limitations actuelles incluent une intégration à un seul IDE (VS Code), un support natif des API OpenAI et un nombre relativement faible d'autres LLM. Nous comptons permettre aux utilisateurs d'intégrer des appels à des services externes (comme RAG) dans GenAIScript afin d'apporter davantage de contexte au LLM. Nous prévoyons d’ajouter le support de modèles fondamentaux supplémentaires à mesure que les cas d’utilisation évolueront.",
  "4FEB9E3B286CCA8576E1": "Nous anticipons aussi une évolution du parcours d’intégration à GenAIScript. Nous avons exploré l’intégration de GenAIScript dans l’expérience Copilot Chat de VS Code (accessible via VS Code Insider’s Edition). Nous comprenons aussi que certains développeurs préféreraient implémenter leur GenAIScript en Python plutôt qu’en JavaScript. Nous envisageons de proposer une liaison Python pour l’écriture de GenAIScripts à l’avenir.",
  "4A33F66ADBD39B7487AB": "Limitations techniques, facteurs opérationnels et plages",
  "73F7B6A96369136460E4": "GenAIScript n’utilise aucun modèle d’IA pour exécuter le framework lui-même. Les personnes créant leurs propres scripts IA avec GenAIScript seront soumises aux limitations techniques, facteurs opérationnels et plages du LLM utilisé dans leur script.",
  "9E8E79B032A474982CF8": "Bonnes pratiques pour améliorer la performance du système",
  "D15B9356C5E658F38A34": "GenAIScript encourage les utilisateurs à consulter les bonnes pratiques d'écriture d'invites efficaces pour le LLM spécifique qu'ils invoquent dans leur outil.",
  "2B00E61142C8AB1B5E6A": "En savoir plus sur l’IA responsable",
  "D848DC4C789A697C94D1": "[Principes de l’IA Microsoft](https://www.microsoft.com/en-us/ai/responsible-ai)",
  "23C9C7776F28199848B1": "[Ressources IA responsable Microsoft](https://www.microsoft.com/en-us/ai/responsible-ai-resources)",
  "9E5523F533F05BD0F4F5": "[Formations Microsoft Azure sur l’IA responsable](https://docs.microsoft.com/en-us/learn/paths/responsible-ai-business-principles/)",
  "0DFE58B479F1CA5DCFF6": "En savoir plus sur GenAIScript",
  "D6A76CFE06C0382A6B2D": "Pour en savoir plus sur GenAIScript, rendez-vous sur notre référentiel GitHub : [microsoft/GenAIScript: GenAI Scripting (github.com)](https://github.com/microsoft/genaiscript/)",
  "4464B394FBDCCB6EFAE3": "Nous contacter",
  "EDFD3931DAF4E77D9CAA": "Donnez-nous votre avis sur ce document : [zorn@microsoft.com](mailto:zorn@microsoft.com), [jhalleux@microsoft.com](mailto:jhalleux@microsoft.com)",
  "4D64B5A2F3891B545DCC": "À propos de ce document",
  "5B8D07EE1B01EE4D8803": "© 2024 Microsoft Corporation. Tous droits réservés. Ce document est fourni « en l’état » et à titre informatif uniquement. Les informations et points de vue exprimés dans ce document, y compris les URL et autres liens Internet, peuvent changer sans préavis. L’utilisation est à vos risques et périls. Certains exemples sont uniquement destinés à l’illustration et sont fictifs. Aucune association réelle n’est prévue ou sous-entendue.",
  "9B539E70FC1AB651F3A1": "Ce document n’est pas destiné à être, et ne doit pas être interprété comme, un avis juridique. La juridiction dans laquelle vous exercez peut imposer diverses obligations réglementaires ou légales à votre système d’IA. Consultez un spécialiste juridique si vous n’êtes pas certain des lois ou réglementations applicables à votre système, notamment si vous pensez que cela pourrait impacter ces recommandations. Sachez que toutes ces recommandations et ressources ne seront pas adaptées à chaque scénario ; inversement, elles peuvent aussi s’avérer insuffisantes selon le contexte.",
  "29D5BE780918D2138AAD": "Publié le : 18 mars 2024",
  "F04567BA1567FB501768": "Dernière mise à jour : 18 mars 2024",
  "34C0C62E2EB15333C376": "Tout au long de ce document, lorsque nous évoquons les LLM, nous désignons tout modèle fondamental compatible avec nos interfaces.",
  "923339863CC5CF0D58BF": "[Lint (logiciel) - Wikipédia](https://en.wikipedia.org/wiki/Lint_(software))",
  "A374DFFF03D06C012756": "[https://makecode.org/](https://makecode.org/)",
  "9620E9EB656D7671A869": "Traduit à l'aide de l’IA. Veuillez vérifier l’exactitude du contenu.",
  "9887745E4395724C7E03": "Serveur Web API",
  "CB822ADB421FF9984EC8": "Le serveur Web API expose une API REST compatible OpenAPI pour exécuter des scripts.",
  "CB82697CDDC25CCD34B0": "Vous pouvez lancer le [cli](/genaiscript/reference/cli) en tant que **serveur Web API** pour exposer des scripts en tant qu'endpoints REST.\nLe serveur est compatible OpenAPI 3.1 et utilise [fastify](https://www.fastify.io/) en interne.",
  "500A282A8613EA160A64": "Scripts en tant qu'endpoints REST",
  "A5C84A2C33DE34074D42": "Le serveur Web API expose les scripts comme des endpoints REST. Il utilise le titre, la description, les groupes et les tags\npour générer une spécification OpenAPI 3.1 et un serveur basé sur fastify.",
  "C906F721DCF516D9229D": "Les paramètres des endpoints OpenAPI sont automatiquement déduits des [paramètres des scripts](/genaiscript/reference/scripts/parameters) et des fichiers.\nLes paramètres OpenAPI viendront alors alimenter l'objet `env.vars` dans le script,\ncomme d'habitude.",
  "6084FA8A901C5397CDB8": "La sortie de l'endpoint OpenAPI correspond à la sortie du script. Il s'agit, généralement, du dernier message de l'assistant pour un script qui utilise le contexte de haut niveau.\nLa sortie de l'endpoint OpenAPI correspond à la sortie du script, généralement le dernier message de l'assistant ou tout contenu passé à [env.output](/genaiscript/reference/scripts/output-builder).",
  "99669BDBC8E35846E40F": "Voyons un exemple. Voici un script `task.genai.mjs` qui prend un paramètre d'entrée `task`, construit une invite,\net la sortie du LLM est renvoyée.",
  "A77A5F230C47D916AA3A": "Un script plus avancé peut ne pas utiliser le contexte de haut niveau et utiliser à la place `env.output` pour transmettre le résultat.",
  "7F9F4123FBD71E429B83": "Route",
  "4F4FC27DEAB16ECDD588": "La route par défaut est `/api` et la spécification OpenAPI est disponible à l'adresse `/api/docs/json`.\nVous pouvez changer la route à l'aide de l'option `--route`.",
  "B391613DB88418BC07BB": "La spécification OpenAPI sera accessible à l'adresse `/genai/docs/json`.\nVous pouvez également changer le port avec l'option `--port`.",
  "267C490A80E242808F83": "Le serveur sera disponible à `http://localhost:4000/genai`.",
  "323C11C23BFE4417DD1E": "Script de démarrage",
  "3856886E587B8B90623D": "Vous pouvez spécifier un identifiant de script de démarrage dans la ligne de commande grâce à l'option `--startup`.\nIl s'exécutera une fois le serveur lancé.",
  "3BE65CB590A6FEC2AE8B": "Vous pouvez utiliser ce script pour charger des ressources ou effectuer toute autre configuration nécessaire.",
  "5E86942117A8AE179957": "Filtrage des scripts",
  "24D369213F37406C1999": "Si vous avez besoin de filtrer les scripts exposés comme endpoints OpenAPI, vous pouvez utiliser le flag `--groups` et\ndéfinir le groupe `openapi` dans vos scripts.",
  "81F398021BB920B618BA": "Exécuter des scripts depuis un dépôt distant",
  "4CB6C5D434858BC55FCF": "Vous pouvez utiliser l'option `--remote` pour charger des scripts depuis un dépôt distant.\nGenAIScript effectuera un clonage superficiel du dépôt et exécutera le script dans le dossier cloné.",
  "EF19E18C2A4886B45806": "Il existe des options supplémentaires pour la façon dont le dépôt est cloné :",
  "2C59C1B94FF400BA7666": "`--remote-branch <branche>` : La branche à cloner depuis le dépôt distant.",
  "066A865FB334D2A67EAE": "`--remote-force` : Force le clonage même si le dossier cloné existe déjà.",
  "F7D5E32B0EF094193139": "`--remote-install` : Installe les dépendances après le clonage du dépôt.",
  "F5BCEDCB0875EB0857FD": "Comme toujours, soyez vigilant lorsque vous exécutez des scripts provenant d'un dépôt distant.\nAssurez-vous de faire confiance à la source avant d'exécuter le script et envisagez de verrouiller sur un commit spécifique.",
  "1FBD0F580FA2716CDB33": "Linting",
  "AF30BE214611FC644CCE": "Vous pouvez utiliser [spectral](https://github.com/stoplightio/spectral) pour valider vos spécifications OpenAPI.",
  "8F9E03FA3EC903CF730E": "Enregistrez ce fichier `.spectral.yaml` à la racine de votre projet :",
  "75B7AFC036A1A952A416": "lancez le serveur API",
  "AEF52EEFB19B41888DD4": "exécutez le linter spectral",
  "3ABDBCA0FBF3FD3FBBEC": "Traduit par IA. Veuillez vérifier le contenu pour en garantir l'exactitude.",
  "6366F713230CABCD9975": "Sécurité et Confiance",
  "DB09CDCFF753365F99D7": "Découvrez les risques de sécurité et les stratégies d'atténuation lors de l'utilisation de scripts générés par l’IA dans des environnements de développement.",
  "463C88C4ABC35AD94F03": "Nous abordons divers risques de sécurité ainsi que les mesures possibles d’atténuation lors de l’utilisation de GenAIScript.\nGenAIScript hérite des mêmes risques de sécurité que l’exécution de scripts, et ajoute de nouvelles menaces en raison de la nature des résultats générés par les LLM.",
  "1DC426CF827DEE243FFE": "Nous recommandons également de lire la [Note de transparence](/genaiscript/reference/transparency-note/) pour comprendre les capacités et les limites de GenAIScript.",
  "D33AA7FA4A484DCB720F": "Ne faites pas confiance aux scripts",
  "4889073FE47BD9974C16": "Puisque les fichiers GenAIScript `.genai.mjs` sont des fichiers JavaScript exécutables et utilisent effectivement un environnement d'exécution JavaScript (VSCode ou Node), il est important de comprendre que le script peut faire tout ce que JavaScript permet. Cela inclut la lecture et l’écriture de fichiers, les requêtes réseau et l’exécution de code JavaScript arbitraire.",
  "C12F095184F104563CBE": "Ne lancez pas de scripts `.genai.mjs` provenant de sources non fiables.",
  "77E53EDFA8101A2DC023": "Ne faites pas confiance aux résultats du LLM",
  "9008F8E7E71523D541A0": "Un script de confiance pourrait utiliser des fichiers malveillants du contexte pour générer un résultat malveillant.\nPar exemple, il pourrait écraser des fichiers du projet avec du nouveau code malicieux.",
  "6B642F28247CCD76D690": "dans Visual Studio Code, utilisez l’aperçu de refactorisation",
  "DB9BB25E202BC6D3C5F0": "dans votre CI/CD, créez une pull request avec les modifications et révisez-les",
  "F829B02BF29A438C3110": "Confiance dans l’espace de travail Visual Studio Code",
  "C7191B4D16EAD414A8F7": "L’extension est **désactivée** lors de l’ouverture d’un dossier en [mode restreint](https://code.visualstudio.com/docs/editor/workspace-trust) dans Visual Studio Code.",
  "B94C37E6CF2101A7EB5A": "Aperçu Markdown dans Visual Studio Code",
  "ABC8AD6A0CD2F1C381D9": "La sortie du LLM et la trace utilisent l’aperçu markdown intégré de Visual Studio Code.\nPar défaut, [VS Code restreint le contenu affiché dans l’aperçu Markdown](https://code.visualstudio.com/Docs/languages/markdown#_markdown-preview-security).\nCela inclut la désactivation de l’exécution des scripts et n’autorise le chargement des ressources que via `https`.",
  "C1ECE066A92B6B25DD53": "Traduit à l’aide de l’IA. Veuillez vérifier l’exactitude du contenu.",
  "C3C7329B869BDADCB13D": "Playground",
  "854BA18D364EB36A804B": "Décrivez comment utiliser l’aire de jeu du serveur local pour lancer des scripts depuis une interface utilisateur.",
  "CB24A2DA21125C596EA8": "Le **Playground** est une application web auto-hébergée qui vous permet d’exécuter des scripts GenAIScript à partir d’une interface utilisateur conviviale. Il se positionne entre le CLI de GenAIScript et l’intégration GenAIScript pour Visual Studio Code.",
  "44C868DB5B92451E916A": "L’aire de jeu est encore en cours de développement.",
  "B34E459A16DBFB7B7307": "Lancement",
  "501B2F6AD2974D706E48": "Depuis la racine de votre espace de travail de projet, exécutez",
  "C28354B475C6D2A8AD7A": "puis rendez-vous à l’URL affichée dans la console (généralement `http://127.0.0.1:8003/`).",
  "45B28188B5AD8102ED9A": "Dépôt distant",
  "C9934DAD9B28057BB59A": "Vous pouvez exécuter l’aire de jeu sur un dépôt distant en utilisant vos secrets `.env` actuels.",
  "C373D579939EF6CB9AD3": "Installation locale",
  "913042F5B4F79E81A703": "`npx` peut être lent à démarrer, en particulier si vous utilisez fréquemment l’aire de jeu. Vous pouvez installer l’aire de jeu localement avec",
  "810D4F5DCB291B25B4EE": "puis lancez",
  "FE6A90AD08DE4CDC345E": "Exécution de scripts depuis un dépôt distant",
  "72BDD261AA9E35FF8FAE": "Vous pouvez utiliser l’option `--remote` pour charger des scripts depuis un dépôt distant. GenAIScript effectuera un clonage superficiel du dépôt et exécutera le script depuis le dossier cloné.",
  "3661D793437DC26AFFF9": "Il existe des options supplémentaires concernant la façon dont le dépôt est cloné :",
  "556ED1EBD4842C1113B3": "`--remote-branch <branch>` : La branche à cloner depuis le dépôt distant.",
  "34D6DD56290AC14054E7": "`--remote-force` : Force le clonage même si le dossier cloné existe déjà.",
  "B62B664D5A7CEFEAC37B": "`--remote-nstall` : Installe les dépendances après le clonage du dépôt.",
  "2F4FB34D76ED21447A68": "Comme d’habitude, soyez prudent lorsque vous exécutez des scripts provenant d’un dépôt distant. Assurez-vous de faire confiance à la source avant d’exécuter le script et envisagez de bloquer sur un commit spécifique.",
  "6F39877FF391CBEB21BC": "Traduit à l’aide de l’IA. Veuillez vérifier l’exactitude du contenu.",
  "5A6069793E4356D4475A": "Fichiers de configuration",
  "C0F41F4234CE55DF5B62": "Apprenez à configurer les paramètres courants en utilisant des fichiers de configuration",
  "D1C95D301A4EFCF61EF9": "GenAIScript prend en charge des fichiers de configuration locaux et globaux afin de permettre la réutilisation de paramètres et de secrets communs entre plusieurs scripts.",
  "2D8DDDC5A648F49EB24C": "Résolution du fichier .env",
  "B56D0CF6CBF086D6D623": "GenAIScript va scanner et charger les fichiers `.env` suivants dans l’ordre suivant :",
  "7FF00D130DAE40471CD9": "propriété `envFile` dans les fichiers de configuration (voir ci-dessous)",
  "60B28090506BAD14DBB9": "variable d’environnement `GENAISCRIPT_ENV_FILE`",
  "BC08B8DF3DEE3E003C5C": "options de ligne de commande `--env`",
  "C1117C227CBDCBCCC455": "Si aucune des options ci-dessus n’est définie, il essaiera de charger les fichiers suivants :",
  "BD03314CDF51244CBBA1": "`~/.env`",
  "180AFC2FFD68FCD6FAEA": "`./.env`",
  "A05BBDF166C1FC7DE36D": "`./.env.genaiscript`",
  "F2D39782DA344BB34928": "Résolution du fichier de configuration",
  "BD39DF27B82575165EEF": "GenAIScript va rechercher les fichiers de configuration suivants et fusionner leur contenu dans la configuration finale.",
  "091CF01C6F5C640F5ECB": "`~/genaiscript.config.yaml`",
  "C5CD537E7723FBA23166": "`~/genaiscript.config.json`",
  "D82F4ADD5B49792EC8F5": "`./genaiscript.config.yaml`",
  "5A7776ADB04EA34FFF69": "`./genaiscript.config.json`",
  "5348E27452CACC3DEE01": "Les fichiers JSON prennent en charge le format [JSON5](https://json5.org/) (y compris les commentaires, les virgules finales, etc.).",
  "22CEB51A88B1CC6ED776": "Schéma",
  "C0581F79F54C77ED3550": "Le schéma de configuration se trouve à l’adresse [https://microsoft.github.io/genaiscript/schemas/config.json](https://microsoft.github.io/genaiscript/schemas/config.json).",
  "5081ADB0CCC6ECB91745": "Propriété `envFile`",
  "3BB1FBC5D72A622ECC08": "L’emplacement final de `envFile` sera utilisé pour charger le secret dans les variables d’environnement. Cela ne prend en charge qu’un seul fichier.",
  "DE5A38DF1DA42636D2BA": "Propriété `include`",
  "B5AE279AD5DCDAE96512": "La propriété `include` permet de fournir des chemins glob pour inclure plus de scripts.\nCombinée avec un fichier de configuration global, cela permet de partager des scripts entre plusieurs projets.",
  "65D1914C9700666B9DAC": "Propriété `modelAliases`",
  "E6999044DF2C63034711": "La propriété `modelAliases` vous permet de définir des alias pour les noms de modèles.",
  "FA8872628564491D7889": "Propriété `modelEncodings`",
  "A0CF251F404D2F247A0B": "La propriété `modelEncodings` vous permet de spécifier l’encodage pour un modèle.",
  "BD96A811EBF27C7B029A": "Débogage",
  "1EA5454574C7C29E9D63": "Activez la catégorie de débogage `config` pour voir des informations supplémentaires sur la résolution de la configuration.",
  "276821D1F7A0230ACBA2": "Vous pouvez également activer d’autres catégories de débogage pour des journaux plus détaillés.",
  "7576BAAAAA6B6B862C67": "Traduit à l’aide de l’IA. Veuillez vérifier l’exactitude du contenu.",
  "D20311F616F530AAFC54": "Azure AI Foundry",
  "64ED162F4D10E0229B37": "Azure AI Foundry est une plateforme pour créer et déployer des modèles d’IA.",
  "8AF9E62995C7A6195548": "![Une capture d’écran d’Azure AI Foundry.](./azure-ai-foundry.png)",
  "1F5FD21657BBE730E0FC": "GenAIScript prend en charge nativement divers services [Azure AI Foundry](https://learn.microsoft.com/en-us/azure/ai-foundry/).",
  "062966121022C7986FD7": "Authentification",
  "9ADE4D4E93690F52BF35": "GenAIScript prend en charge l’authentification par clé via variables d’environnement ainsi que l’authentification Microsoft Entra pour chaque service.",
  "64438CE56266F3012D52": "Services Azure OpenAI et IA",
  "9C99D833BB4299F9BF95": "GenAIScript peut exécuter de l’inférence sur les LLM hébergés dans Azure AI Foundry.",
  "1FC5719B30FC3CDE61E1": "Il existe 4 types de déploiements Azure supportés par GenAIScript :",
  "51057B67513290388DE7": "[Azure OpenAI](/genaiscript/configuration/azure-openai)",
  "532E98905F953911142C": "[Azure AI Inference](/genaiscript/configuration/azure-ai-foundry##azure-ai-inference)",
  "AD37698EA34E3E99756B": "[Azure OpenAI Serverless](/genaiscript/configuration/azure-ai-foundry/#azure-ai-openai-serverless)",
  "E5110E6BF8DAFAA85EBF": "[Azure AI Serverless Models](/genaiscript/configuration/azure-ai-foundry/#azure_serverless_models)",
  "54F5C37FE6DA3C0A1CD5": "Azure AI Search",
  "611BD35D52E6B01FEBF6": "[Azure AI Search](https://learn.microsoft.com/en-us/azure/search/search-what-is-azure-search) est un puissant moteur de recherche hybride basé sur les vecteurs et mots-clés.",
  "9F5B0AD5E994AA1FCDF6": "[Recherche vectorielle](/genaiscript/reference/scripts/vector-search/#azure-ai-search)",
  "3679B96F9FDB7195635E": "[Configuration](/genaiscript/configuration/azure-ai-search)",
  "33B1E869E71423A5449B": "Azure Content Safety",
  "01753ADE7C0FD2C37B05": "[Azure Content Safety](https://learn.microsoft.com/en-us/azure/cognitive-services/content-safety/) est un service\nqui permet d’identifier et de filtrer les contenus nuisibles dans vos applications.",
  "07F8C5B2645153E389F5": "GenAIScript intègre la prise en charge d’Azure Content Safety, aussi bien pour analyser une partie du prompt que pour analyser les réponses des LLM\nou les serveurs MCP.",
  "800848421057B9DEFAAC": "[Configuration](/genaiscript/reference/scripts/content-safety/#azure-ai-content-safety-services)",
  "7122B682DBB656D2EC70": "Traduit par IA. Veuillez vérifier l’exactitude du contenu.",
  "83909F82446EE9C3E82A": "Paramètres",
  "3B149C29EA7E7CA28E64": "Liste des paramètres disponibles dans Visual Studio Code.",
  "E2650EC732D25FBFA3B5": "Traduit à l'aide de l'IA. Veuillez vérifier l'exactitude du contenu.",
  "A96AD35A57D657F5B23A": "Exécution de scripts",
  "CF08E70EDC444D6380CB": "Découvrez comment exécuter des GenAIScripts dans Visual Studio Code à l'aide de l'extension GenAIScript.",
  "3E80D1491778955FD477": "L'extension GenAIScript pour Visual Studio Code offre un moyen pratique d'exécuter des scripts directement depuis l'éditeur.",
  "908C76BE146F77697B59": "Il existe principalement deux façons d'exécuter des scripts :",
  "EDB606B58843D37CEEFE": "exécuter un script « directement ». Ce scénario est utile pour déboguer un script ou pour un script qui ne nécessite pas de fichiers d'entrée.",
  "3ED904449DBE5EC60649": "exécuter un script à partir de fichiers ou dossiers d'entrée. Ce scénario est utile lorsque vous souhaitez exécuter un script sur plusieurs fichiers ou dossiers.",
  "59F7F45EF2462046371A": "Exécution directe de scripts",
  "76E2592D2DE65D9C767B": "ouvrez un fichier GenAIScript dans l'éditeur",
  "A592323C4044F46F996F": "effectuez un clic droit dans l'éditeur et sélectionnez **Exécuter GenAIScript\\*** dans le menu contextuel",
  "E02F50720B32D6214B23": "ou cliquez sur l'icône **Exécuter GenAIScript** en haut à droite de l'éditeur",
  "57969BE183E30CDC07C0": "Cela lancera l'exécution du script et utilisera les fichiers d'entrée par défaut spécifiés dans le champ `files` du `script`.",
  "28BE64FC51AA4F9289A0": "Ce mode est utile lors du développement d'un script ou pour les scripts qui ne nécessitent pas de fichiers d'entrée.",
  "5A28C3403A07A867BBE0": "Exécution de scripts à partir de fichiers ou dossiers d'entrée",
  "11BDE68D1DC908260F5C": "Ce mode permet d'exécuter des scripts sur n'importe quelle combinaison de fichiers et de dossiers, ce qui remplira `env.files`.",
  "D90B2518F93C00053637": "Depuis la fenêtre de l'explorateur :",
  "EFCE173E42E17C91B5C8": "sélectionnez des fichiers ou des dossiers dans l'explorateur. Vous pouvez utiliser la touche `Ctrl` ou `Shift` pour sélectionner plusieurs fichiers ou dossiers.",
  "8FFB0F604D0B9E54810A": "faites un clic droit et sélectionnez **Exécuter GenAIScript** dans le menu contextuel",
  "065E9E44B8544BD4B5FA": "Depuis un éditeur",
  "3041702F0C170E5B815C": "ouvrez un fichier dans l'éditeur (pas un fichier GenAIScript)",
  "8BD8FFD9E29E3BDB19F5": "faites un clic droit et sélectionnez **Exécuter GenAIScript** dans le menu contextuel",
  "EA0E4A05395499C4337C": "Utiliser le texte sélectionné dans votre script",
  "201CD13DA4D009CC5C02": "À chaque lancement de script, GenAIScript récupérera le texte sélectionné dans l'éditeur de texte actif et le stockera dans la variable `editor.selectedText`.",
  "E8538A79C42F7C3D322D": "Sa valeur sera indéfinie si vous exécutez votre script depuis la ligne de commande, vous devrez donc gérer ce cas dans votre script.",
  "038E789D6187D77B6537": "Règles .gitignore",
  "860EA40FA2D1BEC5AA05": "GenAIScript tente de respecter les **règles du `.gitignore` principal du workspace du projet** (il ignore les fichiers .gitignore imbriqués).\nCela signifie que si vous avez un fichier `.gitignore` dans votre projet, GenAIScript ignorera tous les fichiers ou dossiers ignorés par Git.",
  "3673DDB3A2596F740488": "Il existe des exceptions à cette règle :",
  "09C5190D681695EE5C16": "si vous lancez **Exécuter GenAIScript** sur des fichiers individuels, ces fichiers ne sont pas filtrés par le `.gitignore` car vous les avez explicitement choisis. Les dossiers sont toujours filtrés.",
  "5DBFBB068336B00AE6ED": "si vous indiquez `---ignore-git-ignore` dans la ligne de commande, GenAIScript ignorera le fichier `.gitignore` et exécutera le script sur tous les fichiers et dossiers.",
  "411FBD7A72F51CCAFF38": "Traduction réalisée avec l’IA. Veuillez vérifier l’exactitude du contenu.",
  "F82745F8413486E55C82": "Aperçu",
  "A66F53CE81E66522E23F": "Découvrez les fonctionnalités de l’extension VSCode GenAIScript pour la création, le débogage et le déploiement de scripts.",
  "0513CA12D2DBC3B96CDB": "GenAIScript est pris en charge par une extension [Visual Studio Code](https://code.visualstudio.com/) qui offre un ensemble riche de fonctionnalités pour créer, déboguer et déployer des GenAIScripts.",
  "29091374E14B0F0B54E3": "Le [Visual Studio Code Marketplace](https://marketplace.visualstudio.com/items?itemName=genaiscript.genaiscript-vscode) contient la dernière version stable de l’[extension](https://marketplace.visualstudio.com/items?itemName=genaiscript.genaiscript-vscode).",
  "1DF54C63EE9793092DDF": "[Télécharger](https://marketplace.visualstudio.com/items?itemName=genaiscript.genaiscript-vscode)",
  "D9DF32C1F5D5C9E6B37B": "[Instructions d'installation](/genaiscript/getting-started/installation/#visual-studio-code-extension)",
  "CBFD27FE35FE688AFB20": "[Exécution de scripts](/genaiscript/reference/vscode/running-scripts/)",
  "10A8D8CFE8DBA01899BE": "[Intégration de Copilot Chat](/genaiscript/reference/vscode/github-copilot-chat/)",
  "C7AF1457165D7F67850F": "[Paramètres](/genaiscript/reference/vscode/settings/)",
  "A4B12EA8FAE89A93CF27": "Traduit avec l’IA. Veuillez vérifier l’exactitude du contenu.",
  "1DDD1D036BDB2CC62DD5": "GitHub Copilot Chat",
  "D7B642D8AFF70D7D55FC": "Intégrez-vous avec GitHub Copilot Chat pour exécuter des scripts via un participant de chat et des invites personnalisées dans Visual Studio Code. Apprenez à exécuter des scripts, sélectionner des modèles, exploiter le contexte et activer des flux de travail de codage assisté par l’IA plus efficaces grâce aux interfaces de chat.",
  "4B1F5957142B916EA1F5": "GenAIScript s’intègre à [GitHub Copilot Chat](https://marketplace.visualstudio.com/items?itemName=GitHub.copilot-chat)\nen fournissant un **participant de chat** qui vous permet d’exécuter des scripts dans le contexte d’une conversation de chat,\net une **invite personnalisée** pour générer du GenAIScript plus efficacement avec Copilot Chat.",
  "4CCB23D840379D6A2664": "Si vous avez besoin de vérifier votre quota de requêtes premium disponible pour GitHub Copilot, allez à [Fonctionnalités](https://github.com/settings/copilot/features)",
  "8276AC42B06936D00001": "Participant de chat `@genaiscript`",
  "FFD9C4D62C92F0DAF76B": "Le [participant de chat](https://code.visualstudio.com/api/extension-guides/chat#parts-of-the-chat-user-experience) `@genaiscript` vous permet d’exécuter des scripts sans le contexte\nd’une conversation [GitHub Copilot Chat](https://marketplace.visualstudio.com/items?itemName=GitHub.copilot-chat).\nCeci est utile pour exploiter des scripts existants dans une session de chat interactive.",
  "348117937FBA5AB04ED2": "Choisir le script à exécuter",
  "5D9783419DB7FC58C3B4": "La commande `/run` attend un identifiant de script comme premier argument (ex. `/run poem`). Le reste de la requête est\ntransmis au script en tant que variable `env.vars.question`.",
  "501544B002AFFD5BC493": "Si vous omettez la commande `/run`, GenAIScript recherchera un script nommé `copilotchat`. S'il en trouve un, il l'exécutera.\nSinon, il vous demandera de choisir un script parmi la liste des scripts disponibles.",
  "57BCB02269F6FE67D435": "Choisir le modèle",
  "6F35ECFF9A588CA4A4E1": "Si votre script ne spécifie pas de modèle, GenAIScript vous invitera à en sélectionner un.\nVous pouvez aussi spécifier le modèle à utiliser dans la configuration du script, en utilisant le fournisseur `github_copilot_chat`.",
  "FF02094EC88CFAF2CF8A": "modèle actuellement sélectionné : `github_copilot_chat:current`",
  "B3B0106E5241221431BF": "gpt-4o-mini : `github_copilot_chat:gpt-4o-mini`",
  "92FF2E5CE7955C5C87B1": "Lorsque GenAIScript vous invite à choisir un modèle, il stocke vos choix dans les paramètres d’espace de travail\ndans",
  "6472AB8EEBD886F2C3E8": "**Les modèles GitHub Copilot Chat ne sont disponibles que dans Visual Studio Code.** Ils ne fonctionneront pas depuis\nles interfaces [cli](/genaiscript/reference/cli) ou [playground](/genaiscript/reference/playground).",
  "3D09640DC12C9D7E8EA4": "Disponibilité des modèles",
  "2AE9CDB5685B90E1C330": "Tous les modèles listés dans l’interface de GitHub Copilot Chat ne sont pas forcément disponibles pour les extensions tierces.\nSi GenAIScript essaie d’accéder à un modèle non disponible, il vous en informera mais il n’a pas\nle contrôle sur votre configuration d’accès aux modèles.",
  "F6EE71566453656EB955": "Contexte",
  "697F4DDF99B2C0D3DC24": "Le contexte sélectionné par l’utilisateur dans Copilot Chat est converti en variables et transmis au script :",
  "12DA2C32D5EBADF48F44": "le contenu de l’invite est transmis dans `env.vars.question`. L’ID du script est supprimé dans le cas de `/run`.",
  "6A34A6DF5A14F22229DB": "le texte de l’éditeur actuel est transmis dans `env.vars[\"copilot.editor\"]`",
  "398D06700F652CB786C6": "la sélection actuelle de l’éditeur est transmise dans `env.vars[\"copilot.selection\"]`",
  "53E5C20600AD30326899": "toutes les autres références de fichiers sont transmises dans `env.files`",
  "DE987CE17A9880D59E94": "Exemples",
  "10D2B69B208791A0A447": "`mermaid` va générer un diagramme à partir de l’invite utilisateur.",
  "25798E2E3163C297E429": "`websearcher` va effectuer une recherche web selon l’invite utilisateur\n  et utiliser le fichier en contexte dans la réponse.",
  "473356D8C48B3DD20195": "`dataanalyst` utilise les outils d’interprétation de code Python pour\n  résoudre une question de calcul de données.",
  "8862D9805BA60362617F": "Historique",
  "A26D586356240D793779": "L’historique des messages est transmis dans `env.vars[\"copilot.history\"]`. C’est un tableau de `HistoryMessageUser | HistoryMessageAssistant` :",
  "0DAEEFBD3B0523030D19": "Conversation continue",
  "790BCC61DB0F6EC67493": "Vous pouvez utiliser le chat `@genaiscript` pour insérer l’exécution d’un script dans une conversation existante\nou pour poursuivre la conversation avec Copilot à partir des résultats du script. Les résultats\ndu script sont replacés dans l’historique du chat et accessibles à n’importe quel copilot par la suite.",
  "1D932EBB0DB655DDECD5": "`@genaiscript /run tool` va exécuter le script `tool` et replacer les résultats dans l’historique du chat.",
  "CA263B6732EC506FAB5B": "`analyze the results` poursuivra la conversation avec les résultats du script.",
  "0831D8D4A533736FA84C": "Script par défaut <a id=\"copilotchat\" href=\"\" />",
  "4C160EC8BEDE2F12D772": "Le script suivant peut être utilisé comme modèle de démarrage afin de créer un script par défaut lorsque l’utilisateur n’utilise pas la commande `/run`.",
  "E58769CF69EF152C0A42": "Fonctionnalités non prises en charge",
  "75BBF5B5FB4683965112": "Les fonctionnalités suivantes ne sont actuellement pas prises en charge par le participant au chat :",
  "D296CD6F809EBD28E6C6": "Outils (`#tool`)",
  "F030F39F3D0F5868583E": "référence `Workspace`",
  "75CB81F744F3F5AC7B4A": "Instructions personnalisées `genaiscript` <a href=\"\" id=\"genaiscript-custom-prompt\" />",
  "6601AD8AD5088C10FE86": "GenAIScript enregistre automatiquement un fichier instructions.md dans le dossier `.genaiscript/instructions`\nlorsque vous exécutez un script. Ce fichier contient les instructions utilisées pour générer le script.",
  "690C2356321D9EF7197D": "Sessions de chat augmentées",
  "B5C02259B4FA1B86F4BF": "Voici comment démarrer des sessions de chat en utilisant l’invite `genaiscript`.",
  "C10941C4A811DDF295C4": "Sélectionnez l’icône **Joindre un contexte** 📎 (`Ctrl+/`), puis cliquez sur **Instructions...**,\npuis sélectionnez l’invite **genaiscript.instructions.md**.",
  "A21AE775AF78DC3E8BDD": "Incluez des instructions pour écrire un script ou répondre à une question sur GenAIScript,\nex : `écris un script qui résume une vidéo`.",
  "CA96510F41BAA480C963": "Comme l’invite injecte toute la documentation de GenAIScript (plus de 700 Ko à la date de rédaction),\nvous préférerez utiliser un modèle à large contexte comme Sonnet ou Gemini.",
  "9949584196796F7F8B01": "Gardez aussi à l’esprit que l’intégralité de la conversation est renvoyée à chaque itération, donc cette technique\nfonctionne mieux comme demande détaillée ponctuelle.",
  "8D9B2D580497034C41AB": "Traduit avec l’IA. Veuillez vérifier l’exactitude du contenu.",
  "AEEBD152F61987DAB8C4": "GitHub Gists",
  "02198A9BAAEFCA6CF538": "Utilisez les gists pour partager des extraits de code GenAIScript.",
  "5D0DAD91C9A953E0633B": "[GitHub Gists](https://gist.github.com/) sont un moyen simple de partager des extraits de code et des notes avec d'autres personnes.\nCe sont essentiellement des dépôts Git qui peuvent être créés et partagés facilement.\nLes gists peuvent être publics ou secrets, et ils supportent le versionnage, ce qui en fait un excellent outil pour la collaboration.",
  "3260B0793B06E7DC3A4C": "![Une capture d’écran de GistPad dans Visual Studio Code](./gistpad.png)",
  "DE51F87FF4E17E8A0137": "Exécuter GenAIScript depuis des Gists",
  "11139F9EF335C82E0D2B": "GenAIScript prend en charge les formats d’URL suivants pour exécuter des scripts directement depuis un gist.",
  "8C2A5909C5D60E3D482A": "`gist://<id du gist>/<nom du fichier>`",
  "CB978A1D705AD48DA5EF": "`vscode://vsls-contrib.gistfs/open?gist=<id du gist>&file=<fichier>`",
  "C4BA2E2EDD560B993A63": "Le fichier gist est mis en cache localement dans `.genaiscript/resources` puis exécuté. Si disponible,\nil utilise les informations de connexion GitHub pour accéder aux gists privés.",
  "F88E8C7C82ED11EBC74D": "GenAIScript sont des fichiers JavaScript donc assurez-vous d’exécuter uniquement des gists auxquels vous faites confiance.",
  "4EC4856AD8A207CD7566": "GistPad dans Visual Studio Code",
  "BC8B207C71E4DDB30E42": "L’[extension GistPad](https://marketplace.visualstudio.com/items?itemName=vsls-contrib.gistfs)\npour Visual Studio Code permet de créer, éditer et gérer des gists directement depuis votre éditeur.",
  "F4A93A980327DFF31EC0": "Vous pouvez ouvrir un fichier dans un Gist et l’exécuter à l’aide de la commande `genaiscript`.",
  "03ECC5B58CA990BF5423": "Vérification de types",
  "E898F050948C41CD0117": "Pour activer la vérification des types, il faut téléverser le fichier `genaiscript.d.ts` dans le gist et ajouter une référence à celui-ci\nen ajoutant ce commentaire **en haut du fichier** :",
  "53F8DFECF99D1DF6F46C": "Cela peut se faire automatiquement :",
  "D91E821771AB51FF986A": "clic droit sur le fichier GenAIScript du Gist",
  "D9ACB43C9B92C5023117": "sélectionnez `GenAIScript: Fix Type Definitions`",
  "E89B91B635177AED47C5": "Il se peut que l’on vous demande d’autoriser GenAIScript à utiliser votre compte GitHub. GenAIScript demandera un jeton avec le scope `gist` pour téléverser les fichiers manquants.",
  "775C663D0926D6585F16": "Pour charger les types GenAIScript, vous devrez “stimuler” le compilateur TypeScript :",
  "4DE60393F31D9EF82E16": "ouvrez le fichier `genaiscript.d.ts` à partir de l’arborescence GistPad (cela charge les types en mémoire)",
  "8F4BD89D5C06AC4E3B1B": "ouvrez votre fichier GenAIScript dans l’arborescence GistPad et il devrait bénéficier de la vérification de types !",
  "93A2D95DEE60A0B8B972": "Limites",
  "E454AB35D5DBBCB41F0D": "Comme l’extension GistPad n’est pas un IDE complet, il existe certaines limites à prendre en compte :",
  "CA6DAE8B1E540FDC5E79": "les imports risquent probablement de ne pas se résoudre",
  "1E69C89F41A66074FAB9": "Traduit avec l’IA. Veuillez vérifier l’exactitude du contenu.",
  "C3C8F2FD9F3CFCA978C3": "API Node.JS",
  "34BE7BCABF1741D7F7C6": "Découvrez comment importer et utiliser l’API Node.JS pour exécuter des scripts dans un thread worker isolé, incluant la configuration des variables d’environnement et des détails d’intégration pour une flexibilité accrue.",
  "7E9943013970701DBF34": "GenAIScript s’exécute dans un environnement Node.JS (légèrement modifié) où des globales supplémentaires ont été ajoutées.\nCet environnement est configuré par le [cli](/genaiscript/reference/cli).\nPar conséquent, pour exécuter un GenAIScript dans un processus Node.JS « standard », vous aurez besoin de l’**API `run` de Node.JS**. Cette API charge et exécute un script GenAIScript dans un thread worker séparé.",
  "EA9A27D1B575C28A29EB": "Cette page décrit comment importer et utiliser GenAIScript comme une API dans votre application Node.JS.",
  "9C460A2063D060DED9BD": "Configuration",
  "1397B7BC687D03D2AB1C": "En supposant que vous avez ajouté le cli comme dépendance dans votre projet,\nvous pouvez importer le [cli](/genaiscript/reference/api) de la manière suivante :",
  "5C99A264DDCDE7E57F5C": "Utilisation",
  "0051353BDB1AEA5F7F01": "L’API peut être importée à l’aide d’imports depuis **\"genaiscript/api\"**.",
  "D1303FD0617D922938E4": "Le wrapper importé `api.mjs` est un petit chargeur sans dépendance qui lance un [thread worker Node.JS](https://nodejs.org/api/worker_threads.html) pour exécuter GenAIScript.",
  "2E1AE4E9399E4462506D": "Aucune pollution des globales",
  "FFF0D7058241F06B5D80": "Aucun effet de bord sur le processus",
  "605AE9E64547FBDF37D0": "`run`",
  "4681C4A46860E86022BF": "La fonction `run` encapsule la commande [cli run](/genaiscript/reference/cli/run).",
  "6754FA4D0AB7A3A08CD0": "Variables d’environnement",
  "F6D68F43276A61E273AD": "Vous pouvez définir les variables d’environnement pour le processus GenAIScript en passant un objet en tant que champ `env` dans les options. Par défaut, le worker héritera de `process.env`.",
  "BA8B61DA3FD01C4DCA25": "Traduit par IA. Veuillez vérifier l’exactitude du contenu.",
  "BCBE28A2C16BF01E6DFC": "article de blog",
  "379D989837E0886D76BE": "fonction depuis le ",
  "FC2E950878FB4BD07CC1": "moteur GenAIScript",
  "96CDC63EDC0F050AB1B3": "Explication du code",
  "0EEBD03423EE5197E465": "Cette ligne importe la fonction ",
  "55990CD7E969BBB92970": "Cette ligne appelle la fonction ",
  "8D71D353D40E587B8FB8": "participant de chat",
  "04C68684C83D72437C66": "La fonction `makeItBetter` ressemble grossièrement à ceci. Elle enregistre une fonction de rappel qui est appelée à chaque tour de chat. ",
  "A35E27D6444A01B74377": "Initialisation",
  "CB8FCFB257993C02699D": "Importer le runtime",
  "5355DA6C0506EB984D08": "Variables globales\n\nLe runtime installe des parseurs globaux et des types de prompts en ligne. Toutefois, les variables globales comme `$`, `def`, etc., ne sont pas disponibles, uniquement dans les prompts en ligne.",
  "9959919566C8FB24083C": "Utilitaires\n\n* [cast](/genaiscript/reference/runtime/cast), convertir n’importe quelles données en sorties structurées\n* [classify](/genaiscript/reference/runtime/classify), classifier du texte\n* [makeItBetter](/genaiscript/reference/runtime/make-it-better), demander au LLM d’améliorer son résultat",
  "FC156B1D6A20ADB1C155": "convertir",
  "1DB64C8B79DDA4014642": "classifier",
  "20D88C99AEFC0773E7AC": "améliorer",
  "72BCB013ED85A48FF6DA": "Vidéo",
  "27E248D1F6EDEBA8F3F1": "Découvrez diverses commandes liées à la vidéo",
  "ED12D0518DF4D10D23D9": "Certaines des [fonctionnalités de traitement vidéo](/genaiscript/reference/scripts/videos) sont également disponibles dans la CLI.",
  "891AA70CE4BBA53D9755": "`video probe`",
  "E207FDF8666BA90F5CBD": "Affiche le résultat de `ffprobe` dans la console.",
  "9DD6F21C97595A5CB602": "`video extract-audio`",
  "3AF6D8B24AF8162E1C07": "Extrait l’audio dans un format plus léger, optimisé pour la transcription.",
  "FA0C74D50816CA6A0C1E": "`video extract-frames`",
  "33F06E61850A43059E82": "Extrait des captures d’écran de la vidéo. Vous pouvez spécifier les timestamps en secondes ou sous le format `h:mm:ss`, ou encore un nombre de captures.",
  "6BCDF83D1E47A968C3FF": "Traduit à l'aide de l'IA. Veuillez vérifier l'exactitude du contenu.",
  "E966F1EC9B8CED6E41B3": "Test",
  "A7AB8FCD5D126D608CED": "Apprenez à exécuter des tests pour vos scripts à l’aide du CLI GenAIScript, avec prise en charge de plusieurs modèles d’IA.",
  "F921D5D5B33AD9A0D545": "Exécute les tests dans les scripts en utilisant [promptfoo](https://www.promptfoo.dev/).",
  "57E845BA31C9F9D2974D": "Vous pouvez remplacer les modèles utilisés pour les tests à l’aide de `--models` :",
  "3699143004EA0BE4E45D": "Cette fonctionnalité nécessite d’ajouter `@genaiscript/api` à vos dépendances dans `package.json`.",
  "9617C2757D4D9D3F7289": "visionneuse de résultats",
  "37B2530A65D32931AD4F": "Exécutez la commande `test view` pour lancer la visionneuse des résultats de test :",
  "265CEF24E9BDA83AB4A8": "Traduit à l'aide de l’IA. Veuillez vérifier l’exactitude du contenu.",
  "4E375FE85378D2428F5A": "Guide complet pour utiliser l’interface en ligne de commande (CLI) GenAIScript afin d’automatiser des tâches avec des scripts d’IA dans des environnements Node.js.",
  "A3BC6C83B64069AA0936": "La CLI GenAIScript **`genaiscript`** exécute des scripts GenAIScript en dehors de Visual Studio et dans vos [processus d’automatisation](/genaiscript/getting-started/automating-scripts).",
  "945FC99F52257BE00477": "Prérequis",
  "C6AE8F9493BE4CCF075A": "La CLI est un package Node.JS hébergé sur [npm](https://www.npmjs.com/package/genaiscript).",
  "91B9C74D8BB72390366B": "Installez [Node.JS LTS](https://docs.npmjs.com/downloading-and-installing-node-js-and-npm) (Node.JS inclut npm et npx).",
  "E67E976CAF53E2B605E8": "Vous devez disposer au minimum de Node.JS v22 !",
  "87A3A99DF9B9AF637FE6": "Installation",
  "53B678E5E364D858596C": "Installez localement en tant que `devDependency` dans votre projet.",
  "B7CDBF7EC9B48CA9AD87": "Installez-le globalement.",
  "01F946867E3C3C33B76A": "Vérifiez que votre version de node est au moins 20._ et npm 10._ en lançant cette commande.",
  "64FE8F9327AC79194813": "Aucune installation (`npx`)",
  "869571B4FBC92AACBC4D": "`npx` est inclus avec **Node.JS**.",
  "2B4BC458039566847030": "Avec [npx](https://docs.npmjs.com/cli/v10/commands/npx),\nvous pouvez exécuter la CLI sans étapes d'installation préalables.\n*npx* installera l’outil à la demande. npx gère également les problèmes d’environnement\noù l’outil n'est pas trouvé dans le chemin système.",
  "B78390E1761CF406E7FB": "Ajoutez `--yes` pour passer outre la demande de confirmation, utile dans un scénario d'intégration continue (CI).",
  "78C4B77E354DE2176B38": "Spécifiez la plage de versions pour éviter tout comportement inattendu avec des installations mises en cache de la CLI via npx.",
  "59528E549087CF9362FD": "Scripts utilitaires",
  "255CF5A39F397C94A034": "Pour vous assurer que les fichiers de définition TypeScript sont écrits et mis à jour,\nvous pouvez ajouter les scripts suivants à votre fichier `package.json`.",
  "CEF329AD80BA09DBBDD2": "Le script `genaiscript` est également un raccourci qui facilite l’exécution de la CLI\navec `npm run` :",
  "DF0C62D1E6343434A9F0": "Travailler derrière un proxy",
  "E6A0A4D34C377A866CCC": "Certains packages optionnels utilisés par la CLI ne prennent pas en charge l'installation derrière un proxy HTTP,\nce qui est très courant en contexte d’entreprise.",
  "62B429ADA8FF275A088F": "Si votre environnement de travail nécessite un proxy,\nutilisez `npm install --omit=optional`\npour permettre aux packages optionnels d’échouer proprement durant l'installation.",
  "6F04866A914F5C531CF9": "Si votre environnement de travail nécessite un proxy,\nvous pouvez définir l’une des variables d’environnement suivantes\n(`HTTP_PROXY`, `HTTPS_PROXY`, `http_proxy` ou `https_proxy`) pour que la CLI utilise un proxy,\npar exemple `HTTP_PROXY=http://proxy.acme.com:3128`.",
  "A5B6D6FCB898AADD2BE2": "Configuration",
  "0CC9D79E99070854D934": "La CLI charge les [secrets](/genaiscript/getting-started/configuration) à partir des variables d’environnement ou d’un fichier `./.env`.",
  "91A1A814EC331615DF92": "Vous pouvez remplacer le nom de fichier `.env` par défaut en ajoutant l’option `--env .env.local`,\nvoire importer les deux fichiers.",
  "177FA0DB149F764CDC48": "Créer un nouveau script",
  "606DFAA013604E4DBC53": "Crée un nouveau fichier de script dans le dossier `genaisrc`.",
  "2D29F30FF8E417AA994A": "Compiler les scripts",
  "962B9069078CC04699D6": "Lance le compilateur TypeScript pour trouver les erreurs dans les scripts.",
  "B17DA12E232CC4D256EA": "Exécuter un script",
  "B9425D79F4FAEA0FCCC3": "[Exécutez un script](/genaiscript/reference/cli/run) sur un fichier\net diffuse la sortie du LLM vers stdout. **À exécuter depuis la racine de l’espace de travail**.",
  "5B6E6EAE5602D37E6FA9": "où `<script>` est l’identifiant ou le chemin du fichier de l’outil à exécuter, et `[files...]` est le nom du fichier de spécification à traiter.",
  "178033CBF3602C3BE596": "La CLI prend également en charge le piping à la manière d’UNIX.",
  "3A4E1E7AEBA7B6FA3D21": "Lister la configuration des modèles",
  "54451619314FA51D345E": "Lancez la commande `script model` pour lister les scripts disponibles et leur configuration de modèle. Cela peut être utile pour diagnostiquer les problèmes de configuration en environnement CI/CD.",
  "77AA4F4B9C9A38D65CD7": "où [script] peut être un identifiant de script ou un chemin de fichier.",
  "B6809D01799DBBFDE37B": "Utilisation de la CLI comme API Node.JS",
  "01279E9827848457C0CE": "La CLI peut être importée et [utilisée comme une API dans votre application Node.JS](/genaiscript/reference/api).",
  "22644CE82ACB36F8AB1B": "À propos du mélange de fichiers et de `--vars`",
  "963A3FC54BFBC073247B": "`files` et `--vars` sont tous deux des arguments variables en ligne de commande. Ils consommeront donc toutes les entrées suivantes jusqu’à l’apparition d’une nouvelle option. Ainsi, l’ordre est important lorsque vous les mélangez. Il est recommandé\nde placer les fichiers d’abord, puis de suivre avec l’option `--vars`.",
  "A57D77F851AC0B6F787C": "[ambiguïté d’analyse](https://github.com/tj/commander.js/blob/HEAD/docs/options-in-depth.md#parsing-ambiguity)",
  "F51C854B05BFA52ABDD5": "Sujets",
  "57D7DDF2B71DF1E08503": "Traduit avec l’IA. Veuillez vérifier l’exactitude du contenu.",
  "C44AE508DF9BA8337DD8": "Convertir",
  "69BFFA0B38DBAF881233": "Découvrez comment appliquer un script à plusieurs fichiers et extraire le résultat.",
  "0860929572CE217012F7": "Convertit un ensemble de fichiers, séparément, à l'aide d'un script.",
  "1A94AD9FC2D3A6081F5B": "où `<script>` est l’identifiant ou le chemin du fichier de l’outil à exécuter, et `<files...>` est le nom du fichier de spécification sur lequel l’exécuter.\nContrairement à `run`, qui fonctionne sur tous les fichiers en même temps, `convert` traite chaque fichier individuellement.",
  "59C13C63CF48063189D6": "Fichiers",
  "3E074B22666534B53683": "`convert` accepte un ou plusieurs motifs [glob](https://en.wikipedia.org/wiki/Glob_\\(programming\\)) pour faire correspondre les fichiers dans l’espace de travail.",
  "C25C116F7F3568C3F192": "--excluded-files <fichiers...>",
  "F0EDD9182141F5ED8B4F": "Exclut les fichiers spécifiés de l’ensemble des fichiers.",
  "1C74FAE4C1A346C0D0DF": "--exclude-git-ignore",
  "4F8416728E630ED7ED43": "Exclut les fichiers ignorés par le fichier `.gitignore` à la racine de l’espace de travail.",
  "B551928F9C232AD961FA": "Sortie",
  "6FCEAAD7191137043C33": "La sortie de chaque fichier est enregistrée dans un fichier nouveau ou existant. Vous pouvez contrôler la logique pour décider quelle partie de la sortie sauvegarder et où la sauvegarder.\nPar défaut, le résultat de conversion d’un fichier `<filename>` est enregistré dans un fichier `<filename>.genai.md`.",
  "2CCD246D47F3EE5231F3": "--suffix <suffixe>",
  "4B27022ECE3CB00EF384": "L’option `--suffix` vous permet de spécifier un suffixe à ajouter au nom du fichier de sortie.",
  "AD6EC7171F56625CDD51": "GenAIScript va « défencer » automatiquement la sortie dans le markdown qui correspond au suffixe (après `.genai`). Ainsi, si le LLM génère",
  "D1EC5393BEC311E05E6C": "Le contenu converti dans `<filename>.genai.txt` sera `:)`.",
  "09B595E24A1A602CB141": "--rewrite",
  "F2BCF924E815349E13D1": "Ce drapeau remplace l’option `suffix` et indique à GenAIScript d’écraser le fichier original avec le contenu converti.",
  "3339E2EF996955612696": "--cancel-word <mot>",
  "9D7D21DBD35CA75BA193": "Spécifiez le mot-clef \"ignorer la sortie, rien à voir ici\" en utilisant l’option `-cw`.",
  "11BFC42A6646F57885CE": "En savoir plus",
  "A96E87976CC73D9D92D1": "La liste complète des options est disponible dans la [référence CLI](/genaiscript/reference/cli/commands#convert).",
  "6E704ACFE8BEBB80BC45": "Traduit par intelligence artificielle. Veuillez vérifier l’exactitude du contenu.",
  "8AE211ED65242526AF81": "Vous pouvez lancer le ",
  "25E8533FAD702E538754": "en tant que ",
  "AF85C5B17C2A6FEFB370": "serveur Web API",
  "83FE86338D9A0AFB5520": "fastify",
  "23A489C15A4163CC3D88": "Scripts en tant que points de terminaison REST",
  "4CD15632A8F45912F364": "Les paramètres de point de terminaison OpenAPI sont déduits automatiquement des ",
  "B93434CC80FC65B8CB4D": "paramètres du script",
  "E55AB7D6B42B0585B421": "Voici un script `task.genai.mjs` ",
  "BFE5EB978EB5DF5133B6": "Un script plus avancé pourrait ne pas utiliser le contexte de premier niveau et utiliser à la place `env.output` pour transmettre le résultat. ",
  "FACFA2C29E27EE149C1C": "Route",
  "2F7A858F6AD48EFF9B0E": "La route par défaut est ",
  "2C9FA8A9C4460AFF15A8": "et la spécification OpenAPI est disponible à ",
  "401CF8F5A245BFF981D6": "La spécification OpenAPI sera disponible à ",
  "35373C0002E4496B9A9A": "Le serveur sera disponible à ",
  "39D5B83D66CB48EDBD9B": "Script de démarrage",
  "CDDF6D7FBAF4BE0205E8": "Vous pouvez spécifier un identifiant de script de démarrage dans la ligne de commande en utilisant l'option ",
  "89EE544927CE0342A54A": "Filtrage des scripts",
  "D75C89A3DB6C87B95B1F": "option `--groups` et définir le groupe ",
  "7026089844B86522E4ED": "Exécution des scripts depuis un dépôt distant",
  "AF02065D95D6F6297D93": "Vous pouvez utiliser l'option ",
  "5E969AA0073E1100EA73": "Linting",
  "18A5AA841A6DA445137F": "Vous pouvez exécuter ",
  "091C27287DCF5E6F3FE4": "spectral",
  "29FA1C5E43831A053A6D": "enregistrez ce fichier ",
  "ADDA7A51E17CEA18CA85": "lancez le serveur api",
  "BB5D63D4809FB53180EE": "exécutez le linter spectral",
  "E1E23D53E32F87500DC7": "Les bases de GenAIScript",
  "6A6B2D426B158999ACD7": "Introduction",
  "6CA1B4701267680EED1D": "Termes clés",
  "FD6F0316C223C12341C7": "GenAIScript : un programme JavaScript stylisé qui définit le contexte\npour l'appel du LLM, permet l'exécution de code JavaScript arbitraire, \nprépare l'entrée du prompt pour le LLM, appelle le LLM et traite la sortie du LLM\nselon les instructions données dans le prompt.",
  "F8F717EE559777F7C4ED": "GPVM : un système d'exécution qui, à partir d'un GenAIScript, exécute ce dernier,\nce qui implique d'intégrer le contexte dans un prompt, d'appeler le LLM spécifié,\net d'extraire le contenu du résultat du LLM.",
  "DACFE5DECAA0DDB66A41": "Extension GenAIScript pour VS Code : un module complémentaire pour VS Code qui offre\naux utilisateurs des méthodes simples pour créer, éditer, exécuter et déboguer\ndes GenAIScript.",
  "2DF66CA5A1B2C7A8570B": "Modèles de base et LLM : bien que GenAIScript supporte actuellement différents LLM,\nnous prévoyons à l'avenir d'intégrer des modèles fondamentaux additionnels au-delà des modèles linguistiques larges.",
  "8EAC121F1503C057DFDE": "Capacités",
  "7EE6F9C5C549DDC79F4E": "Comportement du système",
  "362262921C9B115C2B1C": "Documentation",
  "31AD16D880FC0FC89392": "Cas d'utilisation",
  "BABBB395CC31FFCF5ACE": "Utilisations prévues",
  "5CA16ADF794F773F89B1": "Utilisations non prévues",
  "EB0236226603383B5C02": "sécurité et confiance",
  "B692E173573E188A56E9": "Meilleures pratiques pour les modèles fondamentaux",
  "057E58F34007E41BA4AC": "Article de blog sur les fonctionnalités d'IA responsable dans AOAI présentées à Ignite 2023",
  "90AAF7C042B7FCE08AD6": "Note de transparence pour le service Azure OpenAI",
  "D5FFB0AFF5F772D8D1D6": "Nous recommandons de consulter la documentation [Sécurité du contenu](/genaiscript/reference/scripts/content-safety) pour plus d'informations sur la protection contre les contenus nuisibles et le contournement des protections. ",
  "72C55B2ED59F9D03FD3A": "Limitations",
  "D66BAD69E5BF60A18883": "Bonnes pratiques pour améliorer les performances du système",
  "301637088C52296D5CCE": "En savoir plus sur l'IA responsable",
  "3190EAD539563FDF3671": "Principes d'IA Microsoft",
  "03D3721E22408D6FA2CB": "Ressources Microsoft sur l'IA responsable",
  "2CEA0BB19E340580EBDE": "Cours Microsoft Azure Learning sur l'IA responsable",
  "AF21D5066A1626F5F620": "En savoir plus sur GenAIScript",
  "559D17A0A8E4A8023882": "Contactez-nous",
  "EBD1021AACDF00B916F4": "À propos de ce document",
  "16D0ED8DC6F1134B4FF5": "Ne faites pas confiance aux scripts",
  "E64731FCD533E2173AB5": "Les fichiers GenAIScript `.genai.mjs` sont des fichiers JavaScript exécutables utilisant en fait un moteur d’exécution JavaScript (VSCode ou Node). Il est important de comprendre que le script peut faire tout ce que JavaScript peut faire. Cela inclut la lecture et l’écriture de fichiers, les requêtes réseau, et l’exécution de code JavaScript arbitraire. ",
  "A5A9D0C59A7604AFBAF8": "Ne lancez pas de scripts `.genai.mjs` provenant de sources non fiables. ",
  "73F9EB7AEAC99B445275": "Ne faites pas confiance aux résultats générés par le LLM",
  "20D58DB3C4AB996C8A13": "Confiance dans l'espace de travail Visual Studio Code",
  "3DFE166DD6AABAAEF9C7": "L’extension est ",
  "F03CDA60B5F97987D83E": "désactivée",
  "1039F2F28EEB17EE2FD1": "lors de l’ouverture d’un dossier en ",
  "57C388B2A4303B13D688": "Mode Restreint",
  "6B4522AB2894FAB7A1A2": "Aperçu Markdown dans Visual Studio Code",
  "02662DA0598C4DDC1FB9": "VS Code restreint le contenu affiché dans l’aperçu Markdown",
  "AA153B4DC4B02E7C59E4": "Le ",
  "387673882A7A38ADA505": "**Playground**",
  "0FA68B585139356BCFBB": "Lancement",
  "7B7D5053DF24C15A419C": "Dépôt distant",
  "6903FCA2ECFCF57E571E": "Vous pouvez exécuter le playground sur un dépôt distant en utilisant vos secrets `.env` actuels. ",
  "AE4C15CCFCA1E683813E": "Installation locale",
  "AAAF21822DB456489FE6": "puis exécutez",
  "C2596D94B5F10C0F5E9A": "Exécution de scripts depuis un dépôt distant",
  "2E930E5D6275D36E0F8E": "Vous pouvez utiliser l’option `--remote` pour charger des scripts depuis un dépôt distant.\nGenAIScript effectuera un clonage superficiel du dépôt et exécutera le script depuis le dossier cloné. ",
  "39666A740E501FA6F183": "Documentation complète pour l'automatisation des scripts, les configurations LLM et les outils de développement, incluant une extension VSCode et une interface en ligne de commande pour les transformations basées sur l'IA du code.",
  "8290979947F4DA3D1F37": "GenAIScript est un langage de script qui intègre les LLM comme un élément de premier plan du processus de script, permettant aux utilisateurs de créer, déboguer et déployer facilement des scripts basés sur LLM capables d'accomplir des tâches au-delà de ce que le code conventionnel peut faire. Ce guide de référence fournit une documentation complète pour GenAIScript, incluant la syntaxe des scripts, les configurations LLM, l'extension VSCode et l'interface en ligne de commande.",
  "B03CB00E19D7AB5F4A51": "[Scripts](/genaiscript/reference/scripts) offrent un cadre JavaScript spécifique au domaine pour construire des requêtes LLM.",
  "878438F877A19F4B317D": "[CLI](/genaiscript/reference/cli) documente l'interface en ligne de commande pour automatiser l'exécution des GenAIScripts.",
  "2A9C82CDAF2B7B3EBDC3": "[Extension Visual Studio Code](/genaiscript/reference/vscode) fournit un ensemble riche de fonctionnalités pour créer, déboguer et déployer des GenAIScripts.",
  "0CCC4949C3E968BF65FA": "Traduit à l'aide de l'IA. Veuillez vérifier l'exactitude du contenu.",
  "6E1A29C67C915FA13EF9": "GitHub Actions",
  "36A06EC02903ACD9D7DC": "Apprenez à utiliser GitHub Actions pour automatiser vos workflows et améliorer votre processus de développement.",
  "97A13F7672212CB45759": "[GitHub Actions](https://docs.github.com/en/actions) est une plateforme d'intégration continue et de livraison continue (CI/CD) qui vous permet d'automatiser votre pipeline de construction, de test et de déploiement. Vous pouvez créer des workflows qui construisent et testent chaque pull request vers votre dépôt, ou déployer les pull requests fusionnées en production.",
  "8CD7FDE62C0F96398B7C": "[Récemment](https://github.blog/changelog/2025-04-14-github-actions-token-integration-now-generally-available-in-github-models/), GitHub a ajouté la possibilité d'utiliser également les [GitHub Models](https://docs.github.com/en/github-models) dans les actions.",
  "66BF7CDFA7303DC155AE": "La combinaison d'Actions et de Models vous permet d'exécuter GenAIScript dans le cadre de votre CI/CD.",
  "20D23D3AEE93B234EED9": "Passez à la section [Custom Actions](#custom-actions) pour apprendre à emballer un script GenAIScript en tant qu'action GitHub.",
  "8EAE99E11CF6BCA30F76": "Exemples",
  "293F700888FBFD74DBC3": "[GenAI Issue Labeller](https://github.com/pelikhan/action-genai-issue-labeller/)",
  "F19BB84E7768DC2B31B8": "[GenAI Issue De-duplicator](https://github.com/pelikhan/action-genai-issue-dedup/)",
  "C5C8431D4A4131621657": "[GenAI Video Issue Analyzer](https://github.com/pelikhan/action-genai-video-issue-analyzer/)",
  "03144E04055EAD9B81D8": "[GenAI Code Commentor](https://github.com/pelikhan/action-genai-commentor/)",
  "3573812B540BDB701F5E": "Permissions des GitHub Models",
  "882E87959EB66BAE9A51": "[Pour utiliser les Models dans une action GitHub](https://docs.github.com/en/github-models/use-github-models/integrating-ai-models-into-your-development-workflow#using-ai-models-with-github-actions), vous devez définir les `permissions` de l'action pour inclure `models: read`.",
  "6333CA6E57B56CB7A37C": "GenAIScript prend en charge nativement les GitHub Models, vous pouvez donc l'utiliser directement dans votre workflow GitHub Actions.",
  "BF6A00C690B1F6E898F4": "Utilisation de la CLI",
  "096A45D5DB42027E15C2": "La manière la plus simple d'utiliser GenAIScript dans une action GitHub est d'exécuter la [CLI](/genaiscript/reference/cli) directement. Vous pouvez le faire en ajoutant une étape à votre workflow qui exécute la commande `genaiscript`.",
  "4A95A21898516B7393DD": "**Assurez-vous d'inclure le `GITHUB_TOKEN` dans les variables d'environnement** afin que GenAIScript puisse s'authentifier auprès des GitHub Models.",
  "06F6647711F081B926E7": "Actions personnalisées",
  "423B3DF5537FF293A665": "GitHub prend en charge la création de tâches sous forme d’[actions personnalisées](https://docs.github.com/en/actions/sharing-automations/creating-actions/about-custom-actions), généralement dans un dépôt dédié. C'est un excellent moyen d’emballer un script IA et de le partager avec d’autres.",
  "136F3569F49C62BB047C": "La CLI GenAIScript fournit une commande pour générer/mettre à jour le code de base permettant d’emballer un script en tant qu’[action conteneur Docker](https://docs.github.com/en/actions/sharing-automations/creating-actions/creating-a-docker-container-action) afin qu’il puisse être utilisé dans GitHub Actions quel que soit le langage utilisé pour écrire le script.",
  "760F4816B6DE579B21D6": "Pour commencer,",
  "C4B9A292864E615CE5F1": "Créez un nouveau dépôt pour votre action.",
  "CBC3B8004BB98ADAECD0": "Ouvrez un terminal à la racine de votre dépôt.",
  "F3E92C29E191E9CD1B1E": "Exécutez la commande pour générer le squelette de l'action :\n\n```bash\nnpx -y genaiscript configure action",
  "B2DBC80B724EA2C10190": "`action.yml` fichier de métadonnées de l'action",
  "E60B1171501B8B3C9F71": "`Dockerfile` Dockerfile pour l'action",
  "F9CEF7016F69CD7D4FEC": "`README.md` documentation pour l'action",
  "3FFEFADA19A3D785423F": "`.gitignore` fichiers à exclure dans le dépôt",
  "5178298E56AD9AB284AE": "`.github/workflows/ci.yml` workflow CI pour tester l’action",
  "39195B01030192C3207A": "`package.json` configuration du package pour l’action",
  "832A7FADE2D0081FFBBB": "`devcontainer/devcontainer.json` configuration du devcontainer pour VS Code",
  "11826F66D7FEAFD31895": "`devcontainer/Dockerfile` Dockerfile du devcontainer pour VS Code. Doit rester synchronisé avec le Dockerfile de l’action.",
  "E64F1A67ECF4769AC8B5": "Pour mettre à jour le squelette de l’action, vous pouvez exécuter à nouveau la même commande :",
  "1C424F70D84CED703093": "Métadonnées",
  "44A40245DA14FFE39F70": "Le fichier `action.yml` contient les métadonnées de l’action. Elles sont extraites de différentes parties de votre projet :",
  "EBF5046C71F84C6A4C20": "Le `name` est dérivé de l’identifiant du script.",
  "51F978ED5D0962B755D3": "La `description` est dérivée du `title` du script.",
  "57599AFED72D017CEED6": "Les `inputs` sont dérivés des [paramètres](/genaiscript/reference/scripts/parameters) du script (voir ci-dessous).",
  "8BB1865BE27D3DA0D510": "Notez que la `script.description` est utilisée pour remplir le fichier `README.md`.",
  "A8F101DED4825B50438C": "Entrées",
  "E803100B411D97985614": "La section `inputs` du fichier `action.yml` est générée automatiquement à partir des paramètres du script. Chaque paramètre est converti en une entrée ayant le même nom, et le type est déduit du type du paramètre.",
  "6C9A8ABF7BC61ED8718E": "Le fichier `action.yml` généré ressemblera à ceci :",
  "1DD777B47BB21C9E29EC": "Il existe également des champs additionnels communs à toutes les actions GenAIScript :",
  "00DC455D086A203E9BA0": "`files` : Spécifie un chemin de fichier pour remplir la variable `env.files`. Pour supprimer ce champ, définissez `accept: \"none\"` dans le script.",
  "0D0E28A0CB783E8189A5": "`github_token` : **Ceci est nécessaire pour s'authentifier auprès des GitHub Models.** Il devient `INPUT_GITHUB_TOKEN` lorsque le conteneur est créé et GenAIScript le récupère automatiquement.",
  "DCBB5F5C53FE33AB3214": "`github_issue` : Le numéro actuel de l’issue GitHub ou de la pull request.",
  "A85DFD002E672C3B8E8D": "`debug` : Le filtre pour contrôler les messages de [journalisation](/genaiscript/reference/scripts/logging) en mode debug.",
  "341DE51C1836436A79DF": "Sorties",
  "8F351B0FA6737DD4D4B6": "L’action remplit quelques champs de sortie.",
  "1486292F05DF42B8B501": "`text` : il s'agit du texte généré par le script.",
  "28072BAC46E665E84580": "`data` : c’est la sortie structurée analysée et convertie en JSON. Ce champ est renseigné si vous fournissez un [responseSchema](/genaiscript/reference/scripts/schemas) dans le script et si le LLM est capable de générer une réponse conforme au schéma.",
  "6059805CD960EB40BC92": "Personnalisation graphique (Branding)",
  "B07268F38C5A35900BCB": "Le champ `branding` du `script` est utilisé pour [personnaliser l’apparence de l’action dans l’interface GitHub](https://docs.github.com/en/actions/sharing-automations/creating-actions/metadata-syntax-for-github-actions?versionId=free-pro-team%40latest&productId=actions&restPage=sharing-automations%2Ccreating-actions%2Creleasing-and-maintaining-actions#branding).",
  "0CDFCAF3C62F0668E21E": "Conteneurs",
  "F7A017359148B2FB0618": "Par défaut, GenAIScript utilise [node:lts-alpine](https://hub.docker.com/_/node/) comme image de base pour le conteneur de l’action. Vous pouvez modifier cela en spécifiant une image de base différente dans la `cli`.",
  "5EBDB194C3A8B2F4E40A": "GenAIScript créera également un [devcontainer](https://code.visualstudio.com/docs/devcontainers/create-dev-container) afin que vous puissiez développer l’action dans un environnement conteneurisé (presque) identique à celui dans lequel elle s’exécute dans GitHub Action.",
  "92EB1A8687CE2AAC2119": "ffmpeg, playwright et autres paquets",
  "27FAEF6F7A957EB1DBAF": "Pour garder le conteneur d’action léger, GenAIScript n’inclut pas `ffmpeg`, `playwright` ou d’autres paquets par défaut. Vous pouvez les ajouter au conteneur en les spécifiant dans la commande `cli`.",
  "9B0BB2101E61D8433818": "Vous pouvez aussi ajouter tous les autres paquets dont vous avez besoin en les spécifiant dans la commande `cli`.",
  "54970F299DC88F0034B4": "Tester l’action",
  "4CB7FC543A6EB2D0EE4C": "Votre script doit pouvoir être testé localement en utilisant la commande `npm run dev`. N’hésitez pas à le modifier dans `package.json`.",
  "39FA39FD34702BABFDDA": "Ou si vous souhaitez simuler l’environnement GitHub Action, vous pouvez définir les variables `INPUT_<parameter>` dans l’environnement.",
  "CBC91DD5603199C30E6D": "Espace de travail GitHub vs Espace de travail de l’Action",
  "0FB3D7F44694C021887E": "Quand l’action est exécutée dans un conteneur, le contenu du dépôt de l’action est d’abord copié dans le répertoire `/github/action`. GitHub clone ensuite le dépôt dans le répertoire `/github/workspace`.",
  "4501ABEE3A54AF489951": "L'`ENTRYPOINT` dans le `Dockerfile` est configuré pour lancer la CLI `genaiscript` dans le répertoire `/github/action`, puis il détecte la variable d’environnement `GITHUB_WORKSPACE` pour déterminer le répertoire de travail et change alors le `cwd` en conséquence.",
  "5E3748BA0D23E03387EB": "Ce mode est activé par le drapeau `--github-workspace` dans la commande `cli`.",
  "FCE12644650D3A8D6C08": "Traduit avec l'aide de l'IA. Veuillez vérifier l'exactitude du contenu.",
  "52D659237F0553923FA2": "variable d'environnement",
  "DC5CF2926BBB4E499DD3": "options en ligne de commande",
  "F76220156EEB08FA4390": "Résolution des fichiers de configuration",
  "AD2CFE899864279D5B52": "Les fichiers JSON prennent en charge le format ",
  "F7A1AF01A5690F8D1336": "JSON5",
  "7F8286F8509AA52BAF2F": "Schéma",
  "4348F39AAD615061D2D5": "Le schéma de configuration est disponible à ",
  "FC53C528BBB4DA314247": "propriété",
  "88DB975396D4F70BDD98": "L'emplacement final de `envFile` sera utilisé pour charger le secret dans les variables d'environnement. Il supporte un seul ",
  "9F83DCF55D8A6A9CAABC": "propriété",
  "2D7C3F3E8A5A26189DEA": "La propriété `include` vous permet de fournir des chemins globaux pour inclure davantage de scripts.\nCombiné à un fichier de configuration global, cela permet de partager des scripts pour plusieurs projets. ",
  "7FCADBE02D8464644961": "propriété",
  "307DC4DA40652F8306D3": "La propriété `modelAliases` vous permet de fournir des alias pour les noms de modèles. ",
  "7006C3EEF4106F0A4EC4": "propriété",
  "340A43AEDC91F6CDE83D": "La propriété `modelEncodings` vous permet de fournir l'encodage du modèle. ",
  "23A63D864DE2513DC1E7": "Débogage",
  "0298EE598D404410A439": "Activez la catégorie de débogage `config` pour voir des informations supplémentaires sur la résolution de la configuration. ",
  "7979021997512F8839F0": "GenAIScript prend en charge nativement plusieurs services de la ",
  "C638E186596FDB230834": "[Azure AI Foundry](https://learn.microsoft.com/en-us/azure/ai-foundry/)",
  "3D3DD57553DDC25E38D3": "Authentification",
  "79B567A322EF02D5090B": "Services Azure OpenAI et IA",
  "6D08536C1215D840CD20": "Azure OpenAI",
  "D50671B2B3A9CAE8D614": "Azure AI Inference",
  "61257B813ABF72F6CB35": "Azure OpenAI Serverless",
  "3B600BC1AEBA0E280DE2": "Modèles Azure AI Serverless",
  "C263F0C054209F6B71E0": "Azure AI Search",
  "617A23423DCD627C05C3": "Azure AI Search",
  "7BCC5587C9DA860942E5": "Recherche Vectorielle",
  "FD53986FD0793643E031": "Configuration",
  "996FD1A0EBFBF6683648": "Azure Content Safety",
  "0E80096B0D26BFA9500F": "Azure Content Safety",
  "02E491E9D484F2C5C96E": "Configuration",
  "B8EA7680D6761B115901": "Paramètres utilisateur",
  "890B5D31FC521D8912DB": "Personnalisez votre expérience VSCode avec les paramètres utilisateur GenAIScript pour les diagnostics, la mise en cache et les configurations CLI.",
  "B80110D4F2F93B9A579B": "Les paramètres suivants sont accessibles via la commande **Préférences : Ouvrir les paramètres utilisateur**.",
  "AA0FDF57A77504D49B31": "CLI",
  "BD034981257CDAA15B40": "Ces paramètres contrôlent la manière dont le serveur GenAIScript est exécuté depuis l'extension.\nPar défaut, l'extension utilise [npx](https://www.npmjs.com/package/npx) et la version actuelle de l'extension pour exécuter le CLI GenAIScript.",
  "5CD4D0F5C8751665C554": "Chemin",
  "06B25BC825D2080DD665": "Si vous disposez d'une version spécifique du CLI installée, vous pouvez définir son chemin ici.",
  "763D2FBCAEE24B0A8C4C": "Version",
  "9315B8B40C9D16D9BDE3": "Par défaut, l'extension utilise npx et la version actuelle de l'extension. Vous pouvez remplacer le numéro de version avec ce paramètre.",
  "EEA1221C80146774FC92": "Masquer le terminal du serveur",
  "EA3CCD328560021FC5F5": "Par défaut, le terminal du serveur GenAIScript est masqué après le démarrage du serveur. L'activation de ce drapeau ouvrira un terminal où vous pourrez inspecter les journaux du serveur GenAIScript.",
  "1B04D7221F8B0C918C1B": "Diagnostics",
  "CCC0B0BEA89775B51282": "Ce drapeau active une variété de journaux supplémentaires et de comportements pour aider à diagnostiquer les problèmes avec le serveur GenAIScript.",
  "87FA1C0DB526C2C969F9": "Traduit avec IA. Veuillez vérifier l'exactitude du contenu.",
  "2AC22CFBAC7F0FBCF1F3": "Exécution directe des scripts",
  "4898ECA6F224BC87BE6B": "ouvrez un fichier GenAIScript dans l'éditeur",
  "2FB3C4BD7F744F075231": "faites un clic droit dans l'éditeur et sélectionnez ",
  "C80A685F052903CC98A6": "Exécuter GenAIScript*",
  "E08EDF6C9BB7EBDCE991": "dans le menu contextuel",
  "4594EC564B7AD1961E17": "ou cliquez sur l'icône ",
  "85BB4133320A15B6D90C": "Exécuter GenAIScript",
  "E9007E8FDF1F31A8918E": "dans le coin supérieur droit de l'éditeur",
  "AD33E7B9AF257E99B480": "Cela lancera l'exécution du script en utilisant les fichiers d'entrée par défaut spécifiés dans le champ ",
  "54B1C156E77870CB8D97": "Exécution des scripts à partir de fichiers ou dossiers d'entrée",
  "3EEE9AC55EAEF052CC02": "ou ",
  "855522C98ADDC0F5B173": "faites un clic droit et sélectionnez ",
  "2F97CA9F89233816F6D8": "Exécuter GenAIScript",
  "4874AB2326115CA79607": "dans le menu contextuel",
  "07658679069D6E33F7EA": "Depuis un éditeur",
  "3A16A382FE367495BCE6": "faites un clic droit et sélectionnez ",
  "ABD819AD05DC2DD17513": "Exécuter GenAIScript",
  "5AEDCDC71D12DBCF1392": "dans le menu contextuel",
  "6DE3DD80A9713505BA33": "Utilisation du texte sélectionné dans votre script",
  "206DB08A9D2017B0DD53": "GenAIScript tente de respecter les règles ",
  "9957333E6A728A6D9E2F": "de `.gitignore` de niveau supérieur ",
  "94EAE21A2C662E16A67F": "dans l'espace de travail du projet",
  "8F2C02404C4387C2F956": "si vous lancez ",
  "34AB0533F003403193FC": "Exécuter GenAIScript",
  "F2E2B9D4DD47FAAF7473": "si vous spécifiez ",
  "8C185842450EA5BAF54E": "GenAIScript est pris en charge par une extension [Visual Studio Code](https://code.visualstudio.com/) qui offre un ensemble complet de fonctionnalités pour créer, déboguer et déployer des GenAIScripts. ",
  "89626B44F774F2395030": "Le [Visual Studio Code Marketplace](https://marketplace.visualstudio.com/items?itemName=genaiscript.genaiscript-vscode)\ncontient la dernière version stable de l’[extension](https://marketplace.visualstudio.com/items?itemName=genaiscript.genaiscript-vscode). ",
  "6D9BBB38108A19DAC662": "Télécharger",
  "6E726DF38C285756BA0F": "Instructions d’installation",
  "E40F37AE3D589BD46123": "Exécution des scripts",
  "DE9A53C8DA5A82CD0CBF": "Intégration de Copilot Chat",
  "3050F21502A39BB82900": "Paramètres",
  "4AF46698C24BC3C89061": "GenAIScript s'intègre avec ",
  "C4CF4937AD3CAE137EE6": "en fournissant un ** ",
  "47C17193583CC8A7099B": "participant de chat",
  "31DD6C58F6D919F1BE07": "invite personnalisée",
  "38AB0808FA0E09C7D0F1": "Fonctionnalités",
  "7412DA212BC004270651": "participant de chat",
  "F6A743A84A996E7FF504": "Le ",
  "9B0FC5E9688125AE11A9": " ",
  "C776F416EC774BEA8A10": "participant de chat",
  "241E8A23D341E3662C1E": "d'une conversation ",
  "21794913837B23017B51": "GitHub Copilot Chat",
  "588686191FDEF9BB5092": "Choix du script à exécuter",
  "7A8D6D2B398E53CAC71B": "La commande ",
  "5642E190A063D1FE5D6E": "Si vous omettez la commande ",
  "D75D6C51F555BE148169": "Choix du modèle",
  "7484F1498A711A8B6177": "Ils ne fonctionneront pas depuis ",
  "0EB36104D29F5D61B414": "cli",
  "AF484614C7717BDC804E": "ou ",
  "360FF564DE6C805ECB8C": "playground",
  "BD9AADBA48387CD83E75": "Disponibilité des modèles",
  "F31DE2121B4D6341724F": "Contexte",
  "0C88CB654E7A1614F1BE": "le contenu de l'invite est passé dans ",
  "E4FB7DF49059C84A8053": "le texte de l'éditeur courant est passé dans ",
  "05038756FDBB91D3A8E0": "la sélection actuelle de l'éditeur est passée dans ",
  "3C9C4B69F53BEA5E5E79": "toutes les autres références de fichiers sont passées dans ",
  "E2901073B22A453ADAE8": "Exemples",
  "DCC9A47DA0FFBF6594D2": "Historique",
  "5654269B63480E9CA531": "L'historique des messages est passé dans ",
  "C50E90A03322FFDC1976": "Conversation continue",
  "07E972DE3E1B87B83918": "Vous pouvez utiliser le chat ",
  "0A1799D083DEAD047DA6": "exécutera le script ",
  "A19BBC68ECFCDEE8DFFB": "Script par défaut ",
  "82AE4B44D0841787B89B": "Le script suivant peut être utilisé comme modèle de départ pour créer le script par défaut lorsque l'utilisateur n'utilise pas la commande ",
  "60FC19E48FE636ADC18F": "Fonctionnalités non prises en charge",
  "802325B521B8AEFA5533": "référence",
  "4AFA8B92C8268544CC0F": "instructions personnalisées ",
  "49F15CEE5AC68119624F": "Sessions de chat augmentées",
  "3638B6472D9D6CD7667D": "Voici comment démarrer des sessions de chat en utilisant l'invite ",
  "375E5AA103B520243714": "Sélectionnez l'icône ",
  "C6FC59D1548387590560": "Joindre le Contexte",
  "35E7107159681857B3B9": "Les GitHub Gists",
  "C752DC2972EC36C1391E": "Exécuter GenAIScript à partir des Gists",
  "C0C7659C6507C6348E4F": "Le fichier gist est mis en cache localement dans ",
  "53CA3341B0B4B5DF59D5": "GistPad dans Visual Studio Code",
  "5F3FFAE2E1206101DDC9": "L' ",
  "EAF2640B94B46E5BB92E": "extension GistPad",
  "CD4649BD97495213C18F": "Vous pouvez ouvrir un fichier dans un Gist et l’exécuter en utilisant la commande ",
  "A2E82E5D232E8CD98DF2": "Vérification de type",
  "658497A00EA1E151FE21": "pour le gist et configurer une référence ",
  "0804F68CBB39182541F1": "en haut du fichier",
  "66293F7DF705FC260D1C": "clic droit sur le fichier GenAIScript du Gist",
  "1F6E3D1286216A6AA2A6": "sélectionnez ",
  "1561CBE6D78D8CE34B55": "ouvrez le fichier ",
  "8197E226938DF99D328B": "ouvrez votre fichier GenAIScript dans l’arborescence GistPad et il devrait avoir la vérification de type !",
  "F27CA5D7B882163D387E": "Limitations",
  "ECC613435F6A64D50593": "les imports ne seront probablement pas résolus",
  "BCF98959DE1319883EBC": "interface de ligne de commande (CLI)",
  "E5DE6116641EEBFA6FE1": "de l’API Node.JS",
  "C7CF45912D253E9CF49B": "Configuration",
  "ABA3CF50D543D0425F55": "interface de ligne de commande (CLI)",
  "99A91908BE49CDECA312": "Utilisation",
  "240CAFDDC94B2F9119C8": "L’API peut être importée en utilisant des imports depuis ",
  "3C65D886650453C837F1": "\"genaiscript/api\"",
  "4A01A1509BA998F4F9B7": "Le wrapper importé `api.mjs` est un chargeur minuscule, sans dépendances, qui\nlance un [thread worker Node.JS](https://nodejs.org/api/worker_threads.html) pour exécuter GenAIScript. ",
  "EFAA626DC517723FB3F0": "Pas de pollution des variables globales",
  "5D901BF880ED35C7E74D": "Aucun effet secondaire sur le processus",
  "4B7396B45254C67F1116": "La fonction ",
  "E5B6DC76C5520EB434DB": "`run` encapsule la commande ",
  "1B0DCAB3E57FDE495D50": "cli run",
  "4B6EA2715643EF4E09F9": "Variables d’environnement",
  "0D76342A8692FCC793FA": "Vous pouvez définir les variables d’environnement pour le processus GenAIScript en passant un objet dans le champ `env` des options. Par défaut, le worker hérite de `process.env`. ",
  "0684A3885BD7329CABEB": "Certaines des ",
  "A21F3D3C1003DF2CF036": "fonctionnalités de traitement vidéo",
  "4D642DCB3D019028E1F9": "Renvoie le résultat de ",
  "6C99164964F45526EAFD": "Exécute les tests dans les scripts en utilisant ",
  "0CF22F023D281EF85AC4": "promptfoo",
  "F322C7872DEBB0B7836B": "Vous pouvez remplacer les modèles utilisés dans les tests avec `--models` : ",
  "46AD45D82617132C7C3E": "Cette fonctionnalité nécessite d’ajouter `@genaiscript/api` ",
  "9640954E601A25B35AA2": "à vos dépendances `package.json`. ",
  "AFD4B88FA1B64D3E85C8": "visualiseur de résultats",
  "A47C6A91F4D69968B9D5": "Exécutez la commande `test view` pour lancer le visualiseur des résultats des tests : ",
  "56D37A668274487A1739": "Serve",
  "BB836F512CB5834C2096": "Lancer un serveur web local.",
  "E7E1E5B923AC90CAE88D": "Lancer un serveur web local qui est utilisé pour exécuter le bac à sable\nou Visual Studio Code.",
  "D5D04A68DAC7B384F336": "Exécuter depuis la racine de l'espace de travail :",
  "09A10F69F404090F92A6": "port",
  "79900D9E69E6211FFB74": "Le port par défaut est `8003`. Vous pouvez spécifier le port en définissant le drapeau `--port`.",
  "2BB961A33AEEFB4A18AF": "clé API",
  "5CF8C2D888095AB2ABD7": "La clé API est utilisée pour authentifier les requêtes vers le serveur.\nVous pouvez spécifier une clé API en utilisant le drapeau `--api-key` ou la variable d'environnement `GENAISCRIPT_API_KEY`.",
  "32867D0614C29EAAC6EC": "ou",
  "45F18C886A0FE5734F98": "La clé API peut être configurée dans l'en-tête `Authorization` d'une requête ou dans le paramètre de requête URL `api-key` (`http://localhost:8003/#api-key=ma-clé-api`)",
  "BA937992648DD877B6CA": "CORS",
  "6F4049A20BE27C450CFA": "Vous pouvez activer [Ressource Partagée Cross-Origin](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) en utilisant le drapeau `--cors` ou en configurant la variable d'environnement `GENAISCRIPT_CORS_ORIGIN`.",
  "BCB56078DD3C4F9DB65D": "Réseau",
  "DEE17936A37DA5331985": "Vous pouvez lier le serveur à `0.0.0.0` pour le rendre accessible depuis le réseau en utilisant le drapeau `--network`. Ce drapeau est nécessaire pour rendre le serveur accessible depuis un conteneur.",
  "7CE74ACD53C8C78AA6C0": "Nous recommandons vivement de définir la clé API lors de l'exécution du serveur sur le réseau.",
  "CBEF1589BD888505BE61": "Dockerisé",
  "494825A36891092145BE": "Pour exécuter une image Docker minimale avec le serveur, créez d'abord une image Docker avec genaiscript et les outils nécessaires.",
  "452041B5FF7C7B22A6EB": "Cela crée une image `genaiscript` localement que vous pouvez utiliser pour lancer le serveur.",
  "EB1F8E8907ACA4B48596": "puis ouvrez `http://localhost:8003` dans votre navigateur.",
  "005D629E13CE7501A0E1": "Points de terminaison API OpenAI",
  "B5F78F7F502E748A8447": "Le serveur implémente divers points de terminaison compatibles avec l'API OpenAI. Vous pouvez utiliser le serveur comme proxy vers l'API OpenAI en configurant le drapeau `--openai`.\nLes routes peuvent être utilisées pour fournir un accès stable aux LLM configurés à d'autres outils comme promptfoo.",
  "E5F2D72FCE223476EBA7": "Cela activera les routes suivantes :",
  "44141A2C294660046195": "`/v1/chat/completions`",
  "DA2BCAA1B87ACD17E753": "Principalement compatible avec l'API de complétions de chat d'OpenAI. Le serveur transmettra les requêtes à l'API OpenAI et renverra la réponse.",
  "4BC655D5CFBA39C2A919": "`stream` n'est pas supporté.",
  "87237ADD852E1EBDE404": "`/v1/models`",
  "DD64551B736F0A1ACE97": "Renvoie la liste des modèles et des alias disponibles sur le serveur.",
  "1729EFD57745C74C3C79": "Traduit avec AI. Veuillez vérifier le contenu pour assurer l'exactitude.",
  "9AC7E4955593CC34EA6B": "Exécuter",
  "428394439B4622C9639B": "Apprenez comment exécuter des scripts genai sur des fichiers avec une sortie en streaming vers stdout, y compris l'utilisation de motifs glob, de variables d'environnement et d'options de sortie.",
  "F364EF1E7EE2009905E3": "Exécute un script sur des fichiers et diffuse la sortie du LLM vers stdout ou un dossier à partir de la racine de l'espace de travail.",
  "E68BA994790378E7D9CE": "où `<script>` est l'identifiant ou le chemin du fichier de l'outil à exécuter, et `<files...>` est le nom du fichier de spécification sur lequel l'exécuter.",
  "96880A2B5DC51B975EA1": "Les fichiers peuvent également inclure un motif [glob](https://en.wikipedia.org/wiki/Glob_\\(programming\\)).",
  "1305790B816585F053E5": "Si plusieurs fichiers sont spécifiés, tous les fichiers sont inclus dans `env.files`.",
  "9C88B8B2460302A13A63": "Fichiers",
  "F24E6BC1747FE00186A7": "`run` accepte un ou plusieurs motifs [glob](https://en.wikipedia.org/wiki/Glob_\\(programming\\)) pour faire correspondre les fichiers dans l'espace de travail.",
  "2CAFFC43C1BCE829A91D": "Résolutions de ressources",
  "F382CD3CEB39E535B807": "GenAIScript gèrera automatiquement et résoudra des motifs URI spécifiques.",
  "F9EF561183FF83D2CACF": "`file://` - fichier local",
  "DF85F3842520AAFD796A": "`https://github.com/<owner>/<repo>/blob/<branch>/<path>` - fichier GitHub",
  "B79351789104266A1A25": "`https://github.com/<owner>/<repo>.git/<file glob>` - dépôt GitHub et motif de fichier",
  "CFEF9FDA9F1F4971586D": "`gist://id/<file glob>` - GitHub Gist et motif de fichier",
  "CD52E6C460F6A4026702": "`https://gist.github.com/<owner>/<id>/<file glob>` - GitHub Gist et motif de fichier",
  "4AA0298E3882FBDD03F2": "`git://<owner>/<repo>.git/<file glob>` - dépôt Git et motif de fichier",
  "F491A22CF45FAA137EFE": "Piping",
  "480401500E2E21EDC2C1": "`run` récupère le contenu de stdin et le convertit en fichier `stdin`.\nLa sortie LLM est envoyée vers `stdout`, tandis que le reste des logs est envoyé vers `stderr`.",
  "98F41F8D3557CAFFC457": "--excluded-files <files...>",
  "6E889F6D3BE6274B8DD7": "Exclut les fichiers spécifiés de l'ensemble de fichiers.",
  "2002793E896A243EFA93": "--exclude-git-ignore",
  "EAA4ABC5BAC6B5E82461": "Exclut les fichiers ignorés par le fichier `.gitignore` à la racine de l'espace de travail.",
  "1DC5B8EBED632710A6BE": "Configuration",
  "02D3B5C29FEFBC174BFD": "--model ...",
  "2D84F05E1DB7D441789D": "Configure l'alias du modèle par défaut ou `large`. Utilisez `echo` pour faire une exécution à blanc et retourner les messages au lieu d'appeler un fournisseur LLM.",
  "62F672EAF2FC21C08152": "--provider ...",
  "CB05BC6E050EFCC20283": "Charge un ensemble d'alias de modèles pour le fournisseur LLM donné.",
  "5958249E93C302A0E24A": "--vars name=value name2=value2 ...",
  "EF491FF9D5CE7068A56D": "Remplit les valeurs dans la map `env.vars` qui peuvent être utilisées lors de l'exécution de l'invite.",
  "D890D5AF2BAE740C53F6": "Sortie",
  "270ECDB9DC3D064FAC10": "--out <file|directory>",
  "BFDD801245AB9070BD01": "Sauvegarde les résultats dans un fichier JSON, ainsi que les fichiers markdown de la sortie et de la trace.",
  "891D39C00816F9AAF1ED": "Si `file` ne se termine pas par `.json`, le chemin est traité comme un chemin de répertoire.",
  "D29F947649BFD781EF72": "--json",
  "8A79596C81DD28B0AE4D": "Sortie de la réponse complète en JSON vers stdout.",
  "DD2B36ED24922FBC85F6": "--yaml",
  "AD91CE28C175F4CEE52F": "Sortie de la réponse complète en YAML vers stdout.",
  "1A877D19F7BC82E15FFE": "--out-trace <file>",
  "82D1300EB1DFB3336BA5": "Sauvegarde la trace markdown dans le fichier spécifié.",
  "C176C69B078E7071A5AE": "Dans un workflow GitHub Actions, vous pouvez utiliser cette fonctionnalité pour sauvegarder la trace en tant que résumé d'étape (`GITHUB_STEP_SUMMARY`) :",
  "94A46B0A2E70CC958768": "Dans Azure Dev Ops, vous pouvez utiliser la fonction [task.uploadSummary](https://learn.microsoft.com/en-us/azure/devops/pipelines/scripts/logging-commands?view=azure-devops&tabs=bash#uploadsummary-add-some-markdown-content-to-the-build-summary)\ndans votre pipeline pour télécharger la trace en tant que résumé.",
  "F7B35A5983070D4FB6DF": "--out-annotations <file>",
  "BCD7CF9D92401EBD315B": "Émet des annotations dans le fichier spécifié sous forme de tableau JSON, JSON Lines, [SARIF](https://sarifweb.azurewebsites.net/) ou fichier CSV si le fichier se termine par `.csv`.",
  "D7C0A6DBF446BF03CD7B": "Utilisez JSON lines (`.jsonl`) pour agréger les annotations de plusieurs exécutions dans un seul fichier.",
  "917E5E81FA244CD8283A": "--out-data <file>",
  "18BAB7348EC031D057DC": "Émet des données analysées en JSON, YAML ou JSONL. Si un schéma JSON est spécifié\net disponible, le résultat de la validation JSON est également enregistré.",
  "4279B6DE454592E68DB4": "--out-changelogs <file>",
  "E171E18D7E075EE92A81": "Émet les journaux de changements dans le fichier spécifié sous forme de texte.",
  "EB4E812644652B3941B5": "Pull Requests et Issues <a href=\"\" id=\"pull-requests\" />",
  "CEB527214AEBB7DAC37A": "La CLI peut mettre à jour la description et les commentaires d'une pull request/issue lorsqu'elle est exécutée dans une GitHub Action ou un pipeline Azure DevOps.",
  "0B0BC355986076A3707C": "Configuration du workflow GitHub Action",
  "9E9E11FD2144773F29D5": "Mettez à jour la configuration de votre workflow pour inclure ce qui suit :",
  "42C3A48D4DC554D73937": "ajoutez la permission `pull-requests: write` au workflow/step",
  "24DEE412911C47121A7E": "définissez le secret `GITHUB_TOKEN` dans l'`env` lors de l'exécution de la CLI",
  "9CE7C48189934BB354A5": "Configuration Azure DevOps",
  "383DDE6AC64F081428B3": "ajoutez `<votre nom de projet> Build Service` au rôle **Collaborateur** du dépôt",
  "9AB029F02AFB8A7F87E8": "transmettez les secrets aux scripts, incluant `System.AccessToken`",
  "EFB137D691C938AC9078": "--pull-request-description [tag]",
  "A46865ECED3A2126D488": "Lors de l'exécution dans un GitHub Action ou un pipeline Azure DevOps sur une pull request,\nla CLI insère la sortie du LLM dans la description de la pull request ([exemple](https://github.com/microsoft/genaiscript/pull/564))",
  "302F0107890A33E221D9": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par différentes exécutions. Par défaut, c'est l'identifiant du script.",
  "5431B2CFDF1CEB0B5A22": "--pull-request-comment [tag];",
  "4CC97A7AC4793CB379DA": "Insère ou met à jour un commentaire sur la pull request/issue avec la sortie du LLM ([exemple](https://github.com/microsoft/genaiscript/pull/564#issuecomment-2200474305))",
  "35781E612A57BA975AD2": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par différentes exécutions. Par défaut, c'est l'identifiant du script.",
  "F74D2C86DAF6E2788A4A": "--pull-request-reviews",
  "A7C45944A01CE4EFDF37": "Crée des commentaires de révision de pull request à partir de chaque [annotation](/genaiscript/reference/scripts/annotations)\n([exemple](https://github.com/microsoft/genaiscript/pull/564#pullrequestreview-2151692644)).",
  "7C4B977AACB74F75048E": "En savoir plus",
  "BACB37AF80A96ED7C21D": "La liste complète des options est disponible dans la [référence CLI](/genaiscript/reference/cli/commands#run).",
  "9F66A110D2949EC96805": "Traduit à l'aide de l'IA. Veuillez vérifier le contenu pour en assurer l'exactitude.",
  "3EC30E299249AF006722": "Z3 est un prouveur de théorèmes haute performance développé par Microsoft Research. C'est un outil intégré de GenAIScript.",
  "2FBF43E3DDA4F386245B": "[Z3](https://microsoft.github.io/z3guide/) est un prouveur de théorèmes haute performance développé par Microsoft Research. C'est un outil intégré de GenAIScript. Z3 est utilisé pour résoudre des formules logiques et peut être utilisé pour diverses applications, y compris la vérification de programmes, la résolution de contraintes et l'exécution symbolique.",
  "7CAAC2B94BA20AEE766D": "GenAIScript utilise le paquet npm [z3-solver](https://www.npmjs.com/package/z3-solver), basé sur WebAssembly, pour exécuter Z3.",
  "134F8A64B2DE8F7D5D93": "Instance Z3",
  "A73F502AE1F9130A9718": "La méthode `host.z3()` crée une nouvelle instance de Z3. Cette instance peut être utilisée pour exécuter des commandes Z3 et obtenir les résultats. L’instance `z3` est un wrapper autour du paquet npm [z3-solver](https://www.npmjs.com/package/z3-solver). L’instance `z3` possède la méthode `run` qui exécute la formule SMTLIB2 donnée et retourne le résultat.",
  "0C1753FE8AC6533D3FE4": "Outil Z3",
  "14B3F7FC3A94AEC8F373": "Le script de l’outil `z3` (dans [system.z3](/genaiscript/reference/scripts/system#systemz3)) enveloppe Z3 en tant qu’outil LLM qui peut être utilisé dans GenAIScript. Cet outil prend une formule SMTLIB2 en entrée et retourne la sortie de Z3.",
  "BA02A9D456ADBBFF3839": "Cet outil ne peut pas gérer des problèmes arbitraires, ce qui nous amène à l’agent.",
  "FFB6F2279FF7D731F0EC": "Agent Z3",
  "F9DA3F4DFB3CE130D96D": "Le script de l’agent `z3` (dans [system.agent-z3](/genaiscript/reference/scripts/system#systemagent_z3)) enveloppe l’outil `z3` avec un LLM qui peut (essayer de) formaliser des problèmes arbitraires en SMTLIB2.",
  "9CE01B1E576EC89ADBC5": "La conversation LLM du problème à la formule SMTLIB2 peut être incorrecte. Vérifiez vos résultats avec l’outil Z3. L’agent n’est pas un substitut à l’outil Z3, mais un moyen d’utiliser Z3 avec des problèmes arbitraires.",
  "3C87D49AD70DEF2464EA": "Traduit à l’aide d’une IA. Veuillez vérifier l’exactitude du contenu.",
  "4517D689061963161AAF": "YAML",
  "E29788016B1357262FC4": "Apprenez comment utiliser YAML pour la sérialisation de données, la configuration et l'analyse dans LLM avec defData, la classe YAML, et la validation des schémas JSON.",
  "33886349E236DF51994E": "[YAML](https://yaml.org/) est un format de sérialisation de données lisible par l'humain, couramment utilisé pour les fichiers de configuration et l'échange de données.",
  "CC92B0AAEF6AEBE190A6": "Dans le contexte de LLM, YAML est plus adapté à l'algorithme de tokenisation et est généralement préféré à JSON pour représenter des données structurées.",
  "71A71F7B2DA057EB7A6F": "`defData`",
  "2EF14556AC252D76436D": "La fonction `defData` convertit un objet en YAML dans le prompt (et d'autres formats si nécessaire).",
  "A64443360421E68944E5": "`YAML`",
  "24A5B6DAF6194DF2E3B1": "De manière similaire à la classe `JSON` en JavaScript, la classe `YAML` dans LLM fournit des méthodes pour analyser et convertir en chaîne des données YAML.",
  "2DD239A989B0C46EE382": "`parsers`",
  "ADC7737F1005A1E9660C": "Les [parsers](/genaiscript/reference/scripts/parsers) fournissent également un analyseur tolérant pour YAML. Il retourne `undefined` pour les entrées invalides.",
  "FE012C37581DEDD72822": "Schémas",
  "963A3F42088CDAF7ED4A": "Les schémas JSON définis avec [defSchema](/genaiscript/reference/scripts/schemas) peuvent également être utilisés pour valider des données YAML.",
  "2AB84E93E088F6462533": "Traduit avec l'aide de l'IA. Veuillez vérifier l'exactitude du contenu.",
  "34E76FEE18E44A8D75B9": "Découvrez comment analyser automatiquement les fichiers XML et les convertir en objets JSON, permettant une gestion efficace des données, l'analyse des flux RSS et le traitement des fichiers.",
  "EB6671050B78A1A15DD5": "XML",
  "7CBD654D1ED0DA66087B": "La fonction `def` analyse automatiquement les fichiers XML et en extrait le texte.",
  "12B8F5683737D98D1996": "`parse`",
  "90545EA58CDE6B6FF26F": "La fonction globale `XML.parse` lit un fichier XML et le convertit en un objet JSON.",
  "89EC2162B0D3598CBC27": "Les noms des attributs sont précédés de \"@_\".",
  "639965ED553A47C92CC0": "RSS",
  "FC46F2468B384A244FE3": "Vous pouvez utiliser `XML.parse` pour analyser un flux RSS en un objet.",
  "8D43A964DFF6CF0AEBA2": "Puisque les flux RSS retournent généralement une description en HTML rendu, vous pouvez utiliser `parsers.HTMLToText` pour la reconvertir en texte brut.",
  "483AE720732996C93799": "Traduit à l'aide de l'IA. Veuillez vérifier l'exactitude du contenu.",
  "EE2AD184A26D2A4DC8AA": "Apprenez à analyser et à convertir en chaîne les fichiers Excel XLSX facilement grâce à nos outils.",
  "7740ABB9E58EE1C20D5E": "Analyse et conversion en chaîne des fichiers tableurs Excel, xlsx.",
  "81BEF66C5A5E8590CA5C": "`parsers`",
  "D028BB2209F1BB1695DB": "Les [parsers](/genaiscript/reference/scripts/parsers) fournissent également un analyseur polyvalent pour XLSX. Il retourne un tableau de feuilles (`name`, `rows`) où chaque ligne est un tableau d'objets.",
  "853E137454CAD3442AB3": "Traduit avec l'IA. Veuillez vérifier le contenu pour en assurer l'exactitude.",
  "46F0DB3C748665F8FB4B": "Recherche Web",
  "CC704C59F75B45609F85": "Exécutez des recherches sur le web avec l'API Bing en utilisant retrieval.webSearch dans les scripts.",
  "E5E70A847A9262075020": "La commande `retrieval.webSearch` réalise une recherche sur le web en utilisant [Tavily](https://docs.tavily.com/) ou le Bing Web Search.",
  "9BF4843651D1618A493C": "Pages Web",
  "6864FAD8E59A75B8B02D": "Par défaut, l'API renvoie les 10 premières pages web dans le champ `webPages` sous forme d'un tableau de fichiers, similaire à `env.files`. Le contenu contient l'extrait résumé retourné par le moteur de recherche.",
  "2D4CCA4162E1C6152060": "Vous pouvez utiliser `fetchText` pour télécharger le contenu intégral de la page web.",
  "D9F77C0698D2AFB86829": "Configuration de Tavily <a href=\"\" id=\"tavily\" />",
  "F0BB2C03354C28B791C9": "L'[API Tavily](https://docs.tavily.com/docs/rest-api/api-reference#endpoint-post-search) donne accès à un moteur de recherche puissant pour les agents LLM.",
  "F61ED2FC8C8997896FB4": "Configuration de Bing Web Search <a href=\"\" id=\"bing\" />",
  "5FDD83DF8D8060CCD532": "L'API utilise [Bing Web Search v7](https://learn.microsoft.com/en-us/bing/search-apis/bing-web-search/overview) pour effectuer des recherches sur le web. Pour utiliser l'API, vous devez créer une ressource Bing Web Search dans le portail Azure et stocker la clé API dans le fichier `.env`.",
  "933C35AA168D6C9036D5": "Outil",
  "607162446936EB83B623": "Ajoutez le script système [system.retrieval_web_search](https://github.com/microsoft/genaiscript/blob/main/packages/core/src/genaisrc/system.retrieval_web_search.genai.mjs) pour enregistrer un [outil](/genaiscript/reference/scripts/tools) qui utilise `retrieval.webSearch`.",
  "020AA3AA43251833CFE3": "Traduit avec l'aide de l'IA. Veuillez vérifier l'exactitude du contenu.",
  "DB72889B05EC065063D6": "Vidéos comme Entrées",
  "5F348AAAED56D29280BB": "Comment utiliser la vidéo dans les scripts",
  "FA20A7C3956D83FDE782": "Bien que la plupart des LLMs ne prennent pas en charge les vidéos nativement, elles peuvent être intégrées dans des scripts en rendant les images clés et en les ajoutant comme images dans l'invite. Cela peut être fastidieux, et GenAIScript fournit des helpers efficaces pour simplifier ce processus.",
  "F6DAADA9E6C1F38812FB": "Configuration de ffmpeg",
  "03BC44BC7CA0A1476184": "Les fonctionnalités pour rendre et analyser des vidéos reposent sur [ffmpeg](https://ffmpeg.org/) et [ffprobe](https://ffmpeg.org/ffprobe.html).",
  "26F431DC49A94C3C1A0C": "Sous Linux, vous pouvez essayer",
  "46B0FBF4B8B7A7A039A4": "Assurez-vous que ces outils sont installés localement et disponibles dans votre PATH, ou configurez les variables d'environnement `FFMPEG_PATH` / `FFPROBE_PATH` pour pointer vers les exécutables `ffmpeg`/`ffprobe`.",
  "84FB8B26449E15EF074C": "Extraction d'images clés",
  "1ABF3B1EB86D9F60B3BD": "Comme mentionné ci-dessus, les LLMs multimodaux supportent généralement les images sous forme de séquence d'images clés (ou captures d'écran).",
  "D8DD16133438EA0F3FA8": "La fonction `ffmpeg.extractFrames` rendra les images clés à partir d'un fichier vidéo et retournera un tableau de chemins vers les fichiers. Vous pouvez utiliser le résultat directement avec `defImages`.",
  "D04F2E83C8AE93458738": "Par défaut, extraire les images clés (intra-images)",
  "891AC3D23BEE931A82F6": "Spécifier un nombre d'images clés avec `count`",
  "8135ECAF5567344A9E1D": "Spécifier des horodatages en secondes ou en pourcentages de la durée de la vidéo avec `timestamps` (ou `times`)",
  "30A0E20B8CEC429DEA4B": "Spécifiez la transcription générée par la fonction [transcribe](/genaiscript/reference/scripts/transcription). GenAIScript extraira une image clé au début de chaque segment.",
  "54F25F8FC0A91B0D5C05": "Spécifiez un seuil de scène (entre 0 et 1)",
  "9761C01DA5E93C26F6E8": "Extraction audio",
  "9FDA4CE848BB254658C0": "La fonction `ffmpeg.extractAudio` extraira l'audio d'un fichier vidéo au format `.wav`.",
  "656848F8BB836E74A0C3": "La conversion en audio se fait automatiquement pour les vidéos lors de l'utilisation de [transcribe](/genaiscript/reference/scripts/transcription).",
  "E037203F8A121A97308B": "Extraction de clips",
  "E02B2F7D3CFA7402181E": "Vous pouvez extraire un clip d'un fichier vidéo en utilisant `ffmpeg.extractClip`.",
  "12CFE9190474C67A97AE": "Cette opération est assez rapide car elle ne nécessite pas de ré-encodage. Vous pouvez spécifier la taille de sortie, mais cela sera beaucoup plus lent car cela nécessitera un ré-encodage.",
  "63E945DD35A8CF078F4F": "Analyse des vidéos (probing)",
  "A4F4BAAD94F1047590A2": "Vous pouvez extraire des métadonnées d'un fichier vidéo en utilisant `ffmpeg.probe`.",
  "AFEA9A0DF1FEC74FD97A": "Options personnalisées de ffmpeg",
  "1CBF9CA761D692EF104C": "Vous pouvez personnaliser davantage la configuration de `ffmpeg` en passant des `outputOptions`.",
  "CD942DCF84FC406C09D2": "Ou interagir directement avec le constructeur de commandes `ffmpeg` (qui est le constructeur natif [fluent-ffmpeg](https://www.npmjs.com/package/fluent-ffmpeg)). Notez que dans ce cas, vous devez également fournir un \"hash\" de cache pour éviter le rendu redondant.",
  "1773D87DB0BC75C67E29": "Interface en ligne de commande (CLI)",
  "FFC173E37BADE5C0063E": "Le [cli](/genaiscript/reference/cli/video) prend en charge diverses commandes pour exécuter les transformations vidéo.",
  "6BD94638BAA6F688121B": "Traduit avec IA. Veuillez vérifier l'exactitude du contenu.",
  "140A1993BF00C1AC4EBC": "Recherche Vectorielle",
  "4E65D691E9A879FEB538": "Apprenez à utiliser la fonction retrieval.vectorSearch pour indexer des fichiers avec des embeddings afin d'effectuer une recherche de similarité efficace dans des bases de données vectorielles.",
  "30A254D73B4959C45DB8": "GenAIScript fournit différentes bases de données vectorielles pour prendre en charge la recherche par embeddings et la génération augmentée par récupération (RAG).",
  "9D310CD3272CEF7DE112": "Création d'index",
  "4DC48823FF29675A0BAE": "La fonction `retrieve.index` crée ou charge un index existant. La création de l'index prend en compte un certain nombre d'options **qui ne doivent pas changer** entre les exécutions.",
  "8BBDE783D5C8C062993B": "Index local",
  "B6251CB1BABC45E502B7": "Par défaut, les vecteurs sont stockés localement dans des fichiers sous le dossier `.genaiscript/vector` en utilisant une base de données vectorielle locale basée sur [vectra](https://www.npmjs.com/package/vectra). Les embeddings sont calculés en utilisant le [alias de modèle](/genaiscript/reference/scripts/model-aliases) `embeddings`.",
  "D68DB793401227CF21D2": "Les `embeddings` peuvent également être configurés via les options.",
  "7C52FA0E0C01A2FFBEEC": "L'index est sérialisé par défaut. Si vous souhaitez le réinitialiser à chaque exécution, définissez `deleteIfExists: true`.",
  "D021E27F42840B8208FF": "Recherche Azure AI",
  "ACC6A755ACE23D9E2A5D": "GenAIScript prend également en charge l'utilisation d'un service [Azure AI Search](https://learn.microsoft.com/en-us/azure/search/search-what-is-azure-search).\nAzure AI Search utilise la [syntaxe de requête simple](https://learn.microsoft.com/en-us/azure/search/query-simple-syntax).",
  "6AECBA23557622EF7FEA": "Pour configurer ce service, vous devrez définir les variables d'environnement `AZURE_AI_SEARCH_ENDPOINT` et `AZURE_AI_SEARCH_API_KEY` dans votre fichier `.env`.\nVeuillez consulter la [documentation sur l'authentification](https://learn.microsoft.com/en-us/javascript/api/overview/azure/search-documents-readme?view=azure-node-latest#authenticate-the-client) pour plus de détails.",
  "3E314D6CB1674157E81B": "La gestion supplémentaire de l'index peut être effectuée via le portail Azure.",
  "F643B3B8F9FD7164304F": "Configuration du modèle et de la segmentation",
  "C8867F8883E718C12A85": "Le calcul des embeddings se fait via les API LLM en utilisant le même jeton d'autorisation que l'API LLM.",
  "95F93A12AF8B55A5913A": "Vous pouvez également configurer la segmentation des fichiers d'entrée.\nCela peut se régler en définissant les options `chunkSize` et `chunkOverlap`.",
  "42D02307592C6BFDA266": "Indexation",
  "031726C360146EBDBC5D": "La fonction `index.insertOrUpdate` s'occupe de la segmentation, de la vectorisation et de la mise à jour de la base de données vectorielle.",
  "598E3C2A6C57C65C4CE0": "Recherche",
  "95BDFE4CAC2DF30D4D81": "La fonction `index.search` effectue une recherche (vectorielle ou hybride) en utilisant l'index.",
  "CCFEC58A1A5F9001C2C2": "La valeur renvoyée est un tableau de fichiers avec le contenu reconstruit à partir des segments correspondants.",
  "D294BC8BD38F1245D4CD": "Traduit à l'aide de l'IA. Veuillez vérifier le contenu pour plus de précision.",
  "1F4D6A6D85B00A7BC384": "Variables",
  "A403000ED53C52A92FD1": "Découvrez comment utiliser et personnaliser les variables de script pour des capacités de script dynamiques avec env.vars.",
  "80B5D0343423FA7E42DA": "L'objet `env.vars` contient un ensemble de valeurs de variables. Vous pouvez utiliser ces variables pour paramétrer votre script.",
  "FE27490E745047F0E936": "Paramètres de script",
  "34D9B70719D1E988084C": "Il est possible de déclarer des paramètres dans l'appel de la fonction `script`. L'objet `env.vars` contiendra les valeurs de ces paramètres.",
  "BFCD53AE2858A95C1510": "Lors de l'invocation de ce script dans VS Code, l'utilisateur sera invité à fournir des valeurs pour ces paramètres.",
  "FCD25E071D14741D3782": "Variables depuis la CLI",
  "E3581E6F095960F15BEB": "Utilisez le champ `vars` dans la CLI pour remplacer des variables. vars prend une séquence de paires `clé=valeur`.",
  "ED55DFD8E60A08429983": "Variables dans les tests",
  "DD5DC41574FEA93341E6": "Vous pouvez spécifier des variables dans l'objet `tests` de la fonction `script`. Ces variables seront disponibles dans le contexte du test.",
  "FC8F02C8988B85A9E92C": "Traduit avec AI. Veuillez vérifier le contenu pour en assurer l'exactitude.",
  "A3300439D79C3B206C18": "Entrée Utilisateur",
  "653AA660BA056EFDDBE0": "Comment obtenir une entrée utilisateur dans un script",
  "254981FB63BFFE21119E": "GenAIScript fournit diverses fonctions pour obtenir une entrée utilisateur lors de l'exécution d'un script. Cela est utile pour créer une expérience \"humain dans la boucle\" dans vos scripts.",
  "5141D9FC970E97078F1A": "Lors de l'exécution de la [CLI](/genaiscript/reference/cli), l'entrée utilisateur se fait via le terminal.",
  "C16DEE592602E68DAD2E": "`host.confirm`",
  "1DD5E845043B2EF4FB27": "Pose une question à l'utilisateur et attend une réponse oui/non. Elle renvoie un `boolean`.",
  "85E7DE568EF099953D9D": "`host.input`",
  "B9068AA7BA924722B774": "Pose une question à l'utilisateur et attend une saisie textuelle. Elle renvoie une `string`.",
  "4C01645DE155AB9E7E7D": "`host.select`",
  "87FF0223D66AD6409119": "Pose une question à l'utilisateur et attend une sélection parmi une liste d'options. Elle renvoie une `string`.",
  "90918B95C76C1EA7EF79": "Intégration Continue",
  "9B0142C846CBA60ADC75": "Les fonctions d'entrée utilisateur renvoient `undefined` lorsqu'elles sont exécutées dans des environnements CI.",
  "C3E76D6063F9BE4E8B12": "Traduit par IA. Veuillez vérifier le contenu pour en assurer l'exactitude.",
  "57B41938142ED6C0D94C": "TypeScript",
  "19371303DA468D9FBC37": "Apprenez à utiliser TypeScript pour de meilleurs outils et une meilleure évolutivité dans vos projets GenAIScript.",
  "BA9AA86B991E69A01565": "[TypeScript](https://www.typescriptlang.org/) est un langage de programmation fortement typé qui s'appuie sur JavaScript, vous offrant de meilleurs outils à toute échelle. Les scripts GenAIScript peuvent être écrits en TypeScript.",
  "BC210010D640A031C4AB": "De JavaScript à TypeScript",
  "392CEB3B0413545B4D43": "Vous pouvez convertir n'importe quel script existant en TypeScript en changeant l'extension du fichier en **`.genai.mts`**.",
  "240E5253D454A412DEF0": "Assurez-vous d'utiliser l'extension de fichier **`.mts`** - et non `.ts` -, ce qui force Node.JS à utiliser le système de modules [ESM](https://www.typescriptlang.org/docs/handbook/modules/guides/choosing-compiler-options.html).",
  "2CB77E8FEA9EA052F782": "Importer des fichiers source TypeScript",
  "25F7444D469AB33736F7": "Il est possible d'[importer](/genaiscript/reference/scripts/imports) des fichiers source TypeScript.",
  "4D68D722E3FD14EC07FC": "import",
  "04E36C6F63A71A1415FB": "GenAIScript effectue-t-il la vérification de types des prompts ?",
  "C53F3B159C70E7310D48": "Oui et non.",
  "D2464C1D52C0DE93805E": "La plupart des éditeurs modernes, comme Visual Studio Code, effectuent automatiquement la vérification de types des sources TypeScript.",
  "C89EC98EBAB913E86804": "Vous pouvez également lancer une compilation TypeScript en utilisant la commande `scripts compile`.",
  "311E6CC526985029757E": "Cependant, à l'exécution, GenAIScript convertit TypeScript en JavaScript **sans vérification de types** via [tsx](https://tsx.is/usage#no-type-checking).",
  "2A267B4279494B9EEBAB": "Traduction réalisée à l'aide de l'IA. Veuillez vérifier l'exactitude du contenu.",
  "6687F808D20685AD2FAB": "Transcription audio",
  "0E41B29B99F39AE20462": "Décrire comment transcrire un fichier audio/vidéo",
  "209F1F8CADFE5EB4AA79": "GenAIScript prend en charge la transcription et les traductions à partir d'API similaires à OpenAI.",
  "A0A430350CE57F411A70": "Configuration",
  "DF002F9383CB3758561E": "L'API de transcription utilise automatiquement [ffmpeg](https://ffmpeg.org/) pour convertir les vidéos en fichiers audio ([codec opus dans un conteneur ogg](https://community.openai.com/t/whisper-api-increase-file-limit-25-mb/566754)).",
  "C8AE0CE52E29221F8FD1": "Vous devez installer ffmpeg sur votre système. Si la variable d'environnement `FFMPEG_PATH` est définie, GenAIScript l'utilisera comme chemin complet vers l'exécutable ffmpeg. Sinon, il tentera d'appeler ffmpeg directement (il doit donc être dans votre PATH).",
  "D3B05229AD31F8068607": "modèle",
  "4E92F8197CE30666F94B": "Par défaut, l'API utilise l'[alias de modèle](https://genaiscript/reference/scripts/model-aliases) `transcription` pour transcrire l'audio. Vous pouvez également spécifier un autre alias de modèle avec l'option `model`.",
  "96F8CADAD2A87CD29F10": "Vous pouvez utiliser le [service Web Whisper ASR](/genaiscript/configuration/whisperasr) pour exécuter Whisper localement ou dans un conteneur docker.",
  "5DE2DEB26F93CFB01063": "Segments",
  "C89CD242CE201964BDCB": "Pour les modèles qui le supportent, vous pouvez récupérer les segments individuels.",
  "64C93F44F9928804E09B": "SRT et VTT",
  "CBE4C23DD64F434D0DE6": "GenAIScript génère également les segments aux formats [SRT](https://fr.wikipedia.org/wiki/SubRip) et [WebVTT](https://developer.mozilla.org/fr/docs/Web/API/WebVTT_API).",
  "40CF3912CC7DED629F01": "Traduction",
  "1DCA9B6DBABFADBF7D22": "Certains modèles permettent aussi de transcrire et de traduire en anglais en une seule passe. Dans ce cas, activez le drapeau `translate: true`.",
  "41B0D7A9D15D0B3802D3": "Cache",
  "F618BF03F5FFB530BC4F": "Vous pouvez mettre en cache les résultats de la transcription en définissant l'option `cache` à `true` (ou un nom personnalisé).",
  "9C92BAE62873225322E9": "ou une valeur personnalisée",
  "91655976245B2F214755": "Parsers VTT, SRT",
  "56AD9DE3278B507E9FC4": "Vous pouvez analyser des fichiers VTT et SRT en utilisant la fonction `parsers.transcription`.",
  "CA6951E8A36D4CDE2E7B": "Traduit avec une IA. Veuillez vérifier l'exactitude du contenu.",
  "98FB1C874B1E57464D69": "Outils",
  "DAE0C725FFF3F57C91B2": "Apprenez comment définir et utiliser des outils dans GenAIScript pour améliorer la composition des réponses avec une logique personnalisée et des outils CLI.",
  "147577E498E82C6503AF": "Vous pouvez enregistrer des **outils** (également appelés **fonctions**) que le LLM peut décider d'appeler dans le cadre de la composition de la réponse.\nVoir [fonctions OpenAI](https://platform.openai.com/docs/guides/function-calling), [outils Ollama](https://ollama.com/blog/tool-support),\nou [utilisation des outils Anthropic](https://docs.anthropic.com/en/docs/build-with-claude/tool-use).",
  "5513EAAF8D40590895A1": "Tous les modèles LLM ne prennent pas en charge les outils, dans ces cas, GenAIScript propose également un mécanisme de secours pour implémenter l’appel d’outils via des invites système (voir [Outils de secours](#fallbacktools)).",
  "3F073F8F7D4BC6459A0F": "`defTool`",
  "C70DF5D446A9D0F37196": "`defTool` est utilisé pour définir un outil qui peut être appelé par le LLM.\nIl prend un schéma JSON pour définir l'entrée et attend une sortie de type chaîne.\nLes paramètres sont définis selon le [schéma des paramètres](/genaiscript/reference/scripts/parameters).",
  "7A819E705503669502FD": "**Le LLM décide d’appeler cet outil de lui-même !**",
  "3213F32B6831A3436624": "Dans l’exemple ci-dessus, nous définissons un outil appelé `current_weather`\nqui prend un emplacement en entrée et renvoie la météo.",
  "48C2EBE4E2AFC1EDF90B": "Exemple d’outil météo",
  "9889C2089AAA1BAD75BC": "Cet exemple utilise l’outil `current_weather` pour obtenir la météo de Bruxelles.",
  "283282855AD3F0082455": "Exemple d’outil mathématique",
  "048F93CE5794DE2CBC7A": "Cet exemple utilise l’évaluateur d’expression mathématique\npour évaluer une expression mathématique.",
  "4F12F91B2805D20F0726": "Réutilisation des outils dans les scripts système",
  "E4F3F6DCC9AA526EFA24": "Vous pouvez définir des outils dans un script système et les inclure dans votre script principal comme n’importe quel autre script système ou outil.",
  "E7D2C723F11CF1252997": "Assurez-vous d’utiliser `system` au lieu de `script` dans le script système.",
  "532D9B47CF1FAD916D61": "Multiples instances du même script système",
  "365EF1C853031A967352": "Vous pouvez inclure plusieurs fois le même script système dans un script\navec des paramètres différents.",
  "6FB7B14C775EEB9AC813": "Outils du protocole Model Context",
  "7E2B3CA36A3A29A13B9B": "[Model Context Provider](https://modelcontextprotocol.io/) (MCP) est un protocole ouvert\nqui permet une intégration fluide entre les applications LLM et les sources de données externes ainsi que les [outils](https://modelcontextprotocol.io/docs/concepts/tools).",
  "667997D5B5D9F8151310": "Vous pouvez exploiter les [serveurs MCP](https://github.com/modelcontextprotocol/servers) pour fournir des outils à votre LLM.",
  "35AAFC9CA25CB0DE5E44": "Voir [Outils du protocole Model Context](/genaiscript/reference/scripts/mcp-tools) pour plus d’informations.",
  "D577826960EBF5F76794": "Support des outils de secours <a href=\"\" id=\"fallbacktools\" />",
  "2C5D4E9DADA33E0BFC8F": "Certains modèles LLM ne disposent pas d’un support natif des outils.\nPour ces modèles, il est possible d’activer la prise en charge des outils via des invites système. Les performances peuvent être inférieures à celles des outils intégrés, mais l’utilisation d’outils reste possible.",
  "0BB73633EFCC1BD4FBF3": "La prise en charge des outils est implémentée dans [system.tool_calls](/genaiscript/reference/scripts/system#systemtool_calls)\net \"apprend\" au LLM comment appeler les outils. Lorsque ce mode est activé, vous verrez\nles jetons d’appel d’outil répondus par le LLM.",
  "5F36543389C8895937D2": "GenAIScript maintient une liste de modèles bien connus qui ne supportent pas\nles outils, de sorte que cela se produira automatiquement pour ces modèles.",
  "DEEB23B9781C7137D7A2": "Pour activer ce mode, vous pouvez soit",
  "54B9FB21FF76AA5935A2": "ajouter l’option `fallbackTools` au script",
  "921E3E0CBF5946FD6787": "ou ajouter le flag `--fallback-tools` à la CLI",
  "80C7424D7CEBAC2A1B8F": "Les performances de cette fonctionnalité varient grandement selon le modèle LLM que vous choisissez d’utiliser.",
  "CFB534C900C0CE004A6F": "Détection d’injection d’invite",
  "EE25DFF7CE2215E8040D": "Un outil peut récupérer des données contenant des attaques par injection d’invite. Par exemple, un outil qui récupère une URL peut renvoyer une page contenant des attaques par injection d’invite.",
  "0044A9F9AC8724DB90B2": "Pour prévenir cela, vous pouvez activer l’option `detectPromptInjection`. Elle lancera vos services de [scanner de sécurité de contenu](/genaiscript/reference/scripts/content-safety)\nsur la sortie de l’outil et effacera la réponse si une attaque est détectée.",
  "9FD217AB3828B36D557E": "Validation de l’intention de sortie",
  "F2D1085BB6937730880A": "Vous pouvez configurer GenAIScript pour exécuter une validation LLM-en-juge du résultat de l’outil basée sur la description ou une intention personnalisée.\nLa validation LLM-en-juge aura lieu pour chaque réponse de l’outil en utilisant l’alias de modèle `intent`, qui correspond par défaut à `small`.",
  "C79E8406FA986E4CBF74": "L’intention `description` est une valeur spéciale qui est développée en la description de l’outil.",
  "A36E99CC2D600A023BD1": "Emballage en scripts système",
  "43FB5856FBA0A4F5E6EB": "Pour choisir les outils à inclure dans un script,\nvous pouvez les regrouper dans des scripts système. Par exemple,\nl’outil `current_weather` peut être inclus dans le script `system.current_weather.genai.mjs`.",
  "316E36E883955FA1B414": "puis utiliser l’id de l’outil dans le champ `tools`.",
  "814FBD40004EB22553F4": "Exemple",
  "1D5AC7FE71B73016471F": "Illustrons comment les outils se combinent dans un script de réponses à des questions.",
  "17B351CD984629CECC24": "Dans le script ci-dessous, nous ajoutons l’outil `retrieval_web_search`. Cet outil\nappellera `retrieval.webSearch` selon les besoins.",
  "4CC0A84CAFA8311E733F": "Nous pouvons ensuite appliquer ce script au fichier `questions.md` ci-dessous.",
  "62EFF551C82B7F5A89F1": "Après la première requête, le LLM demande à appeler `web_search` pour chaque question.\nLes réponses de la recherche web sont alors ajoutées à l’historique des messages du LLM et la requête est faite à nouveau.\nLa seconde donne le résultat final qui inclut les résultats de la recherche web.",
  "B9A56623669CFE34B857": "Traduit avec IA. Veuillez vérifier la précision du contenu.",
  "16432FFE6AE0717FE4EF": "Tokeniseurs",
  "316A504A60B0526A2BB3": "Les tokeniseurs sont utilisés pour diviser le texte en tokens.",
  "1925B8BAAA381673C1A7": "Le module d'aide `tokenizers` fournit un ensemble de fonctions pour diviser le texte en tokens.",
  "E17EC1E29FC947EEBE05": "Choisir votre tokeniseur",
  "051D0093EECA602A589C": "Par défaut, le module `tokenizers` utilise le tokeniseur `large`. Vous pouvez changer de tokeniseur en passant l'identifiant du modèle.",
  "3B311FE4F03A357F4443": "`count`",
  "0E7446E278D09AAA0B5C": "Compte le nombre de tokens dans une chaîne de caractères.",
  "D5DF95B2E537B4AE4A69": "`truncate`",
  "720A373393F564959B90": "Supprime une partie de la chaîne pour s'adapter à un budget de tokens.",
  "5A25B28AE4730B95AB04": "`chunk`",
  "20A09285AD076DC73583": "Divise le texte en morceaux d'une taille donnée en tokens. Le découpage tente de trouver des limites appropriées en fonction du type de document.",
  "E9A652CE698782F90699": "Vous pouvez configurer la taille des morceaux, le chevauchement et ajouter des numéros de ligne.",
  "485A1EC17685AB745316": "Traduit avec IA. Veuillez vérifier le contenu pour en assurer l'exactitude.",
  "80D41422055A51F4D9E6": "Tests / Évaluations",
  "EDAFCF77587B3E0FD678": "Apprenez à exécuter et à évaluer la qualité des sorties LLM avec promptfoo, un outil conçu pour tester les résultats des modèles de langage.",
  "06064902A0942B1C13D3": "Il est possible de définir des tests pour les scripts LLM afin d'évaluer la qualité des sorties du LLM dans le temps et selon les types de modèles.",
  "4950DC2B1AA3450EF707": "Les tests sont exécutés par [promptfoo](https://promptfoo.dev/), un outil d’évaluation de la qualité des sorties LLM.",
  "DD60C7E39FBAD03B0C34": "Vous pouvez également détecter des vulnérabilités liées à l’IA, telles que les biais, la toxicité et les problèmes de factualité, en utilisant la fonctionnalité [redteam](/genaiscript/reference/scripts/redteam).",
  "6931C8039A9CE8467AF0": "Définir les tests",
  "5A9B7010086ABEA3584E": "Les tests sont déclarés dans la fonction `script` de votre test.\nVous pouvez définir un ou plusieurs tests (sous forme de tableau).",
  "FB7C828EA97BB0203C35": "Tester des modèles",
  "18907651865E6EE01F1B": "Vous pouvez spécifier une liste de modèles (ou alias de modèles) contre lesquels tester.",
  "80837BA63C3D4B096E01": "Le moteur d’évaluation (PromptFoo) exécutera chaque test contre chaque modèle de la liste.\nCe paramètre peut être remplacé par l’option `--models` en ligne de commande.",
  "49C02A929CA4065D4384": "Fichiers de test externes",
  "1859375D2B15897D2711": "Vous pouvez aussi spécifier le nom de fichiers externes de test, aux formats JSON, YAML, CSV, ainsi que des fichiers JavaScript `.mjs` ou `.mts` qui seront exécutés pour générer les tests.",
  "08C77DF9E604159D469B": "Les fichiers JSON et YAML supposent que les fichiers contiennent une liste d’objets `PromptTest` et vous pouvez valider ces fichiers avec le schéma JSON disponible à [https://microsoft.github.io/genaiscript/schemas/tests.json](https://microsoft.github.io/genaiscript/schemas/tests.json).",
  "30118CE638A0E2260F57": "Les fichiers CSV supposent que la première ligne est l’en-tête et que les colonnes correspondent majoritairement aux propriétés de l’objet `PromptTest`.\nLa colonne `file` doit contenir un nom de fichier, la colonne `fileContent` contient le contenu d’un fichier virtuel.",
  "B607A8F742AA7C8D51A0": "Les fichiers JavaScript doivent exporter une liste d’objets `PromptTest` ou une fonction qui génère cette liste d’objets.",
  "5B80DEC0AFE72D50D354": "`files`",
  "2327448E7A7C3BFEEDB6": "`files` prend une liste de chemins de fichiers (relatifs à l’espace de travail) et remplit la variable `env.files` pendant l’exécution du test. Vous pouvez fournir plusieurs fichiers en passant un tableau de chaînes de caractères.",
  "3305BF6161AFFDC5C0C2": "`rubrics`",
  "221169DFF6272A82E9AB": "`rubrics` vérifie si la sortie du LLM correspond aux exigences données, en utilisant un modèle de langage pour noter la sortie selon la grille d’évaluation (voir [llm-rubric](https://promptfoo.dev/docs/configuration/expected-outputs/model-graded/#examples-output-based)).\nVous pouvez spécifier plusieurs grilles en passant un tableau de chaînes.",
  "7843880C62D8A84EB3C2": "GPT-4 requis",
  "362BD6FDAF54E17A1121": "Les tests `rubrics` nécessitent une configuration OpenAI ou Azure OpenAI avec un modèle `gpt-4` dans le fichier `.env`.",
  "8148D7A86313711EDA30": "`facts`",
  "198F71862B48688A8BB5": "`facts` vérifie la cohérence factuelle (voir [factuality](https://promptfoo.dev/docs/guides/factuality-eval/)).\nVous pouvez spécifier plusieurs faits en passant un tableau de chaînes.",
  "EB0CD19A0585A8E19562": "donnée une complétion A et une réponse de référence B, cela évalue\nsi A est un sous-ensemble de B, A est un sur-ensemble de B, A et B sont équivalents,\nA et B s’opposent, ou A et B diffèrent,\nmais la différence n’a pas d’importance du point de vue de la factualité.",
  "F7AC2D0F890D772BDA5B": "gpt-4o requis",
  "72F35318E139F17FC098": "Les tests `facts` nécessitent une configuration OpenAI ou Azure OpenAI avec un modèle `gpt-4o` dans le fichier `.env`.",
  "8B06B38066FAD460E900": "`asserts`",
  "A1DE5AC8FCD13E08138D": "Autres assertions sur\n[assertions et métriques promptfoo](https://promptfoo.dev/docs/configuration/expected-outputs/).",
  "30113D252EB627B0E3EA": "`icontains` (`not-icontains`) la sortie contient une sous-chaîne, insensible à la casse",
  "42E524242F1576B71B27": "`equals` (`not-equals`) la sortie est égale à la chaîne",
  "65C55723391CF7F29D3A": "`starts-with` (`not-starts-with`) la sortie commence par la chaîne",
  "FA4BC09CBC975833DB8D": "`contains-all` (`not-contains-all`) la sortie contient toutes les sous-chaînes",
  "D6B21640026A94290B38": "`contains-any` (`not-contains-any`) la sortie contient une quelconque des sous-chaînes",
  "D2BD211841013D25B76B": "`icontains-all` (`not-icontains-all`) la sortie contient toutes les sous-chaînes, insensible à la casse",
  "0C5011F49CFD66A1B53C": "transformer",
  "687F8FC9C8A9A438F9BD": "Par défaut, GenAIScript extrait le champ `text` de la sortie avant de l’envoyer à PromptFoo.\nVous pouvez désactiver ce mode en réglant `format: \"json\"` ; les `asserts` sont alors exécutés sur la sortie brute du LLM.\nVous pouvez utiliser une expression JavaScript pour sélectionner une partie de la sortie à tester.",
  "94CD6E1A299980D60616": "Exécution des tests",
  "FCB7EE8833FA2FE76C58": "Vous pouvez exécuter les tests depuis Visual Studio Code ou en utilisant la [ligne de commande](/genaiscript/reference/cli).\nDans les deux cas, genaiscript génère un [fichier de configuration promptfoo](https://promptfoo.dev/docs/configuration/guide)\net exécute promptfoo dessus.",
  "70127A461BFECCE55A2E": "Visual Studio Code",
  "35402A5301C8907077F8": "Ouvrez le script à tester",
  "F661CF931071374E04A4": "Faites un clic droit dans l’éditeur et sélectionnez **Exécuter les tests GenAIScript** dans le menu contextuel",
  "FD717B82D7B9E4E6460F": "La [vue web promptfoo](https://promptfoo.dev/docs/usage/web-ui/) s’ouvrira automatiquement\net se rafraîchira avec les résultats des tests.",
  "17120CBADBC82F3CA1D0": "Ligne de commande",
  "0029A7BD72841E395A20": "Exécutez la commande `test` avec le fichier script en argument.",
  "BB6D5DF46E8E0D763D15": "Vous pouvez spécifier des modèles supplémentaires à tester en utilisant l’option `--models`.",
  "1DF2731A3957C597C664": "Traduit avec IA. Veuillez vérifier le contenu pour en assurer l'exactitude.",
  "A7E9C2CDDD7AB4BDDE47": "Microsoft Teams",
  "51BCBCABA1F6AFB0B36F": "Découvrez comment utiliser l’intégration Microsoft Teams dans vos scripts.",
  "A5AE1C1AD4C234FCFFBA": "GenAIScript fournit des API pour poster un message, avec des fichiers joints, dans un canal donné de [Microsoft Teams](https://www.microsoft.com/en-us/microsoft-teams/) ainsi que dans son espace de fichiers SharePoint.",
  "8D0AD50547E39257C328": "en utilisant la CLI, pour poster le résultat de la génération AI",
  "DF5E12A1E1A868246B35": "en utilisant l’API, pour poster un message avec des pièces jointes",
  "6FCEE56FC0251875D0D4": "Authentification",
  "0F5528911E7E5B436077": "GenAIScript utilise le client d’authentification Azure pour interagir avec Microsoft Graph. Connectez-vous à votre compte en utilisant l’Azure CLI.",
  "748684421CAC43706BFE": "Configuration",
  "B1F63926DE6B67249CAC": "Pour utiliser l’intégration Microsoft Teams avec la [CLI](/genaiscript/reference/cli), vous devez fournir une URL de lien vers un canal Teams.",
  "55C98ACD20666F6F1E8B": "API",
  "858969A71FA1EF3B0FCC": "L’API fonctionne en créant un client pour le canal, puis en appelant `postMessage`.",
  "0438FE3FBC5EC1768BAC": "Vous pouvez également joindre des fichiers au message. Les fichiers seront téléversés dans le dossier Fichiers SharePoint.",
  "8B01820627A9EAEEBFA1": "Ajoutez une description au fichier pour renseigner ces métadonnées. La description peut être en markdown et sera convertie en HTML compatible Teams autant que possible.",
  "269188663D5E3FC9092B": "Pour les vidéos, GenAIScript scindera la description en sujet/message pour renseigner les deux champs dans Microsoft Stream.",
  "9E99BF6C06B5ED63C3DC": "Traduit à l’aide de l’IA. Veuillez vérifier l’exactitude du contenu.",
  "2A228D40F85DCFA2F030": "Invites Système",
  "E51BCCF3ED764E73B395": "Apprenez à utiliser les invites système pour améliorer l'exécution des scripts dans GenAIScript.",
  "871685DAE537128598BA": "Les invites système sont des scripts qui sont exécutés et injectés avant la sortie principale de l'invite.",
  "83C39D77F42EAFF4A384": "`system.*.genai.js` sont considérés comme des modèles d'invites système",
  "C84C10EE6B6E56C08E06": "Les invites système ne sont pas listées par défaut",
  "056E4096041F528D6B51": "Les invites système doivent utiliser `system` au lieu de `script`",
  "E4D178BA6239057A3217": "Les invites système sont exécutées dans le même environnement que l'invite principale",
  "4BA393274D06802B9958": "Les invites système doivent posséder une fonction par défaut et utiliser le `ctx` passé dans la fonction.",
  "BE1887A334466C559423": "Pour utiliser les invites système dans un script, remplissez le champ `system` avec des identifiants de script.",
  "C27E13C9A3D087039E32": "Il est également possible de remplir le script système en incluant des noms d'outils, ce qui entraîne l'importation de l'outil dans le script.",
  "B75D3BCD93865F9DE524": "Paramètres et variables",
  "7EF1C2BB5EE72F718C6C": "Le système prend également en charge les paramètres comme le script mais les noms de paramètres seront automatiquement préfixés par l'identifiant du script",
  "F5B5022C4F929CE83136": "déclarer et utiliser le paramètre dans le script système",
  "72467903D6946FCCDE61": "surcharger la valeur du paramètre dans le script",
  "7329FE9E7A58F2DCDBDC": "surcharger la valeur du paramètre dans une instance du script système",
  "BFE9C14F498339CD5FA8": "Invites Système Automatisées",
  "46210B4747376F48DBBD": "Lorsqu'elles ne sont pas spécifiées, GenAIScript inspecte le code source du script pour déterminer un ensemble raisonnable d'invites système ([source code](https://github.com/microsoft/genaiscript/blob/main/packages/core/src/systems.ts)).",
  "87151B120BEEFB4AC6A3": "Le mélange par défaut est",
  "45514C8B1ED17773F9A2": "système",
  "6684937159B88F692798": "system.output_markdown",
  "D28CE2FDD8D15A5BA41A": "system.explanations",
  "DC6FD56D4E0443207771": "system.safety_jailbreak",
  "3F58089FA00247812FDB": "system.safety_harmful_content",
  "1E2FEEE57A42153D4123": "system.safety_protected_material",
  "4C5599B780D0259B6CAC": "Par-dessus les scripts par défaut, d'autres scripts système sont injectés selon la correspondance de mots-clés.",
  "E120EE785127B37C8A42": "Invites Système Intégrées",
  "D20606552D816BBDCA8D": "GenAIScript est fourni avec plusieurs invites système prenant en charge des fonctionnalités telles que la création de fichiers, l'extraction de diff ou la génération d'annotations. Si non spécifié, GenAIScript recherche des mots-clés spécifiques pour activer les différentes invites système.",
  "D2B6D309993B81816F8B": "`system`",
  "22A6C5A3B8C60B8AA0F5": "Invite système de base",
  "C486639F17F945B635B6": "`system.agent_data`",
  "BBFF6F4F473E3503458E": "Agent capable d'interroger des données dans des fichiers",
  "4807613AF4E29E44F1B5": "`system.agent_docs`",
  "F6DDA2933B40EBE4A810": "Agent capable d'interroger la documentation.",
  "9ABEE37D83C38AB1C87F": "`system.agent_fs`",
  "D2AC02F12A1486918E98": "Agent capable de trouver, chercher ou lire des fichiers pour accomplir des tâches",
  "F985728372D16A0794B6": "`system.agent_git`",
  "5C5115D4BB9A9748AEB1": "Agent capable d'interroger Git pour accomplir des tâches.",
  "E07EB0F82F2F5CE051EE": "`system.agent_github`",
  "5997B078323E57E5983E": "Agent capable d'interroger GitHub pour accomplir des tâches.",
  "2BAD2228A834B1ADA139": "`system.agent_interpreter`",
  "70A8CC791287C7EBB85F": "Agent capable d'exécuter des interprètes de code pour Python, Mathématiques.",
  "DCC94276EF5E6CAEFE34": "`system.agent_mcp`",
  "38ADC64E98743F69CA8B": "Agent du protocole de contexte de modèle",
  "CF7146CF20ED6A57A1B3": "Encapsule un serveur MCP avec un agent.",
  "D591C79E94A9DBEECAD7": "`system.agent_planner`",
  "D07A3443ECCEE2AA6703": "Un agent planificateur",
  "2216296FF867BCE8BD79": "`system.agent_user_input`",
  "66B23AE42A8E40498E09": "Agent pouvant poser des questions à l'utilisateur.",
  "27BB47DAAD8E4C997BCC": "`system.agent_video`",
  "51D2A59A76E60648A8D0": "Agent capable de travailler sur des vidéos",
  "66C90EC4F8FCC8627A3E": "`system.agent_web`",
  "1606147B87F1BDAB41E3": "Agent capable de rechercher sur le web.",
  "C7B125C594F899D54A72": "`system.agent_z3`",
  "BC06D2687CF94B1DB024": "Agent capable de formaliser et résoudre des problèmes utilisant Z3.",
  "C29DC3D847B15F52FFC1": "`system.annotations`",
  "2B32356B7470BFA9185C": "Émet des annotations compatibles avec GitHub Actions",
  "91A5ABB1C36EB9E1F268": "Les workflows GitHub Actions prennent en charge les annotations ([En savoir plus...](https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-error-message)).",
  "75BE3F5764638992CD68": "`system.assistant`",
  "933EDB6DB8EB9A767E2D": "Invite pour un assistant utile.",
  "F2F7C196F02824FC57A0": "Une invite pour un assistant utile issue de https://medium.com/@stunspot/omni-f3b1934ae0ea.",
  "A6FD54E8DC69820F26A7": "`system.chain_of_draft`",
  "2074230B09CF47E12CE1": "Raisonnement Chain Of Draft",
  "79BA730CF4896198605D": "Technique de raisonnement Chain of Draft. Plus d'infos sur https://learnprompting.org/docs/intermediate/zero_shot_cot.",
  "A2FDA3FAD03F005FA95C": "`system.changelog`",
  "38AD54340C71133259F0": "Générer des modifications formatées pour le changelog",
  "0C8F76F4BAF39216C7A6": "`system.cooperation`",
  "7B328CA6524ED2D5B0C2": "Principes de coopération selon la maxime de Grice.",
  "69ADA3726928D0853C64": "`system.diagrams`",
  "8CE31E900F01CAE735A4": "Générer des diagrammes",
  "F114758DD7749E66F240": "`system.diff`",
  "A5AD8E9D213F7E73BB9C": "Génère des diff concis de fichiers.",
  "2999E43CDFC6D5BE48FE": "`system.do_not_explain`",
  "BCB6E75C44BFC49F65D7": "Ne pas expliquer",
  "A49021C0A20F67CFC829": "`system.english`",
  "E50502ED14AEE48C5CE0": "Utiliser la sortie en anglais",
  "4C45D30B219C09ED9E0D": "`system.explanations`",
  "51D6E3755C250EDF6AC7": "Expliquez vos réponses",
  "DE6945968B540461FF87": "`system.fetch`",
  "D95ADA04082C3CDDD7C6": "Un outil capable d'extraire des données depuis une URL",
  "BFE2691BD6D2BF0F987B": "outil `fetch` : Récupère des données depuis une URL sur des domaines autorisés.",
  "BF94D383494945C74962": "`system.files`",
  "5852675732EF031836A5": "Génération de fichiers",
  "5FBCB434F860EA860D59": "Enseigne le format de fichier supporté par GenAIScripts",
  "F731F0AE8A3684480E00": "`system.files_schema`",
  "35C6FFC2B34FFC22101B": "Applique des schémas JSON aux données générées.",
  "CC8DAC8C9F3EF37B0D6C": "`system.fs_ask_file`",
  "EB21F6B2AF8D74DEA39F": "Interroger un fichier",
  "F23232B6D339BD2EA95A": "Exécute une requête LLM contre le contenu d'un fichier.",
  "B87344A493FFD14A3BB5": "outil `fs_ask_file` : Exécute une requête LLM sur le contenu d'un fichier. Utilisez cet outil pour extraire des informations d'un fichier.",
  "3C195BAA6A8ED46D956D": "`system.fs_data_query`",
  "31DE247940FC8F272AB5": "Un outil qui permet d'interroger des données dans un fichier",
  "B30932F40FB74E632951": "outil `fs_data_query` : Interroge des données dans un fichier en utilisant la syntaxe GROQ",
  "506A8AB0270E12FC7A91": "`system.fs_diff_files`",
  "4A312279CE2B66A6DBC1": "Différence de fichiers",
  "19702EA46CA788F4E2A3": "Outil pour calculer une différence entre deux fichiers.",
  "BE33A868E0AE4D6568BA": "outil `fs_diff_files` : Calcule une différence entre deux fichiers différents. Utilisez git diff pour comparer les versions d'un fichier.",
  "6F0FF3FAE2B5E18C5200": "`system.fs_find_files`",
  "D174041F8EFB37AF3B1D": "Recherche de fichiers",
  "DA24F42C59EDA72F546B": "Recherche de fichiers avec glob et expression régulière de contenu.",
  "36EC03C1DD94DD3C774B": "outil `fs_find_files` : Trouve des fichiers correspondant à un motif glob. Utilisez pattern pour spécifier une expression régulière à rechercher dans le contenu du fichier. Attention à ne pas interroger trop de fichiers.",
  "3BE9FAE955052C305274": "`system.fs_read_file`",
  "9716186B9E026FA305A9": "Lecture du contenu d'un fichier",
  "3DB5B8923AFCCA123F62": "Fonction qui lit le contenu d'un fichier en texte.",
  "677BD9B326038A85249B": "outil `fs_read_file` : Lit un fichier en tant que texte depuis le système de fichiers. Renvoie undefined si le fichier n'existe pas.",
  "0C54B309D0496BF42A72": "`system.git`",
  "4F79BB6D68E3E6A5A0D2": "Opérations de lecture git",
  "C5DB13A1DA485A8CA430": "Outils pour interroger un dépôt git.",
  "04FE4701CD734D314973": "outil `git_branch_default` : Obtient la branche par défaut via le client.",
  "72D1B33785CC6FEC0E3A": "outil `git_branch_current` : Obtient la branche courante via le client.",
  "94CABFF4093356A3E810": "outil `git_branch_list` : Liste toutes les branches via le client.",
  "A1A2163898E707A16E28": "outil `git_list_commits` : Génère un historique des commits avec la commande git log.",
  "385F3813C039A64B1A0C": "outil `git_status` : Génère un statut du dépôt via le client.",
  "FD0CF678AB419D4FE5F0": "outil `git_last_tag` : Obtient le dernier tag via le client.",
  "3D0028F74CEDE2B4DC3D": "`system.git_diff`",
  "3C2C189B4470E7AA0623": "diff git",
  "0A3C2C52FB82EEC2325C": "Outils pour interroger un dépôt git.",
  "79CC2C9D8522391ABEB7": "outil `git_diff` : Calcule des diff de fichiers avec la commande git diff. Si le diff est trop grand, retourne la liste des fichiers modifiés/ajoutés.",
  "781F91EFF7E748139520": "`system.git_info`",
  "0FDEB1EAFB4D22683BE9": "Information sur le dépôt Git",
  "652ED1B69DF16CA4AB6A": "`system.github_actions`",
  "1EF30B5D95775E7783F5": "workflows github",
  "F7385953FE8BF9C092F7": "Interroge les résultats des workflows dans GitHub actions. Préférez les diff pour comparer les logs.",
  "798235D1EC0B1C3A287C": "outil `github_actions_workflows_list` : Liste tous les workflows github.",
  "AEE59054A162C53EFA63": "outil `github_actions_jobs_list` : Liste tous les jobs pour un run de workflow github.",
  "F25139AC06423EF66CC7": "outil `github_actions_job_logs_get` : Télécharge le log d'un job de workflow github. Si le log est trop grand, utilisez 'github_actions_job_logs_diff' pour comparer.",
  "79F02602CC93DC2FD44F": "outil `github_actions_job_logs_diff` : Compare les logs de deux jobs de workflow github.",
  "0D6335B7E6109A93FDEA": "`system.github_files`",
  "964A03F898B98B528A42": "Outils pour interroger les fichiers GitHub.",
  "F4D033871BE3BE0D113A": "outil `github_files_get` : Récupère un fichier depuis un dépôt.",
  "B6FF10A9DC01DB29E4A5": "outil `github_files_list` : Liste tous les fichiers d'un dépôt.",
  "29F445DAB514ACB5CE59": "`system.github_info`",
  "6C4B5CAA592713A81B97": "Information générale GitHub.",
  "2A8D64B452583FC842B7": "`system.github_issues`",
  "3F8D313475BDB2DAF8D9": "Outils pour interroger les issues GitHub.",
  "8B1F9D91A58C3044ACDE": "outil `github_issues_list` : Liste toutes les issues d'un dépôt.",
  "2EB85613AB7EEDDFBB7B": "outil `github_issues_get` : Récupère une issue unique par numéro.",
  "20FD87AE839CDAB4090A": "outil `github_issues_comments_list` : Récupère les commentaires d'une issue.",
  "138EDE54D90A376198FE": "`system.github_pulls`",
  "29BE4BF4D6DED6C88F02": "Outils pour interroger les pull requests GitHub.",
  "748E10B4626FC04ACD7C": "outil `github_pulls_list` : Liste toutes les pull requests d'un dépôt.",
  "A3651CFA924745A27964": "outil `github_pulls_get` : Récupère une pull request unique par numéro.",
  "A84201D1BD824B8B9705": "outil `github_pulls_review_comments_list` : Récupère les commentaires de revue d'une pull request.",
  "1E8C4D8E7BBF4E2F1747": "`system.math`",
  "B81F8DF2D1FAFA791AC5": "Évaluateur d'expressions mathématiques",
  "0155B1E0C18FECB73D53": "Enregistre une fonction qui évalue des expressions mathématiques",
  "AC247B44DBE4AF60B1DC": "outil `math_eval` : Évalue une expression mathématique. Ne calculez PAS vous-même les opérations arithmétiques, utilisez cet outil.",
  "E3E2E17A765027D2527F": "`system.mcp`",
  "4AFFA962D450259ACBB2": "Charge les outils depuis un serveur Model Context Protocol",
  "C348BD184B172FF5A777": "Ce script système doit être configuré avec une configuration de serveur MCP.",
  "343823EAF41C98E12A83": "`system.md_find_files`",
  "80B7D3B386F275106690": "Outils pour aider avec les tâches de documentation",
  "40FB1C43873C09C18A94": "outil `md_find_files` : Obtient la structure des fichiers markdown/MDX de la documentation. Retourne filename, title, description pour chaque correspondance. Utilisez pattern pour définir une expression régulière à chercher dans le contenu des fichiers.",
  "12C0EB60C83C518A8893": "`system.md_frontmatter`",
  "87EFC77D7CF005CC093C": "Lecteur de frontmatter Markdown",
  "15FC657B544BCEEB4A54": "Enregistre un outil qui lit le frontmatter d'un fichier markdown ou MDX.",
  "9454E9A2446EE3F9ED55": "outil `md_read_frontmatter` : Lit le frontmatter d'un fichier markdown ou MDX.",
  "4AD8554789D6D6105F65": "`system.meta_prompt`",
  "C95FE2C9D8DE9CA7C8DD": "Outil qui applique les directives OpenAI de meta-prompt à un prompt utilisateur",
  "C28E415E7B7D5518B17A": "Outil de meta-prompt modifié de https://platform.openai.com/docs/guides/prompt-generation?context=text-out.",
  "E1F40326B77EFD132C22": "outil `meta_prompt` : Outil qui applique les directives OpenAI de meta-prompt à un prompt utilisateur. Modifié de https://platform.openai.com/docs/guides/prompt-generation?context=text-out.",
  "383B1308723A91F38712": "`system.meta_schema`",
  "208296F7456BA3EA1422": "Outil qui génère un schéma valide pour le JSON décrit",
  "5746EDA80DB38A942580": "Générateur de méta schéma OpenAI depuis https://platform.openai.com/docs/guides/prompt-generation?context=structured-output-schema.",
  "57A0FAA086D643B216D6": "outil `meta_schema` : Génère un schéma JSON valide pour le JSON décrit. Source https://platform.openai.com/docs/guides/prompt-generation?context=structured-output-schema.",
  "383DFEC4091C9DA40392": "`system.node_info`",
  "0E5D6FED920EFC5EDEAA": "Informations sur le projet actuel",
  "F42C338AFCA6988E9E6A": "`system.node_test`",
  "9D73F95EC89AAC5FA384": "Outils pour exécuter les tests node.js",
  "5DE0E7E4165978E6B9F5": "outil `node_test` : construit et teste le projet actuel en utilisant `npm test`",
  "C30D891E08D478EA5180": "`system.output_ini`",
  "616D4D6E2C10F717DECB": "Sortie INI",
  "5D4D53FF59E48024142C": "`system.output_json`",
  "97D0BE963FBFFECBDD93": "Sortie JSON",
  "364DF0A545036B5B640A": "`system.output_markdown`",
  "BC93F25237D63198075B": "Invite système pour sortie Markdown",
  "96EFB3171F6FEDE4178F": "`system.output_plaintext`",
  "8466DB0724E34A82B7A6": "Sortie en texte brut",
  "D6D9392C3A50D1EB080D": "`system.output_yaml`",
  "8DA7849640E204997633": "Sortie YAML",
  "EA2E4F8FC3732DA02AAC": "`system.planner`",
  "391238BAEA981E5E6749": "Instruction pour faire un plan",
  "F55230A68B316704F1B5": "`system.python`",
  "680F5994C5DC081DF567": "Expert en génération et compréhension de code Python.",
  "491B28BED31FE1589AE1": "`system.python_code_interpreter`",
  "D1383DC8C33A770FF97F": "Exécution de code Dockerisée Python pour analyse de données",
  "E27A553E993A98FB8236": "outil `python_code_interpreter_run` : Exécute du code python 3.12 pour les tâches d'analyse de données dans un conteneur docker. Le résultat du processus est retourné. Ne pas générer de visualisations. Les seuls paquets disponibles sont numpy===2.1.3, pandas===2.2.3, scipy===1.14.1, matplotlib===3.9.2. Il n'y a pas de connectivité réseau. Ne tentez pas d'installer d'autres paquets ou d'effectuer des requêtes web. Vous devez copier tous les fichiers nécessaires ou passer toutes les données car le code python s'exécute dans un conteneur séparé.",
  "8005373BE5E602435E1F": "outil `python_code_interpreter_copy_files_to_container` : Copie des fichiers du système de fichiers de l'espace de travail vers le système de fichiers du conteneur. Pas de chemins absolus. Retourne le chemin de chaque fichier copié dans le conteneur python.",
  "B2E92754F2B9F7368D6A": "outil `python_code_interpreter_read_file` : Lit un fichier depuis le système de fichiers du conteneur. Pas de chemins absolus.",
  "FFD73C9CF117F8C392DE": "`system.python_types`",
  "523630DD99D94ECFC0E0": "Développeur Python qui ajoute des types.",
  "06C9E7D7F08EA82A7806": "`system.retrieval_fuzz_search`",
  "2F31DBC66C0A0ADB9142": "Recherche textuelle floue complète",
  "8A5EF0469AECD75E8065": "Fonction pour effectuer une recherche floue sur un texte complet.",
  "0BDF4D4AE6B2D5C8690E": "outil `retrieval_fuzz_search` : Recherche des mots-clés en utilisant le texte complet des fichiers et une distance floue.",
  "9AE886F54CA6401AD517": "`system.retrieval_vector_search`",
  "705666600ABACF3A411F": "Recherche vectorielle par embeddings",
  "23E5F1499DBF98E16364": "Fonction pour faire une recherche utilisant la similarité des vecteurs d'embeddings.",
  "FB47B9B374F6430AD0A6": "outil `retrieval_vector_search` : Recherche dans les fichiers à l'aide d'embeddings et de la distance de similarité.",
  "42450F2B6F044069969C": "`system.retrieval_web_search`",
  "6CC7816A0C8C304E637D": "Recherche web",
  "462E96B66FC247486A9C": "Fonction pour faire une recherche sur le web.",
  "B3A5E8B593C2B6F7C183": "outil `retrieval_web_search` : Recherche sur le web pour une requête utilisateur en utilisant Tavily ou Bing Search.",
  "9534489B184BF60C0C1B": "`system.safety_canary_word`",
  "958287C9CE8F054CC6C6": "Protection par mot-canari contre les fuites d'invites",
  "95B78CE529FCF837A689": "Injecte un mot-canari dans les invites système et surveille la sortie générée pour détecter des fuites.",
  "790FC15A0F0F3AF3C4E7": "`system.safety_harmful_content`",
  "FE83474F04C5A5064516": "Invite de sécurité contre les contenus nuisibles : haine, équité, sexualité, violence, automutilation",
  "7B6F6B110A7B73646A89": "Ce script système doit être considéré pour la génération de contenu (avec ou sans fondement), les chats multi-tours et simple tour, Q&A, réécriture et scénarios de résumé. Voir https://learn.microsoft.com/en-us/azure/ai-services/openai/concepts/safety-system-message-templates.",
  "8EB65A8AEB08EE904D9E": "`system.safety_jailbreak`",
  "84B7696B5F70B8914F75": "Script de sécurité pour ignorer les instructions dans les sections de code.",
  "6A64A78CB74A8A797394": "`system.safety_protected_material`",
  "76D8C6325A947A16B007": "Invite de sécurité contre le matériel protégé - Texte",
  "B8BE7FD22B9B1BF4B4F6": "Ce script système doit être considéré pour des scénarios tels que : génération de contenu (avec ou sans fondement), chat multi-tours et simple tour, Q&A, réécriture, résumé et génération de code. Voir https://learn.microsoft.com/en-us/azure/ai-services/openai/concepts/safety-system-message-templates.",
  "A4BC18861AD2688134F5": "`system.safety_ungrounded_content_summarization`",
  "A8B36CF03F064D3522E0": "Invite de sécurité contre le contenu infondé dans les résumés",
  "9B3075C129121982A3BA": "Doit être considéré pour les scénarios tels que la synthèse. Voir https://learn.microsoft.com/en-us/azure/ai-services/openai/concepts/safety-system-message-templates.",
  "E5CE4EB2AF3BBAE1CF61": "`system.safety_validate_harmful_content`",
  "4D70CD0367953AF5A304": "Utilise le fournisseur de sécurité de contenu pour valider la sortie LLM pour contenu nuisible",
  "58E2C3BB35F9F186425C": "`system.schema`",
  "65B52F892408DD490F6D": "Support des schémas JSON",
  "3B25A37BA6BDC86FA6BD": "`system.tasks`",
  "D2059D2B8439AEAB9155": "Génère des tâches",
  "57DF133E748109F88B71": "`system.technical`",
  "BDC5336EFD761797037C": "Rédacteur technique",
  "E65719522BB32D8B8E3A": "`system.think`",
  "EB6EE8DCB2DA074441F8": "L'outil think",
  "9D302FA257BCFC6CE7E5": "L'outil 'think' d'Anthropic défini dans https://www.anthropic.com/engineering/claude-think-tool. Utilise l'alias de modèle 'think'.",
  "11D587B177D95F79B6C0": "outil `think` : Utilise l'outil pour réfléchir à quelque chose. Il n'obtiendra pas de nouvelles informations ni ne modifiera la base de données, mais ajoute simplement la pensée au journal. Utilisez-le quand un raisonnement complexe ou une mémoire cache est nécessaire.",
  "BBB8CC5BA40ECC452DC1": "`system.today`",
  "20108328DA85B541704C": "Date d'aujourd'hui.",
  "692E6E8908FDE22FCFDF": "`system.tool_calls`",
  "6A37EED271856EA16472": "Support ad hoc des outils",
  "420634755133D8A0D810": "`system.tools`",
  "C43F29BCABD5B8DC0383": "Support des outils",
  "CC6748E38E359367997B": "`system.transcribe`",
  "460E8DD075D626AA4916": "Outil de transcription vidéo",
  "FD30C69E354DFAAF0C56": "outil `transcribe` : Génère une transcription depuis un fichier audio/vidéo en utilisant un modèle de reconnaissance vocale.",
  "90A945D7B2C18ED0DA42": "`system.typescript`",
  "65E451AFD8FDB7E22E8E": "Développeur expert TypeScript",
  "A031EF630F22D781E390": "`system.user_input`",
  "04102437A5355FA7D669": "Outils pour poser des questions à l'utilisateur.",
  "5F9D4C48444DDFE912E7": "outil `user_input_confirm` : Demande à l'utilisateur de confirmer un message.",
  "693EDDC4361BD4AFD8ED": "outil `user_input_select` : Demande à l'utilisateur de sélectionner une option.",
  "CD099C2A10EE612B589F": "outil `user_input_text` : Demande à l'utilisateur de saisir du texte.",
  "E2790C30663E3A391B9C": "`system.video`",
  "B7FDA4F8FE386B5E7196": "Outils de manipulation vidéo",
  "A99C157387FFAA504C63": "outil `video_probe` : Analyse un fichier vidéo et retourne les métadonnées",
  "A636548DE3C259AC166D": "outil `video_extract_audio` : Extrait l'audio d'un fichier vidéo dans un fichier audio. Retourne le nom du fichier audio.",
  "179983EE2959F05B62CC": "outil `video_extract_clip` : Extrait un clip d'un fichier vidéo. Retourne le nom du fichier vidéo.",
  "7661725793E339402BED": "outil `video_extract_frames` : Extrait des images (frames) d'un fichier vidéo",
  "DD5B905293C958033D0A": "`system.vision_ask_images`",
  "21136F0A97BBB6782423": "Vision Ask Image",
  "A07495C8A1485B921630": "Enregistre un outil qui utilise le modèle de vision pour exécuter une requête sur des images",
  "785B464BB9EA3CF8895B": "outil `vision_ask_images` : Utilise un modèle vision pour exécuter une requête sur plusieurs images",
  "F43786536520349BAB44": "`system.z3`",
  "499851B95A590C79F992": "Z3",
  "A46FAD61804832C310CA": "Résout des systèmes de contraintes avec le solveur de contraintes Z3.",
  "3EBE7212C7CB8555996A": "outil `z3` : Résout un problème SMTLIB2 en utilisant le solveur Z3. Envoyez les problèmes un par un. Utilisez cet outil si vous avez besoin d'exécuter Z3.",
  "E7C9B650B68093FCDF26": "`system.zero_shot_cot`",
  "5760644AC53A08C4E04B": "Chaine de Raisonnement Zero-shot",
  "92E62137AC4C4D336229": "Technique de chaîne de raisonnement zero-shot. Plus d'informations sur https://learnprompting.org/docs/intermediate/zero_shot_cot.",
  "0EB257200931FA9F5026": "Traduit par AI. Veuillez vérifier le contenu pour précision.",
  "90E9902E885D66794AA7": "Sorties structurées",
  "6CFA7372F04BF7EFD5B9": "Utilisez la sortie structurée dans GenAIScript pour générer des données JSON avec validation de schéma afin d'obtenir une structuration des données précise et fiable.",
  "0C998ECF247EBCF2FE23": "GenAIScript prend en charge la génération de sorties structurées avec réparation automatique des données. Il peut exploiter la validation de schéma intégrée des fournisseurs de LLM ou exécuter sa propre validation selon les besoins.",
  "419A6176816B166F2C1C": "Les sorties structurées sont configurées via deux indicateurs : `responseType`, qui contrôle le format des données, et `responseSchema` qui contrôle la structure des données.",
  "134609FF09851B20E113": "Type de réponse",
  "875708D19BAD1B5925EC": "Le type de réponse est contrôlé par l'argument optionnel `responseType` et offre les options suivantes :",
  "8F02411C4A7F465ACB02": "`json` : demande au LLM de produire une sortie JSON valide.",
  "7689FC9491BEC655C9EF": "`yaml` : demande au LLM de produire une sortie YAML valide.",
  "330F164F8389C922D900": "`json_object` : utilise la sortie JSON intégrée d'OpenAI",
  "754D5405D7CE55EB098F": "`json_schema` : utilise la sortie JSON intégrée d'OpenAI avec validation par schéma JSON",
  "BD50F1E7B3E41B8395B3": "Notez que `text` et `markdown` sont également pris en charge pour configurer la sortie du LLM.",
  "8C951F82EE4E7DF0AC0E": "`json`",
  "90D1002739B9A68EEC80": "Dans ce mode, GenAIScript invite le LLM à produire une sortie JSON valide. Il valide également la sortie et tente de la réparer si elle n'est pas valide.\nCe mode est implémenté par GenAIScript et ne dépend pas du support des fournisseurs de LLM.",
  "903F32F821C5D1EDEFD9": "La validation du schéma est appliquée si `responseSchema` est fourni.",
  "38253458079B2E7E7F44": "`yaml`",
  "623B91A0EB409155AACC": "Dans ce mode, GenAIScript invite le LLM à produire une sortie JSON valide. Il valide également la sortie et tente de la réparer si elle n'est pas valide.\nCe mode est implémenté par GenAIScript et ne dépend pas du support des fournisseurs de LLM.",
  "1D2531185BEE78D14F02": "La validation du schéma est appliquée si `responseSchema` est fourni.",
  "79ACFA6BDCDBC5D04764": "`json_object`",
  "DCCD307F17CA2A6CC096": "Dans ce mode, GenAIScript invite le LLM à produire une sortie JSON valide. Il valide également la sortie et tente de la réparer si elle n'est pas valide.\nCe mode repose sur le support intégré des LLM, comme OpenAI.",
  "69F85215938FABD416FA": "`json_schema`",
  "3C5A42E3F7D825BEB8DE": "La sortie structurée est une fonctionnalité qui vous permet de générer des données structurées dans un format de données comme avec un [schéma JSON](/genaiscript/reference/scripts/schemas). Cela est plus strict que `json_object`.",
  "2FBDDC42B0C502258E5E": "Pour activer ce mode, définissez `responseType` sur `json_schema` et fournissez un objet `responseSchema`.",
  "81E17872BDAC4764EFCF": "Notez qu'il existe [plusieurs restrictions](https://platform.openai.com/docs/guides/structured-outputs/how-to-use) sur les fonctionnalités de schéma prises en charge par ce mode.",
  "FDC881FCD46BBD7D056E": "`additionalProperties: true` n'est pas pris en charge.",
  "0FB2FD21DA2D4F7375BB": "tous les champs optionnels (par ex. non dans `required`) seront renvoyés et peuvent être `null`",
  "0939BC60FA39D5E54CD8": "Schéma de réponse",
  "6E1053ED5EEAA86AC617": "Vous pouvez spécifier un [schéma](/genaiscript/reference/scripts/schemas) via `responseSchema` ce qui activera automatiquement le mode de sortie structurée. La sortie sera validée selon ce schéma, et GenAIScript tentera de réparer la sortie si elle n'est pas valide. Le script échouera si la sortie ne correspond pas au schéma.",
  "909D2C3B08C2BF48B67B": "Schémas en ligne",
  "8404872368B669471513": "Notez que cette section s'applique à la sortie entière d'une conversation. Vous pouvez aussi utiliser des [schémas en ligne](/genaiscript/reference/scripts/schemas) et utiliser un mélange de markdown/données que GenAIScript analysera.",
  "10D1E58A2FEE0EDF8382": "Choix",
  "C35C28C32E39F61224D5": "Si vous cherchez à construire un LLM-as-a-Judge et ne souhaitez que des sorties dans un ensemble de mots, vous pouvez aussi envisager d'utiliser des [choix](/genaiscript/reference/scripts/choices) pour augmenter la probabilité que le modèle génère les mots spécifiés.",
  "73A6C5D5B59EDB8D1D2E": "`cast`",
  "B079DC2B6990AB804F8E": "La fonction [cast](/genaiscript/reference/runtime/cast) est une [fonction d'aide runtime de GenAIScript](/genaiscript/reference/runtime) pour convertir du texte ou des images non structurés en données structurées.",
  "A2EC270FC189A93D8AB0": "Traduit avec l'aide de l'IA. Veuillez vérifier le contenu pour en assurer l'exactitude.",
  "706A0B50EFF293D7647A": "Complétions stockées",
  "AD88A89AE72AFB20A4A8": "Métadonnées pour le script",
  "FF8821C1EE2C92F6AC62": "Les métadonnées sont une carte de paires clé-valeur utilisées pour activer les complétions stockées — une fonctionnalité dans OpenAI et [Azure OpenAI](https://learn.microsoft.com/en-us/azure/ai-services/openai/how-to/stored-completions) qui vous permet de stocker et de récupérer des complétions pour une invite donnée. Cela est utile pour la distillation et l'évaluation.",
  "EBBAC54601D7B20FE85D": "![Une complétion enregistrée](./stored-completions.png)",
  "B1E9E9C944711799C887": "Vous pouvez attacher jusqu'à 16 paires clé-valeur à un objet. Cela est utile pour stocker des informations supplémentaires dans un format structuré et pour interroger des objets via l'API ou le tableau de bord.",
  "67A092455A25ED1FB85E": "Les clés sont des chaînes de caractères d'une longueur maximale de 64 caractères. Les valeurs sont des chaînes de caractères d'une longueur maximale de 512 caractères.",
  "00F348BF290D8ECEE4DE": "Traduit avec l'aide de l'IA. Veuillez vérifier le contenu pour en assurer l'exactitude.",
  "3358B05AE898093B8854": "Secrets",
  "C86EFE294E6D8C71C6B7": "Apprenez à accéder et gérer en toute sécurité les secrets d’environnement dans vos scripts avec l'objet env.secrets.",
  "A06DDE59129B8FC5EC71": "L'objet `env.secrets` est utilisé pour accéder aux secrets de l'environnement. Les secrets sont généralement stockés dans le fichier `.env` à la racine du projet (ou dans `process.env` pour la CLI).",
  "3818E0351689E9115E70": "Vous devez déclarer la liste des secrets requis dans `script({ secrets: ... })` afin de pouvoir les utiliser dans le script.",
  "118927CF6FA9D45791E4": "déclarer l'utilisation dans `script`",
  "4D3007EFE22D4E1BBD79": "accéder au secret dans le script via `env.secrets`",
  "4418276F4FE86500F6B6": "Traduit à l’aide d’une IA. Veuillez vérifier l'exactitude du contenu.",
  "B379A60B1A754B599D70": "Analyse des secrets",
  "468DB8809E1AF0284AB9": "Apprenez à détecter et prévenir les fuites d'informations sensibles dans votre base de code grâce à l'analyse automatisée des secrets, des motifs personnalisables et des options de configuration.",
  "89B9BC19F6CDA28E9273": "Il ne devrait pas y avoir de secrets traînant dans votre base de code, mais cela arrive parfois. Pour vous aider à éviter cela, nous proposons une fonctionnalité d'analyse des secrets qui scannera votre base de code à la recherche de secrets et vous avertira si des secrets sont trouvés.",
  "71FD5275A0CC0AD6DF5B": "La fonctionnalité d'analyse des secrets n'est en aucun cas exhaustive et ne doit pas être considérée comme la seule méthode pour sécuriser votre base de code. C'est une fonctionnalité faisant un effort raisonnable pour vous aider à éviter des erreurs courantes.",
  "C465326C556DD6326DD5": "Motifs pris en charge",
  "BE78F82954A300594B38": "Par défaut, l'ensemble des motifs de secrets est presque vide et défini à l'adresse [https://github.com/microsoft/genaiscript/tree/main/packages/core/src/config.json](https://github.com/microsoft/genaiscript/tree/main/packages/core/src/config.json).",
  "C7A3D8D0BDB81BEA28D0": "Cette liste n'est pas une liste complète par conception, et doit être mise à jour pour correspondre à vos besoins.",
  "FDA319B7D7884C33E1CF": "Vous pouvez trouver des exemples de motifs à l'adresse [https://github.com/mazen160/secrets-patterns-db/](https://github.com/mazen160/secrets-patterns-db/).",
  "F21FB1FA61DB86374EA2": "Analyse des messages",
  "B50A5879A9FFDE695C98": "Par défaut, tous les messages envoyés aux LLM sont analysés et expurgés s'ils contiennent des secrets.",
  "F83987847D421AD59267": "Vous pouvez désactiver complètement l'analyse des secrets en réglant l'option `secretScanning` à `false` dans votre script.",
  "B419F4C7756256FE9CF4": "Configuration des motifs",
  "55A206D48EE5DC723B13": "Si vous disposez d'un motif spécifique que vous souhaitez analyser, vous pouvez le configurer dans votre [fichier de configuration](/genaiscript/reference/configuration-files).",
  "EDB3730D37FA2192F9BE": "ne pas utiliser `^` ou `$` dans votre expression régulière",
  "C284DACC7571883C722C": "Désactivation des motifs",
  "9CF4B1F44197B91D7E0E": "Attribuez la valeur `null` ou `false` à la clé du motif pour le désactiver.",
  "8E4E91640BB595F72C15": "Interface en ligne de commande (CLI)",
  "A13229BF706A0FF71750": "Vous pouvez tester vos motifs sur des fichiers en utilisant la CLI.",
  "FDE434771CCB358EFE07": "Traduit à l'aide d'une IA. Veuillez vérifier le contenu pour en assurer l'exactitude.",
  "8FA0344BB090AFEBC42F": "Schémas de données",
  "103AAD8A5203A2CD9292": "Apprenez à définir et à utiliser des schémas de données pour une sortie structurée en JSON/YAML avec LLM, y compris les techniques de validation et de réparation.",
  "B66FC2998F11E710B023": "Il est possible de forcer le LLM à générer des données conformes à un schéma spécifique. Cette technique fonctionne assez bien et GenAIScript fournit également une validation automatique \"au cas où\".",
  "6F47EEDBEDF03B56292C": "Vous remarquerez que le schéma pris en charge par GenAIScript est beaucoup plus simple que la spécification complète du schéma JSON. Nous recommandons d'utiliser des schémas simples pour éviter de confondre le LLM ; vous pourrez ensuite les adapter au format de données spécifique à votre application.",
  "53F52F7ACB02CE60BCEA": "Schémas JSON",
  "DBCC0AFCF9D10780D9F4": "Un schéma JSON est un langage déclaratif qui vous permet de valider la structure des données JSON. Il définit les types de données attendus, les propriétés et les contraintes pour les objets JSON. Les schémas JSON sont largement utilisés dans les APIs, les fichiers de configuration et les formats d'échange de données pour s'assurer que les données respectent une structure spécifique. Les schémas JSON sont définis en utilisant un format JSON et peuvent être utilisés pour valider des données JSON par rapport au schéma défini. GenAIScript supporte les schémas JSON pour définir la structure des données que vous souhaitez générer.",
  "37ECAC7F6D382DF5FC02": "`responseSchema`",
  "A77208F10EF7AFB98424": "Utilisez `responseSchema` pour définir un schéma JSON/YAML pour la sortie du prompt.",
  "3CBCF1467A11C284FA07": "Lors de l'utilisation de `responseSchema`, vous pouvez utiliser `responseType` pour spécifier comment le schéma doit être encodé dans la requête.",
  "93719D1FBA1B6F25B0C1": "`responseType: \"json\"` : Le schéma est encodé dans un message système et validé par GenAIScript.",
  "8F8083DF9F24A1E47597": "`responseType: \"json_object\"` : Le schéma est encodé dans la requête, en utilisant le support intégré de sortie structurée du LLM. Il est également validé par GenAIScript.",
  "8DBF0051B8CF4233A2D0": "Les deux approches sont des compromis et dépendent généralement du LLM que vous utilisez.",
  "EE9DEAE3A487ACF8F670": "Vous pouvez également l'appliquer à `runPrompt` et GenAIScript analysera et validera la sortie par rapport au schéma, puis la stockera dans le champ `json`.",
  "CD60EC502BE878B51B6F": "`defSchema`",
  "8556A742A2B941057243": "Utilisez `defSchema` pour définir un schéma JSON/YAML pour la sortie du prompt.",
  "7ED932D1976601726653": "<summary>👤 utilisateur</summary>",
  "B6F71216EC5B3518B211": "<summary>🤖 assistant</summary>",
  "6954383BC35472FD0A2C": "Support natif de zod",
  "FCEDAFD9463DBBC8F3E8": "Le [runtime GenAIScript](/genaiscript/reference/runtime) expose le module `z`.",
  "E579EEDD44888C08D3B5": "Un type [Zod](https://zod.dev/) peut être passé dans `defSchema` et sera automatiquement converti en schéma JSON. GenAIScript exporte également l'objet `z` de Zod pour plus de commodité.",
  "F4E2A151B5B6DC83C050": "Encodage du prompt",
  "01F1FF2CE8A63935157A": "Suivant l'approche [\"All You Need Is Types\"](https://microsoft.github.io/TypeChat/docs/introduction/) de TypeChat, le schéma est converti en types TypeScript avant d'être injecté dans le prompt du LLM.",
  "B56D11F17A81E72BC10D": "Vous pouvez modifier ce comportement en utilisant l'option `{ format: \"json\" }`.",
  "63E32A37F7ECB9FDED7C": "Lisez la trace !",
  "C4B2167A3A6FB79BE1C3": "La trace vous permet de voir la source du schéma et le prompt rendu, et le [cli](/genaiscript/reference/cli) écrira également les fichiers TypeScript générés dans le dossier de sortie.",
  "E82A94A2CB6BB4C1C19B": "<summary>schéma CITY_SCHEMA</summary>",
  "D9D41E4454BFDD06032A": "source :",
  "9FB0926324771AAC0475": "prompt (rendu en TypeScript) :",
  "D70259AD0825267DD084": "Utiliser le schéma",
  "EDB2FF2CA1F563F4FC35": "Puis dites au LLM d'utiliser ce schéma pour générer des données.",
  "CE195EEA4F59E48D4C21": "Validation",
  "5DD079B422393FCDA24F": "Lorsqu'une charge JSON/YAML est générée avec l'identifiant du schéma, GenAIScript valide automatiquement la charge par rapport au schéma.",
  "C44E0A947FC65109D847": "Tous les formats de données ne se valent pas ! Certains formats comme JSON introduisent de l'ambiguïté et peuvent perturber le LLM. [En savoir plus...](https://betterprogramming.pub/yaml-vs-json-which-is-more-efficient-for-language-models-5bc11dd0f6df).",
  "54C25737EC4E04B488B0": "Réparation",
  "428A7BE7329B73121138": "GenAIScript tentera automatiquement de réparer les données en envoyant des messages supplémentaires au LLM avec les résultats d'analyse.",
  "9B88F6F808A13589DF78": "Validation à l'exécution",
  "DA481100C6225AC7A468": "Utilisez `parsers.validateJSON` pour valider du JSON lors de l'exécution du script.",
  "83038B722C5EE01D5635": "La plupart des APIs de l'objet `workspace` qui analysent des données supportent aussi une option `schema` pour valider les données.",
  "10B1685F7446F153CDB2": "Traduit avec l'aide de l'IA. Veuillez vérifier l'exactitude du contenu.",
  "FBD1E0D35494D7AB57E3": "Les paramètres suivants sont accessibles via la commande **Préférences : Ouvrir les paramètres utilisateur**. ",
  "AB41ACACCAF74B9324D8": "CLI",
  "92BFF0A7E9F5100D0667": "npx",
  "F49427CB376C48238EA5": "Chemin",
  "F2563552FBFFDDB722DD": "Version",
  "2D3355D6141A02F8328B": "Masquer le terminal du serveur",
  "70934D29CFC5C144491F": "Diagnostics",
  "3BC76C004219EAD95B59": "champ `files`. ",
  "CF874E81D948DB4BD887": "Visual Studio Code",
  "4DC2078BD8C3576F1467": "Marché Visual Studio Code",
  "BDF1F1DA991D157C4E5F": "contient la dernière version stable de l’ ",
  "8CA365091C7C434AEFB6": "extension",
  "6C8B1A3072B559A04ADD": "GitHub Copilot Chat",
  "6715B9D4FE4EDDD11216": "où ",
  "8DF67DA7C4A549FD6EC2": "Les fichiers peuvent également inclure ",
  "414FB023AE5EEE1B9B45": "Fichiers",
  "AA14880C912EDFD3A413": "prend un ou plusieurs modèles ",
  "10B1E5DD987811EF2DCD": "glob",
  "466F970499CD091E1C84": "Résolutions des ressources",
  "CB65EAD53C2C7A4C3020": "- fichier local",
  "10BCCFC592C341A9BA5D": "- fichier GitHub",
  "B85CCFB7472BA162CB62": "- dépôt GitHub et motif de fichiers",
  "01D67A4BE080E51BB69A": "- Gist GitHub et motif de fichiers",
  "B11C5A45A9ACB2EA09AF": "- Gist GitHub et motif de fichiers",
  "6C0D6D0E10D2AAE8D49B": "- dépôt Git et motif de fichiers",
  "CCF84164B91725FF2F38": "Piping",
  "C62535F15C7D7BC57348": "prend le contenu stdin et le convertit en ",
  "7D9EC2515E9471CAD8BC": "--exclude-git-ignore",
  "6B12D26E525B6F4BF094": "Exclut les fichiers ignorés par le fichier `.gitignore` à la racine de l’espace de travail. ",
  "32135338EC9F9C7D0909": "Configuration",
  "EB132D0AA5FFB335A31E": "Configure l’alias du modèle par défaut ou `large`. Utilisez `echo` pour faire un test à blanc et retourner les messages au lieu d’appeler un fournisseur LLM. ",
  "BBEF7772FBC82475C785": "Remplit les valeurs dans la map `env.vars` qui peuvent être utilisées lors de l’exécution du prompt. ",
  "45C24DECC51EE92AC757": "Sortie",
  "05BE17AEA7D4B18B829D": "Si ",
  "734537F38B81960EA712": "ne se termine pas par ",
  "44186BD6CEAD9C35EE23": "--json",
  "9B93934A4CB290A8283D": "--yaml",
  "C9A657B783B577F295AA": "SARIF",
  "59DD6E559B5CC6A9E7D3": "ou un fichier CSV si le fichier se termine par `.csv`. ",
  "FC804679E4B0174CD662": "Pull Requests et Issues ",
  "855894760CB07AAE53F1": "Configuration du workflow GitHub Action",
  "D08723C363D1D04C2CCF": "ajoutez la ",
  "9B98652D19710E90939A": "permission `pull-requests: write` au workflow/étape",
  "85B06104862AE73FB16A": "définissez le ",
  "20656A296CA85118DE1B": "secret `GITHUB_TOKEN` dans `env` ",
  "F97DD1C9094B0D832DAE": "lors de l'exécution du CLI",
  "77AB64FEFBAB6AC62B34": "Configuration Azure DevOps",
  "495D4CC26EF9208AA289": "ajoutez ",
  "137E65B74E149723B510": "`<votre nom de projet> Build Service` ",
  "0CD126F77E97CFC689CA": "**Collaborateur**",
  "CAC9E53BFD14BAFC3F0C": "dans le rôle au dépôt",
  "E57E5B6519049E9F51E8": "exemple",
  "F93ABF26CDB82CF16D99": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par différentes exécutions. Par défaut, c’est l’identifiant du script. ",
  "14D7A56A0BC92EDE512F": "exemple",
  "1BF1579B287265E6CFAA": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par différentes exécutions. Par défaut, c’est l’identifiant du script. ",
  "8E407C10820F325A0C86": "--pull-request-reviews",
  "44D2B4672FE8DA9101D8": "Crée des commentaires de revue de pull request à partir de chaque ",
  "8016D38E3C325BE61543": "annotations",
  "887976D24B5C467BAE19": "exemple",
  "1E3DE03DEDB0B3E781F1": "En savoir plus",
  "1D1D83A0F696CE9579A5": "La liste complète des options est disponible dans la ",
  "75449C2447872430BB03": "référence CLI",
  "06C46D141C185A512F83": "GitHub Actions",
  "341FE7DC8E396223AA0A": "Récemment",
  "E41FB420918AB26BCC64": "Modèles GitHub",
  "CD5F64569B7D78B4ED32": "Passez à la section ",
  "B09FFD8CE763B1970168": "Actions personnalisées",
  "C1A92B317CB1DEAA23A9": "Exemples",
  "7BF9EC04C2A6347AE11F": "Étiqueteur d'issues GenAI",
  "92879E39A29F6AA2E8C8": "Dé-dupliqueur d'issues GenAI",
  "E20A36F7F6E7CCCE2D60": "Analyseur d'issues vidéo GenAI",
  "921CDB918575E0A13F96": "Commenteur de code GenAI",
  "E600E29D967B661EBCFD": "Autorisations des modèles GitHub",
  "72F8EF3B8092C861A910": "Pour utiliser les Modèles dans une GitHub Action",
  "0B01BC10F4CD7439F4C7": "pour l’action afin d’inclure ",
  "F605E6B14A687DC2B3D6": "Utilisation de la CLI",
  "02DA59B9D56BD40A3DB7": "La façon la plus simple d'utiliser GenAIScript dans une GitHub Action est d’exécuter directement la ",
  "D544AB89D79B8F2F71D0": "CLI",
  "33B9F1EF9E8F5B5703B0": "Veillez à inclure le ",
  "D338E0CD674AC40B016B": "parmi les variables d'environnement",
  "1C6EEE2CB5148CAB0719": "Actions personnalisées",
  "AF168AFD67F003620799": "GitHub permet d'empaqueter des tâches dans des ",
  "814595A56C942571F50C": "actions personnalisées",
  "CD03809CE4DCC703AC10": "La CLI GenAIScript fournit une commande pour générer ou mettre à jour le code modèle (boilerplate) permettant d'empaqueter un script comme ",
  "41B2D0AE8742340585A5": "action Docker",
  "F788DCC99D55583BC2AF": "Le générateur de squelette d’action va écraser les fichiers suivants :",
  "47FEE1561384A32708B7": "Fichier de métadonnées de l'action",
  "B363A4259A2A635734CB": "Dockerfile pour l'action",
  "4292255CAADD480DC2B8": "Documentation de l'action",
  "497AE4F45ABD1272E241": "Fichiers à ignorer dans le dépôt",
  "D956655EB818F733B746": "Workflow CI pour tester l'action",
  "1E66E1136154F823221D": "Configuration du package pour l'action",
  "F12759FC5D7945DE910F": "Configuration du devcontainer pour VS Code",
  "403F25D52282DC7CE8C4": "Métadonnées",
  "9017352AD8CB7BFCC0F3": "Le fichier ",
  "882F36CB092154417516": "Le ",
  "3F81BF44F6B9C1ACAEB7": "La ",
  "3BC3904DF6F91F43AB45": "du script est utilisée comme ",
  "3677CAFB461421E5A0C5": "Les ",
  "D4EB7CA6B9B6884EC3FA": "proviennent des ",
  "9F03E9EE1747482902E1": "paramètres",
  "4E12F620250B9EE1E72D": "Notez que ",
  "92CEAB7AD2CD372A14C5": "sert à remplir le fichier ",
  "064C32BA2A09155DE493": "Entrées",
  "5B3821DF11A032C88351": "La section ",
  "C7BB06CE14F87EBD4E4A": "de ",
  "10A51A5DF25E0FE3A68C": "Le fichier généré ",
  "EAC66D25E1423224A678": ": ceci est nécessaire pour s’authentifier auprès des modèles GitHub. ",
  "70C0CFD0BF5231283042": "journaux",
  "94801BBBAF15BD95C125": "Sorties",
  "FA51C1ABDDEED4E14FA7": "schéma de réponse",
  "7C3EA07934DA43062FE6": "Branding",
  "32C769BFD4C80505E3F2": "Le champ ",
  "9ADDC30B8F138BAD73EB": " ",
  "3A5D23F2CC8DEB74A28B": "sert à ",
  "7FF1FE990CF5326BB166": "personnaliser l’apparence de l’action dans l’interface GitHub",
  "50AF56D05AF456882232": "Conteneurs",
  "8FD851C668D583489302": "node",
  "ABE806EBF3C2DF3EF97C": "GenAIScript va également créer un ",
  "CC6E303F4AFD01D2DCEF": "devcontainer",
  "6130EDA319562ADCEF04": "Vous pouvez également ajouter tout autre package nécessaire en l’indiquant dans la commande ",
  "B58001DC79E52C138C21": "Test de l'Action",
  "E9419910B833C66CDBD2": "Votre script doit pouvoir être testé localement via la commande ",
  "B27B366A50CA7A4352CD": "GitHub Workspace vs Action Workspace",
  "FBEB7A734EF2F536C44C": "Le ",
  "0107AD3281E55B27514E": " ",
  "445D2DAB9CC09987DA91": "lance la CLI ",
  "D641FA181874F6F74349": " ",
  "A457179F1D6EAB632FD6": "puis détecte la variable d’environnement ",
  "AA9A04D5D0665929EE6F": "et change le dossier de travail courant (cwd). ",
  "62D7AF60221E57C5B55C": "Ce mode est activé par l’option ",
  "964FB29964CB18E6D80E": "dans la commande CLI. ",
  "0E391F3478ECBBB180AD": "Scripts",
  "BAF1DB44E08145DC16CA": "Interface en ligne de commande (CLI)",
  "DF53EB6A14F8E1641BCF": "Extension Visual Studio Code",
  "F475B8DA878B24C9B4DF": "Sécurité du contenu",
  "9F15CF80EAE1C3775FA1": "vous pouvez lancer le [cli](/genaiscript/reference/cli) en tant que **serveur Web API** pour exposer les scripts en tant que points de terminaison REST.",
  "2FC46A6D708C39FED95F": "Port",
  "84FA7E5FF967C6F92C24": "Le port par défaut est `8003`. Vous pouvez spécifier le port en utilisant l'option `--port`. ",
  "A6636AB56D258A137DE8": "Clé API",
  "249EAB9DF9745A7E8AFE": "ou la variable d'environnement ",
  "4863E48106494A8A2077": "ou",
  "446F03FC96B09641FF38": "La clé API peut être définie dans l'en-tête `Authorization` ",
  "C6AD90F6CDCE9BDAD335": "d'une requête ou dans le paramètre de requête URL `api-key` (`http://localhost:8003/#api-key=my-api-key`) ",
  "AE90966B2343301B5203": "CORS",
  "121DAD0DF3DB55DB92B5": "Vous pouvez activer les ",
  "B4905E6506B7391E4754": "Ressources Partagées entre Origines (Cross Origin Shared Resource)",
  "E6D614641E54F1E055CB": "en utilisant l'option ",
  "6B5DD9016AF323D77AEA": "`--cors` ou en définissant la variable d'environnement `GENAISCRIPT_CORS_ORIGIN`. ",
  "D0B28E484D154241C4F6": "Réseau",
  "625A16C683B6F6FDC820": "Vous pouvez lier le serveur à `0.0.0.0` ",
  "DBD1CFC2340DB62CF6E0": "et le rendre accessible depuis le réseau en utilisant l'option `--network`. Cette option est nécessaire pour rendre le serveur accessible depuis un conteneur. ",
  "691EF6AAD7DBAF542D37": "Dockerisé",
  "211A879FF6DDF961AE1E": "Cela crée une image `genaiscript` localement que vous pouvez utiliser pour lancer le serveur. ",
  "9F0EEAD8EFC3281B64BC": "puis ouvrez `http://localhost:8003` dans votre navigateur. ",
  "C6C76172532493315A7B": "Points de terminaison API OpenAI",
  "74BC78331C7084889C06": "glob",
  "D8B6E1134B110CA25E77": "[Z3](https://microsoft.github.io/z3guide/) est un prouveur de théorèmes haute performance développé par Microsoft Research. C’est un outil intégré de GenAIScript. Z3 est utilisé pour résoudre des formules logiques et peut être employé dans diverses applications, notamment la vérification de programmes, la résolution de contraintes et l’exécution symbolique.",
  "1070E937F00136E9F9F8": "GenAIScript utilise le paquet npm [z3-solver](https://www.npmjs.com/package/z3-solver) basé sur WebAssembly pour exécuter Z3. ",
  "36E1F9DF6A6BCFB68282": "z3-solver",
  "E81A32493BAAB9D5710D": "Instance Z3",
  "E2ACCEDCE66FD57CD68A": "La méthode `host.z3()` crée une nouvelle instance de Z3. Cette instance peut être utilisée pour exécuter des commandes Z3 et obtenir les résultats. ",
  "AC545FF43DC8F3AE9410": "instance z3 est une enveloppe autour du paquet npm [z3-solver](https://www.npmjs.com/package/z3-solver). ",
  "0A50A32310B047B513C6": "z3-solver",
  "8CE0EFA9C0DF4B63FDD5": "instance z3 possède la méthode `run` qui exécute la formule SMTLIB2 donnée et retourne le résultat. ",
  "DB8EEB6EADBF8BD80394": "Outil Z3",
  "D375B56FCAD06C337F5E": "L’outil `z3` (dans [system.z3](/genaiscript/reference/scripts/system#systemz3)) encapsule Z3 en tant qu’outil LLM pouvant être utilisé dans GenAIScript. Cet outil prend en entrée une formule SMTLIB2 et renvoie la sortie de Z3. ",
  "AB0ACD2C23AE72E49942": "Agent Z3",
  "5753A70AC718D24F3F46": "L’agent `z3` (dans [system.agent-z3](/genaiscript/reference/scripts/system#systemagent_z3)) encapsule l’outil `z3` avec un LLM capable d’(essayer de) formaliser des problèmes arbitraires en SMTLIB2. ",
  "D52DC2BA453C1F07FB92": "YAML",
  "B9708DC8BD45073B0A4E": "La fonction `defData` rend un objet en YAML dans l'invite (et dans d'autres formats si nécessaire). ",
  "6F65A4BD5778711917DE": "De même que la classe `JSON` en JavaScript, la classe `YAML` dans LLM fournit des méthodes pour analyser et convertir en chaîne de caractères les données YAML. ",
  "720E8F2D8E1D2D70AA88": "Le [parsers](/genaiscript/reference/scripts/parsers) offre également un analyseur permissif pour YAML.\nIl retourne `undefined` en cas d'entrée invalide. ",
  "1F7911FE249D8BC0B991": "parsers",
  "21C911BCA3BEB3BFC50F": "schémas",
  "2654DCEC60270DCBA665": "Les schémas JSON définis avec [defSchema](/genaiscript/reference/scripts/schemas) peuvent également être utilisés pour valider les données YAML. ",
  "E8A9A2497F1BBFEF4792": "La fonction `def` analyse automatiquement les fichiers XML et en extrait le texte. ",
  "B1569BE1C861B2304DFE": "La fonction globale `XML.parse` lit un fichier XML et le convertit en objet JSON. ",
  "C66D7082F68AD933CCA8": "RSS",
  "DC046F83862933D63C9A": "Vous pouvez utiliser `XML.parse` pour analyser un flux RSS en un objet. ",
  "309993C770FE3EC791AD": "Les ",
  "D9664186EAD30E0F1BAC": "interpréteurs",
  "8ECAB36988C5B5A13324": "La fonction ",
  "C545766A66E94A62B25A": "`retrieval.webSearch` ",
  "D15FA89D9C5E20863EED": "[Tavily](https://docs.tavily.com/)",
  "9B848B0CB3C0A4D33F06": "Pages Web",
  "38E4062D23DEA64361B5": "Vous pouvez utiliser ",
  "0EA571037E64EC337861": "Configuration Tavily ",
  "DCC60407393678BDC90A": "L’API ",
  "E73D2F613F3420EE4FD6": "[Tavily API](https://docs.tavily.com/docs/rest-api/api-reference#endpoint-post-search)",
  "C3A0BD5EA337B4911091": "Configuration de Bing Web Search ",
  "4C689875110B96388A1C": "L’API utilise ",
  "198BE3F67680E403873E": "[Bing Web Search v7](https://learn.microsoft.com/en-us/bing/search-apis/bing-web-search/overview)",
  "94790621212FD05AC0D2": "Outil",
  "6C62E8096D5DDFD8B2A6": "Ajoutez le script système ",
  "F21962DB2D19C6B35F29": "pour enregistrer un ",
  "488AD7ABACC0D35334A6": "[outil](/genaiscript/reference/scripts/tools)",
  "BF19DCC3A40C174E122B": "qui utilise ",
  "F73D2C561240F374C0BD": "Configuration de ffmpeg",
  "909D915AAD99A8975569": "Les fonctionnalités de rendu et d'analyse des vidéos reposent sur ",
  "AA3E9F78A8C077D94B61": "les variables d'environnement ",
  "3BCF3448F5663AEF6D8F": "pour pointer vers l'exécutable ",
  "4717C6F428F0E75AE47D": "",
  "5EC97EC7FCF7792B850D": "Extraction des images",
  "601A0B15D6E44B748F59": "La fonction `ffmpeg.extractFrames` va extraire des images d'un fichier vidéo et retourner un tableau de chemins de fichiers. Vous pouvez utiliser directement ce résultat avec `defImages`. ",
  "71F8ED469A531D4AF9DD": "spécifiez un nombre d'images avec ",
  "900CEA0C2EFD00C9ECEC": "spécifiez des horodatages en secondes ou en pourcentages de la durée de la vidéo avec ",
  "28B997EE84821A39A1CB": "spécifiez la transcription calculée par la fonction ",
  "6032641CBF81920131D3": "transcribe",
  "220A75EC9E698917DD6A": "Extraction de l'audio",
  "C4240D80DD47E065BECB": "La fonction ",
  "8BF77369681C00E42908": "`ffmpeg.extractAudio` extrait l'audio d'un fichier vidéo sous forme de fichier `.wav`. ",
  "CAA331E511465CC27CE1": "La conversion en audio se fait automatiquement pour les vidéos lors de l'utilisation de ",
  "CFB0EFA65D67AB902883": "transcribe",
  "B4D6B465F013852CF5B8": "Extraction de clips",
  "39889A1C6C53EA25A38B": "Vous pouvez extraire un clip d'un fichier vidéo avec la fonction ",
  "06BD42363330A9A5C885": "Analyse des vidéos",
  "EC2F55A24559A55C5DAD": "Vous pouvez extraire les métadonnées d'un fichier vidéo avec la fonction ",
  "A3EBEB5BCFB667540722": "Options personnalisées de ffmpeg",
  "ED832F09E64A146C163D": "Vous pouvez personnaliser davantage la configuration ",
  "C1A3B961E2F7366FA91D": "de `ffmpeg` en passant des `outputOptions`. ",
  "FED1EFBD4F2A4311B047": "Ou interagir directement avec le constructeur de commandes `ffmpeg` (qui est le constructeur natif de commandes [fluent-ffmpeg](https://www.npmjs.com/package/fluent-ffmpeg)). Notez que dans ce cas, vous devez aussi fournir un \"hash\" de cache pour éviter le rendu redondant. ",
  "440A80A6D0D5C1569267": "CLI",
  "3362EDEBFFF726C2C8E3": "La ",
  "FF7B3BDEA302F80E2103": "CLI",
  "B2FA5935916DC72F971E": "Création de l’index",
  "F080F778431A73A5EE4E": "La fonction ",
  "5FA86019293EED816B3C": "qui ne doit pas changer",
  "BE12D855145F19BB9423": "Index local",
  "4277AB70E98BAD59378A": "dossier sous `.genaiscript/vector` utilisant une base de données vectorielle locale basée sur ",
  "5C9C9176C62BA2FBD7BB": "vectra",
  "24F40B50D20DC51C5E50": "modèle d'alias ",
  "695E896DFCB2EC020DF9": "modèle d'alias",
  "E5B00AA9A406657BF57B": "Les `embeddings` peuvent également être configurés via les options. ",
  "2AA9985BCF3986BF293A": "Recherche Azure AI",
  "0FB35654CE83BE9D781D": "GenAIScript supporte également l’utilisation d’un service ",
  "8CC8693261FD15DF8449": "Azure AI Search",
  "8E45190DCF18D3EA52FC": "syntaxe de requête simple",
  "4855BA64C22AF62EDC6B": "et ",
  "7D7293BF90A08F9C66B8": "variables d’environnement dans votre fichier ",
  "949F51FFAE7A8AFD3606": "documentation d'authentification",
  "46E4C45018EDD35E13A3": "Configuration du modèle et du découpage",
  "D08E0AC8CA56B111C881": "et ",
  "B909EF03AEFFAB3F2946": "Indexation",
  "6E8059D363F7F40DFC67": "La fonction ",
  "CB321D16B5BFFCFBFA91": "Recherche",
  "36B0B2655ADE03ABCC60": "La fonction ",
  "8525FCA7B2FE0D9B7E8B": "L'objet `env.vars` contient un ensemble de valeurs de variables. Vous pouvez utiliser ces variables pour paramétrer votre script. ",
  "25A6EF8E8D8E515FD52F": "Paramètres du script",
  "CB4BD753369E326873E8": "Il est possible de déclarer des paramètres dans l'appel de la fonction `script`. L'objet `env.vars` contiendra les valeurs de ces paramètres. ",
  "951BA8EF31A570AA0488": "Variables depuis la CLI",
  "A56A85E52E8F2E8A47CA": "Utilisez le champ `vars` dans la CLI pour remplacer les variables. vars prend une séquence de paires `clé=valeur`. ",
  "B9E52F099D7011C52E93": "Variables dans les tests",
  "B90ADC4C03B5462B1F1E": "Vous pouvez spécifier des variables dans l'objet `tests` de la fonction `script`. Ces variables seront disponibles dans le contexte du test. ",
  "3AF3596757307BED2626": "[TypeScript](https://www.typescriptlang.org/) est un langage de programmation fortement typé qui s’appuie sur JavaScript, vous offrant de meilleurs outils à n'importe quelle échelle. Les scripts GenAIScript peuvent être écrits en TypeScript.",
  "48440ACC6B3D5CD4DAF2": "De JavaScript à TypeScript",
  "E8D3D90E1B2C36288335": "Vous pouvez convertir n’importe quel script existant en TypeScript en changeant l’extension du fichier en ",
  "2391260DAE8A72C53785": "Assurez-vous d’utiliser l’extension de fichier ",
  "2FE9A6D8D04541693EC4": "et non ",
  "FB446694538EA16EA35C": "[ESM](https://www.typescriptlang.org/docs/handbook/modules/guides/choosing-compiler-options.html)",
  "BA96E24F7771707277AC": "Importer des fichiers source TypeScript",
  "0848852A6F182E416E34": "Il est possible de ",
  "8FD53AF7B11F6B1E4CDF": "importer",
  "E22DD3991F7F48D1101B": "importer",
  "4145FE42A2B8A4BE12C0": "GenAIScript effectue-t-il la vérification de type des invites ?",
  "ADC5247CCF05199693A1": "Vous pouvez également lancer une compilation TypeScript en utilisant la commande ",
  "CDBAB8253862CE8A7829": "sans vérification de type",
  "FAF088B0612AB4056E9C": "via ",
  "B18D83BF5D75DC59A41A": "tsx",
  "B5729F8506F3C595142F": "Configuration",
  "D5E33BC2B0AC92D71B7D": "le codec opus dans un conteneur ogg",
  "CF6DCC2F4A1B547CAE16": "Modèle",
  "800A3800E6BE35BA16DC": " ",
  "EA974170AF020BA0A16C": "alias de modèle",
  "44FD52B7BAA2A73A42B4": "Vous pouvez utiliser ",
  "6F827EA13F71EEA6CE10": "le service Web Whisper ASR",
  "AB24A6F3E8BF602D20E4": "Segments",
  "47FEEAF247D2B41926B5": "SRT et VTT",
  "7FAE17125E66B1A6C81A": "GenAIScript génère également les segments aux formats ",
  "184CAFC3B0B74E7F173E": "SRT",
  "6FF5B483E65DC7F44E97": "et ",
  "49C08789773E01F13D88": "WebVTT",
  "542DBD494C6E32A0DC29": "Traduction",
  "B1ED0B58288233325BB6": "Cache",
  "9BA38FF63CAD6A871770": "Vous pouvez mettre en cache les résultats de transcription en configurant l’option ",
  "CF04D999CFF5683EA309": "sur `true` (ou un nom personnalisé). ",
  "9972F27161004B5FC727": "ou un sel personnalisé",
  "F71C00302C58FAD90B7F": "Vous pouvez analyser les fichiers VTT et SRT en utilisant la fonction ",
  "58CE9DFF37A1FE2593B0": "Vous pouvez enregistrer ",
  "D9B5903FCC2803D250F8": "outils",
  "779886D482445C681F7F": "fonctions",
  "0EBDD8F20D983598BAC4": "fonctions OpenAI",
  "651EE930F02C34B428F7": "outils Ollama",
  "499B9540B379C4D81C62": "utilisation des outils Anthropic",
  "2019C0E039FD81074174": "Outils de secours",
  "622462FD3B9C8CE16061": "schéma des paramètres",
  "A2A7BEF7D7BF242545E0": "Le LLM décide d’appeler cet outil de lui-même !",
  "A6EE80273911BE21E120": "Exemple d’outil météo",
  "96DC09F04E47082F1359": "Cet exemple utilise l’outil ",
  "37B5DA5417DB1008AC4F": "Exemple d’outil mathématiques",
  "9D7514F016FD0BF43871": "Réutilisation des outils dans les scripts système",
  "D3E011A54811A35C77E6": "Assurez-vous d’utiliser ",
  "DEF101580791D9E39206": "au lieu de ",
  "ABFE0020A0D731688A71": "Instances multiples du même script système",
  "94E92A5C56539E80B38E": "Outils du protocole Model Context",
  "7BAE7426604E9B150C1F": "Fournisseur de contexte modèle",
  "9E8A7A7AA5A596102ECF": "outils",
  "F00E5253198706E13CE5": "Vous pouvez exploiter ",
  "EEC12D549671B3903237": "serveurs MCP",
  "B49045D8F297A02E16D3": "Voir ",
  "D7C6F535BCA5AE87B880": "Outils du protocole Model Context",
  "BEEE614E3CF1222D90C2": "Support des outils de secours ",
  "41437AF2F01D93B3F341": "Le support des outils est implémenté dans ",
  "74C3C7478CEDBE93C775": "ajouter l’option ",
  "8AF864F639843CA46E34": "au script",
  "B5D9FA0AB9F3283B16B6": "ou ajouter le drapeau ",
  "7EFE71162E165139CA91": "à la CLI",
  "A92F8B2BC0EAA5B27B8B": "Détection d’injection de prompt",
  "E34CA44E4BCEC09493DD": "scanner de sécurité du contenu",
  "8E4B7B2BBC8FD313512C": "Validation de l’intention de sortie",
  "DC3E3AE65E79D5EA13A2": "L’intention `description` est une valeur spéciale qui s’étend à la description de l’outil. ",
  "43004B35DAC7BB692096": "Conditionnement en scripts système",
  "91818332CDB3D3847996": "l’outil `current_weather` peut être inclus dans le script ",
  "5F49C214474CE9D82326": "puis utilisez l’ID de l’outil dans le champ ",
  "54CF0CD3638F7C23BCA6": "Exemple",
  "637242950AACFEABE8C7": "Vous pouvez ensuite appliquer ce script au fichier ",
  "36C7F74D1D59B7380FE2": "Le module utilitaire `tokenizers` fournit un ensemble de fonctions pour diviser le texte en tokens. ",
  "BDB58ED9DD5141AD5AC4": "Choisir votre tokeniseur",
  "4A05419183E3A5570A2C": "par défaut utilise le tokeniseur `large`. Vous pouvez changer le tokeniseur en passant l'identifiant du modèle. ",
  "1F275C322AD8B858968A": "Supprime une partie de la chaîne pour respecter un budget de tokens",
  "86B1CD245BD2D1351C19": "Les tests sont exécutés par ",
  "F17BD300438EAC926622": "promptfoo",
  "F41150E3D0656CBB1C24": "redteam",
  "5E94CF8A412272086DDD": "Définition des tests",
  "971AE16979050B5762FF": "Les tests sont déclarés dans la fonction `script` de votre test.\nVous pouvez définir un ou plusieurs tests (tableau). ",
  "479CE93AAB67ADEC218B": "Modèles de test",
  "02C96C60088A4D58FB89": "Fichiers de test externes",
  "EB80931E58971A67EB8D": "Les fichiers JSON et YAML supposent que les fichiers sont une liste d’objets ",
  "807BACB67F82929AF375": "`PromptTest` ",
  "EDC776120089F4D24AB6": "Les fichiers CSV supposent que la première ligne est l'en-tête et que les colonnes correspondent principalement aux propriétés de l’objet ",
  "C1ACFDEF6E291FF23EDA": "Les fichiers JavaScript doivent exporter une liste d’objets ",
  "FCD249708911C8BD5AC0": "`PromptTest` ",
  "60073DD0C26CE714DA4D": "llm-rubric",
  "00F41DDCE4484B459C66": "GPT-4 requis",
  "D4C5133608D1079BE603": "Les tests ",
  "495756409293D244EA65": "`rubrics` ",
  "FAC21E18F9E5270E401B": "`gpt-4` ",
  "9A41550B9BBFE23A3DCD": "factuality",
  "DB4E99A96A039B154B30": "gpt-4o requis",
  "2433E5065D316E2FEEB7": "Les tests ",
  "A99EDADE882757F459E8": "`facts` ",
  "CAAEA3CBCC44B0D5AAAA": "`gpt-4o` ",
  "8EF5B346F506ECFD6003": "Autres assertions sur ",
  "2359D94DBA2FC6C39E08": "promptfoo assertions and metrics",
  "C4E6385FF0BFCF9D3976": "transformation",
  "D72621B7D0E82D225305": "Exécution des tests",
  "5067913FA64E880CEF54": "Vous pouvez exécuter les tests depuis Visual Studio Code ou en utilisant la ",
  "C2E9556EB1056F02D209": "ligne de commande",
  "D69447280351E2A752BC": "fichier de configuration promptfoo",
  "0BEAF34452FE35B42225": "Visual Studio Code",
  "B09CF1F87BE2B6FBD731": "Ouvrez le script à tester",
  "9124D07FF51B92322CB0": "Cliquez droit dans l'éditeur et sélectionnez ",
  "324450F2B28B045489A4": "Exécuter les tests GenAIScript",
  "75978C54F9A136793524": "dans le menu contextuel",
  "477C713E00E1F92E4E5E": "La vue web de ",
  "6F6D46448D745DEDF96D": "promptfoo",
  "8717ECA352AC0B4D9E5D": "Ligne de commande",
  "08DA2C5111AFCA9EBAC5": "Exécutez la commande ",
  "32AD7834A53358D92145": "Vous pouvez spécifier des modèles supplémentaires à tester en passant l’option ",
  "4E0DFEF6DA4D6CB62B94": "[Microsoft Teams]",
  "7AFDD62DC3D310A8E215": "Authentification",
  "6883CE87E3BD82C98F08": "Configuration",
  "61EF799B1F52C67EA8A9": "Pour utiliser l’intégration Microsoft Teams avec la ",
  "D90731C19333BEAD74C9": "CLI",
  "E13F856B914967C615B9": "API",
  "FD84B4D2C3CEB2FAB91F": "Les invites système sont des scripts qui sont exécutés et injectés avant la sortie du prompt principal.",
  "1A8C2D00A3D5E1B1C2C2": "* les invites système ne sont pas listés par défaut",
  "B3E67FD93762954D65B4": "* les invites système doivent utiliser le `system` ",
  "4CFAED284A6FC0DC283E": "* au lieu de `script` ",
  "08EBA67D801008DC0B89": "* les invites système sont exécutés avec le même environnement que le prompt principal",
  "89226D8DCF317514E6C7": "* Les invites système doivent avoir une fonction par défaut et utiliser le `ctx` passé dans la fonction. ",
  "EBCD09AE00C9B22F87BC": "* Paramètres et variables",
  "0A367D2893DECC09D4DF": "* System supporte également des paramètres sous forme de script mais les noms des paramètres seront automatiquement préfixés par l’id du script",
  "5A329C6A20DDB41E7874": "system({ ...,\n    parameters: {\n        model: {\n            type: \"string\",\n            description: \"Modèle LLM à utiliser\"\n        },\n    },\n})\nexport default function (ctx: ChatGenerationContext) {    \n    const { env } = ctx\n    // remplir depuis la valeur par défaut ou la surcharge du script\n    const model = env.vars[\"system.fs_read_summary.model\"]\n}",
  "95672A4F57510D766A21": "* remplacer la valeur du paramètre dans le script du script",
  "1827C9F21E08A627F6B3": "script({ ...,\n    system: [\"system\", \"system.fs_read_summary\"],\n    vars: {\n        \"system.fs_read_summary.model\": \"ollama:phi3\",\n    },\n})",
  "E692A8BB6FFE02E5547C": "* Prompts système automatiques",
  "2EAAE3F2DADC8FF9F037": "* Le script inspecte le code source du script pour déterminer un ensemble raisonnable de prompts système ([code source](https://github.com/microsoft/genaiscript/blob/main/packages/core/src/systems.ts)).",
  "9C4EC42651D06AF4EFCB": "* Le mélange par défaut comprend",
  "0D6BB811C605318EBC51": "system\nsystem.output_markdown\nsystem.explanations\nsystem.safety_jailbreak\nsystem.safety_harmful_content\nsystem.safety_protected_material",
  "2C031F85FC294136E37C": "* Injecte d’autres scripts système selon la correspondance de mots-clés.",
  "AC1F9B354756619AA6CF": "* Prompts système de base",
  "834097F14A95CE0ADC60": "system({\n    description: \"Agent capable d’interroger des données dans des fichiers\",\n})\n\nexport default function (ctx: ChatGenerationContext) {\n    const { defAgent } = ctx\n\n    defAgent(\n        \"data\",\n        \"interroger les données depuis des fichiers\",\n        `Vous êtes un expert data scientist capable de répondre à des questions sur des données dans des fichiers.\n    Répondez à la question dans <QUERY>.`,\n        {\n            system: [\n                \"system\",\n                \"system.assistant\",\n                \"system.tools\",\n                \"system.python_code_interpreter\",\n                \"system.fs_find_files\",\n                \"system.fs_read_file\",\n                \"system.fs_data_query\",\n                \"system.safety_harmful_content\",\n                \"system.safety_protected_material\",\n            ],\n        }\n    )\n}",
  "D52A4C16DD61CA6CF5A0": "* Agent pour le protocole de contexte de modèle",
  "34EE9E686A28417D0029": "system({\n    title: \"Un agent planificateur\",\n})\n\nexport default function (ctx: ChatGenerationContext) {\n    const { defAgent } = ctx\n\n    defAgent(\n        \"planner\",\n        \"génère un plan pour accomplir une tâche\",\n        `Générez un plan détaillé sous forme de liste de tâches pour permettre à un petit modèle LLM d'utiliser des agents afin d'exécuter le plan.`,\n        {\n            model: \"reasoning\",\n            system: [\n                \"system.assistant\",\n                \"system.planner\",\n                \"system.safety_jailbreak\",\n                \"system.safety_harmful_content\",\n            ],\n        }\n    )\n}",
  "558C85BA8F9228A90F77": "* Agent capable de poser des questions à l’utilisateur",
  "3379895F4B7160BFA515": "* Émet des annotations compatibles avec GitHub Actions",
  "276A49C58AC8DCA01802": "* Prompt d’aide pour un assistant utile. ",
  "2C7F10D98A4B4BA0D55E": "* Raisonnement en chaîne de Draft",
  "D7EB77E64150EA30B6A0": "* Génère des éditions de formattage du changelog",
  "D54CC5B62DD495C4A43B": "* Génère des diagrammes",
  "3E6F27A8C6546FAD8630": "* Dot not explain",
  "9AFD7AC0FDFFAC216B20": "* Utiliser la sortie en anglais",
  "3498845B74FE7D4CC264": "* Explique tes réponses",
  "1FB0B97F776B429E505F": "* Un outil qui peut récupérer des données depuis une URL",
  "10C308129159DC038855": "* Support pour le format de fichier ",
  "A7B6B1BE22D4345F6E96": "* Génération de fichiers",
  "2D1F66B52911F182B417": "* Enseigne le format de fichier supporté par GenAIScripts",
  "3CF905EA657DD28B8FDC": "* Demande de fichier",
  "6BB47EDA5804FBCA481E": "* outil `fs_ask_file` : Effectue une requête LLM sur le contenu d’un fichier. Utilisez cet outil pour extraire des informations d’un fichier. ",
  "A18BDFB920060F7F3264": "* outil `fs_data_query`: Interroger des données dans un fichier en utilisant la syntaxe GROQ",
  "AF66047119936D88BC61": "* outil `fs_diff_files`: Effectue un diff entre deux fichiers. Utilisez plutôt git diff pour comparer des versions. ",
  "33753E55A2C2F750A0FC": "* Différence fichier entre deux fichiers",
  "68BB22ECFFE0AEA24A73": "* Utilise une section de diff pour générer une différence entre deux fichiers ",
  "08522F9109513FD50F55": "* Recherche de fichiers avec glob et regex",
  "CCDB7E0A289006503DE2": "* outil `fs_find_files`: Trouve un fichier correspondant à un motif glob. Utilisez un motif pour rechercher avec une expression régulière dans le contenu du fichier. ",
  "1D7138DB858295BEFFAC": "* Lecture de fichier",
  "1401E151317D0ACAF7AB": "* outil `fs_read_file` : lit un fichier comme texte ",
  "00794D5D550C3944A99C": "* Opérations git",
  "9B18071AC28AB5B8DDF6": "* outil `git_branch_default` : Récupère la branche par défaut en utilisant le client. ",
  "B4CAB9DF4D94057B22E3": "* outil `git_branch_current` : Récupère la branche courante en utilisant le client. ",
  "C141BC5BD160B9AE56B0": "* outil `git_branch_list` : Liste toutes les branches en utilisant le client. ",
  "604BDC81B23E95DC90F5": "* outil `git_list_commits` : Génère un historique de commits avec la commande git log. ",
  "5BF1324C7E92A99136CF": "* outil `git_status` : Génère un état du dépôt avec le client. ",
  "DE6A8914971037CEE95B": "* outil `git_last_tag` : Récupère le dernier tag en utilisant le client. ",
  "6832CF3C0F48FDEA4BE2": "* Diff git",
  "1D09EE189F1CF509ACD8": "* outil `git_diff` : Effectue un diff entre deux fichiers avec la commande git diff. Si le diff est trop grand, retourne la liste de fichiers modifiés/ajoutés. ",
  "B6FF32880BA6ED361F89": "* Informations sur le dépôt git",
  "29E0F39385200DAA4976": "* Met en œuvre la récupération d’informations sur un dépôt git",
  "12CFA8E1951C452AFB57": "* outil `github_actions_workflows_list` : Liste tous les workflows Github ",
  "6AAAF28B8B00BC792779": "* outil `github_actions_jobs_list` : Liste tous les jobs pour un run Github ",
  "F6B48CED7593BC9D587B": "* outil `github_actions_job_logs_get` : Télécharge le journal d’un job Github. ",
  "4E2387B90F184EC5B24E": "* outil `github_actions_job_logs_diff` : Compare deux logs de jobs Github ",
  "61EE6168F5BC89335D89": "* Outils pour interroger des fichiers Github ",
  "98DCDE0F1EEB1022AFFF": "* outil `github_files_get` : Récupère un fichier depuis un dépôt ",
  "77ABEFBE2A938BA7C7DC": "* outil `github_issues_list` : Liste tous les issues dans un dépôt ",
  "14CE63C1FC0A14DC8AB1": "* outil `github_issues_get` : Obtenir un issue spécifique par numéro ",
  "35E981357EDFF931FA07": "* outil `github_issues_comments_list` : Obtenir les commentaires d’un issue ",
  "213DCE0A7D730530FC02": "* outil `github_pulls_list` : Liste tous les PR dans un dépôt ",
  "7A61B223D8CE2A90D109": "* outil `github_pulls_get` : Obtenir un PR spécifique par numéro ",
  "9FC5A460CF3E351D5D50": "* outil `github_pulls_review_comments_list` : Obtenir les commentaires de revue pour un PR ",
  "FF9DB551A7E64DB64701": "* Évalueur d’expression mathématique",
  "BA699DDE6B3BA676A79F": "* Enregistrer une fonction qui évalue des expressions mathématiques",
  "1688B0AA73B841A8FDEA": "* outil `math_eval` : Évalue une expression mathématique ",
  "973E241D4DCA66645D8E": "* Charger des outils du serveur MCP",
  "D0FA725AB7ABE0F2F374": "* Outils pour la documentation",
  "D8AD3588BC0AE968DCF7": "* outil `md_find_files` : Obtenir la structure des fichiers pour la documentation markdown/MDX ",
  "BC4BFF6AAD5F13EB309B": "* Lecteur de frontmatter markdown",
  "903C20AC13067BBDFB58": "* outil `md_read_frontmatter` : Lire le frontmatter d’un fichier markdown ou MDX ",
  "85E6A9D289F081926E6A": "* Outil meta-prompt OpenAI",
  "D440D7C0B4C59431094B": "* Modifié à partir de ",
  "B32FC993564C2A48535F": "* outil `meta_prompt` : appliquer les directives de meta-prompt d’OpenAI à une invite utilisateur ",
  "FBBCDA575B427EBCC6C6": "* Ajouter un schéma JSON valide pour une description",
  "0B15E636A3D758AEC355": "* Générateur de schéma meta d’OpenAI ",
  "67BE6358468C3FFC5EBE": "* outil `meta_schema` : générer un schéma JSON valide pour la description JSON ",
  "FCBC30FA40689641391F": "* Infos sur le projet en cours",
  "E274FF0A1F60272FFF38": "* Fonction pour exécuter des tests node.js ",
  "03320118EF9E087F9385": "* Sortie INI",
  "184C0AAECC892130F309": "* Sortie JSON",
  "6C387887000C8719C101": "* Prompt de sortie Markdown",
  "9B3C0BE2DF2EC2908EDE": "* Sortie en texte brut",
  "5E6967CEB7B36EBF1C23": "* Sortie YAML",
  "0C0A0E0EFC53F423C191": "* Instruction pour faire un plan",
  "C7464A6B5BA41EBCDADB": "* Expert en Python et en data science",
  "6D232E4F867ECE64B297": "* Support pour l’exécution de code Python dans un conteneur Docker ",
  "0C7D104783465345CFFC": "* Copier des fichiers dans le conteneur ",
  "A8BA0D61A3887A4D4298": "* Lire un fichier dans le conteneur ",
  "308137170B7FC26919AC": "* Recherche floue en texte intégral",
  "75673196C187DDAE8B45": "* outil `retrieval_fuzz_search` : Recherche de mots-clés en utilisant toutes les données et une distance floue ",
  "39BCB587278CB9AAD2E0": "* Recherche vectorielle dans les embeddings",
  "5BC159BC233186A5E4DB": "* outil `retrieval_vector_search` : Recherche par similarité dans les vecteurs d’embeddings ",
  "9A448E9BB19FF2A443B3": "* Recherche Web",
  "1F1E8DD332ECE2A3A750": "* outil `retrieval_web_search` : Recherche sur le web pour une requête utilisateur ",
  "5360D45248D0A9DD624D": "* Canaries de détection de fuite",
  "70C30EBE726B8438196C": "* Safety prompt contre contenu protégé",
  "6131027E180DE34C6460": "* Prompt Safety contre contenu non étayé",
  "C216EF33626089594075": "* Validation de contenu nuisible par un fournisseur",
  "0DD84A4D3836AB9FC5D8": "* Support pour la validation JSON Schema",
  "449CA0F896032394E6B5": "* Génère des tâches",
  "802B3BC52CC0CE85D4F7": "* Rédacteur technique",
  "ED35866F53D19506EA62": "* L’outil « penser »",
  "389309EAB42B55C650CF": "* L’outil « penser » chez Anthropic ",
  "D56710546E775B11CF3F": "* outil `think` : Utiliser l’outil pour réfléchir. Il ne récupère pas d’informations mais ajoute une réflexion dans le journal. À utiliser pour raisonnement complexe ou cache. ",
  "CB77F8F8A13A8E30C991": "* Support d’outils ad hoc",
  "01B8A453B9E75BA09B86": "* Support des outils - outils disponibles",
  "81B2E75897D98212E7F1": "* outil `transcribe` : Génère une transcription à partir d’un fichier audio/vidéo",
  "002D94BCFFE44E9AC93E": "* outil `transcribe` : Génère une transcription à partir d’un fichier audio/vidéo ",
  "AC5C3DAFFA0020FEFCFB": "* Développeur expert en TypeScript",
  "C2AE9133E0097F03263A": "* outils pour demander à l’utilisateur ",
  "5866C81F19BCB4908FF1": "* outil `user_input_confirm` : demander confirmation à l’utilisateur ",
  "3BD208F850779955E5AD": "* outil `user_input_select` : demander à l’utilisateur de choisir ",
  "80CCC519FF738205796F": "* Outils de manipulation vidéo",
  "054DEC93A28BC51D097B": "* outil `video_probe` : sonder une vidéo et obtenir ses métadonnées ",
  "5E4E63F8987CFCD96C2D": "* outil `video_extract_audio` : extraire l’audio d’une vidéo en un fichier audio ",
  "90D9212BD96BA3AC55E4": "* outil `video_extract_clip` : extraire un extrait vidéo ",
  "FAAEBCA3162FD57E6124": "* outil `video_extract_frames` : extraire des images d’une vidéo ",
  "243739D2BAC4289EB599": "* Vision Commander",
  "421E87B438A610F816A7": "* Enregistrer un outil qui utilise un modèle vision pour exécuter une requête sur images",
  "099ED580E8C4218D6DF7": "* outil `vision_ask_images` : Utiliser un modèle vision pour exécuter une requête sur plusieurs images ",
  "CBD8C20029A453E2470F": "* Z3",
  "ED989DC6A63596D85D72": "* outil `z3` : Résoudre un problème SMTLIB2 avec Z3 ",
  "20F23A68977719A32D6B": "* Zero-shot Chain Of Thought",
  "5694B178FEA870621870": "Type de réponse",
  "7CA5C256ABA868EAB4A7": "Le type de réponse est contrôlé par l'argument optionnel `responseType` et a les options suivantes : ",
  "775CF17652F0B30A7D5A": "Notez que ",
  "EEF365C64489C01AF921": "et ",
  "68A8AD4B170D89B277EA": "La validation du schéma est appliquée si `responseSchema` est fourni. ",
  "9DFDC127606BBA335A1E": "La validation du schéma est appliquée si `responseSchema` est fourni. ",
  "C6C55DCD1A8F7453EA2B": "La sortie structurée est une fonctionnalité qui vous permet de générer des données structurées dans un format de données comme avec un ",
  "0FA2A89A8F4A1C55D0A1": "schéma JSON",
  "92C3DC43DB9186E05F24": "pour ",
  "A0071DF1EC97358FC5FC": "et fournir un objet `responseSchema`. ",
  "626CE16C08C38198B76D": "Notez qu'il existe ",
  "1E94532327F0297B1828": "plusieurs restrictions",
  "C876484D3E3AFF05DF23": "Schéma de réponse",
  "3EF5929BC3AB71C9659B": "Vous pouvez spécifier un ",
  "B5E837299D175F7B24ED": "schéma",
  "2CD3B7ABC91BE7A65084": "via `responseSchema` qui activera automatiquement le mode de sortie structurée. La sortie sera validée par rapport au schéma, et GenAIScript tentera de réparer la sortie si elle n'est pas valide. Le script échouera si la sortie ne correspond pas au schéma. ",
  "94484F4378C01EFCA68D": "Schémas intégrés",
  "E1F8E18006F488B5B913": "schémas intégrés",
  "C53A84642722CA0A4628": "Choix",
  "93819FDEC068EA7C53E7": "choix",
  "F6E02CBDB896601DF43C": "La ",
  "C3E72C8EB0246E7C1F75": "fonction `cast`",
  "4BEF3FFE43569A74D911": "est une ",
  "2262AC9D28EEFE925F76": "aide d'exécution GenAIScript",
  "444F354C47E6D21E10B9": "Les métadonnées sont une carte de paires clé-valeur utilisées pour activer les complétions stockées — une fonctionnalité dans OpenAI et ",
  "9C068A95ECC7C934A490": "L'objet `env.secrets` est utilisé pour accéder aux secrets de l'environnement. Les secrets sont généralement stockés dans le fichier `.env` à la racine du projet (ou dans `process.env` pour le CLI). ",
  "BBB9CE8CB0A4D9971EFA": "Vous devez déclarer la liste des secrets requis dans `script({ secrets: ... })` afin de pouvoir les utiliser dans le script. ",
  "0ABCBF530EB0DB4DF10B": "déclarer l'utilisation dans `script` ",
  "198E843B2CF807675E7E": "accéder au secret dans le script via `env.secrets` ",
  "8D07656C1876CFC70B7F": "Motifs supportés",
  "A575C5CC12801DD11AEA": "Par défaut, l'ensemble des motifs de secrets est presque vide et défini à ",
  "F7D3F1E4282CC29794E5": "Vous pouvez trouver des exemples de motifs sur ",
  "D5233D336C8BA33AAEF7": "Messages scannés",
  "71B8CB8E426E2FBA9728": "Vous pouvez désactiver totalement l'analyse des secrets en définissant l'option ",
  "CCF6519E0F67B7CFD669": "`false` dans votre script. ",
  "22A8D801C05DB418C252": "Configuration des motifs",
  "BEDF04BCCF1DD689FA77": "fichier de configuration",
  "BC2F3F93B6DAA9F6ECAA": "n'utilisez pas ",
  "CD415221F6A55958071A": "ou ",
  "3B4F6ADC1E0C10334813": "dans votre expression régulière",
  "71832B02719238115D8A": "Désactivation des motifs",
  "393EC7AE7173F50E3440": "Attribuez la valeur ",
  "9F3ECD93FCE4D483646B": "ou ",
  "17BA0341F5134B25CB14": "CLI",
  "2E859A622FB666A0ED79": "Schémas JSON",
  "FE75CE0A41F4F6B5F09F": "Utilisez ",
  "6158770AAE2090A3D109": "Lors de l'utilisation de ",
  "FA1DAB8B6BB3F31E17E4": "Vous pouvez également l'appliquer à ",
  "E97E01B30853777678C8": "le champ ",
  "56B811230590E4509A48": "Utilisez ",
  "78FC6238E8DAF166544D": "👤 utilisateur",
  "4CA44558405F8EECDEB6": "🤖 assistant",
  "06233CAB3DA56E11CC3E": "Support natif de zod",
  "020C1A8585625E011EC1": "Le ",
  "EE254E40A8331DD75C4F": "GenAIScript runtime",
  "AA259DB93054770DFB4F": "expose le module ",
  "D96C9A9D6EEF900AFC3D": "Un type ",
  "E80DCAE9E1DC9CB564A2": "Zod",
  "619EBC166E781F8C2422": "peut être passé dans ",
  "AE22D674B7EE57842446": "Encodage de l'invite",
  "8D4AC8218ACC1DF13839": "Suivant l'approche ",
  "34D2FCF52F172BC50EBB": "\"All You Need Is Types\"",
  "91B8F10ECC6C5DB56D09": "l'option ",
  "02358F6A5F8222FB1158": "Lire la Trace !",
  "EE870109C7411E1777B0": "la trace vous permet de voir la source du schéma et l'invite générée,\net la ",
  "9DB4277D24799A2777DE": "cli",
  "CAA9926376D0560F4A93": "schéma CITY_SCHEMA",
  "FD038C30050B0B0CE06E": "Utiliser le schéma",
  "A7A6FF285350CBCE5588": "Validation",
  "18757E263ABCCAC2B90E": "Réparation",
  "706455F52884F08F5C31": "Validation à l'exécution",
  "29E24D13F2F0E88A57BF": "Utilisez ",
  "DA3F9285978DD1367DF6": "La plupart des API sur l'objet ",
  "2B2908AA807C979A5BEA": "Recherche",
  "65188A5C2A279FAA06B5": "Apprenez à utiliser les utilitaires de récupération de contenu de GenAIScript pour la recherche et l'augmentation de prompts avec les techniques RAG.",
  "1CAC91C4F58B4A40C9B1": "GenAIScript fournit diverses utilitaires pour récupérer du contenu et augmenter le prompt.\nCette technique est généralement appelée **RAG** (Récupération-Augmentation-Génération) dans la littérature.",
  "76CD38B207DC9C539994": "Recherche vectorielle",
  "C6B38623D8DEBE1FAE63": "GenAIScript offre plusieurs bases de données vectorielles pour supporter la recherche par embeddings (vecteurs).",
  "B21CAE0196BB35EF54D0": "En savoir plus sur la [recherche vectorielle](/genaiscript/reference/scripts/vector-search) et comment l'utiliser.",
  "E4FF4A96A556CC8ADF97": "Recherche floue",
  "DF640DA78C9E701A63D3": "La fonction `retrieve.fuzzSearch` effectue une recherche floue \"traditionnelle\" pour trouver les documents les plus similaires au prompt.",
  "838ED7191EA179BCCF2B": "Recherche sur le web",
  "406F76DFE096A164342C": "La fonction `retrieval.webSearch` effectue une recherche sur le web en utilisant une API de moteur de recherche. Vous devrez fournir des clés API pour le moteur de recherche que vous souhaitez utiliser.",
  "CE69AE3F7E06FBCD28FE": "Bing",
  "E8BEFDBC343877902D21": "Pour activer la recherche Bing, configurez le secret `BING_SEARCH_API_KEY` dans votre fichier `.env`. En savoir plus sur [la configuration de l’API Bing Search](https://www.microsoft.com/en-us/bing/apis/bing-web-search-api).",
  "FAA9E69179C080D8BC58": "Traduit à l'aide de l'IA. Veuillez vérifier l'exactitude du contenu.",
  "A21D2C6D9FB3221C88F0": "Automatisation du navigateur",
  "DF8FE07346C03A316A65": "Découvrez comment GenAIScript s'intègre à Playwright pour les tâches de scraping web et d'automatisation de navigateur.",
  "FE5FC6841C11C0A15B29": "GenAIScript fournit une API simplifiée pour interagir avec un navigateur sans interface graphique en utilisant [Playwright](https://playwright.dev/) .\nCela vous permet d'interagir avec des pages web, d'extraire des données et d'automatiser des tâches.",
  "7D59E8C79B6DD1628228": "Installation",
  "5BD8E0FB09FE6E1EE6D3": "Playwright doit [installer les navigateurs et les dépendances](https://playwright.dev/docs/browsers#install-system-dependencies) avant l'exécution. GenAIScript tentera de les installer automatiquement si le chargement du navigateur échoue.\nCependant, vous pouvez également le faire manuellement en utilisant la commande suivante :",
  "99C328C804B975961AC4": "Si vous voyez ce message d'erreur, il se peut que vous deviez installer les dépendances manuellement.",
  "A6C78BCDE4F057F0C93A": "`host.browse`",
  "0663464138792EDC945F": "Cette fonction lance une nouvelle instance de navigateur et navigue éventuellement vers une page. Les pages sont automatiquement fermées à la fin du script.",
  "D65342FD1EFB9D35E7D1": "`incognito`",
  "77967C4F8BF80E5B3574": "Le paramètre `incognito: true` crée un contexte de navigateur isolé et non persistant. Les contextes non persistants ne stockent aucune donnée de navigation sur le disque.",
  "B77E00DD1563CCBC82F3": "`recordVideo`",
  "1B12DC02C263325E5691": "Playwright peut enregistrer une vidéo de chaque page dans la session du navigateur. Vous pouvez l'activer en passant l'option `recordVideo`.\nL'enregistrement vidéo implique aussi le mode `incognito` puisqu'il nécessite la création d'un nouveau contexte de navigation.",
  "4AF724ED93281C9D7B98": "Par défaut, la taille de la vidéo sera de 800x600, mais vous pouvez la modifier en passant les dimensions dans l'option `recordVideo`.",
  "545487FA59DB8D881809": "La vidéo sera enregistrée dans un répertoire temporaire sous `.genaiscript/videos/<timestamp>/` une fois que la page est fermée.\n**Vous devez fermer la page avant d'accéder au fichier vidéo.**",
  "61BC94FA6B559E4F84D7": "Le fichier vidéo peut ensuite être traité avec des outils vidéo.",
  "55F72A9D9072976877E5": "`connectOverCDP`",
  "7D305AE7C98123DAE337": "Vous pouvez fournir un point de terminaison qui utilise le [Chrome DevTools Protocol](https://playwright.dev/docs/api/class-browsertype#browser-type-connect-over-cdp) avec l'option `connectOverCDP`.",
  "1F444F49193432204B4D": "Localisateurs",
  "F04F36071328865A998E": "Vous pouvez sélectionner des éléments sur la page en utilisant la méthode `page.get...` ou `page.locator`.",
  "3E5F1CF7226F2B0DD2CE": "Contenu des éléments",
  "F8769354637F54D50FB7": "Vous pouvez accéder à `innerHTML`, `innerText`, `value` et `textContent` d'un élément.",
  "623D1807C138E65577E6": "Vous pouvez utiliser les analyseurs dans [HTML](/genaiscript/reference/scripts/html) pour convertir le HTML en Markdown.",
  "9A25CBF9A776E76DA4BD": "Capture d'écran",
  "B99595B146D814255225": "Vous pouvez prendre une capture d'écran de la page courante ou d'un localisateur et l'utiliser avec un LLM équipé de vision (comme `gpt-4o`) en utilisant `defImages`.",
  "BF3A35DCCA147D102DB3": "(APIs) Avancées Playwright natives",
  "E82E8B9445FE51647720": "L'instance `page` retournée est un objet natif [Playwright Page](https://playwright.dev/docs/api/class-page).\nVous pouvez importer `playwright` et convertir l'instance en objet Playwright natif.",
  "4C0BBC39025FB60C7514": "Traduit par IA. Veuillez vérifier le contenu pour en assurer la précision.",
  "10A305BB5B4B64E3060F": "GenAIScript fournit une API simplifiée pour interagir avec un navigateur sans interface graphique en utilisant ",
  "A89CD84324E41EEDFF48": "Playwright",
  "2D6D428D8AC79E1F9873": "Installation",
  "E88F3A6D2DFF6893A0C1": "Playwright doit ",
  "403A890F9D6339B932E7": "installer les navigateurs et les dépendances",
  "B0F561E39FE6DFEF2212": "`incognito`",
  "E76A067FEC91ABE65F84": "Le paramètre ",
  "685392956FE538AD05CB": "La vidéo sera enregistrée dans un répertoire temporaire sous ",
  "BAD8BBC912A587543F3D": "Vous pouvez fournir un point de terminaison qui utilise le ",
  "BA61355B426ACB67FEAB": "Chrome DevTools Protocol",
  "6C5781DCB691ED6E2B20": "en utilisant le ",
  "FEA065FE1404550FCEA5": "Localisateurs",
  "5797534D43BD53C183D2": "Vous pouvez sélectionner des éléments sur la page en utilisant la méthode ",
  "01683E6E052137586286": "ou ",
  "A56A48EEBDB4FE0A3339": "Contenu des éléments",
  "FB1AE6034FFFF532D0AE": "Vous pouvez accéder à `innerHTML`, `innerText`, `value` ",
  "5F59FC87B376B81C8BB9": "et ",
  "E95F6A12F20BF887E53B": "Vous pouvez utiliser les analyseurs dans ",
  "299A4D1F140F04565EEB": "HTML",
  "8917381A34692EFEE2D9": "Capture d'écran",
  "114A66A2BFEF4990E186": "L'instance ",
  "786AB793F66869FC52E3": "renvoyée est un objet natif ",
  "4CD6384652E121E78EC7": "Playwright Page",
  "21CF98A292E940154581": "Agents",
  "F85268B5C5E752DE1244": "Un agent est un outil qui interroge un LLM, équipé d'autres outils, pour accomplir des tâches.",
  "3DAB9477BE8829D23624": "GenAIScript définit un **agent** comme un [outil](/genaiscript/reference/scripts/tools) qui exécute un [prompt en ligne](/genaiscript/reference/scripts/inline-prompts) pour accomplir une tâche. Le LLM de l'agent est généralement enrichi avec des outils supplémentaires et une mémoire.",
  "00F995BD4042A3765592": "**GenAIScript n'implémente *pas* de flux de travail agentique ni de décision.**  \nIl s'appuie entièrement sur le support des [outils](/genaiscript/reference/scripts/tools) intégrés aux LLM.",
  "9072E9221D46F5D7D2F0": "Agent = LLM + Outils",
  "968E0F6394D22BC80AF3": "Regardons l'exemple `agent_git` qui interroge un dépôt git. Cet agent est enregistré en tant que `outil` et peut être utilisé dans le prompt du LLM.  \nQuand le LLM a besoin d'informations sur quelque chose comme \"résumer les modifications dans la branche actuelle\", il appellera l'outil `agent_git` avec la requête `obtenir les modifications dans la branche actuelle`.",
  "1F42ACEB5FBAB886C6E4": "L'outil `agent_git` lui-même a accès à divers outils dédiés à git comme `git branch`, `git diff` qu'il peut utiliser pour résoudre la requête.  \nIl devra déterminer la branche actuelle et par défaut, calculer une différence (diff) et la renvoyer au LLM principal.",
  "7A9D0ABE635D4B980C8F": "Agent vs Outils",
  "9F489A99068478CF6A1D": "Un \"agent\" est un outil qui interroge un LLM, équipé d'autres outils, pour accomplir des tâches. C'est une abstraction de haut niveau qui peut être utilisée pour regrouper plusieurs outils ensemble.  \nDans certains scénarios, vous pouvez décider de supprimer cette abstraction et de passer outre l'agent en \"donnant\" les outils au LLM appelant.  \nDans cet exemple simple, vous pourriez également décider d'aplatir cet arbre et donner accès aux outils git au LLM principal et ignorer l'agent.",
  "7DEA1921FCF5A134D20B": "Cependant, l'abstraction agent devient utile lorsque vous commencez à avoir trop de fonctions ou pour garder la longueur de la conversation courte car chaque appel agent LLM est \"compressé\" en la réponse de l'agent.",
  "751894EB53C71A59EA50": "Agents multiples",
  "AF327D66FB53B9F4A0C5": "Examinons un exemple plus complexe où plusieurs agents sont impliqués dans la conversation. Ici, nous voulons enquêter sur la raison d'un échec d'une action GitHub.  \nCela implique les agents `agent_git` et `agent_github`. L'agent `agent_github` peut interroger les workflows, exécutions, jobs, logs et l'agent `agent_git` peut interroger le dépôt git.",
  "37335ADDB841A1E09C88": "Mémoire",
  "00CB538C1E9177B2B863": "Tous les agents sont équipés d'une **mémoire** qui leur permet de partager des informations horizontalement à travers toutes les conversations.",
  "FF441B6416AB6274F4CF": "La mémoire est un journal qui stocke toutes les interactions `agent / requête / réponse`. Lors de la génération du prompt pour un agent, la mémoire est d'abord sollicitée (en utilisant un petit LLM) pour extraire les informations pertinentes,  \net ces informations sont ensuite transmises à la requête de l'agent.",
  "96D8E3A2251FC59251E2": "Tous les agents contribuent à la mémoire de la conversation sauf si cette fonction est explicitement désactivée via `disableMemory`.",
  "261D9CD813AF98EA4E54": "defAgent",
  "3AE76C163B8EEB04AFDB": "La fonction `defAgent` est utilisée pour définir un agent pouvant être appelé par le LLM. Elle prend un schéma JSON pour définir l'entrée et attend une sortie de type chaîne de caractères. Le LLM décide de manière autonome d'appeler cet agent.",
  "A4DC355FEBFF47E02A44": "- l'identifiant de l'agent deviendra l'identifiant de l'outil `agent_<id>`",
  "917BE114FFAC91E6A1AD": "- la description de l'agent sera automatiquement augmentée avec des informations sur les outils disponibles",
  "E0A8E729B13EFB0F70C6": "Instances multiples du même agent",
  "55B597F2EA8FA42FC960": "Certains agents, comme `agent_git`, peuvent être instanciés avec différentes configurations, par exemple pour travailler sur différents dépôts.",
  "7741ECDBD9BB85D7FABA": "Exemple `agent_github`",
  "56277BA7369E29DCF427": "Illustrons cela en construisant un agent GitHub. L'agent est un outil qui reçoit une requête et exécute un prompt LLM avec des outils liés à GitHub.",
  "539700E02E5A819AA7C8": "La définition de l'agent ressemble à ceci :",
  "02871B26012F6079BBEC": "et en interne, elle est développée en ce qui suit :",
  "97ACC10ACE7BAEAC17B4": "À l'intérieur du callback, nous utilisons `runPrompt` pour exécuter une requête LLM.",
  "25490C1DD26D3C4D27FA": "- le prompt prend l'argument de la requête et indique au LLM comment la gérer.",
  "BA21A7DEC79A841D9C7A": "- notez l'utilisation de `ctx.` pour les prompts imbriqués",
  "B72235830AF185862E0A": "Sélection des Outils et des Prompts Système",
  "AE99F559B68A39BE7C5E": "Nous utilisons le paramètre `system` pour configurer les outils exposés au LLM. Dans ce cas, nous exposons les outils GitHub (`system.github_files`, `system.github_issues`, ...)",
  "75B729626C6E49794C65": "Le code complet de cet agent est défini dans le prompt système [system.agent_github](/genaiscript/reference/scripts/system/#systemagent_github).",
  "9734308EF5F5A74A8FCB": "Journalisation",
  "3A3663FEFB074CC7B843": "Chaque agent utilise un namespace de [journalisation](/genaiscript/reference/scripts/logging) `agent:<nom>`  \npour rapporter des informations de débogage.",
  "39480A9A37E5079A2484": "Pour activer la journalisation depuis la ligne de commande, vous pouvez utiliser la variable d'environnement `DEBUG` pour cibler un agent spécifique.",
  "3B40BEEE4380E928BF4D": "Traduit avec l'aide de l'IA. Veuillez vérifier l'exactitude du contenu.",
  "CCE02AD7E15E8F26E6AB": "GenAIScript définit un **agent** comme un ",
  "26E171E4B7A18D4F9C0B": "agent",
  "5D9D566925AE3D2CD6E5": "outil ",
  "0D77E6C8B42D5633D123": "outil",
  "2A0F353B8CC4697FC4BB": "qui exécute une [invite inline](/genaiscript/reference/scripts/inline-prompts) pour accomplir une tâche. Le LLM de l'agent est généralement augmenté avec des outils supplémentaires et une mémoire. ",
  "2D0EE57EC535395E4AF0": "GenAIScript n'implémente *aucun* workflow ou décision agentique. ",
  "C577AB196D5370D59E4D": "not",
  "695E3F9EDB309A901F10": "Il s'appuie entièrement sur le support des [outils](/genaiscript/reference/scripts/tools) intégrés aux LLM. ",
  "C9BE59FC1B3A4F93B534": "Agent = LLM + Outils",
  "88367778D1125344E60A": "Jetons un coup d'œil à l'exemple `agent_git` qui interroge un dépôt git. Cet agent est enregistré comme un `outil` et peut être utilisé dans l'invite du LLM.\nLorsque le LLM a besoin d'informations sur quelque chose comme \"résumer les modifications dans la branche actuelle\", il appellera l'outil `agent_git` avec la requête `obtenir les modifications dans la branche actuelle`. ",
  "887A1B94DE5EF1E708F6": "outil avec la requête ",
  "C09F51D1A044EC824EBD": "L'outil `agent_git` ",
  "B41BC9B8F8B1B946528D": "dispose lui-même d'un accès à divers outils dédiés à git tels que `git branch`, `git diff` qu'il peut utiliser pour résoudre la demande.\nIl devra résoudre la branche courante et par défaut, calculer un diff et le renvoyer au LLM principal. ",
  "66A37B2FA976E20066C5": "Agent vs Outils",
  "E72D5A8DD7911BB7F0DA": "Agents multiples",
  "C99DE4ADEA0282B18FEA": "et les agents `agent_github`. ",
  "27A16FF0C78E77472E3F": "Mémoire",
  "34AF0A4D99E9BD1D17D1": "Tous les agents sont équipés d'une **mémoire** qui leur permet de partager des informations horizontalement à travers toutes les conversations. ",
  "3EF214E597711870BB20": "mémoire",
  "9A808598D9419BF59EA6": "La mémoire est un journal qui stocke toutes les interactions `agent / requête / réponse`. Lors de la génération de l'invite pour un agent,\nla mémoire est d'abord sollicitée (à l'aide d'un petit LLM) pour extraire les informations pertinentes\net ces informations sont transmises à la requête de l'agent. ",
  "2A0B819D54847074B09B": "Tous les agents contribuent à la mémoire de la conversation sauf si elle est explicitement désactivée avec `disableMemory`. ",
  "CE90EC3CB12A6E2E27E9": "defAgent",
  "796DFC357DAAC6FCB224": "La fonction `defAgent` sert à définir un agent pouvant être appelé par le LLM. Elle prend un schéma JSON pour définir l'entrée et attend une sortie de type chaîne. Le LLM décide de manière autonome d'appeler cet agent. ",
  "9E7B72C1B4F607578756": "l'identifiant de l'agent deviendra l'identifiant de l'outil `agent_<id>` ",
  "A8794949A340D9ABAD17": "la description de l'agent sera automatiquement enrichie avec des informations sur les outils disponibles",
  "8D7F2CA507084EE760C4": "Instances multiples du même agent",
  "4746C2A44AE928D9218D": "Exemple `agent_github` ",
  "3287E71AB0D1F89B0640": "notez l'utilisation de ",
  "F119E6A6CF49A7DB5FF1": "pour les invites imbriquées",
  "E9BBEFDAC6EBA45AACDA": "Sélectionner les outils et messages système",
  "E88CF95F0E5929883714": "Nous utilisons le paramètre `system` pour configurer les outils exposés au LLM. Dans ce cas, nous exposons les outils GitHub (`system.github_files`, `system.github_issues`, ...) ",
  "45F167055A84BBAA6BCC": "Le code source complet de cet agent est défini dans l'invite système [system.agent_github](/genaiscript/reference/scripts/system/#systemagent_github). ",
  "D3D9F49EC6C7EEFDC49E": "Journalisation",
  "A3154665B7456AB825AF": "Chaque agent utilise un espace de noms de [journalisation](/genaiscript/reference/scripts/logging) `agent:<name>` ",
  "F359FBDE4308BEDC2918": " ",
  "3EEA6234618ED390F5BF": "journalisation",
  "4EA38D4F8FA532E74C2E": "[GitHub Actions](https://docs.github.com/en/actions) est une plateforme d'intégration continue et de livraison continue (CI/CD) qui vous permet d'automatiser votre pipeline de construction, de test et de déploiement. Vous pouvez créer des workflows qui construisent et testent chaque pull request de votre dépôt, ou déployer les pull requests fusionnées en production.",
  "85643D424ECB989E4331": "[Récemment](https://github.blog/changelog/2025-04-14-github-actions-token-integration-now-generally-available-in-github-models/), GitHub a ajouté la possibilité d'utiliser également les [GitHub Models](https://docs.github.com/en/github-models) dans les actions.",
  "0A760098F9CDC93BDFB9": "La combinaison des Actions et des Models vous permet d'exécuter GenAIScript dans le cadre de votre CI/CD.",
  "F350911A264976EE709B": "Passez à la section [Custom Actions](#custom-actions) pour apprendre comment empaqueter un script GenAIScript en tant qu'action GitHub.",
  "AB73FD398E3C31480612": "Exemples",
  "5D8A90CC80AD91E530DE": "[GenAI Issue Labeller](https://github.com/pelikhan/action-genai-issue-labeller/)",
  "EF94A680CB9FF0220D0A": "[GenAI Issue De-duplicator](https://github.com/pelikhan/action-genai-issue-dedup/)",
  "23A94AEF73571AA08D87": "[GenAI Video Issue Analyzer](https://github.com/pelikhan/action-genai-video-issue-analyzer/)",
  "AE686355B9FEAC99B2CD": "[GenAI Code Commentor](https://github.com/pelikhan/action-genai-commentor/)",
  "25F9EA48768B89D0CE26": "Autorisations GitHub Models",
  "5DBF4345E1D7FDB3753E": "[Pour utiliser les Models dans une action GitHub](https://docs.github.com/en/github-models/use-github-models/integrating-ai-models-into-your-development-workflow#using-ai-models-with-github-actions), vous devez définir les `permissions` de l'action pour inclure `models: read`.",
  "8FE7F752087DBCB40B2E": "GenAIScript prend en charge nativement les GitHub Models, vous pouvez donc l'utiliser directement dans votre workflow GitHub Actions.",
  "E6352B83D7F55459F661": "Utilisation de la CLI",
  "E23E91A65209060D466D": "La manière la plus simple d'utiliser GenAIScript dans une action GitHub est d'exécuter directement la [CLI](/genaiscript/reference/cli).\nVous pouvez le faire en ajoutant une étape à votre workflow qui exécute la commande `genaiscript`.",
  "A72A50A97E98232FBABB": "**Veillez à inclure le `GITHUB_TOKEN` dans les variables d'environnement** afin que GenAIScript puisse s'authentifier auprès des GitHub Models.",
  "CC8825F6F4DFE413F2D3": "Actions personnalisées <a id=\"custom-actions\" />",
  "1A04FAAC642A872585E0": "GitHub prend en charge le packaging des tâches sous forme d'[actions personnalisées](https://docs.github.com/en/actions/sharing-automations/creating-actions/about-custom-actions), généralement dans un dépôt dédié. C'est un excellent moyen d'empaqueter un script IA et de le partager avec d'autres.",
  "54084B55DFA67DF70A2C": "La CLI GenAIScript fournit une commande pour générer/met à jour le code standard afin d'empaqueter un script en tant que \n[action conteneur Docker](https://docs.github.com/en/actions/sharing-automations/creating-actions/creating-a-docker-container-action) afin qu'il puisse être utilisé dans GitHub Actions quelle que soit la langue utilisée pour écrire le script.",
  "6D41CF108C482822BE48": "Pour commencer,",
  "1B3EC6340092DA832D91": "Créez un nouveau dépôt pour votre action.",
  "27F7FE3AEDB6205A283D": "Ouvrez un terminal à la racine de votre dépôt.",
  "1BC293ABABF78A9A69B0": "Exécutez la commande pour générer la structure de base de l'action :",
  "9F1F5843C36CD4B612AA": "Le générateur de code standard de l'action va écraser les fichiers suivants :",
  "3559D3B114FDD434D0D2": "`action.yml` fichier de métadonnées de l'action",
  "A74823D2A3BB9907DBA0": "`Dockerfile` Dockerfile pour l'action",
  "B54E8E69E67DA7C222DD": "`README.md` Documentation de l'action",
  "51F9AFC074080E7E01AB": "`.gitignore` fichiers à ignorer dans le dépôt",
  "1FB5395B313E94E69486": "`.github/workflows/ci.yml` workflow CI pour tester l'action",
  "65AFDCE539AD89B90708": "`package.json` configuration du package pour l'action",
  "D50094C9C67CE35A45A2": "`devcontainer/devcontainer.json` configuration du devcontainer pour VS Code",
  "6DB4EF85858EAE0569FB": "`devcontainer/Dockerfile` Dockerfile du devcontainer pour VS Code. Doit être synchronisé avec le Dockerfile de l'action.",
  "95204D42052D1B50B5DF": "Pour mettre à jour le code standard de l'action, vous pouvez exécuter à nouveau la même commande :",
  "D3C9081E0BB0BFEF5B6F": "Métadonnées",
  "6082F5F21A37BCAC6D86": "Le fichier `action.yml` contient les métadonnées de l'action. Il est extrait de différentes parties de votre projet :",
  "485F8BA6ED9848417758": "Le `name` est dérivé de l'id du script.",
  "5356CDCBDC2BC2165C60": "La `description` est dérivée du `title` du script.",
  "E083D3CA5A1CAC0CBD44": "Les `inputs` sont dérivés des [paramètres](/genaiscript/reference/scripts/parameters) du script (voir ci-dessous).",
  "7AE104708EA382275D0D": "Notez que la `description` du script est utilisée pour alimenter le fichier `README.md`.",
  "8355E043B0A46B70F970": "Entrées",
  "B655DB33AFD5F00744BB": "La section `inputs` du fichier `action.yml` est générée automatiquement à partir des paramètres du script.\nChaque paramètre est converti en une entrée avec le même nom, et le type est inféré du type du paramètre.",
  "4548599DBE45CD77530A": "Le `action.yml` généré ressemblera à ceci :",
  "7257775C11ADBA12C7CC": "Il existe également des champs supplémentaires communs à toutes les actions GenAIScript :",
  "D6D0CCAE75A0653AF84A": "`files` : spécifie un chemin de fichier pour alimenter la variable `env.files`. Pour supprimer ce champ, définissez `accept: \"none\"` dans le script.",
  "9565BF87B1718F9921E2": "`github_token` : **ceci est requis pour s'authentifier auprès des GitHub Models.**\nIl deviendra `INPUT_GITHUB_TOKEN` lorsque le conteneur sera créé et GenAIScript le détectera automatiquement.",
  "FE3D27774E737B78F9DB": "`github_issue` : le numéro actuel de l'issue ou pull request GitHub.",
  "88FE8C02A4EF91683CBA": "`debug` : le filtre pour contrôler les messages de [journalisation]( /genaiscript/reference/scripts/logging) de débogage.",
  "975215D3897F616031F4": "Sorties",
  "A5D0C12CF9C76F2A827F": "L'action alimente quelques champs de sortie.",
  "81ED8E27DAE712127515": "`text` : il s'agit du texte généré par le script.",
  "427278B9B4D3BBDAC770": "`data` : il s'agit de la sortie structurée analysée et convertie en chaîne JSON. Ce champ est rempli\nsi vous fournissez un [responseSchema](/genaiscript/reference/scripts/schemas) dans le script et si le LLM est capable de générer une réponse correspondant au schéma.",
  "6E49D4323157D96B6AD1": "Personnalisation visuelle (Branding)",
  "16DF97C6DDC449CC80CC": "Le champ `branding` du `script` sert à [personnaliser l'apparence de l'action dans l'interface GitHub](https://docs.github.com/en/actions/sharing-automations/creating-actions/metadata-syntax-for-github-actions?versionId=free-pro-team%40latest\\&productId=actions\\&restPage=sharing-automations%2Ccreating-actions%2Creleasing-and-maintaining-actions#branding).",
  "05B83F4DD93808A20FC4": "Conteneurs",
  "CC622CAC777828E9DC4D": "Par défaut, GenAIScript utilise [node:lts-alpine](https://hub.docker.com/_/node/) comme image de base pour le conteneur de l'action.\nVous pouvez changer cela en spécifiant une image de base différente dans la `cli`.",
  "2B90C12DC62A0B492C8A": "GenAIScript créera également un [devcontainer](https://code.visualstudio.com/docs/devcontainers/create-dev-container)\npour que vous puissiez développer l'action dans un environnement conteneurisé (presque identique) à celui dans lequel elle s'exécute dans GitHub Action.",
  "E1C6496494A34D297E5A": "ffmpeg, playwright et autres packages",
  "100733B06516E77C3A00": "Pour garder le conteneur d'action léger, GenAIScript n'inclut pas par défaut `ffmpeg`, `playwright` ou d'autres packages.\nVous pouvez les ajouter au conteneur en les spécifiant dans la commande `cli`.",
  "54EC2EF2D0316E8A56C3": "Vous pouvez également ajouter tout autre package dont vous avez besoin en les spécifiant dans la commande `cli`.",
  "4BDAD4113D678CEA5244": "Test de l'action",
  "26E4675796446F6892C7": "Votre script doit pouvoir être testé localement avec la commande `npm run dev`. N'hésitez pas à le modifier dans `package.json`.",
  "7DD95FA0264C0DE76679": "Ou, si vous souhaitez simuler l'environnement GitHub Action,\nvous pouvez définir les variables `INPUT_<parameter>` dans l'environnement.",
  "709D56D339C5EAC5DDC4": "Espace de travail GitHub vs Espace de travail Action",
  "0D7D7AE7E742A79FD6DB": "Lors de l'exécution de l'action dans un conteneur, le contenu du dépôt de l'action est d'abord copié dans le répertoire `/github/action`. GitHub clone le dépôt dans le répertoire `/github/workspace`.",
  "5D1F49DE984B7E70A5F8": "Le `ENTRYPOINT` du `Dockerfile` est configuré pour lancer la CLI `genaiscript` dans le répertoire `/github/action`\npuis détecte la variable d'environnement `GITHUB_WORKSPACE` pour déterminer le répertoire de travail\net change le `cwd` en conséquence.",
  "473258B34867D0E1581B": "Ce mode est activé par le drapeau `--github-workspace` dans la commande `cli`.",
  "9C42E26E4B4B0CD41705": "Traduit par IA. Veuillez vérifier le contenu pour en assurer l'exactitude.",
  "05B88ADFFF2D956B343E": "Classify",
  "DBBA7CEF025EA20E5A55": "Utilisez les assistants de classification pour vos tâches de classification",
  "637CA8E704FD91EE6BC1": "La fonction `classify` dans GenAIScript vous permet de catégoriser des entrées basées sur un modèle d'apprentissage automatique.\nElle fournit une interface simple pour exploiter la puissance des LLM pour les tâches de classification.",
  "0EF62AC61AB12186107F": "Utilisation",
  "0914E71865C653E0A522": "`classify` est défini dans le [runtime GenAIScript](/genaiscript/reference/runtime) et doit être importé. Il prend le texte à classer, un ensemble d'étiquettes (et des options pour le LLM)\net renvoie l'étiquette fournie par le LLM.",
  "6CD04E27B18BCF828371": "L'invite encourage le LLM à expliquer ses choix **avant** de retourner l'étiquette.",
  "BBEDB50622E3DC90061C": "Les jetons d'étiquette sont boostés à l'aide du logit-bias pour améliorer la fiabilité de la classification.",
  "89F5C1A2113BD7370180": "`classify` est fourni dans le runtime (une façon légèrement différente de packager les fonctionnalités de GenAIScript) et doit être importé avec ce code...",
  "754C52C0ADF6696282F9": "Images",
  "2BDA83712F7A11A30E59": "Vous pouvez passer une fonction qui prend un contexte d'invite\net construire la variable `DATA` de manière programmatique.\nCela vous permet de sélectionner des fichiers, images et autres options GenAIScript.",
  "64F7B9A4E360667E92BD": "Étiquettes",
  "D3C79FEC5B056D3052A2": "Le paramètre `labels` est un objet où les clés sont les étiquettes dans lesquelles vous souhaitez classer l'entrée, et les valeurs sont des descriptions de ces étiquettes. Le LLM utilise ces descriptions pour comprendre ce que chaque étiquette signifie.",
  "2B2133DB1C080F9E6F2A": "Chaque identifiant d'étiquette doit être un mot unique qui s'encode en un seul jeton. Cela permet de booster l'étiquette avec logit-bias et d'améliorer la fiabilité de la classification.",
  "9A6C9836F02DCA2FA92A": "Étiquette `other`",
  "E45BD522065ED77A2C16": "Une étiquette `other` peut être automatiquement ajoutée à la liste\ndes étiquettes pour offrir une échappatoire au LLM quand il n'est pas capable de classer le texte.",
  "96CA8A323631DBB5E208": "Explications",
  "460D452EFA5BE61CBAD0": "Par défaut, l'invite de classification est réglée pour retourner un jeton (`maxToken: 1`) comme étiquette.\nVous pouvez activer l'émission d'une justification avant de retourner l'étiquette.",
  "6ADD21A9074182B6DCB1": "Modèle et autres options",
  "E452FC36632ED842C43D": "La fonction `classify` utilise par défaut l'[alias modèle `classify`](/genaiscript/reference/scripts/model-aliases).\nVous pouvez modifier cet alias ou spécifier un autre modèle dans les options.",
  "739F72E4DDDFF9B125D5": "Les `options` sont passées en interne à l'[invite inline](/genaiscript/reference/scripts/inline-prompts) et peuvent être utilisées pour modifier le comportement du LLM.",
  "40189B0D5502AE7DE1AD": "Évaluation de la qualité de classification",
  "4FEBBE2EB5613FB1BCAB": "GenAIScript renvoie la [logprob](/genaiscript/reference/scripts/logprobs) (et l'entropie) de l'étiquette de classification. Vous pouvez utiliser cette valeur pour évaluer la qualité de l'étiquetage.",
  "FA41620D72C680F3DC50": "Si l'étiquette a une forte probabilité, cela signifie que la classification est probablement de bonne qualité. Une probabilité plus faible peut indiquer que le LLM a hésité ou que d'autres étiquettes ont également été prises en compte.",
  "E0B57E642C10161F914E": "Configuration",
  "F3ED0B1EEB6870B685EF": "Vous pouvez désactiver les `logprobs` en réglant `logprobs: false` dans les options. Vous pouvez désactiver `topLogprobs` en réglant `topLogprobs: false` dans les options.",
  "CD7D681A2981BA8EC2A8": "Remerciements",
  "813FCF49AF73CD82579B": "Cette fonction est inspirée de la classification dans [Marvin](https://www.askmarvin.ai/docs/text/classification/).",
  "093BD95C1F11FC4219FA": "Traduit à l'aide de l'IA. Veuillez vérifier le contenu pour en assurer l'exactitude.",
  "250CCEB9C8E86A14403B": "Cast",
  "BF24ECFEE26F06A93D57": "Utilisez l'assistant cast pour convertir du texte en données structurées",
  "5450F6F842B65C28AFF2": "La fonction `cast` dans GenAIScript vous permet de convertir du texte ou des images en données structurées.\nElle offre une interface simple pour exploiter la puissance des LLM afin d'extraire des données à partir de texte non structuré et d'images.",
  "4005B567A9C134A4B85B": "Utilisation",
  "CEA6984313F861C7A0E6": "`cast` est défini dans le [runtime GenAIScript](/genaiscript/reference/runtime) et doit être importé. Il prend le texte non structuré (ou des fichiers), un schéma JSON\net retourne les données extraites (ou une erreur).",
  "005684F1675FEDC81DAC": "`cast` est fourni dans le runtime (une manière légèrement différente de packager les fonctionnalités GenAIScript) et doit être importé avec ce code...",
  "0D6B6D8F9812971BC68B": "Images",
  "508440F74037B6D394AC": "Vous pouvez passer une fonction qui prend un contexte de prompt\net construire la variable `DATA` de manière programmatique.\nCela vous permet de sélectionner des fichiers, des images et d'autres options GenAIScript.",
  "D928DCA2994564905442": "Modèle et autres options",
  "6C1EEC6B7294DF43A37C": "La fonction `cast` utilise par défaut l'[alias de modèle `cast`](/genaiscript/reference/scripts/model-aliases).\nVous pouvez modifier cet alias ou spécifier un autre modèle dans les options.",
  "3E12B46A8EF9206AAD33": "Les `options` sont passées en interne au [prompt inline](/genaiscript/reference/scripts/inline-prompts) et peuvent être utilisées pour modifier le comportement du LLM.",
  "82E559C9D66872C048C6": "Remerciements",
  "86CBBF62020EC1AF6C47": "Cette fonction est inspirée de [Marvin](https://www.askmarvin.ai/docs/text/transformation/).",
  "06C1E99F7B6044551AD4": "Traduit par IA. Veuillez vérifier le contenu pour en assurer l'exactitude.",
  "5A3606C90F57216ABCBE": "Vous pouvez lancer le [cli](/genaiscript/reference/cli) en tant que **serveur Web API** pour exposer des scripts en tant que points de terminaison REST.\nLe serveur est compatible OpenAPI 3.1 et utilise [fastify](https://www.fastify.io/) en interne.",
  "D3341ECC3E18D1C6251F": "Scripts en tant que points de terminaison REST",
  "812846AB3B0CA2D51A26": "Le serveur Web API expose les scripts comme points de terminaison REST. Il utilise le titre, la description, les groupes et les tags\npour générer une spécification OpenAPI 3.1 et un serveur avec fastify.",
  "4F395EE6ADB12ECAEFA4": "Les paramètres des points de terminaison OpenAPI sont déduits automatiquement des [paramètres des scripts](/genaiscript/reference/scripts/parameters) et des fichiers.\nLes paramètres OpenAPI alimenteront ensuite l'objet `env.vars` dans le script\ncomme d'habitude.",
  "4BA838C18505126136D6": "La sortie du point de terminaison OpenAPI est la sortie du script. C'est-à-dire, typiquement, le dernier message de l'assistant pour un script qui utilise le contexte de haut niveau.\nLa sortie du point de terminaison OpenAPI correspond à la sortie du script, généralement le dernier message de l'assistant ou tout contenu passé à [env.output](/genaiscript/reference/scripts/output-builder).",
  "D72FC3F407F42D2C6905": "Voyons un exemple. Voici un script `task.genai.mjs` qui prend un paramètre `task` en entrée, construit une invite\net renvoie la sortie du LLM.",
  "120B3AA8DE0CF9E9A510": "Un script plus avancé pourrait ne pas utiliser le contexte de haut niveau et utiliser plutôt `env.output` pour passer le résultat.",
  "24338D7F4B0F41870C79": "Route",
  "39BE436F615774FB8061": "La route par défaut est `/api` et la spécification OpenAPI est disponible à `/api/docs/json`.\nVous pouvez changer la route avec l'option `--route`.",
  "00912B3A9CA636D60B0B": "La spécification OpenAPI sera disponible à `/genai/docs/json`.\nVous pouvez également changer le port avec l'option `--port`.",
  "E211C95FBB8622C82C96": "Le serveur sera disponible à l'adresse `http://localhost:4000/genai`.",
  "8E7FF13314FFD6D10759": "Script de démarrage",
  "35730B44DF7E7F3F0647": "Vous pouvez spécifier un identifiant de script de démarrage en ligne de commande en utilisant l'option `--startup`.\nIl s'exécutera après le démarrage du serveur.",
  "DC3FA101A540632B86A6": "Vous pouvez utiliser ce script pour charger des ressources ou réaliser toute autre configuration nécessaire.",
  "79F69DF14ED5D656B01A": "Filtrage des scripts",
  "B6E149425911399BD6C9": "Si vous souhaitez filtrer les scripts exposés en tant que points de terminaison OpenAPI, vous pouvez utiliser le flag `--groups` et\ndéfinir le groupe `openapi` dans vos scripts.",
  "E945D0FC08028F5A841C": "Exécution de scripts depuis un dépôt distant",
  "F1F83B6A3751B44684C6": "Vous pouvez utiliser l'option `--remote` pour charger des scripts depuis un dépôt distant.\nGenAIScript effectuera un clonage superficiel du dépôt et exécutera le script depuis le dossier cloné.",
  "9E27818AFBF27A869975": "Il existe des options supplémentaires pour le clonage du dépôt :",
  "6A38FEAE1D7D46C9FE2B": "`--remote-branch <branche>` : La branche à cloner depuis le dépôt distant.",
  "BC7BFBBBF95528036CFC": "`--remote-force` : Forcer le clonage même si le dossier cloné existe déjà.",
  "1B1011D9F7DE3016C257": "`--remote-install` : Installer les dépendances après le clonage du dépôt.",
  "C120D2DBB730C7B9C421": "Comme toujours, faites preuve de prudence lorsque vous exécutez des scripts provenant d'un dépôt distant.\nAssurez-vous de faire confiance à la source avant d'exécuter le script et envisagez de verrouiller sur un commit spécifique.",
  "C83695890CF238F9BC77": "Analyse syntaxique (Linting)",
  "357AB4E89059E4850BFA": "Vous pouvez utiliser [spectral](https://github.com/stoplightio/spectral) pour analyser vos spécifications OpenAPI.",
  "CAE911DD9E42A21B61EA": "enregistrez ce fichier `.spectral.yaml` à la racine de votre projet :",
  "FC6FAE3B633A681A94D8": "lancez le serveur API",
  "3C8AD9741904FC266108": "exécutez le linter spectral",
  "B601045D520ADE28F438": "Traduction réalisée avec l’IA. Veuillez vérifier le contenu pour en assurer l’exactitude.",
  "6094D3B089CD3B99158A": "Les bases de GenAIScript",
  "48425655EA7E03333496": "Introduction",
  "43D08944C4A16D3B6097": "GenAIScript est un framework qui permet aux équipes, y compris aux non-développeurs, de créer et d'utiliser des scripts améliorés par l'IA pour soutenir leurs workflows. GenAIScript offre un support pour la rédaction et le débogage de scripts JavaScript qui incorporent des appels aux modèles fondamentaux et aux grands modèles de langage (LLM) [^1] dans leur exécution. GenAIScript est un framework de programmation qui permet à ses utilisateurs d'écrire des scripts IA (que nous appelons un GenAIScript), de déboguer ces scripts dans un environnement de développement qui est une extension de VS Code, et de empaqueter ces scripts dans une interface en ligne de commande pouvant être déployée dans de nombreux contextes.",
  "C090F47018340922D6E0": "Notre extension VS Code facilite la rédaction d'un GenAIScript en utilisant un langage naturel en syntaxe markdown, associé à une petite quantité de programmation JavaScript stylisée. Notre framework permet aux utilisateurs de tirer parti de plusieurs modèles LLM, de paramétrer les appels aux modèles, d’exécuter et de déboguer les scripts, de tracer la construction des invites LLM et de fournir une trace complète de l'exécution depuis la construction de l'invite jusqu'à la génération LLM, puis au parsing du résultat. Notre framework supporte également l'extraction de plusieurs formes de sortie issues des générations LLM, y compris des sorties sous forme de fichiers de différents types, des sorties destinées à être des modifications de fichiers existants et des sorties sous des formats structurés, comme JSON.",
  "685DFB124676DE9B8610": "Termes clés",
  "C5B6BE90B0D64C777912": "**GenAIScript** : un programme JavaScript stylisé qui définit le contexte de l'appel LLM, permet l'exécution arbitraire de code JavaScript, prépare l'entrée de l'invite pour le LLM, appelle le LLM, et dépackage cette sortie LLM en fonction des instructions données dans l'invite.",
  "8B393CA9F1BF5CDA7A8D": "**GPVM** : un système d'exécution qui, donné un GenAIScript, exécute ce GenAIScript, ce qui implique d’intégrer le contexte dans une invite, d'appeler le LLM spécifié, et d'extraire le contenu du résultat LLM.",
  "10AE9723A453E8DF0902": "**Extension VS Code GenAIScript** : un add-in pour VS Code qui fournit aux utilisateurs des méthodes simples pour créer, éditer, exécuter et déboguer des GenAIScript.",
  "1DEE92C583DF47F4263E": "**Modèles fondamentaux et LLM** : Bien que GenAIScript supporte actuellement différents LLM, nous anticipons qu'à l'avenir nous intégrerons des modèles fondamentaux supplémentaires au-delà des grands modèles de langage.",
  "089583AD70FA2C1B56CA": "Capacités",
  "246CDAEBE8397EF4BF15": "Comportement du système",
  "3D0256894B2B85181960": "GenAIScript est un framework généraliste pour la création de scripts IA, intégrant de façon fluide l’exécution de code et les invocations de modèles fondamentaux/LLM. Un GenAIScript est un programme JavaScript au format stylisé qui permet aux utilisateurs de spécifier facilement le contexte LLM et l'invite, d’invoquer un modèle spécifié, et de parser la sortie ainsi obtenue selon les spécifications utilisateur. Cette fonctionnalité permet même aux utilisateurs non programmeurs d'inspecter les résultats du modèle et de vérifier leur exactitude.",
  "01AA4A93A9BBE04FB4F0": "GenAIScript peut être écrit dans n'importe quel IDE, mais l'add-in GenAIScript pour VS Code rend la création, l'exécution et le débogage particulièrement aisés. Les utilisateurs de GenAIScript peuvent créer des outils qui génèrent et éditent plusieurs fichiers avec un seul outil, et notre intégration avec VS Code exploite les fonctionnalités existantes de refactoring pour permettre aux utilisateurs de voir facilement les résultats de l'exécution de l’outil. L'add-in prend en charge la création d’un nouveau GenAIScript, l’invocation d'un GenAIScript donné, le traçage de l'exécution du GenAIScript lors de l'établissement du contexte LLM et de l'invite finale, ainsi que la conversion inverse de la sortie LLM en éléments définis par l'utilisateur. Des exemples de toutes ces fonctionnalités sont consultables dans les documents du dépôt GenAIScript : [microsoft/GenAIScript: Generative AI Scripting (github.com)](https://microsoft.github.io/genaiscript/)",
  "3F1FF6146B1115C48226": "L'objectif de GenAIScript est d’autoriser une large gamme d'utilisateurs potentiels à innover en créant des scripts alimentés par l'IA et à identifier de nouvelles façons d'exploiter l'IA dans leurs tâches quotidiennes. Nous attendons que les développeurs professionnels, familiers avec l’écriture et l’utilisation de scripts pour améliorer leur productivité, soient les premiers adopteurs de GenAIScript. GenAIScript leur apportera un avantage car il peut réaliser de nombreuses choses que les scripts traditionnels en JavaScript ou Python ne peuvent pas faire. Bien que les développeurs puissent utiliser d'autres frameworks comme langchain et Semantic Kernel qui intègrent les appels LLM dans des langages comme Python, ces frameworks nécessitent plus d'efforts et bénéficient de moins de support IDE que GenAIScript. En définitive, comme notre but est de rendre GenAIScript facile à créer, modifier, déboguer et exécuter, nous anticipons qu’il sera utile bien au-delà des seuls développeurs professionnels. Un impact majeur de GenAIScript sera de permettre aux non-développeurs d’innover et de créer des GenAIScripts qui augmentent leur productivité. Nous illustrons ce point par des exemples ci-dessous.",
  "00F266B8B99D618A0EAF": "Documentation",
  "6F1F78053C0A5A36A63C": "Pour aider les utilisateurs à démarrer avec GenAIScript, nous incluons dans notre dépôt une documentation illustrant, à l’aide de extraits de code, le contenu de plusieurs GenAIScripts différents. La documentation montre à la fois l’aspect du GenAIScript exemple et l’effet produit par ce GenAIScript sur une entrée donnée. Ces exemples ont pour but d’expliquer la technologie, mais ne sont pas destinés à servir de base à des outils écrits par les utilisateurs.",
  "71FBC2D3BA1E7F0666BB": "Cas d'utilisation",
  "F09D06D8687851B31065": "Utilisations prévues",
  "8FF0E892EE6798BFB13F": "GenAIScript peut être utilisé dans tout contexte où un script en ligne de commande, écrit dans un autre langage de programmation, pourrait être utilisé, mais les cas d’utilisation sont beaucoup plus ambitieux car le LLM peut faire bien plus que du code ordinaire. Voici quelques exemples :",
  "9FD64B7D82F70C9116FC": "**Détection d’incohérences potentielles dans un ensemble de fichiers de configuration ou autres contenus.** En utilisant le LLM, un GenAIScript peut inspecter des fichiers de configuration et exploiter la compréhension qu'a le LLM des erreurs communes de configuration pour les détecter et les signaler. Avant les LLM, les développeurs professionnels écrivaient des outils comme lint[^2], qui sont des programmes complexes détectant les incohérences syntaxiques dans leurs fichiers de code. Avec GenAIScript, des outils de vérification peuvent être écrits pour des scénarios plus riches (comme la vérification des noms de variables inappropriés), et par des personnes qui ne sont pas développeurs professionnels.",
  "5FF53401A7851BACE2F9": "**Automatisation de la traduction de documents :** Étant donné une documentation dans un dépôt écrite dans une langue naturelle, un GenAIScript peut être écrit pour traduire cette documentation dans une autre langue. À titre d’exemple spécifique montrant pourquoi GenAIScript est important pour cet usage, considérez la tâche de maintenir la localisation de la documentation MakeCode[^3]. La documentation MakeCode compte près de 2 millions de fichiers, généralement en markdown avec un mélange d'extraits de code. De nombreux documents sont partiellement traduits (au niveau du paragraphe). Pour vérifier la justesse des traductions, 3500 traducteurs bénévoles enregistrés travaillent sur plus de 35 langues. On ne peut pas simplement appliquer la traduction Bing pour ce cas d’usage, car elle détruit généralement les extraits de code. Avec GenAIScript, on peut créer un script qui parcourt chaque fichier de documentation, récupère la version localisée actuelle et assemble une invite pour demander au LLM de compléter les traductions manquantes, tout en laissant intactes les traductions existantes. Le modèle LLM que nous utilisons a déjà été entraîné avec des exemples et la documentation MakeCode, il connaît donc la syntaxe.",
  "BEFBA352B213F2DBDE38": "**Création d’une version courte d’un livre blanc plus long en résumant chaque chapitre.** Les LLM sont très efficaces pour résumer des documents. Un GenAIScript peut être écrit pour prendre chaque chapitre d’un long document et en faire un résumé dans une section d'un document plus court.",
  "C3CBA4AA48F465A8A498": "**Transformation d’un monologue en dialogue.** À partir d’un monologue extrait d’une transcription vidéo, un GenAIScript peut être écrit pour le réécrire sous forme d’un dialogue entre deux personnes (à la manière d'annonceurs sportifs s'entretenant), pour rendre la vidéo plus intéressante et accessible.",
  "EAB5956CF30EC87CD414": "Utilisations non prévues",
  "763019F577084EF06112": "GenAIScript est un framework généraliste pour la création de scripts. Par conséquent, un adversaire peut utiliser GenAIScript pour écrire des scripts adversariaux qui pourraient être employés à des fins malveillantes. Tous les usages adversariaux de GenAIScript pourraient également être mis en œuvre dans d'autres frameworks d'extension linguistique LLM tels que Semantic Kernel, autogen, et langchain, de sorte que le danger lié à des utilisations non prévues de GenAIScript vient de la possibilité qu'il facilite la création de scripts adversariaux. Ce problème existe dans toute infrastructure rendant la programmation plus facile, y compris les langages comme PowerShell, JavaScript et Python, ainsi que les IDE comme VS Code et Visual Studio. Bien que nous ne puissions pas empêcher les usages non prévus, nous encouragerons les utilisateurs à considérer les pratiques d'IA responsable lorsqu'ils construisent des GenAIScripts. Nous fournissons plus de détails sur les questions liées à la sécurité et à la confiance dans [security and trust](https://microsoft.github.io/genaiscript/reference/security-and-trust/).",
  "955571C545EB5F36020E": "Bonnes pratiques concernant les modèles fondamentaux",
  "78F66AE75C33FB514BFE": "Nous encourageons vivement les utilisateurs de GenAIScript à utiliser des modèles fondamentaux et des LLM qui supportent des mesures robustes d'atténuation de l'IA responsable, comme les services Azure Open AI (AOAI). Ces services mettent continuellement à jour la sécurité et les atténuations RAI afin de suivre notre compréhension à jour de la manière de déployer et d'utiliser les modèles fondamentaux de façon responsable. Voici des ressources pour aider à comprendre et appliquer les meilleures pratiques lors de l’utilisation de modèles fondamentaux pour des scripts et applications :",
  "BB821B422E9225A92538": "[Article de blog sur les fonctionnalités d’IA responsable dans AOAI présentées à Ignite 2023](https://techcommunity.microsoft.com/t5/ai-azure-ai-services-blog/announcing-new-ai-safety-amp-responsible-ai-features-in-azure/ba-p/3983686)",
  "82D735C4D301982850EE": "[Note de transparence pour Azure OpenAI Service](https://learn.microsoft.com/en-us/legal/cognitive-services/openai/transparency-note?tabs=text)",
  "87C39E79C00058EB96DB": "[Bonnes pratiques du Bureau de l'IA Responsable de Microsoft (ORA) sur l’utilisation des modèles AOAI](https://learn.microsoft.com/en-us/legal/cognitive-services/openai/overview)",
  "9CF18E6F3F80915951B9": "Nous recommandons de consulter la documentation sur la [Sécurité du contenu](/genaiscript/reference/scripts/content-safety) pour plus d’informations sur la protection contre les contenus nuisibles et le jailbreak.",
  "37C3D8C37FFC4C27855F": "Limitations",
  "B0C71BFAC26A4F733231": "GenAIScript est un framework en évolution, qui va s'améliorer en fonction des retours des utilisateurs. Les limitations actuelles du framework incluent une intégration dans un seul IDE (VS Code), et un support interne pour les API OpenAI ainsi qu’un nombre relativement réduit d’autres LLM. Nous avons l’intention de permettre aux utilisateurs d’intégrer des appels à des services externes (comme RAG) dans GenAIScript afin de fournir plus de contexte au LLM. Nous prévoyons aussi d’ajouter le support d’autres modèles fondamentaux au fur et à mesure de l’évolution des cas d’usage.",
  "CC3757C7DD5E8D7D6C1A": "Nous anticipons également que la porte d’entrée pour utiliser GenAIScript va évoluer. Nous avons exploré la prise en charge de l’invocation du framework GenAIScript dans le cadre de l’expérience VS Code Copilot Chat (hébergée dans VS Code Insider’s Edition). Nous savons aussi que certains développeurs préfèreraient implémenter leur GenAIScript en Python plutôt qu’en JavaScript. Nous envisageons de créer une interface Python pour la création de GenAIScripts dans le futur.",
  "3A46DCEAA8B639FD1C38": "Limitations techniques, facteurs opérationnels et plages d'utilisation",
  "991A3D9306CDD14366AA": "GenAIScript n’utilise aucun modèle d’IA pour exécuter le framework lui-même. Les utilisateurs de GenAIScript pour écrire leurs propres scripts IA seront soumis aux limitations techniques, facteurs opérationnels et plages propres au LLM AI que leur script utilise.",
  "7F1BD8AF7A8B2C6B8D31": "Bonnes pratiques pour améliorer la performance du système",
  "0D622C784D5AB112FAA7": "GenAIScript encourage les utilisateurs à consulter les meilleures pratiques pour la rédaction d’invites efficaces pour le LLM spécifique qu’ils invoquent dans leur outil.",
  "8E8D8EC2E6C9466F881A": "En savoir plus sur l’IA responsable",
  "D6C284A0777B8C32B602": "[Principes d'IA Microsoft](https://www.microsoft.com/en-us/ai/responsible-ai)",
  "8CE57ED4575AFABE951C": "[Ressources IA responsable Microsoft](https://www.microsoft.com/en-us/ai/responsible-ai-resources)",
  "A5E0BE8E1B733C487CB0": "[Cours Microsoft Azure Learning sur l’IA responsable](https://docs.microsoft.com/en-us/learn/paths/responsible-ai-business-principles/)",
  "21E0C9C68C6A008AD9BD": "En savoir plus sur GenAIScript",
  "3454698C2B2473ECECCF": "En savoir plus sur GenAIScript sur notre site GitHub, [microsoft/GenAIScript : GenAI Scripting (github.com)](https://github.com/microsoft/genaiscript/)",
  "8EE922D4CAD5BE65B530": "Contactez-nous",
  "CCE52BC843044CBF1C2E": "Envoyez-nous vos retours sur ce document : zorn@microsoft.com, jhalleux@microsoft.com",
  "F0C48FBCB22EF59D873F": "À propos de ce document",
  "EFB3CF7FE1DBBD16E83A": "© 2024 Microsoft Corporation. Tous droits réservés. Ce document est fourni « tel quel » et à titre informatif uniquement. Les informations et opinions exprimées dans ce document, y compris les URL et autres références de sites web, peuvent changer sans préavis. Vous assumez le risque de leur utilisation. Certains exemples ne sont donnés qu’à titre illustratif et sont fictifs. Aucune association réelle n’est prévue ou suggérée.",
  "1C2381D2372DA96FCB35": "Ce document ne doit pas être considéré comme un conseil juridique. La juridiction dans laquelle vous opérez peut comporter diverses exigences réglementaires ou légales qui s’appliquent à votre système d’IA. Consultez un spécialiste juridique si vous avez un doute sur les lois ou réglementations applicables à votre système, notamment si vous pensez qu’elles pourraient impacter ces recommandations. Sachez que toutes les recommandations et ressources présentées ici ne seront pas appropriées à chaque scénario, et inversement, elles peuvent être insuffisantes pour certains cas.",
  "919E8A38F27E811C4BAF": "Publié : 18 mars 2024",
  "4D3ABD67EDF1E04BAB8F": "Dernière mise à jour : 18 mars 2024",
  "6CA96C3D37F90B868DFD": "Tout au long de ce document, lorsque nous mentionnons les LLM, nous entendons tout modèle fondamental compatible avec nos interfaces.",
  "C271001E63890985A03C": "[Lint (logiciel) - Wikipédia](https://fr.wikipedia.org/wiki/Lint_(informatique))",
  "122C2599E6BA13DC2B80": "https://makecode.org/",
  "E0D0E73D3EA9A46CA2D9": "Traduit à l’aide de l’IA. Veuillez vérifier le contenu pour en assurer l’exactitude.",
  "695A9C38067D311B7E0C": "GenAIScript est un langage de script qui intègre les LLM comme une partie essentielle du processus de script, permettant aux utilisateurs de créer, déboguer et déployer facilement des scripts basés sur des LLM capables d'exécuter des tâches au-delà des capacités du code conventionnel. Ce guide de référence fournit une documentation complète pour GenAIScripts, incluant la syntaxe des scripts, les configurations LLM, l'extension VSCode et l'interface en ligne de commande (CLI).",
  "550FF8A929E3E029F21F": "[Scripts](/genaiscript/reference/scripts) fournissent un cadre JavaScript spécifique au domaine pour construire des requêtes LLM.",
  "073A41E8F6FF809B489F": "[CLI](/genaiscript/reference/cli) documente l'interface en ligne de commande pour automatiser l'exécution des GenAIScripts.",
  "C981808BEE11B7F25D6D": "[L'extension Visual Studio Code](/genaiscript/reference/vscode) offre un ensemble riche de fonctionnalités pour créer, déboguer et déployer des GenAIScripts.",
  "5CE5030921DB735789F2": "Traduit avec l'aide de l'IA. Veuillez vérifier le contenu pour garantir son exactitude.",
  "0E49875B98C372D50F49": "Le **Playground** est une application web auto-hébergée qui vous permet d'exécuter des scripts GenAIScript depuis une interface utilisateur conviviale. Il se situe entre la CLI GenAIScript et l'intégration GenAIScript pour Visual Studio Code.",
  "A9F13B74139A63ED10D3": "Le playground est encore en cours de construction.",
  "9F29FD97D410B5D11453": "Lancement",
  "C6BA823F42574C9822C5": "Depuis la racine de votre espace de travail projet, exécutez",
  "FF604D15F2705620A98C": "puis naviguez vers l'URL affichée dans la console (typiquement `http://127.0.0.1:8003/`).",
  "6E7CFC77A4FABCBDD649": "Dépôt distant",
  "B53DB746C9E59DB7D60B": "Vous pouvez exécuter le playground sur un dépôt distant en utilisant vos secrets `.env` actuels.",
  "8D9F8F682FD780345EEC": "Installation locale",
  "F142477A2027D93271F6": "`npx` peut être lent à démarrer, surtout si vous lancez fréquemment le playground. Vous pouvez installer le playground localement avec",
  "727C873AE1D35996BF63": "puis lancez",
  "E17278567322E728B19B": "Exécution de scripts à partir d'un dépôt distant",
  "55AAABA318E4826E762D": "Vous pouvez utiliser l'option `--remote` pour charger des scripts depuis un dépôt distant. GenAIScript effectuera un clonage superficiel du dépôt et exécutera le script depuis le dossier cloné.",
  "81298A450D325AB9107A": "Il existe des options supplémentaires pour le clonage du dépôt :",
  "FCC23B2492E8CFC03E31": "`--remote-branch <branche>` : La branche à cloner depuis le dépôt distant.",
  "3AF9EFCE8909C67C4D34": "`--remote-force` : Force le clonage même si le dossier cloné existe déjà.",
  "E453319B7BA98643FA84": "`--remote-install` : Installe les dépendances après le clonage du dépôt.",
  "CCB4E6BF1A2CF3591412": "Comme toujours, soyez prudent lorsque vous exécutez des scripts provenant d'un dépôt distant. Assurez-vous de faire confiance à la source avant d'exécuter le script et envisagez de verrouiller sur un commit spécifique.",
  "365FBC1B4879DE7BF5ED": "Traduction réalisée à l'aide d'une IA. Veuillez vérifier l'exactitude du contenu.",
  "DD1ED3F39207363B5DCD": "[GitHub Actions](https://docs.github.com/en/actions) est une plateforme d'intégration continue et de livraison continue (CI/CD) qui vous permet d'automatiser votre pipeline de compilation, de test et de déploiement. Vous pouvez créer des workflows qui compilent et testent chaque pull request vers votre dépôt, ou déployer les pull requests fusionnées en production.",
  "FCDA0224B9303A8A51FB": "[Dernièrement](https://github.blog/changelog/2025-04-14-github-actions-token-integration-now-generally-available-in-github-models/), GitHub a ajouté la possibilité d'utiliser également les [GitHub Models](https://docs.github.com/en/github-models) dans les actions.",
  "C24D7022F18B2D1BA12E": "La combinaison d'Actions et de Models vous permet d'exécuter GenAIScript dans le cadre de votre CI/CD.",
  "76996E91C4B70E74CD43": "Accédez à la section [Actions Personnalisées](#custom-actions) pour apprendre comment empaqueter un script GenAIScript en tant qu'action GitHub.",
  "5648C6CDC2CAA887A479": "Exemples",
  "543EEE7873FA2F5643AC": "[Étiqueteur de Problèmes GenAI](https://github.com/pelikhan/action-genai-issue-labeller/)",
  "BF49708DAF72BA9F4F4E": "[Dé-Duplicateur de Problèmes GenAI](https://github.com/pelikhan/action-genai-issue-dedup/)",
  "D1BFE05BD416E54976FA": "[Analyseur de Problèmes Vidéo GenAI](https://github.com/pelikhan/action-genai-video-issue-analyzer/)",
  "B8ACFDE91D2A28B7076C": "[Commentateur de Code GenAI](https://github.com/pelikhan/action-genai-commentor/)",
  "0F87F1E6CD6E0A6DF835": "Permissions GitHub Models",
  "072034C4496E9C946A96": "[Pour utiliser les Models dans une Action GitHub](https://docs.github.com/en/github-models/use-github-models/integrating-ai-models-into-your-development-workflow#using-ai-models-with-github-actions), vous devez définir les `permissions` de l'action pour inclure `models: read`.",
  "2DF08B8D9B0A0F596D36": "GenAIScript prend en charge nativement les GitHub Models, vous pouvez donc l'utiliser directement dans votre workflow GitHub Actions.",
  "E7A8D7297DD741CDEA03": "Utilisation de la CLI",
  "9DB6AE9A5F1865CDD64E": "La manière la plus simple d'utiliser GenAIScript dans une Action GitHub est d'exécuter directement la [CLI](/genaiscript/reference/cli).\nVous pouvez le faire en ajoutant une étape à votre workflow qui exécute la commande `genaiscript`.",
  "69B6681C0AA165DAD213": "**Assurez-vous d'inclure le `GITHUB_TOKEN` dans les variables d'environnement** afin que GenAIScript puisse s'authentifier auprès des GitHub Models.",
  "86E4C45CE95AEB43ECEF": "Actions Personnalisées",
  "8546D1C23682D1D19079": "GitHub supporte le packaging des tâches sous forme d’[actions personnalisées](https://docs.github.com/en/actions/sharing-automations/creating-actions/about-custom-actions), généralement dans un dépôt dédié. C’est un excellent moyen de packager un script IA et de le partager avec d’autres.",
  "E6B5AA3736B7D685EFA3": "La CLI GenAIScript fournit une commande pour générer/met à jour le code standard afin de packager un script sous forme d’\n[action conteneur Docker](https://docs.github.com/en/actions/sharing-automations/creating-actions/creating-a-docker-container-action) pour qu’il puisse être utilisé dans GitHub Actions, quel que soit le langage utilisé pour écrire le script.",
  "FF6998668DD0DEBB0720": "Pour commencer,",
  "46836621D0650963AD47": "Créez un nouveau dépôt pour votre action.",
  "6E34954A3507EBE60D1E": "Ouvrez un terminal à la racine de votre dépôt.",
  "23F87B9D4FD9EF038863": "Exécutez la commande pour générer le squelette de l'action :",
  "C418DF1B861DD29F9FAD": "Le générateur du squelette d'action écrasera les fichiers suivants :",
  "57CE11C285539C69D514": "`action.yml` Fichier de métadonnées de l'action",
  "5DB760C5AC1062B4D8D1": "`Dockerfile` Dockerfile pour l'action",
  "26B07639A3E6C17F02C3": "`README.md` Documentation pour l'action",
  "D0D733A84CD97895FD2A": "`.gitignore` Fichiers à ignorer dans le dépôt",
  "8F9457CCB7B38950BF76": "`.github/workflows/ci.yml` Workflow CI pour tester l'action",
  "715876561542CFFEF557": "`package.json` Configuration du package pour l'action",
  "7F3BB96EEB3CBEC99C31": "`devcontainer/devcontainer.json` Configuration du conteneur de développement pour VS Code",
  "5A64789C70E3F55ED11E": "`devcontainer/Dockerfile` Dockerfile du conteneur de développement pour VS Code. Doit être synchronisé avec le Dockerfile de l'action.",
  "E6A18C81A7B477024019": "Pour mettre à jour le squelette de l'action, vous pouvez exécuter à nouveau la même commande :",
  "D47E334D05BCC11E5BF8": "Métadonnées",
  "26793367106065548BEA": "Le fichier `action.yml` contient les métadonnées de l'action. Elles sont extraites de différentes parties de votre projet :",
  "0CDE38E12FC67A8BCE76": "Le `name` est dérivé de l’identifiant du script.",
  "733BECE2D2F7AD9E22F7": "La `description` est dérivée du `title` du script.",
  "D873781559A66034031C": "Les `inputs` sont dérivées des [paramètres](/genaiscript/reference/scripts/parameters) du script (voir ci-dessous).",
  "6E4C735C7D0296999B7B": "Notez que la `description` du script est utilisée pour remplir le fichier `README.md`.",
  "08ED1C5ACE534FF0A20E": "Entrées",
  "50167272BBE2389F009D": "La section `inputs` du fichier `action.yml` est générée automatiquement à partir des paramètres du script.\nChaque paramètre est converti en une entrée portant le même nom, et le type est déduit du type du paramètre.",
  "70DBDF0FC35F4C148E78": "Le fichier `action.yml` généré ressemblera à ceci :",
  "A0ED740F0CCDD116A085": "Il existe également des champs additionnels communs à toutes les actions GenAIScript :",
  "39CDEFFF3B808BC09D98": "`files` : Spécifie un chemin de fichier pour alimenter la variable `env.files`. Pour supprimer ce champ, définissez `accept: \"none\"` dans le script.",
  "951123EE026B9761DD15": "`github_token` : **Ceci est requis pour s'authentifier auprès des GitHub Models.**\nIl deviendra `INPUT_GITHUB_TOKEN` lors de la création du conteneur et GenAIScript le récupérera automatiquement.",
  "482507DD73AACD2C1AF1": "`github_issue` : Le numéro du problème GitHub ou de la pull request en cours.",
  "E9661469031678666520": "`debug` : Le filtre pour contrôler les messages de [journalisation](/genaiscript/reference/scripts/logging) de débogage.",
  "32C5C39EE268E6728EFC": "Sorties",
  "8C2B63DDCA6C747A7228": "L'action remplit quelques champs de sortie.",
  "3FFAE29BE2FA277FF290": "`text` : c'est le texte généré par le script.",
  "8116FC8F1B7968CBFF35": "`data` : c'est la sortie structurée analysée et mise en chaîne en JSON. Ce champ est rempli\nsi vous fournissez un [responseSchema](/genaiscript/reference/scripts/schemas) dans le script et si le LLM est capable de générer une réponse correspondant au schéma.",
  "55582B17841A172E2B2C": "Personnalisation de l’apparence",
  "CFC7F0116C0385655D49": "Le champ `branding` du `script` est utilisé pour [personnaliser l'apparence de l'action dans l'interface GitHub](https://docs.github.com/en/actions/sharing-automations/creating-actions/metadata-syntax-for-github-actions?versionId=free-pro-team%40latest&productId=actions&restPage=sharing-automations%2Ccreating-actions%2Creleasing-and-maintaining-actions#branding).",
  "28440186D1062AEA8DE1": "Conteneurs",
  "7252434F973843B8D218": "Par défaut, GenAIScript utilise [node:lts-alpine](https://hub.docker.com/_/node/) comme image de base pour le conteneur de l'action.\nVous pouvez changer cela en spécifiant une image de base différente dans la `cli`.",
  "7B730FD8C32F35273BC2": "GenAIScript créera également un [devcontainer](https://code.visualstudio.com/docs/devcontainers/create-dev-container)\nafin que vous puissiez développer l'action dans un environnement conteneurisé (presque identique) à celui où elle s’exécute dans GitHub Action.",
  "8992F58886273E208B6E": "ffmpeg, playwright et autres paquets",
  "135A182597B622D62DDF": "Pour garder le conteneur de l'action léger, GenAIScript n’inclut pas `ffmpeg`, `playwright` ou d’autres paquets par défaut.\nVous pouvez les ajouter au conteneur en les spécifiant dans la commande `cli`.",
  "2AFE19FDF23182D1E4BA": "Vous pouvez également ajouter d’autres paquets dont vous avez besoin en les spécifiant dans la commande `cli`.",
  "EC95E5DA779F5469AEBA": "Tester l’Action",
  "F8D4B3BD3CAE2DA4CEEF": "Votre script doit pouvoir être testé localement en utilisant la commande `npm run dev`. N’hésitez pas à le modifier dans `package.json`.",
  "48C2687C0F662F0D84EE": "Ou si vous souhaitez simuler l’environnement GitHub Action,\nvous pouvez définir les variables `INPUT_<parameter>` dans l’environnement.",
  "8DC435B1ADE0FF8F20EF": "Espace de travail GitHub vs Espace de travail de l’Action",
  "A00D1EEDCD39C8D5CC45": "Lorsqu’une action s’exécute dans un conteneur, le contenu du dépôt de l’action\nest d’abord copié dans le répertoire `/github/action`. GitHub clone le dépôt dans le répertoire `/github/workspace`.",
  "3B5344BC922181FF3F2D": "Le `ENTRYPOINT` du `Dockerfile` est configuré pour lancer la CLI `genaiscript` dans le répertoire `/github/action`\npuis il détecte la variable d’environnement `GITHUB_WORKSPACE` pour déterminer le répertoire de travail\net change le `cwd` pour l’utiliser.",
  "769071EA1F11D94C96D3": "Ce mode est activé par le flag `--github-workspace` dans la commande `cli`.",
  "99651EEA3686EB46130B": "Traduit à l’aide de l’IA. Veuillez vérifier l'exactitude du contenu.",
  "01902C74DE6E046B3D5D": "GenAIScript prend en charge les fichiers de configuration locaux et globaux pour permettre la réutilisation des paramètres de configuration courants et des secrets dans plusieurs scripts.",
  "40A85310BAAB670BEEA4": "Résolution des fichiers .env",
  "C82D9D5E302454E73F21": "GenAIScript analysera et chargera les fichiers `.env` suivants dans l'ordre indiqué :",
  "5FF19CD3BA2E32069B0F": "propriété `envFile` dans les fichiers de configuration (voir ci-dessous)",
  "D58F19FDF94AEE312461": "variable d'environnement `GENAISCRIPT_ENV_FILE`",
  "B34CEFED160E876784AA": "options de ligne de commande `--env`",
  "03E29CE0027E467FA15E": "Si aucun des éléments ci-dessus n'est défini, il tentera de charger les fichiers suivants :",
  "C0E7F242A651BB0E7BF8": "`~/.env`",
  "426E2CE7C8BD5EDA4605": "`./.env`",
  "71D3B024914F9DAFB486": "`./.env.genaiscript`",
  "20E1C8DE9A1FC05FA8AC": "Résolution des fichiers de configuration",
  "CF5529BF551AAB86677A": "GenAIScript recherchera les fichiers de configuration suivants\net fusionnera leur contenu dans la configuration finale.",
  "13AEF425868ADBB8378E": "`~/genaiscript.config.yaml`",
  "DFB0F991FE2C07BE6177": "`~/genaiscript.config.json`",
  "BBC86E1C6B4AD6AE0C30": "`./genaiscript.config.yaml`",
  "F01F6245C9EF055E38B8": "`./genaiscript.config.json`",
  "97FA16B20A4ABF6C2883": "Les fichiers JSON supportent le format [JSON5](https://json5.org/) (incluant les commentaires, les virgules finales, etc.).",
  "36B18939EEFB7B5C3874": "Schéma",
  "1C9963A48DAC5A1A97CE": "Le schéma de configuration est disponible à l'adresse [https://microsoft.github.io/genaiscript/schemas/config.json](https://microsoft.github.io/genaiscript/schemas/config.json) .",
  "0BDA93026CDBD5166BFE": "Propriété `envFile`",
  "DC60AD6A0FD8F8DAD424": "L'emplacement final de `envFile` sera utilisé pour charger le secret dans les variables d'environnement. Elle supporte un seul fichier.",
  "4558DA034DF211ED86F6": "Propriété `include`",
  "F50AAF4DD5F58D5754FC": "La propriété `include` permet de fournir des chemins glob pour inclure davantage de scripts.\nCombinée à un fichier de configuration global, cela permet de partager des scripts pour plusieurs projets.",
  "E1D6D1378D52B64EA26C": "Propriété `modelAliases`",
  "453F094B7E44B03081F8": "La propriété `modelAliases` vous permet de fournir des alias pour les noms de modèles.",
  "2D3500C77A92DD99DECD": "Propriété `modelEncodings`",
  "866AE267213DA0075A0B": "La propriété `modelEncodings` vous permet de fournir l'encodage pour le modèle.",
  "54AA762EA1E077DEA0D7": "Débogage",
  "1A6C453F4AD2F79E638C": "Activez la catégorie de débogage `config` pour voir des informations supplémentaires sur la résolution de la configuration.",
  "E7A6CF71C9E9C38CD29D": "Vous pouvez également activer d'autres catégories de débogage pour obtenir des journaux plus détaillés.",
  "1B4EB77148BCA75D2652": "Traduit avec l'aide de l'IA. Veuillez vérifier l'exactitude du contenu.",
  "02C40B02919E95A7D618": "![Une capture d’écran de Azure AI Foundry.](./azure-ai-foundry.png)",
  "C27A06A9F1CA92196480": "GenAIScript prend en charge nativement plusieurs services de [Azure AI Foundry](https://learn.microsoft.com/en-us/azure/ai-foundry/).",
  "A836449A5D1D32973D86": "Authentification",
  "F3D33ECE60D927E8B68D": "GenAIScript prend en charge l’authentification basée sur des clés dans les variables d’environnement ainsi que l’authentification Microsoft Entra pour chaque service.",
  "57FAD03E2B3EBCE1159B": "Services Azure OpenAI et IA",
  "4FA6306B079A13CE0011": "GenAIScript peut effectuer des inférences sur les LLM hébergés dans Azure AI Foundry.",
  "74DC9D824C21DD7C5B58": "GenAIScript prend en charge 4 types de déploiements Azure :",
  "BB3142274398B3646E8A": "[Azure OpenAI](/genaiscript/configuration/azure-openai)",
  "EBA9E99169C09C92E176": "[Azure AI Inference](/genaiscript/configuration/azure-ai-foundry##azure-ai-inference)",
  "E42CF0286A374BF9ADAA": "[Azure OpenAI Serverless](/genaiscript/configuration/azure-ai-foundry/#azure-ai-openai-serverless)",
  "61F007850C2B4AD73684": "[Modèles Azure AI Serverless](/genaiscript/configuration/azure-ai-foundry/#azure_serverless_models)",
  "D335A37E2F52BA597511": "Recherche Azure AI",
  "FA7F381B6404C10D0A40": "[Azure AI Search](https://learn.microsoft.com/en-us/azure/search/search-what-is-azure-search) est un moteur de recherche hybride puissant combinant recherche vectorielle et par mots-clés dans une base de données.",
  "D22C1A48F43388E90563": "[Recherche vectorielle](/genaiscript/reference/scripts/vector-search/#azure-ai-search)",
  "49CD06D5049494627B90": "[Configuration](/genaiscript/configuration/azure-ai-search)",
  "79538D3061A9330051BB": "Sécurité du contenu Azure",
  "8A763A2742834A3E5CF4": "[Azure Content Safety](https://learn.microsoft.com/en-us/azure/cognitive-services/content-safety/) est un service qui vous aide à identifier et filtrer les contenus nuisibles dans vos applications.",
  "38DEB8F7DBE3C5DD9F5D": "GenAIScript propose une prise en charge intégrée pour utiliser Azure Content Safety, depuis l’analyse d’une partie du prompt jusqu’à l’inspection des réponses des LLM ou des serveurs MCP.",
  "21A277898CF272B55FBA": "[Configuration](/genaiscript/reference/scripts/content-safety/#azure-ai-content-safety-services)",
  "1C4B362614160B8EB187": "Traduit avec l’aide d’une IA. Veuillez vérifier l’exactitude du contenu.",
  "68C671745B4D7449F760": "Paramètres disponibles dans Visual Studio Code.",
  "FDBD0895BD216629AE2C": "Les paramètres suivants sont accessibles via la commande **Préférences : Ouvrir les paramètres utilisateur**.",
  "14E6CDEFB2C3B88FF6EB": "CLI",
  "35F4793F257B25351103": "Ces paramètres contrôlent la manière dont le serveur GenAIScript est exécuté depuis l'extension. Par défaut, l'extension utilise [npx](https://www.npmjs.com/package/npx) et la version actuelle de l'extension pour exécuter le CLI GenAIScript.",
  "373AC97071E9C9D5F6B0": "Chemin",
  "660B6D73A2F4266A5E3C": "Si vous avez une version spécifique du CLI installée, vous pouvez définir ici son chemin.",
  "1FB3064AFC3476AC0929": "Version",
  "C24F66E3EBA1F5FDE534": "Par défaut, l'extension utilise npx et la version actuelle de l'extension. Vous pouvez remplacer le numéro de version avec ce paramètre.",
  "9ADB1018E49C40510921": "Masquer le terminal du serveur",
  "9134E5B0F531B85BB4FC": "Par défaut, le terminal du serveur GenAIScript est caché après le démarrage du serveur. Activer ce drapeau ouvrira un terminal où vous pourrez inspecter les journaux du serveur GenAIScript.",
  "063E1649C22C265C55CD": "Diagnostics",
  "7D55CC2586A239C51C2D": "Ce drapeau active diverses options supplémentaires de journalisation et de comportement pour aider à diagnostiquer les problèmes avec le serveur GenAIScript.",
  "87AB1514515CCA858E89": "Traduit avec l'IA. Veuillez vérifier le contenu pour en assurer l'exactitude.",
  "66156F7EB6FC5C594D11": "L'extension GenAIScript pour Visual Studio Code offre un moyen pratique d'exécuter des scripts directement depuis l'éditeur.",
  "A65ADAEF8A16A482E9BD": "Il existe principalement deux façons d’exécuter des scripts :",
  "4A38DD55B67B3BEC229C": "exécuter un script \"directement\". Ce scénario est utile lors du débogage d’un script ou pour un script qui ne nécessite pas de fichiers d’entrée.",
  "01001C8BB74C6D429704": "exécuter un script à partir de fichiers ou dossiers d’entrée. Ce scénario est utile lorsque vous souhaitez exécuter un script sur plusieurs fichiers ou dossiers.",
  "D5BC22B41073258D1708": "Exécution directe des scripts",
  "6688206DB3D212A798DA": "ouvrez un fichier GenAIScript dans l’éditeur",
  "FE424B7DE5F4346D9C05": "faites un clic droit dans l’éditeur et sélectionnez **Run GenAIScript** dans le menu contextuel",
  "903DA72107EA4F486464": "ou cliquez sur l’icône **Run GenAIScript** dans le coin supérieur droit de l’éditeur",
  "8EE9CA3442CE115804DC": "Cela lancera l’exécution du script en utilisant les fichiers d’entrée par défaut spécifiés dans le champ `files` du script.",
  "469B18B905519F50F89D": "Ce mode est utile lors du développement de scripts ou pour des scripts qui ne nécessitent pas de fichiers d'entrée.",
  "D9B92FA08ECB93DCAB7F": "Exécution des scripts à partir de fichiers ou dossiers d’entrée",
  "85A15F7498E39043A341": "Ce mode permet d’exécuter des scripts sur n’importe quelle combinaison de fichiers et de dossiers, qui alimentera `env.files`.",
  "5684736036BF935E434F": "Depuis la fenêtre de l’explorateur :",
  "53DAE7E90295F0E0309D": "sélectionnez des fichiers ou des dossiers dans l’explorateur. Vous pouvez utiliser la touche `Ctrl` ou `Shift` pour sélectionner plusieurs fichiers ou dossiers.",
  "36E9B3FE5B02179BDBB2": "faites un clic droit et sélectionnez **Run GenAIScript** dans le menu contextuel",
  "3C36EC140C168CFB2B05": "Depuis un éditeur",
  "A589CA9EB5D68FAF22EE": "ouvrez un fichier dans l’éditeur (pas un fichier GenAIScript)",
  "62818DA7504D7A5A93D5": "faites un clic droit et sélectionnez **Run GenAIScript** dans le menu contextuel",
  "EBEDAF60E6D7D9FFA19D": "Utilisation du texte sélectionné dans votre script",
  "69CC07442D2077B890ED": "Chaque fois que vous lancez un script, GenAIScript récupère le texte sélectionné dans l’éditeur de texte actif et le stocke dans la variable `editor.selectedText`.",
  "01CFB196E3B56F878EB6": "Cette valeur sera `undefined` si vous exécutez votre script depuis la ligne de commande, vous devez donc gérer ce cas dans votre script.",
  "73CD35178D9EF0F210A3": "Règles .gitignore",
  "D70B032811666C3FBD4C": "GenAIScript tente de respecter les **règles `.gitignore` de premier niveau dans l’espace de travail du projet** (il ignore les fichiers .gitignore imbriqués). Cela signifie que si vous avez un fichier `.gitignore` dans votre projet, GenAIScript ignorera tous les fichiers ou dossiers ignorés par Git.",
  "83886251B30BEF35B159": "Il existe des exceptions à cette règle :",
  "705283B5A42D3924279A": "si vous exécutez **Run GenAIScript** sur des fichiers individuels, ces fichiers ne sont pas filtrés par `.gitignore` puisque vous les avez explicitement choisis. Les dossiers sont toujours filtrés.",
  "98DA6E0144C82DF4028E": "si vous spécifiez `---ignore-git-ignore` dans la ligne de commande, GenAIScript ignorera le fichier `.gitignore` et exécutera le script sur tous les fichiers et dossiers.",
  "4E089410856A9B7819B7": "Traduction réalisée avec l’aide d’une IA. Veuillez vérifier la précision du contenu.",
  "BE8A6B85B53DE687D46E": "GenAIScript est pris en charge par une extension [Visual Studio Code](https://code.visualstudio.com/) qui offre un ensemble complet de fonctionnalités pour créer, déboguer et déployer des GenAIScripts.",
  "83D91F4C5ABA5E8F7EDA": "Le [Visual Studio Code Marketplace](https://marketplace.visualstudio.com/items?itemName=genaiscript.genaiscript-vscode) contient la dernière version stable de l'[extension](https://marketplace.visualstudio.com/items?itemName=genaiscript.genaiscript-vscode).",
  "7FABA91AA4F75815C1E4": "[Télécharger](https://marketplace.visualstudio.com/items?itemName=genaiscript.genaiscript-vscode)",
  "744A02B14E6DC8CEBFDE": "[Instructions d'installation](/genaiscript/getting-started/installation/#visual-studio-code-extension)",
  "969D95E0B86DDE13B90F": "[Exécution de scripts](/genaiscript/reference/vscode/running-scripts/)",
  "DB034F54E2E19FDCB713": "[Intégration de Copilot Chat](/genaiscript/reference/vscode/github-copilot-chat/)",
  "FE8C8315B4811E4EC70F": "[Paramètres](/genaiscript/reference/vscode/settings/)",
  "84F25BF34580E3AD83F3": "Traduction réalisée avec IA. Veuillez vérifier le contenu pour en assurer l’exactitude.",
  "D70AAA173B9032571BDF": "GenAIScript s'intègre avec [GitHub Copilot Chat](https://marketplace.visualstudio.com/items?itemName=GitHub.copilot-chat)\nen fournissant un **participant de chat** qui vous permet d'exécuter des scripts dans le contexte d'une conversation de chat,\net une **invite personnalisée** pour générer GenAIScript plus efficacement avec Copilot Chat.",
  "612707E4A922A5DA1467": "Si vous devez vérifier votre quota de requêtes premium disponible pour GitHub Copilot, rendez-vous sur [Fonctionnalités](https://github.com/settings/copilot/features)",
  "CE133B0638CCCACF4783": "Le [participant de chat `@genaiscript`](https://code.visualstudio.com/api/extension-guides/chat#parts-of-the-chat-user-experience) vous permet d'exécuter des scripts sans le contexte\nd'une conversation [GitHub Copilot Chat](https://marketplace.visualstudio.com/items?itemName=GitHub.copilot-chat).\nCeci est utile pour exploiter des scripts existants dans une session interactive de chat.",
  "99F9D9272809937E0DE7": "La commande `/run` attend un identifiant de script comme premier argument (par exemple, `/run poem`). Le reste de la requête est\ntransmis au script comme variable `env.vars.question`.",
  "3E4F190EA728D541AA59": "Si vous omettez la commande `/run`, GenAIScript cherchera un script nommé `copilotchat`. S'il en trouve un, il l'exécutera.\nSinon, il vous demandera de choisir un script parmi la liste des scripts disponibles.",
  "CDB25F08362D1E66AE71": "Si votre script ne spécifie pas un modèle, GenAIScript vous invitera à en choisir un.\nVous pouvez également spécifier le modèle à choisir dans la configuration du script en utilisant le fournisseur `github_copilot_chat`.",
  "F3E9DA653A6EE0E3501C": "modèle sélectionné actuel : `github_copilot_chat:current`",
  "1FF5C615B00DD73A4EBC": "gpt-4o-mini : `github_copilot_chat:gpt-4o-mini`",
  "1569281C4DB9E116585E": "Lorsque GenAIScript vous invite à choisir un modèle, il stockera vos choix dans les paramètres de l'espace de travail\nsous",
  "8BABA08F35869C791DF9": "**Les modèles GitHub Copilot Chat sont uniquement disponibles dans Visual Studio Code.** Ils ne fonctionneront pas depuis\nl'interface [cli](/genaiscript/reference/cli) ou [playground](/genaiscript/reference/playground).",
  "863F416B57E6DC1408FA": "Disponibilité des modèles",
  "EED59F3CF480A1F55A36": "Tous les modèles listés dans l'interface utilisateur de GitHub Copilot Chat ne sont pas disponibles pour les extensions tierces.\nQuand GenAIScript tente d'accéder à un modèle non disponible, il vous en informera mais n'a pas\nde contrôle sur votre configuration d'accès aux modèles.",
  "6D84E7CA7449B367BDB9": "Contexte",
  "C9306592A7B8AFB917B6": "Le contexte sélectionné par l'utilisateur dans Copilot Chat est converti en variables et transmis au script :",
  "D36E88DB2D578A732385": "le contenu de l'invite est transmis dans `env.vars.question`. L'identifiant du script est retiré dans le cas de `/run`.",
  "4609953061B2F66FFF13": "le texte actuel de l'éditeur est transmis dans `env.vars[\"copilot.editor\"]`",
  "BE85771ADBDB59A8C2C6": "la sélection actuelle dans l'éditeur est transmise dans `env.vars[\"copilot.selection\"]`",
  "6B52EC1EC35C86856780": "toutes les autres références de fichiers sont transmises dans `env.files`",
  "66D67FFC82F101FF3BA1": "Exemples",
  "5AE2E02935AD271E65F3": "`mermaid` générera un diagramme à partir de l'invite utilisateur.",
  "407264C11E5B726A7C2C": "`websearcher` effectuera une recherche web pour l'invite utilisateur\net utilisera le fichier en contexte dans la réponse.",
  "488DFE57B037453496C8": "`dataanalyst` utilise les outils interprètes de code Python pour\nrésoudre une question de calcul de données.",
  "5F7643D70BA92F3BF3F2": "Historique",
  "78172852D945C5F843F6": "L'historique des messages est transmis dans `env.vars[\"copilot.history\"]`. Il s'agit d'un tableau de `HistoryMessageUser | HistoryMessageAssistant` :",
  "D40D320E706336EB93D2": "Conversation continue",
  "7E739518AE592072040F": "Vous pouvez utiliser le chat `@genaiscript` pour intégrer l'exécution d'un script dans une conversation existante\nou pour continuer la conversation avec Copilot avec les résultats du script. Les résultats\ndu script sont remis dans l'historique du chat et sont disponibles pour tout copilot par la suite.",
  "5A14B5578D8E4180B0ED": "`@genaiscript /run tool` exécutera le script `tool` et replacera les résultats dans l'historique du chat.",
  "5D416A568FE95DF45DD7": "`analyze the results` continuera la conversation avec les résultats du script.",
  "C57536D4E41491430A65": "Script par défaut <a id=\"copilotchat\" href=\"\" />",
  "32227744A28472D38A79": "Le script suivant peut être utilisé comme modèle de démarrage pour créer le script par défaut lorsque l'utilisateur ne lance pas la commande `/run`.",
  "5F03EB8ED33673163E8A": "Fonctionnalités non prises en charge",
  "D89350271BFD935DA4D0": "Les fonctionnalités suivantes ne sont actuellement pas supportées dans le participant de chat :",
  "B151EE7A978DA71C6DC7": "Outils (`#tool`)",
  "0F6398AE633065009B29": "Référence `Workspace`",
  "182E88F5C68B817CE639": "Instructions personnalisées `genaiscript` <a href=\"\" id=\"genaiscript-custom-prompt\" />",
  "46F9526C29CC575654E9": "GenAIScript sauvegardera automatiquement un fichier instructions.md dans le dossier `.genaiscript/instructions`\nlorsque vous exécutez un script. Ce fichier contient les instructions utilisées pour générer le script.",
  "8BBD268F4655563C275D": "Sessions de chat augmentées",
  "3DC8456693A5B7FE3929": "Voici comment démarrer des sessions de chat en utilisant l’invite `genaiscript`.",
  "9E1C0D79F38EB9DD17B6": "Sélectionnez l'icône **Attacher contexte** 📎 (`Ctrl+/`), puis sélectionnez **Instructions...**,\npuis sélectionnez l’invite **genaiscript.instructions.md**.",
  "8DA6C4E847A2C2A65784": "Incluez des instructions pour écrire un script ou répondre à une question sur GenAIScript,\n`write a script that summarizes a video`.",
  "1606AF116379D5108BC4": "Puisque l'invite injecte la documentation complète de GenAIScript (plus de 700 kb au moment de l'écriture),\nil est conseillé d’utiliser un modèle à contexte étendu comme Sonnet ou Gemini.",
  "AF1E5B2A408023E42F37": "N'oubliez pas non plus que la conversation complète est renvoyée à chaque itération, donc cette technique\nfonctionne mieux comme une requête détaillée en une seule fois.",
  "E1F8F3281225BF2A89A9": "Traduit à l’aide de l’IA. Veuillez vérifier l’exactitude du contenu.",
  "32BD008F7788993C3588": "[GitHub Gists](https://gist.github.com/) sont un moyen simple de partager des extraits de code et des notes avec d'autres.\nIls sont essentiellement des dépôts Git qui peuvent être créés et partagés facilement.\nLes gists peuvent être publics ou secrets, et ils supportent la gestion des versions, ce qui en fait un excellent outil de collaboration.",
  "B4E40A434B97AA3A08EC": "![Une capture d'écran de GistPad dans Visual Studio Code](./gistpad.png)",
  "534EF165AA69D7B8D4DA": "Exécution de GenAIScript à partir des Gists",
  "F8B3679ACBFCE4FE25D3": "GenAIScript prend en charge les formats d'URL suivants pour exécuter des scripts directement depuis un gist.",
  "3A6DA898B2FFBDCCBC1C": "`gist://<id du gist>/<nom du fichier>`",
  "F592DF70A292BF59C6D2": "`vscode://vsls-contrib.gistfs/open?gist=<id du gist>&file=<fichier>`",
  "9DF40BDF0D6257779B31": "Le fichier gist est mis en cache localement dans `.genaiscript/resources` puis exécuté. Si disponible,\nil utilise les informations de connexion GitHub pour accéder aux gists privés.",
  "4B1421D6452CA02A0889": "GenAIScript est constitué de fichiers JavaScript, assurez-vous donc d'exécuter uniquement des gists en qui vous avez confiance.",
  "9182E23EF0344C3983F2": "GistPad dans Visual Studio Code",
  "880B8F6A3223905D1439": "L'[extension GistPad](https://marketplace.visualstudio.com/items?itemName=vsls-contrib.gistfs) pour Visual Studio Code vous permet de créer, modifier et gérer des gists directement depuis votre éditeur.",
  "7515C7A3F7C6E64E2BE7": "Vous pouvez ouvrir un fichier dans un Gist et l'exécuter en utilisant la commande `genaiscript`.",
  "EE2AF9664812953252B4": "Vérification de type",
  "63C791FED3B5B1F338E4": "Pour activer la vérification de type, nous devons télécharger le fichier `genaiscript.d.ts` dans le gist et mettre en place une référence à celui-ci\nen ajoutant ce commentaire **en haut du fichier** :",
  "3545D836C25E9C5F199E": "Cela peut être fait automatiquement :",
  "6A178E038E1ED1229DCA": "clic droit sur le fichier GenAIScript du Gist",
  "FE8AC006E541C5EE316D": "sélectionnez `GenAIScript : Corriger les définitions de types`",
  "ADCF83D455FE3636EAAA": "Vous pourriez être invité à autoriser GenAIScript à utiliser votre compte GitHub. GenAIScript demandera un jeton avec la portée `gist` pour télécharger les fichiers manquants.",
  "64212C0418E27FE5F31C": "Pour charger les types GenAIScript, vous devrez \"pousser\" le compilateur TypeScript :",
  "41C0E957C132C2962996": "ouvrez le fichier `genaiscript.d.ts` depuis l'arborescence GistPad (cela charge les types en mémoire)",
  "CAB2F93794F71D6F5051": "ouvrez votre fichier GenAIScript dans l'arborescence GistPad et la vérification de type devrait fonctionner !",
  "4850817F84817EBA1790": "Limitations",
  "1F44958D3D2EDC51187B": "Comme l'extension GistPad n'est pas un IDE complet, il y a certaines limitations à prendre en compte :",
  "22DA197F1B44A918B355": "les imports ne seront probablement pas résolus",
  "3DA87083B73FBC78D68F": "Traduit par IA. Veuillez vérifier le contenu pour en assurer l'exactitude.",
  "C30A4B7320BAF9A4AA0C": "GenAIScript s'exécute dans un environnement Node.JS (légèrement modifié) où des globals supplémentaires ont été ajoutés.\nCet environnement est configuré par le [cli](/genaiscript/reference/cli).\nPar conséquent, pour exécuter un GenAIScript dans un processus Node.JS \"vanilla\", vous aurez besoin de\n**l’API `run` de Node.JS**. Cette API charge et exécute un script GenAIScript dans un thread worker séparé.",
  "D99BAB84D0E40B048263": "Cette page décrit comment importer et utiliser GenAIScript en tant qu’API dans votre application Node.JS.",
  "80224D18015D3EE01DEB": "Configuration",
  "F718843740907551E082": "En supposant que vous ayez ajouté le cli comme dépendance dans votre projet,\nvous pouvez importer le [cli](/genaiscript/reference/api) comme suit :",
  "B451E920C130DCF49556": "Utilisation",
  "21E4D2CAFBE7B76EF509": "L’API peut être importée en utilisant les imports depuis **\"genaiscript/api\"**.",
  "8BAB96C05D8B457DE119": "Le wrapper `api.mjs` importé est un chargeur minuscule, sans dépendances,\nqui lance un [thread worker Node.JS](https://nodejs.org/api/worker_threads.html) pour exécuter GenAIScript.",
  "7EBD677BE84CE8C53083": "Pas de pollution des globals",
  "F671EDC1E4562DC82EB5": "Pas d’effets secondaires sur le processus",
  "FDCAD209438B0D6B4681": "`run`",
  "410754BC8308320CF340": "La fonction `run` encapsule la commande [cli run](/genaiscript/reference/cli/run).",
  "0EB559441CF3DCEFEA2C": "Variables d’environnement",
  "8596A8754986BD5B6D9A": "Vous pouvez définir les variables d’environnement pour le processus GenAIScript en passant un objet dans le champ `env` des options. Par défaut, le worker héritera de `process.env`.",
  "D837E80E843F972050E7": "Traduit à l’aide de l’IA. Veuillez vérifier l’exactitude du contenu.",
  "612EB1BCF2BE26442354": "Certaines des [capacités de traitement vidéo](/genaiscript/reference/scripts/videos) sont également disponibles dans la cli.",
  "19887CB2641F542BEB08": "`video probe`",
  "A54037B5104F3776471F": "Renvoie le résultat de `ffprobe` dans la console.",
  "F7FA90CC873FFEBA80E2": "`video extract-audio`",
  "8A91E417733E6CAE771F": "Extrait l'audio dans un format plus léger, optimisé pour la transcription.",
  "E20D9898D71B06CA5CC7": "`video extract-frames`",
  "D0E8CED12D23EB26C461": "Extrait des captures d'écran de la vidéo. Vous pouvez spécifier des horodatages en secondes ou en `h:mm:ss`, ou un nombre de vidéos.",
  "C5685E4A89113D149E3B": "Exécute les tests dans les scripts en utilisant [promptfoo](https://www.promptfoo.dev/).",
  "4654492B19EC157B78ED": "Vous pouvez choisir les modèles à utiliser pour les tests avec l’option `--models` :",
  "A05EF27BC47CFEB08A23": "Cette fonctionnalité nécessite d’ajouter `@genaiscript/api` dans les dépendances de votre `package.json`.",
  "A2B25B2A7E4C41BCD7BC": "visionneuse de résultats",
  "4D39006C022AC71A2BD8": "Exécutez la commande `test view` pour lancer la visionneuse des résultats de test :",
  "A7A0F5C7F10630325F92": "Traduit avec l’IA. Veuillez vérifier l’exactitude du contenu.",
  "0EE5133D09282C209E62": "Lancez un serveur web local utilisé pour exécuter le playground\nou Visual Studio Code.",
  "9238A04CA4DFD8B47453": "Exécutez depuis la racine de l’espace de travail :",
  "916566761A46F27E1F65": "port",
  "5CFE0BBCBFFBE30A04CD": "Le port par défaut est `8003`. Vous pouvez spécifier le port en utilisant le paramètre `--port`.",
  "E3D120265528F76C8568": "Clé API",
  "62620FE9E417CE7F3F67": "La clé API est utilisée pour authentifier les requêtes vers le serveur.\nVous pouvez spécifier une clé API en utilisant le paramètre `--api-key` ou la variable d’environnement `GENAISCRIPT_API_KEY`.",
  "0DBFC59372E5F9B02F5F": "ou",
  "43F69E16AC1262A215E0": "La clé API peut être définie dans l’en-tête `Authorization` d’une requête ou dans le paramètre de requête de l’URL `api-key` (`http://localhost:8003/#api-key=my-api-key`)",
  "6606B8ABA6F0E44C8F15": "CORS",
  "91743F7F47A10861F82E": "Vous pouvez activer le [Cross Origin Shared Resource](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) en utilisant le paramètre `--cors` ou en définissant la variable d’environnement `GENAISCRIPT_CORS_ORIGIN`.",
  "29408B4757D95E65BD57": "Réseau",
  "2B08B671E727D823EC03": "Vous pouvez lier le serveur sur `0.0.0.0` et le rendre accessible depuis le réseau en utilisant le paramètre `--network`. Ce paramètre est nécessaire pour rendre le serveur accessible depuis un conteneur.",
  "D45AC4430DEAC50ECE51": "Nous recommandons vivement de définir la clé API lorsque le serveur est exécuté sur le réseau.",
  "9322161DBB45E5A6F7A8": "Dockerisé",
  "89164809F4FFF83F2DD3": "Pour exécuter une image Docker minimale avec le serveur, commencez par créer une image Docker avec genaiscript et les outils nécessaires.",
  "A67CE8435E6DD6F85198": "Cela crée localement une image `genaiscript` que vous pouvez utiliser pour lancer le serveur.",
  "724BC44D5ED74E2781F5": "puis ouvrez `http://localhost:8003` dans votre navigateur.",
  "1F161D724A05D615DDB2": "Points de terminaison de l’API OpenAI",
  "84DEAAA1F974E0D3A16F": "Le serveur implémente plusieurs points de terminaison compatibles avec l’API OpenAI. Vous pouvez utiliser le serveur comme proxy vers l’API OpenAI en activant le paramètre `--openai`.\nCes routes permettent d’offrir un accès stable aux LLM configurés pour d’autres outils comme promptfoo.",
  "2FAC6546C2E6B6F89977": "Cela activera les routes suivantes :",
  "0BFE1204316AAD53F8AB": "`/v1/chat/completions`",
  "7ACE135AE57A9EEED146": "Principalement compatible avec l’API de complétion de chat d’OpenAI. Le serveur transmettra les requêtes à l’API OpenAI et retournera la réponse.",
  "C913F71F978ED40A93E2": "`stream` n’est pas pris en charge.",
  "1D1F1F248B61262C9469": "`/v1/models`",
  "99D15ED7AE2053E99A78": "Retourne la liste des modèles et alias disponibles sur le serveur.",
  "87C931F5E32CEA9DCA6C": "Traduction réalisée à l’aide de l’IA. Veuillez vérifier le contenu pour en assurer l’exactitude.",
  "E843444C30ABCF3A5D30": "Exécute un script sur des fichiers et diffuse la sortie du LLM vers stdout ou un dossier à partir de la racine de l'espace de travail.",
  "2FC39796A5198C543BC2": "où `<script>` est l'identifiant ou le chemin du fichier de l'outil à exécuter, et `<files...>` est le nom du fichier de spécification sur lequel l'exécuter.",
  "B7E3E90708EB9EB2B4BF": "Les fichiers peuvent également inclure un motif [glob](https://en.wikipedia.org/wiki/Glob_\\(programming\\)).",
  "98005FC7A8E0C2FFBFC8": "Si plusieurs fichiers sont spécifiés, tous les fichiers sont inclus dans `env.files`.",
  "7B461F66C0BBAFA05C86": "Fichiers",
  "BE52029C2E7B7E5B4549": "`run` prend un ou plusieurs motifs [glob](https://en.wikipedia.org/wiki/Glob_\\(programming\\)) pour faire correspondre les fichiers dans l'espace de travail.",
  "05DF742E91C2D7BCED36": "Résolutions de ressources",
  "8B9713F86B46A1DD7359": "GenAIScript gère et résout automatiquement certains motifs d'URI spécifiques.",
  "FC3FD5422270DB0B2C53": "`file://` - fichier local",
  "7B3BEEA087F3BCBEFDA2": "`https://github.com/<owner>/<repo>/blob/<branch>/<path>` - fichier GitHub",
  "143AAFA418D17E8D3372": "`https://github.com/<owner>/<repo>.git/<file glob>` - dépôt GitHub et motif de fichier glob",
  "2B26FE70C4BE0C532FEB": "`gist://id/<file glob>` - Gist GitHub et motif de fichier glob",
  "90940746B7E438114B48": "`https://gist.github.com/<owner>/<id>/<file glob>` - Gist GitHub et motif de fichier glob",
  "C5D0BD956579698F6A92": "`git://<owner>/<repo>.git/<file glob>` - dépôt Git et motif de fichier glob",
  "301D749C1051436D6E07": "Pipe",
  "8CA7DA0BCE94C5A6C272": "`run` prend le contenu de stdin et le convertit en fichier `stdin`. La sortie du LLM est envoyée à `stdout`, tandis que le reste des journaux est envoyé à `stderr`.",
  "C57B55DE0A502CE8FF71": "--excluded-files <files...>",
  "EA1009396AA77004D24B": "Exclut les fichiers spécifiés de l'ensemble de fichiers.",
  "C3104AD9AD5AE07FF670": "--exclude-git-ignore",
  "D83E26759E5B21B33E34": "Exclut les fichiers ignorés par le fichier `.gitignore` à la racine de l'espace de travail.",
  "163E52D819785D08F64F": "Configuration",
  "9D8B7D5DFB6A2DDF05CE": "--model ...",
  "232506A9BC162792B5E5": "Configure l'alias du modèle par défaut ou `large`. Utilisez `echo` pour faire un essai à blanc et retourner les messages au lieu d'appeler un fournisseur de LLM.",
  "17CE66E93A620392CFD7": "--provider ...",
  "DF3AE5258C004EF20522": "Charge un ensemble d'alias de modèles pour le fournisseur LLM donné.",
  "4F70877A520BF77D94DB": "--vars name=value name2=value2 ...",
  "478EBCE49D8193E58DA1": "Remplit les valeurs dans la map `env.vars` qui peuvent être utilisées lors de l'exécution de l'invite.",
  "A87BA645417FA3B8ED36": "Sortie",
  "A42EA350BD7F2574655F": "--out <file|directory>",
  "EE0F50BBEBFA89AA3A4A": "Enregistre les résultats dans un fichier JSON, ainsi que des fichiers markdown de la sortie et de la trace.",
  "75D41A0033AB6B9940C0": "Si `file` ne se termine pas par `.json`, le chemin est considéré comme un chemin de répertoire.",
  "138120EAB57090F2DB79": "--json",
  "B302C4110487CD32AB8D": "Affiche la réponse complète en JSON sur stdout.",
  "89BEBE6E2E59B4840712": "--yaml",
  "0AB630C8BCDBAF733E12": "Affiche la réponse complète en YAML sur stdout.",
  "89CF5A728377FBF152AE": "--out-trace <file>",
  "4BBC48B7DE16BEF3B36D": "Enregistre la trace markdown dans le fichier spécifié.",
  "F6EA54CB9E33F8F8C16B": "Dans un workflow GitHub Actions, vous pouvez utiliser cette fonctionnalité pour enregistrer la trace comme résumé de l'étape (`GITHUB_STEP_SUMMARY`) :",
  "EF5716B540DFC5234C00": "Dans Azure DevOps, vous pouvez utiliser la commande [task.uploadSummary](https://learn.microsoft.com/en-us/azure/devops/pipelines/scripts/logging-commands?view=azure-devops\\&tabs=bash#uploadsummary-add-some-markdown-content-to-the-build-summary) dans votre pipeline pour téléverser la trace en tant que résumé.",
  "D600C7C7DAB53B5FC16A": "--out-annotations <file>",
  "33BD75E8FA942228220B": "Émet des annotations dans le fichier spécifié sous forme de tableau JSON, JSON Lines, [SARIF](https://sarifweb.azurewebsites.net/) ou un fichier CSV si le fichier se termine par `.csv`.",
  "2F97D118734F712BB5A4": "Utilisez JSON lines (`.jsonl`) pour agréger les annotations de plusieurs exécutions dans un seul fichier.",
  "7DAB6B50B9D2BBFFDEC3": "--out-data <file>",
  "822CA22F46D25B9643FE": "Émet les données analysées au format JSON, YAML ou JSONL. Si un schéma JSON est spécifié et disponible, le résultat de validation JSON est aussi stocké.",
  "A5E3B013BECF73576E3D": "--out-changelogs <file>",
  "014A66D8DD3D238FF4D0": "Émet les journaux de modifications dans le fichier spécifié au format texte.",
  "26CBF284E8A52C635BA6": "Pull Requests et Issues <a href=\"\" id=\"pull-requests\" />",
  "226B903BE51E64708547": "L'interface en ligne de commande peut mettre à jour la description d'une pull request/issue et les commentaires lors de l'exécution dans une action GitHub ou un pipeline Azure DevOps.",
  "3D20FB6AA835E2441A55": "Configuration du workflow GitHub Action",
  "6C1FE3A29EEEE7FB984C": "Mettez à jour votre configuration de workflow pour inclure ce qui suit :",
  "C7C8D629DBF432F59B9A": "ajoutez la permission `pull-requests: write` au workflow/étape",
  "613603BFD4579E68AACC": "définissez le secret `GITHUB_TOKEN` dans l'environnement (`env`) lors de l'exécution du CLI",
  "BD7E5B2E230359CE5E13": "Configuration Azure DevOps",
  "F994F065F3B2982EC8D6": "ajoutez `<votre nom de projet> Build Service` dans le rôle **Collaborateur** du dépôt",
  "E892D9FC57D750DC42D7": "passez des secrets aux scripts, y compris `System.AccessToken`",
  "226996A8A15BCAD4F66B": "--pull-request-description [tag]",
  "3BD02C88511306224736": "Lors de l'exécution dans une action GitHub ou un pipeline Azure DevOps sur une pull request, le CLI insère la sortie LLM dans la description de la pull request ([exemple](https://github.com/microsoft/genaiscript/pull/564))",
  "F7BE4447E929C7F72E2F": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par différentes exécutions. La valeur par défaut est l'identifiant du script.",
  "39C978FFF9C36CE3F799": "--pull-request-comment [tag];",
  "7A0940DD38E9C99A821F": "Met à jour ou crée un commentaire sur la pull request/issue avec la sortie LLM ([exemple](https://github.com/microsoft/genaiscript/pull/564#issuecomment-2200474305))",
  "2F6B3E3F9A2710F4FA43": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par différentes exécutions. La valeur par défaut est l'identifiant du script.",
  "ED9222F31A200EFA2C01": "--pull-request-reviews",
  "19B0351B59E3D49A8A66": "Crée des commentaires de revue de pull request à partir de chaque [annotation](/genaiscript/reference/scripts/annotations) ([exemple](https://github.com/microsoft/genaiscript/pull/564#pullrequestreview-2151692644)).",
  "0B54FD87C68AF8237B34": "Lire la suite",
  "0C9E03114AEE7A40DE38": "La liste complète des options est disponible dans la [référence CLI](/genaiscript/reference/cli/commands#run).",
  "8FC32743692487B40144": "Traduit avec l'aide de l'IA. Veuillez vérifier l'exactitude du contenu.",
  "7ECD9A6551A62C1276CB": "Vous pouvez lancer le ",
  "F3CEE80F1D2ED1EA3EBE": "[cli](/genaiscript/reference/cli) en tant que ",
  "9935DC26F4B44209837A": "serveur Web API",
  "C06C2E301CAF55264867": "fastify",
  "7C1A2D2E531544AA62AF": "Scripts en tant que points de terminaison REST",
  "9232A4B0C6E341BFAFBD": "Les paramètres du point de terminaison OpenAPI sont déduits automatiquement des ",
  "838758000046D749F1D0": "paramètres du script",
  "1C94814ADB8B87665507": "qui prend un paramètre ",
  "6159A1BA439FBE829FF4": "Un script plus avancé pourrait ne pas utiliser le contexte de haut niveau et utiliser plutôt ",
  "2AD27DFB6EC1547AE50C": "Route",
  "791C9090E29A76C95CE6": "La route par défaut est ",
  "B7B974A3BECEFEF5CA67": "et la spécification OpenAPI est disponible à ",
  "763DB69F8A049C24C368": "La spécification OpenAPI sera disponible à ",
  "04C43DEF41450A310FE0": "Le serveur sera accessible à ",
  "2C61F837ACFF0A898D89": "Script de démarrage",
  "8E25F3A0D47A1DDEED3B": "Vous pouvez spécifier l’ID d’un script de démarrage en ligne de commande avec l’option ",
  "3688F8CF71AB545BC051": "Filtrage des scripts",
  "9A673CD86A464C88F462": "le paramètre ",
  "61CC4C0451EB354DEBF9": "Exécution de scripts depuis un dépôt distant",
  "C7425F361E684BEE93C7": "Vous pouvez utiliser l’option ",
  "70A64263C8B23DF3D96E": "Linting",
  "FBCCFBE546525CB3EAFE": "Vous pouvez exécuter ",
  "7F0163D147C611A4F1EF": "spectral",
  "EAA877F0B1C4BD2D28B3": "enregistrez ce fichier ",
  "2768B12E77EA330F79B6": "lancez le serveur api",
  "99F31506135F3D151AF0": "exécutez le linter spectral",
  "953ABD947C49B8F04E53": "Les bases de GenAIScript",
  "42B9EF011109CBD4B0DA": "Introduction",
  "A98BE5520525BC689642": "Termes clés",
  "6D2BDB8D81EA13EF0AE0": "GenAIScript : un programme JavaScript stylisé qui définit le contexte pour l'appel au LLM, permet l'exécution de code JavaScript arbitraire, prépare l'entrée du prompt pour le LLM, appelle le LLM et décompresse la sortie du LLM selon les instructions fournies dans le prompt.",
  "8D873EA1B54E427DBD8E": "GPVM : un système d'exécution qui, donné un GenAIScript, exécute ce GenAIScript, ce qui implique d'intégrer le contexte dans un prompt, d'appeler le LLM spécifié et d'extraire le contenu du résultat du LLM.",
  "5DA6D8B6C0B5499B1774": "Extension GenAIScript pour VS Code : un module complémentaire pour VS Code qui offre aux utilisateurs des méthodes simples pour créer, modifier, exécuter et déboguer des GenAIScripts.",
  "C21AE95A08430F8CF3AB": "Modèles fondamentaux et LLMs : bien que GenAIScript supporte actuellement différents LLMs, nous prévoyons à l'avenir d'intégrer des modèles fondamentaux supplémentaires au-delà des grands modèles de langage.",
  "68885A384D5C24CB4EA4": "Capacités",
  "283BD72CFBE051C9E01F": "Comportement du système",
  "DCBC34CF36F24F9C5DDE": "Documentation",
  "4EA5AB2E9538A5B6B12A": "Cas d'utilisation",
  "A486B2AFDBAC912495A2": "Utilisations prévues",
  "503B6AC40059750FBBA8": "Utilisations non prévues",
  "5AC9A83B8C775594CA3D": "sécurité et confiance",
  "A9EFD3D2D86B6EA2F569": "Meilleures pratiques pour les modèles fondamentaux",
  "E8593D47B9EF13C617C7": "Article de blog sur les fonctionnalités d'IA responsable dans AOAI présentées à Ignite 2023",
  "96F58BC8E4261F8DB360": "Note de transparence pour Azure OpenAI Service",
  "EC14D4CFBC838B92D02C": "Nous recommandons de consulter la ",
  "16516381C9161F1F498B": "Sécurité du contenu",
  "3A4EE7952E2B440D6BD4": "Limites",
  "DEEA3540C6A88F44DF5A": "Meilleures pratiques pour améliorer les performances du système",
  "EBD3F05BED12CF52B28E": "En savoir plus sur l'IA responsable",
  "797B63377F7F602BBDCB": "Principes d'IA Microsoft",
  "B9A49FBC08C5FBAEF9AB": "Ressources Microsoft sur l'IA responsable",
  "D572AC75DFE998F624E1": "Cours Microsoft Azure Learning sur l'IA responsable",
  "8CE6101D9CFD85DF5A21": "En savoir plus sur GenAIScript",
  "BDE8A9611244079FC5B7": "Contactez-nous",
  "F3F5CF701957ED029832": "À propos de ce document",
  "5A293B3963CE8E5FF331": "Le ",
  "794197079496360D005D": "Playground",
  "23729EB7E4A6EDA8CB47": "Lancement",
  "2ED347C0A56FE0A68AC6": "Dépôt distant",
  "8C920DFCED0B034CA363": "Vous pouvez exécuter l’aire de jeu sur un dépôt distant en utilisant vos secrets `.env` actuels. ",
  "E8135E41F9F0BC4BDEAD": "Installation locale",
  "FF894959A0E4F48ADEF0": "puis lancez",
  "CC65A32D5FE148C3A3C8": "Scripts",
  "02BCC7503B8B29CBA78C": "Interface en ligne de commande (CLI)",
  "4C243EBBB6BD60705E25": "Extension Visual Studio Code",
  "55E2DEB357F86092A224": "GitHub Actions",
  "569FED170B4DEA2440D9": "Récemment",
  "4775595F588067D0799A": "Modèles GitHub",
  "A058D33116404B752922": "Passez à la section ",
  "7EBDA39F1CB182AD7F42": "Actions personnalisées",
  "0A698D890FBFF7E5593C": "Exemples",
  "E78FEA0793E5FDD8F08F": "Étiqueteur de problèmes GenAI",
  "60DF4B4D82983CC6F467": "Dé-duplication de problèmes GenAI",
  "C76A45B7956B5E0D2175": "Analyseur de problèmes vidéo GenAI",
  "E3DF24E3FFB66880F5AB": "Commentateur de code GenAI",
  "116C054A17AE32A159DC": "Autorisations des Modèles GitHub",
  "5EB58F6080282A250482": "Pour utiliser les Modèles dans une GitHub Action",
  "838EDFB2E1DCDD3E6A9E": "pour l'action d'inclure ",
  "2D3B27B61F365108BEFF": "Utilisation de l'interface en ligne de commande (CLI)",
  "343DAD29C13C7C449749": "La façon la plus simple d'utiliser GenAIScript dans une GitHub Action est d'exécuter directement la ",
  "D16F877E807F11102F4D": "Veillez à inclure le ",
  "DE745B56619EDC279205": "dans les variables d'environnement",
  "A0C7878EE6EF4391B7F1": "GitHub prend en charge le conditionnement des tâches sous forme ",
  "D784689AE5C65D70681F": "actions personnalisées",
  "C0740A215AB4BD5A760C": "La CLI GenAIScript fournit une commande pour générer/mettre à jour le code standard afin de conditionner un script comme une ",
  "266785D44B4106FA51EA": "action conteneur Docker",
  "565702378D9D507FA1CA": "Fichier de métadonnées de l'action",
  "F9E8E57D254AB2F9088E": "Dockerfile pour l'action",
  "53CE32962274982BC966": "Documentation pour l'action",
  "46E7B9ADADA0C5BB35B9": "Fichiers à ignorer dans le dépôt",
  "FC17DF84A28005BF0237": "Workflow CI pour tester l'action",
  "382885A4461855D5B3B9": "Configuration du package pour l'action",
  "3BD6CEA089CA722107E7": "Configuration du conteneur de développement pour VS Code",
  "4C1455A99DEE21C99B11": "Métadonnées",
  "46477E8B6A221B4D463D": "est dérivée du ",
  "B7F415900D2B0FA0B3B9": "sont dérivées des ",
  "2F04C37F811CEBF84767": "paramètres",
  "82881EE355DB055B5ABA": "Notez que le ",
  "DD7AD1812D74B0B43529": "est utilisé pour remplir le fichier ",
  "33B1534EF284B26D2FF0": "Entrées",
  "6462737D8B2F97D1587D": "section du fichier ",
  "437BB2E9390B848AB831": "Le fichier généré ",
  "D288404BDD373C2B99F2": "Il deviendra ",
  "281B57BD1B759BC2CB7F": "journalisation",
  "54916BAB7747534EF52B": "Sorties",
  "F9026253955B8F710628": "schéma de réponse",
  "7B53AAA06B3760E6449A": "Personnalisation visuelle",
  "58ABEEB8DA95D4408EF1": " ",
  "C4A2CEB267DF8936C3D5": "champ est utilisé pour ",
  "D1219210286745EEBD80": "personnaliser l'apparence de l'action dans l'interface GitHub",
  "5E1D79D49FBD2DF92EAC": "Conteneurs",
  "B94B4739525C5F147DD1": "node",
  "1EA660B74ABF0606E976": "GenAIScript crée également un ",
  "F4EC93D140C78955DABA": "container de développement",
  "BE9FDDA30C16AB51DC7C": "Vous pouvez également ajouter tous les autres paquets dont vous avez besoin en les spécifiant dans la commande ",
  "FEC13ADD4B2DBEC54991": "Test de l'action",
  "9B1EFA5E93B6E21FB7CE": "Votre script doit pouvoir être testé localement avec la commande ",
  "8436E72C82B77A8C1718": "Espace de travail GitHub vs espace de travail de l'action",
  "625261BB55FF94953E7E": "ENTRYPOINT est configuré pour lancer le ",
  "12F5C5EC9CCE044BF034": "cli dans le répertoire ",
  "5A408B231F246C529276": "puis il détecte la variable d'environnement ",
  "3D726D52AA3DF9C4D0F6": "et change le répertoire de travail courant (cwd) en celui-ci. ",
  "98CF0BEEA78769016641": "Ce mode est activé par l'option ",
  "3F78F7C5C51F23BD6D8C": "dans la commande ",
  "684613567CDA886E453C": "variable d'environnement",
  "176B84D0C32FBBAF3B54": "options en ligne de commande",
  "F09D923966146576C1FF": "Résolution des fichiers de configuration",
  "5F79127839DBE359ED42": "Les fichiers JSON prennent en charge le format ",
  "EC29688425AD7BB1195D": "JSON5",
  "CCADDCA0F32C0855D817": "Schéma",
  "826D923FFA41441F0C19": "Le schéma de configuration se trouve à ",
  "3DD0A283622E11B971BF": "propriété",
  "CAFA29E9030D289240E3": "L'emplacement final de `envFile` sera utilisé pour charger le secret dans les variables d'environnement. Il prend en charge un seul ",
  "DAACB865F94D43E69A17": "Débogage",
  "7BB5853B5F3280136BB8": "Activez la catégorie de débogage `config` pour voir des informations supplémentaires sur la résolution de la configuration. ",
  "C5A49F063DCA2ACD99BE": "GenAIScript prend en charge nativement plusieurs services de la ",
  "D0D94D7CFC47DEC00A50": "Azure AI Foundry",
  "E60CD89D67A7CCB4B47B": "Authentification",
  "5D64D1947C8E21D46D96": "Services Azure OpenAI et IA",
  "D626E9F143ED1038171D": "Azure OpenAI",
  "394ECC451E429565F1C0": "Inférence Azure AI",
  "CD3D36C02D4225DDBF4F": "Azure OpenAI Serverless",
  "35C3D6440481E1DBCD1B": "Modèles Azure AI Serverless",
  "6D1E2F1205936FF06AF4": "Recherche Azure AI",
  "E66EC50E586AF80198C3": "Recherche vectorielle",
  "32375E7E0618D2EED82F": "Configuration",
  "D941CEAD111C9BD8257F": "Sécurité du contenu Azure",
  "282D04A709642219E37B": "Les paramètres suivants sont accessibles via la commande **Préférences : Ouvrir les paramètres utilisateur**. ",
  "0C977826F00F558E9405": "npx",
  "94C83161FE739244FDC5": "Chemin",
  "F4FCA33C4AA5C7B33AB7": "Version",
  "019FF710906DB12E0464": "Masquer le terminal du serveur",
  "988D1552D5FF3BDA37B3": "Diagnostics",
  "D70048654BBF1F5B0099": "Exécution directe des scripts",
  "EC8DBC72C1ACD4B9A8F9": "ouvrez un fichier GenAIScript dans l'éditeur",
  "C29FC6C90905A49503FA": "cliquez avec le bouton droit dans l'éditeur et sélectionnez ",
  "B53AC76C38A891616396": "Exécuter GenAIScript*",
  "60F2ACD63522397B8F72": "dans le menu contextuel",
  "D00256A4514A7E9B772C": "ou cliquez sur ",
  "53C045E273D632BCC488": "Exécuter GenAIScript",
  "FA892083CAC07DBE9BEF": "l'icône en haut à droite de l'éditeur",
  "0F27C60822625FB8641E": "Cela démarrera l'exécution du script et utilisera les fichiers d'entrée par défaut spécifiés dans le champ `files` du `script`. ",
  "48013A7A6C9434A7E3A2": "Exécution des scripts à partir de fichiers ou dossiers d'entrée",
  "06E0CD7FA535619323BF": "ou la touche ",
  "9C37410AD48226C68C35": "cliquez avec le bouton droit et sélectionnez ",
  "248836A5A70A0582A2F5": "dans le menu contextuel",
  "7C5295D58833874499C8": "Depuis un éditeur",
  "5AED4AB869304B6F6A8F": "Utilisation du texte sélectionné dans votre script",
  "D72960B710062419E763": "GenAIScript tente de respecter les ",
  "8042B833A97C7C002436": "règles `.gitignore` au niveau supérieur ",
  "32D8BAD77D9A75F07BB1": "dans l'espace de travail du projet",
  "4C99B002D1F2D147DA05": "si vous lancez ",
  "1CD6E0AEB6A133BD114D": "si vous spécifiez ",
  "56C0F78F8ABA0D7F12FE": "GenAIScript est pris en charge par une extension [Visual Studio Code](https://code.visualstudio.com/)\nqui offre un ensemble complet de fonctionnalités pour créer, déboguer et déployer des GenAIScripts. ",
  "92029746FC8A092BA0FE": "Visual Studio Code",
  "B6D2331E8C90CCFD8707": "Marketplace Visual Studio Code",
  "4CF795D479524DB02691": "contient la dernière version stable de l’extension ",
  "1002B423115396D67E59": "extension",
  "75B7B8478EC6199269E1": "Télécharger",
  "C4CF936A971E24226105": "Instructions d'installation",
  "217E22974103FF8360BF": "Exécution des scripts",
  "6C476CC29ECE945B5D13": "Intégration de Copilot Chat",
  "23D57303FE693ABA54D7": "Paramètres",
  "CE764949F7C77EF4A3E8": "GenAIScript s'intègre avec ",
  "B61E4FA0C489804D2494": "en fournissant un ** ",
  "AAC4DCE0E186D83BA613": "participant de chat",
  "D02698878FCE79950833": "invite personnalisée",
  "B10115E1648E67A5AA2D": "Fonctionnalités",
  "E8F8904C6BA197D8B1D0": "participant de chat `@genaiscript`",
  "D5B60B8CD01A0C93D82B": "de conversation [GitHub Copilot Chat](https://marketplace.visualstudio.com/items?itemName=GitHub.copilot-chat).\nCela est utile pour exploiter des scripts existants dans une session de chat interactive. ",
  "7593EACCC101E1E23C5B": "Choix du script à exécuter",
  "17D1AC35683C4E791B93": "Si vous omettez la commande `/run`, GenAIScript recherchera un script nommé `copilotchat`.\nS'il en trouve un, il l'exécutera. Sinon, il vous demandera de choisir un script parmi la liste des scripts disponibles. ",
  "51F198C132D33668EB3B": "Choix du modèle",
  "BEC954531DE4917D8A53": "Ils ne fonctionneront pas à partir des interfaces ",
  "53AD4C35D488A4C04F2C": "cli",
  "3547FF869D4386095C91": "playground",
  "49A0FD880D26304574A1": "Disponibilité des modèles",
  "66A9772DDB46E656CB6B": "Contexte",
  "39259F1EE7F4BF90E409": "le contenu de l'invite est transmis dans `env.vars.question`. L'identifiant du script est supprimé dans le cas de `/run`. ",
  "B0CDBECADB952076312B": "le texte de l'éditeur courant est passé dans `env.vars[\"copilot.editor\"]` ",
  "ABDCC565CC4599466C90": "la sélection courante de l'éditeur est passée dans `env.vars[\"copilot.selection\"]` ",
  "DC09AF68FDDEC94D92F6": "toutes les autres références de fichiers sont transmises dans `env.files` ",
  "3EC4B07A611979082D41": "Exemples",
  "C828669BF4C131961190": "Historique",
  "43A056465B7A44F454FE": "L'historique des messages est transmis dans `env.vars[\"copilot.history\"]`. Il s'agit d'un tableau de `HistoryMessageUser | HistoryMessageAssistant` : ",
  "8D69427283A1E69503F9": "Conversation continue",
  "1E8D05E81058821B0CC7": "exécutera le script `tool` et placera les résultats dans l'historique du chat. ",
  "2B0B3F5652F484EF3C78": "Script par défaut ",
  "D65AB787DC4E96627AA2": "Le script suivant peut être utilisé comme modèle de départ pour créer le script par défaut lorsque l'utilisateur n'utilise pas la commande `/run`. ",
  "D9D9638637997C2CFF89": "Fonctionnalités non prises en charge",
  "C77E2572582A20CAC5AF": "référence",
  "4F1B637AE09A8B256203": "instructions personnalisées ",
  "EBA1A56FF89F6BC98910": "Sessions de chat augmentées",
  "1FAC0A4C5B269CE56C09": "Voici comment démarrer des sessions de chat en utilisant l'invite `genaiscript`. ",
  "787621A56FC279BBB914": "Sélectionnez l'icône ** ",
  "92502947D0445CF6A101": "Joindre le contexte",
  "67B4C6E6D8A9C4EBBE6A": "[GitHub Gists]",
  "6D4D9B9602C95682C3FD": "Exécution de GenAIScript à partir de Gists",
  "90868356AEB990B92462": "Le fichier gist est mis en cache localement dans ",
  "09D1FA892D72C7DA1A66": "GistPad dans Visual Studio Code",
  "938AEC74E9EB373C218D": "extension GistPad",
  "2DAE0ABF46A00CB0C7D6": "Vous pouvez ouvrir un fichier dans un Gist et l’exécuter en utilisant la commande ",
  "F82B236BB0451EFAB94B": "Vérification des types",
  "BE35A2D579C8A1C0E4DB": "au gist et configurer une référence vers celui-ci ",
  "AA56548F8859E2BA4F6B": "en haut du fichier",
  "AB69976B993D57247F3C": "clic droit sur le fichier GenAIScript du Gist",
  "B0D578A1EAA50CF87F97": "sélectionnez ",
  "F99C49C817D66056FFF2": "ouvrez le fichier ",
  "0065594B5E2E5B8EBC46": "ouvrez votre fichier GenAIScript dans l’arborescence GistPad et la vérification des types devrait fonctionner !",
  "A7CC67F9BF888B64D31C": "les imports ne se résoudront probablement pas",
  "C372CC48E840F875B823": "Certains des [esc capabilities de traitement vidéo](/genaiscript/reference/scripts/videos) sont également disponibles dans le cli. ",
  "CECD4664FA6299B8CD71": "```sh\ngenaiscript video probe myvid.mp4",
  "2BB0261BC46DB82B1634": "Exécute les tests dans les scripts en utilisant ",
  "8D39DB57BFA8E0F7ABB3": "promptfoo",
  "B8D0EE3951B874598C22": "Vous pouvez spécifier les modèles à utiliser pour les tests avec l’option ",
  "B669D9EEBBA0474AABF3": "Cette fonctionnalité nécessite d’ajouter ",
  "080B273416130AC4D073": "à vos dépendances dans le fichier `package.json`. ",
  "7EAECAD5EA37A77CDACE": "visionneuse de résultats",
  "5836ACD0F77032990E60": "Exécutez la commande ",
  "7FCC54AD2DFDB89567DF": "Nous discutons des divers risques de sécurité et des mesures d'atténuation possibles lors de l'utilisation de GenAIScript. GenAIScript hérite des mêmes risques de sécurité que l'exécution de scripts, et ajoute de nouvelles menaces en raison de la nature des sorties générées par le LLM.",
  "057F7A9EF2F0916F3264": "Nous recommandons également la lecture de la [Note de Transparence](/genaiscript/reference/transparency-note/) pour comprendre les capacités et les limites de GenAIScript.",
  "90837B5468CCE76CF1EA": "Ne faites pas confiance aux scripts",
  "4F47D9A8A49A214DBC62": "Puisque les fichiers GenAIScript `.genai.mjs` sont des fichiers JavaScript exécutables et utilisent en fait un environnement d'exécution JavaScript (VSCode ou Node), il est important de comprendre que le script peut faire tout ce que JavaScript peut faire. Cela inclut la lecture et l’écriture de fichiers, l'envoi de requêtes réseau, et l'exécution de code JavaScript arbitraire.",
  "240B1F3318297C711B58": "Ne lancez pas de scripts `.genai.mjs` provenant de sources non fiables.",
  "CED0EB25A91AB6F08D7F": "Ne faites pas confiance aux sorties du LLM",
  "A77216C12581B50E20FB": "Un script apparemment fiable pourrait utiliser des fichiers malveillants du contexte pour générer une sortie malveillante. Par exemple, en écrasant des fichiers du projet avec un nouveau code malveillant.",
  "017C879DA528DF2C9478": "dans Visual Studio Code, utilisez l’aperçu de refactorisation",
  "3548490CEA8E53D6FA2B": "dans votre CI/CD, créez une pull request avec les modifications et révisez-les",
  "C84498E4BC87EECF53F9": "Confiance dans l’espace de travail de Visual Studio Code",
  "2A22D0245691D1DDE219": "L’extension est **désactivée** lors de l’ouverture d’un dossier en [Mode Restreint](https://code.visualstudio.com/docs/editor/workspace-trust) dans Visual Studio Code.",
  "834013932A226DD62609": "Aperçu Markdown dans Visual Studio Code",
  "3BE30A318C24083A7BD2": "La sortie du LLM et la trace utilisent l’aperçu Markdown intégré de Visual Studio Code. Par défaut, [VS Code restreint le contenu affiché dans l’aperçu Markdown](https://code.visualstudio.com/Docs/languages/markdown#_markdown-preview-security). Cela inclut la désactivation de l’exécution de scripts et l’autorisation uniquement des ressources chargées via `https`.",
  "58194F9CEB8ECC1A9C89": "Traduction réalisée avec l’IA. Veuillez vérifier le contenu pour sa précision.",
  "F9EFE5BD41FC7714405E": "Actions personnalisées <a id=\"custom-actions\" />",
  "10459AF6A4D5808C65B0": "GitHub prend en charge l'empaquetage des tâches sous forme d’[actions personnalisées](https://docs.github.com/en/actions/sharing-automations/creating-actions/about-custom-actions), généralement dans un dépôt dédié. C’est une excellente manière d’empaqueter un script IA et de le partager avec d’autres.",
  "96E799C1581390C83D79": "L’interface en ligne de commande GenAIScript fournit une commande pour générer/mettre à jour le code standard afin d’empaqueter un script en tant qu’[action conteneur Docker](https://docs.github.com/en/actions/sharing-automations/creating-actions/creating-a-docker-container-action) afin qu’il puisse être utilisé dans GitHub Actions, quel que soit le langage utilisé pour écrire le script.",
  "7B8F8274F4F3D14F06C4": "Pour commencer,",
  "68D3758F312A71CFB8FD": "Créez un nouveau dépôt pour votre action.",
  "1EA788B7E9F9BAD4780C": "Ouvrez un terminal à la racine de votre dépôt.",
  "76A6B70BF57E28CB0892": "Exécutez la commande pour générer la structure de base de l’action :",
  "3116D01EB99EF9FDBFC4": "Le générateur de structure d’action écrasera les fichiers suivants :",
  "C8DF5F53D6FB22ED7858": "`action.yml` Fichier de métadonnées de l’action",
  "2A6F8933A01A75A01550": "`Dockerfile` Dockerfile pour l’action",
  "781941E983CEA859F6AE": "`README.md` Documentation de l’action",
  "EBDA5072389D0B6276C8": "`.gitignore` Fichiers à ignorer dans le dépôt",
  "3D7C137027301B0D38EE": "`.github/workflows/ci.yml` Workflow CI pour tester l’action",
  "419371DE61B3A4427F2F": "`package.json` Configuration du package pour l’action",
  "ADDC59ACA5BE58022CE1": "`devcontainer/devcontainer.json` Configuration du devcontainer pour VS Code",
  "E68F21B4DB4158146EC4": "`devcontainer/Dockerfile` Dockerfile du devcontainer pour VS Code. Doit être synchronisé avec le Dockerfile de l’action.",
  "A6350897FE0CB361E6D9": "Pour mettre à jour la structure de l’action, vous pouvez relancer la même commande :",
  "D0BC5A042356560AFA33": "Métadonnées",
  "CC00F5704A25B8A671C6": "Le fichier `action.yml` contient les métadonnées de l’action. Elles sont extraites de différentes parties de votre projet :",
  "F7ED336B1F94E3166308": "Le `name` est dérivé de l’identifiant du script.",
  "FA557AD5C04D6A0790AA": "La `description` est dérivée du `title` du script.",
  "5C2C87382FA68FE009D3": "Les `inputs` sont dérivés des [paramètres](/genaiscript/reference/scripts/parameters) du script (voir ci-dessous).",
  "B0E79BD8203D1B4D525D": "Notez que la `script.description` est utilisée pour compléter le fichier `README.md`.",
  "04AC4A180F198D3AF371": "Paramètres (Inputs)",
  "21F9C98A874E6153CFB1": "La section `inputs` du fichier `action.yml` est générée automatiquement à partir des paramètres du script. Chaque paramètre est converti en un input avec le même nom, et le type est inféré à partir du type du paramètre.",
  "B91FCBE33039CA52CED0": "Le fichier `action.yml` généré ressemblera à ceci :",
  "DBBD3C276B80BFEA68C5": "Il y a aussi des champs supplémentaires qui sont communs à toutes les actions GenAIScript :",
  "8DAC8D9134E53AA2A6E6": "`files` : Spécifie un chemin de fichier pour remplir la variable `env.files`. Pour enlever ce champ, définissez `accept : \"none\"` dans le script.",
  "2436434175473891BA9A": "`github_token` : **Cela est requis pour s’authentifier auprès de GitHub Models.** Il deviendra `INPUT_GITHUB_TOKEN` lorsque le conteneur sera créé et GenAIScript le prendra automatiquement en compte.",
  "FEF3C164F2B660F64759": "`github_issue` : Le numéro de l’issue ou pull request GitHub en cours.",
  "49B7EA9D21A628261A49": "`debug` : Le filtre pour contrôler les messages de [journalisation](/genaiscript/reference/scripts/logging) en mode debug.",
  "9477D0E7159F68221D70": "Sorties (Outputs)",
  "C43D7FB80815A78F2974": "L’action fournie quelques champs de sortie.",
  "66229E4CEC064F7C5EA7": "`text` : il s’agit du texte généré par le script.",
  "69EB5729357F6210E7A1": "`data` : il s’agit de la sortie structurée analysée et convertie en JSON. Ce champ est rempli si vous fournissez un [responseSchema](/genaiscript/reference/scripts/schemas) dans le script et si le LLM est capable de générer une réponse conforme au schéma.",
  "33CCCC46563856D77525": "Branding",
  "57BE97F53F256DE05FEF": "Le champ `branding` du `script` est utilisé pour [personnaliser l’apparence de l’action dans l’interface GitHub](https://docs.github.com/en/actions/sharing-automations/creating-actions/metadata-syntax-for-github-actions?versionId=free-pro-team%40latest\\&productId=actions\\&restPage=sharing-automations%2Ccreating-actions%2Creleasing-and-maintaining-actions#branding).",
  "7BF93980D08D0C63E6BD": "Conteneurs",
  "7F1F3466DFB0199606E8": "Par défaut, GenAIScript utilise [node:lts-alpine](https://hub.docker.com/_/node/) comme image de base pour le conteneur de l’action. Vous pouvez changer cela en spécifiant une image de base différente dans la `cli`.",
  "FDC48EC54899B2DBBBCC": "GenAIScript crée également un [devcontainer](https://code.visualstudio.com/docs/devcontainers/create-dev-container) afin que vous puissiez développer l’action dans un environnement conteneurisé (presque le même) que celui dans lequel elle s’exécute dans GitHub Action.",
  "6EFC12D2016D768EEED4": "ffmpeg, playwright et autres packages",
  "BB5DDF077788F1089803": "Pour garder le conteneur de l’action léger, GenAIScript n’inclut pas par défaut `ffmpeg`, `playwright` ou d’autres packages. Vous pouvez les ajouter au conteneur en les spécifiant dans la commande `cli`.",
  "8CE9E19A5FCB2D02E2DF": "Vous pouvez également ajouter tous les autres packages dont vous avez besoin en les spécifiant dans la commande `cli`.",
  "558BE51B669795B6B435": "Tester l’Action",
  "6297ED93006507239A07": "Votre script devrait pouvoir être testé localement en utilisant la commande `npm run dev`. N’hésitez pas à l’éditer dans `package.json`.",
  "6206790F358BFCC922E5": "Ou si vous souhaitez simuler l’environnement GitHub Action, vous pouvez définir les variables `INPUT_<paramètre>` dans l’environnement.",
  "E88E9E8D7FB3D3DB1142": "Espace de travail GitHub vs Espace de travail Action",
  "CCAF13BC37DD9D7B2353": "Lors de l’exécution de l’action dans un conteneur, le contenu du dépôt de l’action est d’abord copié dans le répertoire `/github/action`. GitHub clone le dépôt dans le répertoire `/github/workspace`.",
  "D77CED733E96B385B223": "Le `ENTRYPOINT` du `Dockerfile` est configuré pour lancer le cli `genaiscript` dans le répertoire `/github/action` puis il détecte la variable d’environnement `GITHUB_WORKSPACE` pour déterminer le répertoire de travail et y change le répertoire courant (`cwd`).",
  "BF6D898DC4323F24A6D4": "Ce mode est activé par le flag `--github-workspace` dans la commande `cli`.",
  "5BA7C353271E11767233": "Traduit à l’aide de l’IA. Veuillez vérifier la précision du contenu.",
  "508D1806BB621152A0D5": "GitHub Copilot Chat",
  "494431F06363E131AB80": "participant de chat",
  "41BC2152F13957DB1A26": "Choix du script à exécuter",
  "5954B9034F95E3B9CAC4": "Choix du modèle",
  "2E53C5BC8EB590E38879": "Renvoie le résultat de `ffprobe` dans la console. ",
  "77441F12424634593033": "Traduit avec l'aide de l'IA. Veuillez vérifier l'exactitude du contenu.",
  "0FB25F9265D93347A272": "où ",
  "D3CDBE3CA4DF7AB0D7EE": "Les fichiers peuvent également inclure des motifs ",
  "FDD0CD324CC571303E9A": "Fichiers",
  "6AD15DB2183C59105DE8": "prend un ou plusieurs ",
  "2146C3C031E94514B9C5": "glob",
  "AD7766C406C3F62DDA5B": "Résolutions des ressources",
  "51014274D733B44C77EA": "- fichier local",
  "684FA6EB030C43C7DB50": "- fichier GitHub",
  "B64A8CD2CB46CF81E6CF": "- dépôt GitHub et motif de fichiers",
  "AC4BAF7860402A219AD3": "- Gist GitHub et motif de fichiers",
  "25B5C2E48C3310578FFB": "- dépôt Git et motif de fichiers",
  "E5CDF9BAEBACF999584A": "Redirection",
  "33008BBB80FCDA33C85A": "prend le contenu de l'entrée standard et le convertit en fichier ",
  "59DFFCB59F83882EC89E": "--exclude-git-ignore",
  "870E1E8708031D746B67": "Exclut les fichiers ignorés par le fichier `.gitignore` à la racine de l’espace de travail. ",
  "FAD368079AD6D2787456": "Configure l’alias du modèle par défaut ou `large`. Utilisez `echo` pour effectuer une simulation et retourner les messages au lieu d’appeler un fournisseur de LLM. ",
  "9A047719594011C7DDEA": "Remplit les valeurs dans la carte `env.vars` pouvant être utilisées lors de l’exécution du prompt. ",
  "539686950F6BA26C929E": "Sortie",
  "B9EF9C32BDE651D6653B": "Si ",
  "A8DF3A21231B74AD6611": "ne se termine pas par ",
  "961F863F344BBB9432DB": "--json",
  "8B3EA8162043A4AD10E9": "--yaml",
  "D27FDC18F28EA08C1981": "SARIF",
  "D3C991918895D2C44D44": "ou un fichier CSV si le fichier se termine par `.csv`. ",
  "730B9CE45CABFDDBE0EB": "Émet les données analysées au format JSON, YAML ou JSONL. Si un schéma JSON est spécifié et disponible, le résultat de validation JSON est également stocké.",
  "DED5F8053DF86242F3A5": "--out-changelogs <file>",
  "3BC968F4E05BAD3A4E20": "Émet les journaux des modifications dans le fichier spécifié au format texte.",
  "0E910905B53C58968A8C": "Pull Requests et Issues <a href=\"\" id=\"pull-requests\" />",
  "78889B736C750E8E75F6": "L’interface CLI peut mettre à jour la description d’une pull request/issue et ses commentaires lorsqu’elle est exécutée dans un workflow GitHub Action ou Azure DevOps.",
  "418FA456B493D97767B0": "Configuration du workflow GitHub Action",
  "813233C759C16E9EEF5B": "Mettez à jour la configuration de votre workflow pour inclure ce qui suit :",
  "68DAD058D1B9FBBB0C5C": "ajoutez la permission `pull-requests: write` au workflow/étape",
  "356859E892F81753CC23": "définissez le secret `GITHUB_TOKEN` dans `env` lors de l’exécution du CLI",
  "E3CE1099EED4B521AFD4": "Configuration Azure DevOps",
  "C8346E010DBCD41147F7": "ajoutez `<nom_de_votre_projet> Build Service` avec le rôle **Collaborateur** au dépôt",
  "038115D8BC4297D8DF2D": "passez les secrets aux scripts, y compris `System.AccessToken`",
  "3296FE23E730302A8D63": "--pull-request-description [tag]",
  "8E0A5D0791528B0B9287": "Lorsqu’il est exécuté dans un workflow GitHub Action ou Azure DevOps sur une pull request, le CLI insère la sortie LLM dans la description de la pull request ([exemple](https://github.com/microsoft/genaiscript/pull/564))",
  "0E6E48C888E08D1CE162": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par différentes exécutions. Par défaut, c’est l’identifiant du script.",
  "EB864F52D3972040A68C": "--pull-request-comment [tag];",
  "DA39626859EECCFDBF81": "Met à jour ou insère un commentaire sur la pull request/issue avec la sortie LLM ([exemple](https://github.com/microsoft/genaiscript/pull/564#issuecomment-2200474305))",
  "E99071A55B260A9C4100": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par différentes exécutions. Par défaut, c’est l’identifiant du script.",
  "DEC8163CEF0CD0FCDC28": "--pull-request-reviews",
  "6F6C44542F2CE484B5C0": "Crée des commentaires de revue de pull request à partir de chaque annotation ([annotations](/genaiscript/reference/scripts/annotations)) ([exemple](https://github.com/microsoft/genaiscript/pull/564#pullrequestreview-2151692644)).",
  "918C428A123AF67FB53A": "En savoir plus",
  "C653C7A680C7DB699BC4": "La liste complète des options est disponible dans la [référence CLI](/genaiscript/reference/cli/commands#run).",
  "2CDE10782A65E1C72BB6": "Traduit avec IA. Veuillez vérifier l’exactitude du contenu.",
  "12ADDB156FA9D9DB7E92": "Demandes de tirage et problèmes ",
  "4ADBA7165782D632E239": "Configuration du workflow GitHub Action",
  "3B69311C7245C562A37F": "ajoutez la ",
  "ED0E04A8FDE27F20CE23": "permission `pull-requests: write` au workflow/étape",
  "573E5655F3B1356209DF": "définissez le secret ",
  "5796B5CCC3F33E183BAF": "`GITHUB_TOKEN` dans l'`env` ",
  "FB610C325BD73DE747C5": "lors de l'exécution du CLI",
  "95E7AD38B95BC7E9E39B": "Configuration Azure DevOps",
  "1851F6C625E0DE85F85E": "ajoutez ",
  "EE395454C72571941A57": "`<nomdevotreprojet> Build Service` ",
  "E8587A1F3D2405BA6358": "**Collaborateur**",
  "DEA7EC654B1D62C6B7A6": "en tant que rôle au dépôt",
  "CDB10C2B2E180C0D522B": "exemple",
  "F8FBAB0DFCBA61D0F199": "--pull-request-reviews",
  "785EBB5750A64F740522": "Créez des commentaires de revue de demande de tirage à partir de chaque ",
  "82B5A205FAC6FC150187": "annotations",
  "A1EF954066F9DC40C459": "En savoir plus",
  "9233AC6C66CD621AA373": "La liste complète des options est disponible dans la ",
  "78AA209CB8918B3753F1": "référence CLI",
  "F8CCA17564F029E3540A": "`--excluded-files` <fichiers...>",
  "EFD699E6CCC5441B3B08": "Exclut les fichiers spécifiés de l'ensemble des fichiers.",
  "CAB4AC0118398EA28638": "`--exclude-git-ignore`",
  "6CAB3167B1C8DE0BCD35": "Exclut les fichiers ignorés par le fichier `.gitignore` à la racine de l’espace de travail.",
  "8ED69E1095573BC3C570": "Configuration",
  "BA175A3DA07E726677E4": "`--model` ...",
  "E9E8750346272BFC3473": "Configure l’alias du modèle par défaut ou `large`. Utilisez `echo` pour effectuer un test sans appel à un fournisseur de LLM et retourner les messages.",
  "EE09E042C51E60628219": "`--provider` ...",
  "42C947A51B1CFF82C20D": "Charge un ensemble d’alias de modèles pour le fournisseur de LLM donné.",
  "541E058B9AC13FF1C31F": "`--vars` name=value name2=value2 ...",
  "439A3D225438C24524C5": "Remplit les valeurs dans la carte `env.vars` qui peuvent être utilisées lors de l’exécution du prompt.",
  "35B42F7D59F1A9B2182D": "Sortie",
  "62A54518E8E2A6593CAC": "`--out` <fichier|répertoire>",
  "E5047FE5086DF29928DE": "Enregistre les résultats dans un fichier JSON, ainsi que les fichiers markdown de la sortie et de la trace.",
  "BF395D3EF71FB4156016": "Si `fichier` ne se termine pas par `.json`, le chemin est traité comme un chemin de répertoire.",
  "90DEA867AFA58CA2BD75": "`--json`",
  "29B5C85FDD478A0BE6B6": "Affiche toute la réponse au format JSON vers la sortie standard.",
  "234966C6DFDB66B4B643": "`--out-trace` <fichier>",
  "6048C347A526298CC907": "Enregistre la trace en markdown dans le fichier spécifié.",
  "940A0A69138BA52A0257": "Dans un flux de travail GitHub Actions, vous pouvez utiliser cette fonctionnalité pour enregistrer la trace en résumé d’étape (`GITHUB_STEP_SUMMARY`) :",
  "06DE0DBF7450BB86CD03": "Dans Azure DevOps, vous pouvez utiliser la commande [task.uploadSummary](https://learn.microsoft.com/en-us/azure/devops/pipelines/scripts/logging-commands?view=azure-devops&tabs=bash#uploadsummary-add-some-markdown-content-to-the-build-summary) dans votre pipeline pour télécharger la trace en tant que résumé.",
  "02C0F483AD91FB16C982": "`--out-annotations` <fichier>",
  "E1BD0ED6A2B922EF7BD4": "Émet des annotations dans le fichier spécifié sous forme de tableau JSON, JSON Lines, [SARIF](https://sarifweb.azurewebsites.net/) ou fichier CSV si le fichier se termine par `.csv`.",
  "47FD836DAF560B26ED22": "Utilisez JSON Lines (`.jsonl`) pour agréger les annotations de plusieurs exécutions dans un seul fichier.",
  "BB03528635092A10553D": "`--out-data` <fichier>",
  "859CDC7FDED847651275": "Émet les données analysées au format JSON, YAML ou JSONL. Si un schéma JSON est spécifié et disponible, le résultat de la validation JSON est également enregistré.",
  "B42D5AAF0B98F3FB680F": "`--out-changelogs` <fichier>",
  "C38F0CAF2ED11CDB200F": "Émet les journaux de modifications dans le fichier spécifié sous forme de texte.",
  "7B88C7804C0206CEAC0C": "Pull Requests et Issues <a href=\"\" id=\"pull-requests\" />",
  "734860CF2663844996B7": "La CLI peut mettre à jour la description d’une pull request ou issue ainsi que les commentaires lors de l’exécution dans un pipeline GitHub Action ou Azure DevOps.",
  "00CBD16A8430BB62DE05": "Configuration du workflow GitHub Action",
  "35DB473C37B8D03B6547": "Mettez à jour votre configuration de workflow pour inclure ce qui suit :",
  "BE0B01EA94F2B21B5DDF": "ajoutez la permission `pull-requests: write` au workflow/étape",
  "30C1F23ECDA5BD8FDD85": "définissez le secret `GITHUB_TOKEN` dans `env` lors de l’exécution de la CLI",
  "4116B5895D9059A9FEC9": "Configuration Azure DevOps",
  "0856C68CC18CCC00159C": "ajoutez `<votre nom de projet> Build Service` au rôle **Collaborateur** du dépôt",
  "15E89FCE5699DF11A88E": "passez les secrets aux scripts, y compris `System.AccessToken`",
  "BFAFB8F3EAB7629C668A": "`--pull-request-description` [tag]",
  "68F22292548E68AF2C0D": "Lorsqu’il est exécuté dans un pipeline GitHub Action ou Azure DevOps sur une pull request, la CLI insère la sortie LLM dans la description de la pull request ([exemple](https://github.com/microsoft/genaiscript/pull/564))",
  "97A909026A3274C64917": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par des exécutions différentes. Par défaut, c’est l’id du script.",
  "5EE377F3D3643E29D7BA": "`--pull-request-comment` [tag];",
  "72B5295F3797E1FF5CBE": "Mets à jour ou crée un commentaire sur la pull request/issue avec la sortie LLM ([exemple](https://github.com/microsoft/genaiscript/pull/564#issuecomment-2200474305))",
  "8FCF8724E772214CE768": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par des exécutions différentes. Par défaut, c’est l’id du script.",
  "4CA412FCD58E8E7BCB75": "`--pull-request-reviews`",
  "A83D7E9E610D20CF1A73": "Crée des commentaires de revue de pull request à partir de chaque [annotation](/genaiscript/reference/scripts/annotations) ([exemple](https://github.com/microsoft/genaiscript/pull/564#pullrequestreview-2151692644)).",
  "608F26E0F6FD74EA9B5D": "En savoir plus",
  "5C901805D312E21762EC": "La liste complète des options est disponible dans la [référence CLI](/genaiscript/reference/cli/commands#run).",
  "3A7F2F02D86AC61C113B": "Traduit à l’aide de l’IA. Veuillez vérifier le contenu pour en garantir l’exactitude.",
  "554009C3A7EB106FAE9F": "`--excluded-files` *fichiers...*",
  "16797CC27A0D56DB1E6D": "Exclut les fichiers spécifiés de l'ensemble des fichiers.",
  "B36AE85F515DB8E143B3": "`--exclude-git-ignore`",
  "84576E100FD7ACD23240": "Exclut les fichiers ignorés par le fichier `.gitignore` à la racine de l’espace de travail.",
  "58BD03713EE903D28D77": "Configuration",
  "CEEC6D8B118D85C65118": "`--model` ...",
  "DA107E68DC04C52FB13B": "`--provider` ...",
  "B1D86BAACD5A0A42AA4F": "Charge un ensemble d'alias de modèles pour le fournisseur LLM donné.",
  "87369FF45E945780F136": "`--vars` name=value name2=value2 ...",
  "3C441FFFE925A7BF98FE": "Remplit les valeurs dans la map `env.vars` qui peuvent être utilisées lors de l'exécution de l'invite.",
  "4B80D1674EC9A788E943": "Sortie",
  "0B85723A746355153A2B": "`--out` <fichier|répertoire>",
  "B68CC66A683F50937511": "Sauvegarde les résultats dans un fichier JSON, ainsi que les fichiers markdown de la sortie et de la trace.",
  "83915D503E9AABBBAE60": "Si `fichier` ne se termine pas par `.json`, le chemin est traité comme un chemin de répertoire.",
  "92CC2D45769173C2E355": "`--json`",
  "8980056A0C0EEC815664": "Affiche la réponse complète au format JSON sur stdout.",
  "B9F9B05263B5C35BC22B": "`--out-trace` *fichier*",
  "843ECF0331EB1A8663BC": "Enregistre la trace au format markdown dans le fichier spécifié.",
  "74630EFCF9CB36C3296A": "Dans un workflow GitHub Actions, vous pouvez utiliser cette fonctionnalité pour sauvegarder la trace en tant que résumé de l’étape (`GITHUB_STEP_SUMMARY`) :",
  "86DBD4FA5F0F1FCB4993": "Dans Azure Dev Ops, vous pouvez utiliser la commande [task.uploadSummary](https://learn.microsoft.com/en-us/azure/devops/pipelines/scripts/logging-commands?view=azure-devops&tabs=bash#uploadsummary-add-some-markdown-content-to-the-build-summary)\ndans votre pipeline pour téléverser la trace en tant que résumé.",
  "E46FBA3C345D2142DDB4": "`--out-annotations` *fichier*",
  "D54551302F509C81B0B4": "Émet les annotations dans le fichier spécifié au format tableau JSON, JSON Lines, [SARIF](https://sarifweb.azurewebsites.net/) ou un fichier CSV si le fichier se termine par `.csv`.",
  "A37C56081FE7027BDF9C": "Utilisez JSON lines (`.jsonl`) pour agréger les annotations de plusieurs exécutions dans un seul fichier.",
  "3149530715254E1D4247": "`--out-data` *fichier*",
  "67FC38865D2F485642FC": "Émet les données analysées au format JSON, YAML ou JSONL. Si un schéma JSON est spécifié\net disponible, le résultat de la validation JSON est également stocké.",
  "314164D6928A03218EF1": "`--out-changelogs` *fichier*",
  "75F510CFDDC7B774B747": "Émet les journaux de modifications dans le fichier spécifié au format texte.",
  "D515FD2988BD6D873C9A": "Pull Requests et Issues <a href=\"\" id=\"pull-requests\" />",
  "0CB5F6FF7E8D04605B63": "L’interface en ligne de commande peut mettre à jour la description et les commentaires d’une pull request/issue lorsqu'elle est utilisée dans un workflow GitHub Action ou Azure DevOps.",
  "4A3B8492437A599AB5EF": "Configuration du workflow GitHub Action",
  "29FD2511BD0C01E5092B": "Mettez à jour votre configuration de workflow pour inclure ce qui suit :",
  "FB54A4252995EC0B9B6E": "ajoutez l’autorisation `pull-requests: write` au workflow/étape",
  "36DA56F283C39DC84BAC": "définissez le secret `GITHUB_TOKEN` dans l’environnement `env` lors de l’exécution de la CLI",
  "6AE1C20A3523CD9254D3": "Configuration Azure DevOps",
  "ABEF5B22A4089A0965B4": "ajoutez `<nom de votre projet> Build Service` au rôle **Collaborator** du dépôt",
  "C2D38A3AA23E95E0644D": "passez les secrets aux scripts, y compris `System.AccessToken`",
  "967F14CD10C1F05E7534": "`--pull-request-description` \\[tag]",
  "3FF003FCE20505198A63": "Lorsqu’elle est exécutée dans un workflow GitHub Action ou Azure DevOps sur une pull request,\nLa CLI insère la sortie LLM dans la description de la pull request ([exemple](https://github.com/microsoft/genaiscript/pull/564))",
  "78DE43865759A22FDBAD": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par différentes exécutions. Par défaut, c’est l’identifiant du script.",
  "BE7D313DE348C39EFFAD": "`--pull-request-comment` \\[tag];",
  "20D910E452CC851A7007": "Ajoute ou met à jour un commentaire sur la pull request/issue avec la sortie LLM ([exemple](https://github.com/microsoft/genaiscript/pull/564#issuecomment-2200474305))",
  "FA36B4434C3D08C2D625": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par différentes exécutions. Par défaut, c’est l’identifiant du script.",
  "68FD176433C0266A2B08": "`--pull-request-reviews`",
  "DA5858E111DE1C59DF0A": "Crée des commentaires de revue de pull request à partir de chaque [annotation](/genaiscript/reference/scripts/annotations)\n([exemple](https://github.com/microsoft/genaiscript/pull/564#pullrequestreview-2151692644)).",
  "9147EE27BA0282B41438": "En savoir plus",
  "473273BC6FFF2A9D7E39": "La liste complète des options est disponible dans la [référence CLI](/genaiscript/reference/cli/commands#run).",
  "54853EBCA6E2EB6BD31B": "Traduit par IA. Veuillez vérifier l’exactitude du contenu.",
  "6D6BC8749B189EBE58B8": "Émet des journaux des modifications dans le fichier spécifié en texte.",
  "B954E15CD82439635EED": "`--out` *fichier|répertoire*",
  "1E617C90A2A30A84FC9C": "Enregistre les résultats dans un fichier JSON, ainsi que les fichiers markdown de la sortie et de la trace.",
  "6F2B4691CD70151EA26D": "Si le `fichier` ne se termine pas par `.json`, le chemin est traité comme un chemin de répertoire.",
  "C7ED39EBBDC8DD8D520F": "`--json`",
  "7092817CF2B332921281": "Affiche toute la réponse au format JSON sur la sortie standard (stdout).",
  "A9582B0DD8013AC5A96D": "`--out-trace` *fichier*",
  "4989FC9B637944F85D9E": "Enregistre la trace au format markdown dans le fichier spécifié.",
  "A3FF3FB75C942DFFEE90": "Dans un flux de travail GitHub Actions, vous pouvez utiliser cette fonctionnalité pour enregistrer la trace en tant que résumé d'étape (`GITHUB_STEP_SUMMARY`) :",
  "D7EBBD98988013EB4AE5": "Dans Azure Dev Ops, vous pouvez utiliser la commande [task.uploadSummary](https://learn.microsoft.com/en-us/azure/devops/pipelines/scripts/logging-commands?view=azure-devops&tabs=bash#uploadsummary-add-some-markdown-content-to-the-build-summary)\ndans votre pipeline pour téléverser la trace en tant que résumé.",
  "59D98335C2B3B44F49D9": "`--out-annotations` *fichier*",
  "376F2E35F5F7686744D2": "Émet des annotations dans le fichier spécifié sous forme de tableau JSON, JSON Lines, [SARIF](https://sarifweb.azurewebsites.net/) ou fichier CSV si le fichier se termine par `.csv`.",
  "8DE0EBF8E2D0E1670F36": "Utilisez JSON Lines (`.jsonl`) pour agréger les annotations provenant de plusieurs exécutions dans un seul fichier.",
  "F8F9499D9CD65EFC5257": "`--out-data` *fichier*",
  "3B70EE1E6B8A0A0DAB3F": "Émet des données analysées au format JSON, YAML ou JSONL. Si un schéma JSON est spécifié et disponible, le résultat de la validation JSON est également stocké.",
  "C179D6C4D0D3FEB9115E": "`--out-changelogs` *fichier*",
  "57E91460261927D8933D": "Émet les journaux des modifications dans le fichier spécifié en tant que texte.",
  "0BFE37EF89B11823BB4C": "Pull Requests et Issues <a href=\"\" id=\"pull-requests\" />",
  "094F8798F82199248A95": "L'interface en ligne de commande peut mettre à jour la description d'une pull request/issue et les commentaires lorsqu'elle s'exécute dans un workflow GitHub Action ou Azure DevOps.",
  "139A428249489777953C": "Configuration du workflow GitHub Action",
  "3441684B80FE042A33D9": "Mettez à jour la configuration de votre workflow pour inclure ce qui suit :",
  "9F375CDE804161CA3AC3": "ajoutez la permission `pull-requests: write` au workflow/step",
  "D7F906E11213AB0968BE": "définissez le secret `GITHUB_TOKEN` dans la variable d'environnement `env` lors de l'exécution de la CLI",
  "C69AB19C73208D27C0CF": "Configuration Azure DevOps",
  "9EEB2D0EF7BCBD5269B7": "ajoutez `<nom de votre projet> Build Service` dans le rôle **Collaborator** du dépôt",
  "DDD6A0E2E8C649E35A6D": "transmettez les secrets aux scripts, incluant `System.AccessToken`",
  "F8764D831AD53DAA8010": "`--pull-request-description` \\[tag]",
  "E7933F58AE3DC1569978": "Lors de l'exécution dans un workflow GitHub Action ou Azure DevOps sur une pull request, la CLI insère la sortie LLM dans la description de la pull request ([exemple](https://github.com/microsoft/genaiscript/pull/564))",
  "E52785B949F3D1911905": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par différentes exécutions. Par défaut, c'est l'id du script.",
  "415CA247338EC6360D4E": "`--pull-request-comment` \\[tag];",
  "C708CC2E20162DDE2A73": "Crée ou met à jour un commentaire sur la pull request/issue avec la sortie LLM ([exemple](https://github.com/microsoft/genaiscript/pull/564#issuecomment-2200474305))",
  "A4BC72F254FED8305D7A": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par différentes exécutions. Par défaut, c'est l'id du script.",
  "C194BCF5C6719DF38047": "`--pull-request-reviews`",
  "7785AFACABB6901FBCA0": "Crée des commentaires de revue pull request à partir de chaque annotation [annotations](/genaiscript/reference/scripts/annotations)\n([exemple](https://github.com/microsoft/genaiscript/pull/564#pullrequestreview-2151692644)).",
  "B1A82B9F18254848C9D7": "Lire plus",
  "A38AB89467CD8957CA74": "La liste complète des options est disponible dans la [référence CLI](/genaiscript/reference/cli/commands#run).",
  "E059E20E14E2A8E145AE": "Traduit par IA. Veuillez vérifier l'exactitude du contenu.",
  "9FF35226A36930347DD4": "Exécute un script sur des fichiers et transmet la sortie du LLM vers stdout ou un dossier à partir de la racine de l'espace de travail.",
  "9B7F4BCDD60C2941083E": "où `<script>` est l'identifiant ou le chemin du fichier de l'outil à exécuter, et `<files...>` est le nom du fichier de spécification sur lequel l'exécuter.",
  "EF479311DCA6379EA4DB": "Les fichiers peuvent également inclure des motifs [glob](https://en.wikipedia.org/wiki/Glob_\\(programming\\)).",
  "AC8326BF16702DB2C63C": "Si plusieurs fichiers sont spécifiés, tous les fichiers sont inclus dans `env.files`.",
  "CA94C5457FDE2519E52F": "Fichiers",
  "1B058BC2E700D00C9A21": "`run` accepte un ou plusieurs motifs [glob](https://en.wikipedia.org/wiki/Glob_\\(programming\\)) pour faire correspondre les fichiers dans l'espace de travail.",
  "78AF2C05C28EBBAA044F": "Résolutions des ressources",
  "6EF1953493E78F323468": "GenAIScript gérera et résoudra automatiquement certains motifs d'URI spécifiques.",
  "43CFB2FB739E2EE4B566": "`file://` - fichier local",
  "996ED1135996A8651700": "`https://github.com/<owner>/<repo>/blob/<branch>/<path>` - fichier GitHub",
  "85056FBB445AFD02DAD8": "`https://github.com/<owner>/<repo>.git/<file glob>` - dépôt GitHub et motif de fichiers",
  "62D6A135BFDBB2BAA152": "`gist://id/<file glob>` - GitHub Gist et motif de fichiers",
  "EC0EDDD65EE8BB2300EF": "`https://gist.github.com/<owner>/<id>/<file glob>` - GitHub Gist et motif de fichiers",
  "DCD5F0A52AA46B41CFEA": "`git://<owner>/<repo>.git/<file glob>` - dépôt Git et motif de fichiers",
  "C350893DAE58D769B068": "Piping",
  "9A3BBE5A55E288A3B561": "`run` prend le contenu de stdin et le convertit en fichier `stdin`.  \nLa sortie du LLM est envoyée vers `stdout`, tandis que le reste des journaux est envoyé vers `stderr`.",
  "CCDEEC8641B12682C06D": "`--excluded-files` *files...*",
  "A8505C444D3065D129E5": "Exclut les fichiers spécifiés de l'ensemble de fichiers.",
  "B175653E83D89FA9AC6D": "`--exclude-git-ignore`",
  "0319CD1871DF87EC2775": "Exclut les fichiers ignorés par le fichier `.gitignore` à la racine de l'espace de travail.",
  "AAAA9082D2EB0C4073DE": "Configuration",
  "94B37654AAE3D53BD5D0": "`--model` ...",
  "BE1CA3D3F1A61EFEECE2": "Configure l'alias du modèle par défaut ou `large`. Utilisez `echo` pour une exécution à blanc et retourner les messages au lieu d'appeler un fournisseur LLM.",
  "2B61ECFEDF09B1FFE0D8": "`--provider` ...",
  "05172076029CBBBBC5AC": "Charge un ensemble d'alias de modèles pour le fournisseur LLM donné.",
  "656B5EC995B86D00152A": "`--vars` name=value name2=value2 ...",
  "35B6884F9774E633B473": "Remplit les valeurs dans la carte `env.vars` qui peuvent être utilisées lors de l'exécution de l'invite.",
  "5FBE4061DFF87AB17B78": "Sortie",
  "FB072BAE30461A7F44D8": "`--out` *file|directory*",
  "023CC76613E77D64CD40": "Sauvegarde les résultats dans un fichier JSON, ainsi que les fichiers markdown de la sortie et de la trace.",
  "8E2F447E01106ECF6085": "Si `file` ne se termine pas par `.json`, le chemin est considéré comme un chemin de répertoire.",
  "E086986209FE4F3B07EE": "`--json`",
  "5A989C5FD2869CE1B506": "Sort la réponse complète au format JSON vers stdout.",
  "924B33FD868D9D3DCEDE": "`--out-trace` *file*",
  "9A633E8391439487A32A": "Enregistre la trace en markdown dans le fichier spécifié.",
  "10F81D4F4491041175A3": "Dans un workflow GitHub Actions, vous pouvez utiliser cette fonction pour sauvegarder la trace comme résumé d'étape (`GITHUB_STEP_SUMMARY`) :",
  "BF4529C828823860A7DC": "Dans Azure DevOps, vous pouvez utiliser la [task.uploadSummary](https://learn.microsoft.com/en-us/azure/devops/pipelines/scripts/logging-commands?view=azure-devops\\&tabs=bash#uploadsummary-add-some-markdown-content-to-the-build-summary) dans votre pipeline pour téléverser la trace en tant que résumé.",
  "00446C0EC2AC898B57E3": "`--out-annotations` *file*",
  "354CF89C817D77B179DE": "Émet les annotations dans le fichier spécifié comme un tableau JSON, JSON Lines, [SARIF](https://sarifweb.azurewebsites.net/) ou un fichier CSV si le fichier se termine par `.csv`.",
  "774B3809559E9DF12138": "Utilisez JSON lines (`.jsonl`) pour agréger les annotations de plusieurs exécutions dans un seul fichier.",
  "611108B502D59DE8D79B": "`--out-data` *file*",
  "1A910F306F28F1630DE3": "Émet les données analysées au format JSON, YAML ou JSONL. Si un schéma JSON est spécifié et disponible, le résultat de la validation JSON est également enregistré.",
  "590BAA74834C2E556F11": "`--out-changelogs` *file*",
  "D0F6D6B458CED52956C5": "Émet les journaux des modifications dans le fichier spécifié en texte.",
  "052AC25EE1A8D739F3F2": "Pull Requests et Issues <a href=\"\" id=\"pull-requests\" />",
  "416EB6C5F992380B12A1": "La CLI peut mettre à jour une description et des commentaires de pull request/issue lorsqu'elle est exécutée dans un GitHub Action ou un pipeline Azure DevOps.",
  "3419135625E44D85AA15": "Configuration du workflow GitHub Action",
  "AFD20434AB7D7E97F469": "Mettez à jour votre configuration de workflow pour inclure ce qui suit :",
  "E39EF7A0572773BE3184": "ajoutez la permission `pull-requests: write` au workflow/étape",
  "58EA96FDF6969F1E7237": "définissez le secret `GITHUB_TOKEN` dans `env` lors de l'exécution de la CLI",
  "9555DB3B34707479E7BC": "Configuration Azure DevOps",
  "4B41B48A37893EA731C8": "ajoutez `<votre nom de projet> Build Service` dans le rôle **Collaborateur** au dépôt",
  "C56FB413FACB81DD6AA7": "passez les secrets aux scripts, y compris `System.AccessToken`",
  "CFEE2C16D6B268783F69": "`--pull-request-description` \\[tag]",
  "792257C708FA9F4AE4D0": "Lorsqu'il est exécuté dans un GitHub Action ou un pipeline Azure DevOps sur une pull request, la CLI insère la sortie du LLM dans la description de la pull request ([exemple](https://github.com/microsoft/genaiscript/pull/564))",
  "0ED3809884B3976733DA": "Le paramètre `tag` est un identifiant unique utilisé pour différencier les descriptions générées par différentes exécutions. La valeur par défaut est l'identifiant du script.",
  "2590E7DE9790C8741358": "`--pull-request-comment` \\[tag];",
  "1951B273675FB010FA66": "Met à jour ou ajoute un commentaire sur la pull request/issue avec la sortie du LLM ([exemple](https://github.com/microsoft/genaiscript/pull/564#issuecomment-2200474305))",
  "5B965BAC1A96B095DAF7": "`--pull-request-reviews`",
  "C1F092F39B882B739CC6": "Crée des commentaires de revue de pull request à partir de chaque [annotation](/genaiscript/reference/scripts/annotations) ([exemple](https://github.com/microsoft/genaiscript/pull/564#pullrequestreview-2151692644)).",
  "A6DD82DFA7F3512898FB": "En savoir plus",
  "35D320070FAA553FCE16": "La liste complète des options est disponible dans la [référence CLI](/genaiscript/reference/cli/commands#run).",
  "3FF7CCCF79781EF8016C": "Traduit par IA. Veuillez vérifier le contenu pour plus de précision.",
  "7FB8344E3525B6ED4AE4": "fichier|répertoire",
  "EAB8D8C1B172CE0E5531": "Vous pouvez lancer le [cli](/genaiscript/reference/cli) en tant que **serveur Web API** pour exposer les scripts en tant que points de terminaison REST.\nLe serveur est compatible OpenAPI 3.1 et utilise [fastify](https://www.fastify.io/) en interne.",
  "232E7702DE033045F485": "Scripts en tant que points de terminaison REST",
  "19DB41C657F4CEFBF0A3": "Le serveur Web API expose les scripts en tant que points de terminaison REST. Il utilise le titre, la description, les groupes et les tags pour générer une spécification OpenAPI 3.1 et un serveur avec fastify.",
  "9BB6C8D1978FD2BFBFBC": "Les paramètres des points de terminaison OpenAPI sont déduits automatiquement à partir des [paramètres du script](/genaiscript/reference/scripts/parameters) et des fichiers.\nLes paramètres OpenAPI remplissent ensuite l’objet `env.vars` dans le script comme d’habitude.",
  "5DF3D0F50D0B88718A71": "La sortie du point de terminaison OpenAPI est la sortie du script. C’est généralement le dernier message de l’assistant pour un script qui utilise le contexte de niveau supérieur.\nLa sortie du point de terminaison OpenAPI correspond à la sortie du script, typiquement le dernier message de l’assistant ou tout contenu passé à [env.output](/genaiscript/reference/scripts/output-builder).",
  "563AE5B602477A24D472": "Voyons un exemple. Voici un script `task.genai.mjs` qui prend en entrée un paramètre `task`, construit une invite, et renvoie la sortie du LLM.",
  "F531B82BD20B49FFF67F": "Un script plus avancé pourrait ne pas utiliser le contexte de niveau supérieur et utiliser à la place `env.output` pour transmettre le résultat.",
  "36A9C9ABB99727826C1A": "Route",
  "9237729D049B7300C579": "La route par défaut est `/api` et la spécification OpenAPI est disponible à `/api/docs/json`.\nVous pouvez modifier la route à l’aide de l’option `--route`.",
  "13B39E3CD764C32B00A2": "La spécification OpenAPI sera disponible à `/genai/docs/json`.\nVous pouvez également modifier le port avec l’option `--port`.",
  "9336C0CFB008B4F20D2B": "Le serveur sera disponible à l’adresse `http://localhost:4000/genai`.",
  "33A722DB0EE23D74B38E": "Script de démarrage",
  "196B0812E7A32EF7C222": "Vous pouvez spécifier un identifiant de script de démarrage dans la ligne de commande avec l’option `--startup`.\nIl sera exécuté après le démarrage du serveur.",
  "0B6F703DD5D3FC9B8791": "Vous pouvez utiliser ce script pour charger des ressources ou effectuer toute autre configuration nécessaire.",
  "78B696DD7CFBD042C079": "Filtrage des scripts",
  "AE3B15C687A98017DA0A": "Si vous devez filtrer les scripts exposés en tant que points de terminaison OpenAPI, vous pouvez utiliser le flag `--groups` et définir le groupe `openapi` dans vos scripts.",
  "6814D1F94D37564F603D": "Exécution de scripts depuis un dépôt distant",
  "7023F93A4C75DF715C26": "Vous pouvez utiliser l’option `--remote` pour charger des scripts depuis un dépôt distant.\nGenAIScript effectuera un clonage superficiel (shallow clone) du dépôt et exécutera le script depuis le dossier cloné.",
  "96A43D5D7967DE10DE47": "Il existe des flags additionnels pour contrôler le clonage du dépôt :",
  "6E7EF477181E656AF1B8": "`--remote-branch <branch>` : La branche à cloner depuis le dépôt distant.",
  "2D480DC4EF85ADD6D757": "`--remote-force` : Force le clonage même si le dossier cloné existe déjà.",
  "EDB105A9765AD7511EDC": "`--remote-install` : Installe les dépendances après le clonage du dépôt.",
  "2368B480DF73CD461542": "Comme toujours, soyez prudent lorsque vous exécutez des scripts provenant d’un dépôt distant.\nAssurez-vous de faire confiance à la source avant d’exécuter le script et envisagez de verrouiller sur un commit spécifique.",
  "E05AB61E140CD581E406": "Linting",
  "04F91874A807F93B84D4": "Vous pouvez utiliser [spectral](https://github.com/stoplightio/spectral) pour analyser vos spécifications OpenAPI.",
  "FB9E6B849E53BADE0789": "Enregistrez ce fichier `.spectral.yaml` à la racine de votre projet :",
  "6860DFA7D5D3ECD943D1": "Lancez le serveur API",
  "3052C5A126B951C96577": "Exécutez le linter spectral",
  "8E4EF482D250328E0D74": "Les bases de GenAIScript",
  "327F44E56EC8DAF1B703": "Introduction",
  "8B2F10CD9E944FCEBC7F": "GenAIScript est un cadre qui permet aux équipes, y compris aux non-développeurs, de créer et d'utiliser des scripts améliorés par l'IA pour soutenir leurs flux de travail. GenAIScript offre un support pour la rédaction et le débogage de scripts JavaScript incorporant des appels aux modèles fondamentaux et aux grands modèles de langage (LLM) [^1] dans leur exécution. GenAIScript est un cadre de programmation qui permet à ses utilisateurs de rédiger des scripts d'IA (que nous appelons GenAIScript), de déboguer ces scripts dans un environnement de développement qui est une extension de VS Code, et de packager ces scripts dans une interface en ligne de commande pouvant être déployée dans de nombreux contextes.",
  "D4E8DC7ED3F774DFD93B": "Notre extension VS Code facilite la rédaction d'un GenAIScript en écrivant du langage naturel en syntaxe markdown accompagné d'une petite quantité de programmation JavaScript stylisée. Notre cadre permet aux utilisateurs de tirer parti de plusieurs modèles LLM, de paramétrer les appels aux modèles, d'exécuter et de déboguer des scripts, de tracer la construction des prompts LLM et de fournir une trace complète de l'exécution depuis la construction du prompt jusqu'à la génération par le LLM et l'analyse du résultat du LLM. Notre cadre permet également d'extraire plusieurs formes de sorties des générations LLM, incluant des sorties sous forme de fichiers de différents types, des sorties destinées à être des modifications de fichiers existants et des sorties dans des formats structurés, tels que JSON.",
  "4C6DE9D6EB2EB20BA2B7": "Termes clés",
  "7A39FCB080306672CFAB": "**GenAIScript** Un programme JavaScript stylisé qui définit le contexte pour l'appel au LLM, permet l'exécution arbitraire de code JavaScript, prépare l'entrée du prompt pour le LLM, appelle le LLM et décompresse cette sortie du LLM selon les instructions données dans le prompt.",
  "267AB13EB02F73D6BE3B": "**GPVM** : Un système d'exécution qui, donné un GenAIScript, exécute ce GenAIScript, ce qui implique d'intégrer le contexte dans un prompt, d'appeler le LLM spécifié, et d'extraire le contenu du résultat du LLM.",
  "90CCFCBCE927F359439E": "**Extension GenAIScript pour VS Code** Un addon pour VS Code qui offre aux utilisateurs des méthodes faciles pour créer, éditer, exécuter et déboguer des GenAIScripts.",
  "899730C0C19FD17BBC6D": "**Modèles fondamentaux et LLMs** Bien que GenAIScript supporte actuellement différents LLMs, nous prévoyons d'incorporer à l'avenir des modèles fondamentaux additionnels au-delà des grands modèles de langage.",
  "78463AE90E8C6048A3FE": "Capacités",
  "3FC0DECD411E73BBF7E8": "Comportement du système",
  "022386C57C452F919BF7": "GenAIScript est un cadre généraliste de création de scripts AI permettant l'intégration fluide de l'exécution de code et des appels à des modèles fondamentaux/LLM. Un GenAIScript est un programme JavaScript dans un format stylisé qui permet aux utilisateurs de spécifier facilement le contexte et le prompt du LLM, d'invoquer un modèle spécifié, et de parser la sortie résultante selon les spécifications de l'utilisateur. Cette fonctionnalité permet même aux utilisateurs non programmeurs d'inspecter les résultats du modèle et de les vérifier pour en assurer la justesse.",
  "DEC24128FA72976F9EDD": "GenAIScript peut être écrit dans n'importe quel IDE, mais l'add-in GenAIScript pour VS Code rend particulièrement facile la création, l'exécution et le débogage de GenAIScripts. Les utilisateurs de GenAIScript peuvent mettre en œuvre des outils qui génèrent et éditent plusieurs fichiers avec un seul outil, et notre intégration avec VS Code exploite la fonctionnalité existante de refactorisation pour permettre aux utilisateurs de voir facilement les résultats de l'exécution de l'outil. L'add-in supporte la création d'un nouveau GenAIScript, l'invocation d'un GenAIScript donné, la traçabilité de l'exécution du GenAIScript dans l'établissement du contexte LLM et du prompt final, et la retranscription de la sortie LLM dans les éléments spécifiés par l'utilisateur. Des exemples de toutes ces capacités sont consultables dans les documents du dépôt GenAIScript : [microsoft/GenAIScript: Generative AI Scripting (github.com)](https://microsoft.github.io/genaiscript/)",
  "498035A205239414C1C4": "L'objectif de GenAIScript est de permettre à une large gamme d'utilisateurs potentiels d'innover en construisant des scripts propulsés par l'IA et d'identifier de nouvelles façons d'exploiter l'IA pour leurs tâches quotidiennes. Nous attendons que les développeurs professionnels, qui sont familiers avec l'écriture et l'utilisation de scripts pour améliorer leur productivité, soient les premiers utilisateurs de GenAIScript. GenAIScript leur offrira un avantage car ce cadre peut faire beaucoup de choses que les scripts existants écrits dans des langages de script traditionnels comme JavaScript ou Python ne peuvent pas faire. Bien que les développeurs puissent utiliser d'autres cadres, tels que langchain et Semantic Kernel, qui intègrent des appels aux LLM dans des langages tels que Python, ces cadres requièrent plus d'efforts utilisateur et bénéficient de moins de support IDE que GenAIScript. En fin de compte, parce que notre objectif est de rendre GenAIScript facile à rédiger, modifier, déboguer et exécuter, nous prévoyons qu'il sera utile bien au-delà des développeurs professionnels. Un impact majeur de GenAIScript sera de permettre aux non-développeurs d'innover et de construire des GenAIScripts qui améliorent leur productivité. Nous illustrons ce point avec des exemples ci-dessous.",
  "650D4ADFAACDD7393F17": "Documentation",
  "6538B4081EB5532E8A50": "Pour aider les utilisateurs à débuter avec GenAIScript, nous incluons dans notre dépôt une documentation qui illustre à travers des extraits de code le contenu de plusieurs GenAIScripts différents. La documentation montre à la fois à quoi ressemble le GenAIScript d'exemple et quel est l'effet produit par le GenAIScript agissant sur une entrée particulière. Bien que ces exemples soient destinés à expliquer la technologie, ils ne sont pas destinés à servir de base pour des outils écrits par les utilisateurs.",
  "C4664832D8713AD84B64": "Cas d'utilisation",
  "A6A2D2F990692915C323": "Usages prévus",
  "1544D220C1F62FDCA941": "GenAIScript peut être utilisé dans n'importe quel contexte où un script en ligne de commande écrit dans un autre langage pourrait être utilisé, mais les cas d'usage sont bien plus ambitieux car le LLM peut faire beaucoup plus que du code ordinaire. Voici quelques exemples :",
  "EE2BA563875B36FB431E": "**Vérification de potentielles incohérences dans un ensemble de fichiers de configuration ou autre contenu.** Utilisant le LLM, un GenAIScript peut inspecter des fichiers de configuration et exploiter la compréhension du LLM des erreurs courantes pour les détecter et les signaler. Avant les LLMs, les développeurs professionnels écrivaient des outils, comme lint[^2], qui sont des programmes complexes détectant les incohérences dans la syntaxe de leurs fichiers de code. Avec GenAIScript, des outils de vérification peuvent être écrits pour des scénarios beaucoup plus riches (comme la vérification de noms de variables inappropriés), et par des personnes qui ne sont pas des développeurs professionnels.",
  "78DA4EE7246C93C268E2": "**Automatisation de la traduction de documents :** Étant donné une documentation dans un dépôt rédigée dans une langue naturelle, un GenAIScript peut être écrit pour traduire cette documentation dans une autre langue. Pour un exemple spécifique de l'importance de GenAIScript pour cet usage, considérez la tâche de maintien de la localisation de la documentation MakeCode[^3]. La documentation MakeCode comporte près de 2 millions de fichiers, qui sont typiquement en markdown avec un mélange d'extraits de code. De nombreux documents sont partiellement traduits (au niveau des paragraphes). Pour vérifier la justesse des traductions de documents, il y a 3500 traducteurs bénévoles inscrits pour plus de 35 langues. On ne peut pas simplement appliquer Bing Translate pour ce cas d'usage, car cela détruit généralement les extraits de code. Avec GenAIScript, nous pouvons avoir un script qui passe en revue chaque fichier de documentation, récupère la version localisée actuelle et assemble un prompt pour demander au LLM de remplir les traductions manquantes, tout en laissant intactes les traductions existantes. Parce que le modèle LLM que nous utilisons a déjà été entraîné sur des exemples et de la documentation MakeCode, il connaît la syntaxe.",
  "38CE9BB7CF2475F17E60": "**Création d'une version courte d'un document plus long en résumant chaque chapitre.** Les LLMs sont très efficaces pour résumer des documents. Un GenAIScript peut être écrit pour prendre chaque chapitre d'un long document et le résumer dans une section d'un document plus court.",
  "C5EEC14B63A3DF54B209": "**Traduction d'un monologue en dialogue.** À partir d'un monologue tiré d'une transcription vidéo, un GenAIScript peut être écrit pour réécrire ce monologue en un dialogue entre deux personnes (semblable à des commentateurs sportifs discutant entre eux) afin de rendre la vidéo plus intéressante et accessible.",
  "0D89021A20AE6E401BDB": "Usages non prévus",
  "D4C9FDA2BEF29E9598B2": "GenAIScript est un cadre général pour la création de scripts. Par conséquent, un adversaire peut utiliser GenAIScript pour rédiger des scripts adversariaux pouvant être employés à des fins malveillantes. Tous les usages adversariaux de GenAIScript pourraient aussi être implémentés dans d'autres cadres d'extension linguistique LLM tels que Semantic Kernel, autogen et langchain, donc le danger des usages non prévus de GenAIScript provient de la possibilité qu'il facilite la rédaction de scripts adversariaux. Ce problème est présent dans toute infrastructure qui facilite la programmation, y compris des langages tels que PowerShell, JavaScript et Python, ainsi que des IDE comme VS Code et Visual Studio. Bien que nous ne puissions empêcher les usages non prévus, nous encouragerons les utilisateurs à considérer les pratiques d'IA responsable lorsqu'ils construisent des GenAIScripts. Nous fournissons plus de détails sur les problèmes liés à la sécurité et à la confiance dans [sécurité et confiance](https://microsoft.github.io/genaiscript/reference/security-and-trust/).",
  "C9FEFF9D812FA27FD573": "Bonnes pratiques pour les modèles fondamentaux",
  "6131F0EE7CC4A4F22377": "Nous encourageons vivement les utilisateurs de GenAIScript à utiliser des modèles fondamentaux et des LLMs qui supportent des atténuations robustes de l'IA responsable, comme les services Azure Open AI (AOAI). Ces services mettent continuellement à jour les mesures de sécurité et d'atténuation RAI pour refléter notre compréhension à jour sur la manière de déployer et d'utiliser les modèles fondamentaux de la manière la plus responsable. Voici des ressources pour aider à comprendre et appliquer les meilleures pratiques lors de l'utilisation de modèles fondamentaux pour les scripts et applications :",
  "41974C573665DD49ED12": "[Article de blog sur les fonctionnalités d'IA responsable dans AOAI présenté à Ignite 2023](https://techcommunity.microsoft.com/t5/ai-azure-ai-services-blog/announcing-new-ai-safety-amp-responsible-ai-features-in-azure/ba-p/3983686)",
  "A5AC6ECD96CC4A5678CD": "[Note de transparence pour Azure OpenAI Service](https://learn.microsoft.com/en-us/legal/cognitive-services/openai/transparency-note?tabs=text)",
  "54F0F569E27E7777D5B3": "[Meilleures pratiques du bureau d'IA responsable de Microsoft (ORA) sur l'utilisation des modèles AOAI](https://learn.microsoft.com/en-us/legal/cognitive-services/openai/overview)",
  "2AC954BA5BBF256EC484": "Nous recommandons de consulter la documentation [Content Safety](/genaiscript/reference/scripts/content-safety) pour plus d'informations sur la façon de se protéger contre les contenus nuisibles et les tentatives de contournement (jailbreaking).",
  "0C428B44CF3BEAA99A45": "Limitations",
  "54C6C46D327685A1F522": "GenAIScript est un cadre en évolution qui s'améliorera en fonction des retours des utilisateurs. Les limitations actuelles du cadre incluent une intégration dans un seul IDE (VS Code), un support interne pour les API OpenAI ainsi qu'un nombre relativement faible d'autres LLMs. Nous avons l'intention de permettre aux utilisateurs d'intégrer des appels à des services externes (comme RAG) dans GenAIScript pour fournir plus de contexte au LLM. Nous prévoyons également d'ajouter le support pour davantage de modèles fondamentaux au fur et à mesure de l'évolution des cas d'usage.",
  "40B5E31ED88D8609CEAA": "Nous anticipons aussi que l'accès à l'utilisation de GenAIScript évoluera. Nous avons exploré la possibilité d'invoquer le cadre GenAIScript dans le cadre d'une expérience VS Code Copilot Chat (hébergée dans VS Code Insider's Edition). Nous comprenons également que certains développeurs préféreraient implémenter leur GenAIScript avec Python plutôt qu'avec JavaScript. Nous prévoyons de construire un binding Python pour la création de GenAIScripts dans le futur.",
  "E083E645BE61CA9A9513": "Limitations techniques, facteurs opérationnels et plages",
  "A6B994A68268EF82D9DA": "GenAIScript n'utilise aucun modèle d'IA dans l'exécution du cadre lui-même. Les personnes utilisant GenAIScript pour rédiger leurs propres scripts IA seront soumises aux limitations techniques, facteurs opérationnels et plages du LLM IA que leur script utilise.",
  "643BC29EF9EE673740A7": "Bonnes pratiques pour améliorer les performances du système",
  "A46B930FFE2417F892CC": "GenAIScript encourage les utilisateurs à consulter les meilleures pratiques pour rédiger des prompts efficaces pour le LLM spécifique qu'ils invoquent dans leur outil.",
  "A1E0D70BB3879857B8F4": "En savoir plus sur l'IA responsable",
  "772047A9842E91E45F4B": "[Principes d'IA Microsoft](https://www.microsoft.com/en-us/ai/responsible-ai)",
  "10363C369317D7ADFF7C": "[Ressources Microsoft sur l'IA responsable](https://www.microsoft.com/en-us/ai/responsible-ai-resources)",
  "A770FAA93807F36BD471": "[Cours Microsoft Azure Learning sur l'IA responsable](https://docs.microsoft.com/en-us/learn/paths/responsible-ai-business-principles/)",
  "671ED3651F787736D4D8": "En savoir plus sur GenAIScript",
  "FC31B3B0AD1602D95D27": "Lisez-en plus sur GenAIScript sur notre site GitHub, [microsoft/GenAIScript: GenAI Scripting (github.com)](https://github.com/microsoft/genaiscript/)",
  "D9FAF49CACE78245206F": "Contactez-nous",
  "947941FCDAB161E16771": "Envoyez-nous vos retours sur ce document : zorn@microsoft.com, jhalleux@microsoft.com",
  "7DB779C3522F8E9E58ED": "À propos de ce document",
  "BE0C79326B93164E3971": "© 2024 Microsoft Corporation. Tous droits réservés. Ce document est fourni \"tel quel\" et à titre informatif uniquement. Les informations et opinions exprimées dans ce document, y compris les URL et autres références aux sites Web, peuvent changer sans préavis. Vous assumez les risques liés à son utilisation. Certains exemples sont donnés à titre d'illustration uniquement et sont fictifs. Aucune association réelle n'est destinée ou insinuée.",
  "FB9F6F08C6571187B766": "Ce document n'a pas pour but, et ne doit pas être interprété comme fournissant un avis juridique. La juridiction dans laquelle vous opérez peut avoir diverses exigences réglementaires ou légales qui s'appliquent à votre système d'IA. Consultez un spécialiste juridique si vous avez un doute concernant les lois ou réglementations pouvant s'appliquer à votre système, surtout si vous pensez qu'elles pourraient impacter ces recommandations. Sachez que toutes ces recommandations et ressources ne seront pas appropriées pour chaque scénario, et réciproquement, ces recommandations et ressources peuvent être insuffisantes pour certains scénarios.",
  "B2FE9A26B0541E00FA5D": "Publié : 18 mars 2024",
  "66C109A4674D8F785D54": "Dernière mise à jour : 18 mars 2024",
  "B67C3DF7E529D5C5F156": "Tout au long de ce document, lorsque nous faisons référence aux LLMs, nous entendons tout modèle fondamental compatible avec nos interfaces.",
  "51C4569DB88273B3CC49": "[Lint (logiciel) - Wikipédia](https://fr.wikipedia.org/wiki/Lint_(informatique))",
  "36DAE4A45C8947C51E75": "https://makecode.org/",
  "38EB7547CA27E8D8C8E4": "Nous discutons des différents risques de sécurité et des stratégies d'atténuation lors de l'utilisation de GenAIScript.\nGenAIScript hérite des mêmes risques de sécurité que l'exécution de scripts, et ajoute de nouvelles menaces dues à la nature des sorties générées par le LLM.",
  "C8EB6BFF16B52EA0E1ED": "Nous recommandons également de lire la [Note de transparence](/genaiscript/reference/transparency-note/)\npour comprendre les capacités et les limitations de GenAIScript.",
  "049F13D88D7BA6EB5E5D": "Le **Playground** est une application web auto-hébergée qui vous permet d'exécuter des scripts GenAIScript depuis une interface utilisateur conviviale. Il se place entre la CLI GenAIScript et l'intégration GenAIScript pour Visual Studio Code.",
  "3E00DA730A1D2694EA7F": "Le playground est encore en cours de développement.",
  "222858CCA707DA501331": "Lancement",
  "5530293631DF1E716A13": "Depuis la racine de votre espace de travail projet, exécutez",
  "F989E94098D138F1AB11": "puis accédez à l'URL affichée dans la console (généralement `http://127.0.0.1:8003/`).",
  "012F6BE443389B1078C6": "Dépôt distant",
  "6DE8D1A5AFC03782A048": "Vous pouvez exécuter le playground sur un dépôt distant en utilisant vos secrets `.env` actuels.",
  "9B6ACE4C493197C62C84": "Installation locale",
  "ACD923ADC0890AD5C7BD": "`npx` peut être lent au démarrage, surtout si vous lancez fréquemment le playground. Vous pouvez installer le playground localement avec",
  "5D3E7A129695C26C7607": "puis lancez",
  "D45FD0D6CEF9CD445DC9": "`--remote-install` : installe les dépendances après le clonage du dépôt.",
  "C535CC252731063494BD": "GenAIScript est un langage de script qui intègre les LLM comme une partie essentielle du processus de scripting, permettant aux utilisateurs de créer, déboguer et déployer facilement des scripts basés sur les LLM capables d'exécuter des tâches au-delà des capacités du code conventionnel. Ce guide de référence fournit une documentation complète pour GenAIScripts, incluant la syntaxe des scripts, les configurations LLM, l'extension VSCode et l'interface en ligne de commande.",
  "E2B7EFD5A975C1780DD2": "[Scripts](/genaiscript/reference/scripts) fournissent un cadre JavaScript spécifique au domaine pour construire des requêtes LLM.",
  "86EB4A1845FB2CE403CC": "[CLI](/genaiscript/reference/cli) documente l'interface en ligne de commande pour automatiser l'exécution des GenAIScripts.",
  "875C385D28C7F03F9B8C": "[Extension Visual Studio Code](/genaiscript/reference/vscode) offre un ensemble riche de fonctionnalités pour créer, déboguer et déployer des GenAIScripts.",
  "1B77101D2F0529F0E71F": "[GitHub Actions](https://docs.github.com/en/actions) est une plateforme d'intégration continue et de livraison continue (CI/CD) qui vous permet d'automatiser votre pipeline de construction, de test et de déploiement. Vous pouvez créer des workflows qui construisent et testent chaque pull request vers votre dépôt, ou déployer les pull requests fusionnées en production.",
  "A646DBFD12E59F2D38C6": "[Dernièrement](https://github.blog/changelog/2025-04-14-github-actions-token-integration-now-generally-available-in-github-models/), GitHub a également ajouté la possibilité d'utiliser les [GitHub Models](https://docs.github.com/en/github-models) dans les actions.",
  "4D0B631A9132F3FD298C": "La combinaison d'Actions et de Models vous permet d'exécuter GenAIScript dans le cadre de votre CI/CD.",
  "9F4A02B99B9B4B07D0C3": "Passez à la section [Actions personnalisées](#custom-actions) pour apprendre comment empaqueter un script GenAIScript en tant qu'action GitHub.",
  "B3E3A6B0AF9A35CFF4C7": "Exemples",
  "4FEB37178F8B28BFF18F": "[Étiqueteur d'issues GenAI](https://github.com/pelikhan/action-genai-issue-labeller/)",
  "C2E305FCECFDA26E90D3": "[Dédupliqueur d'issues GenAI](https://github.com/pelikhan/action-genai-issue-dedup/)",
  "3C775AF79F0A9520AA65": "[Analyseur vidéo d'issues GenAI](https://github.com/pelikhan/action-genai-video-issue-analyzer/)",
  "1B99406971A2C22FBA03": "[Commentateur de code GenAI](https://github.com/pelikhan/action-genai-commentor/)",
  "043214CA3FD03921616B": "Permissions GitHub Models",
  "E409FB8A211AD231DB31": "[Pour utiliser les Models dans une action GitHub](https://docs.github.com/en/github-models/use-github-models/integrating-ai-models-into-your-development-workflow#using-ai-models-with-github-actions), vous devez définir les `permissions` de l'action pour inclure `models: read`.",
  "8650E8B501156D4D29EC": "GenAIScript supporte nativement les GitHub Models, vous pouvez donc l'utiliser directement dans votre workflow GitHub Actions.",
  "6B34DDA46E43887CD7CE": "Utilisation de la CLI",
  "1220EE22FBE0C69FBF79": "La façon la plus simple d'utiliser GenAIScript dans une action GitHub est d'exécuter directement la [CLI](/genaiscript/reference/cli). Vous pouvez le faire en ajoutant une étape dans votre workflow qui exécute la commande `genaiscript`.",
  "63183A104F2CF3226731": "**Assurez-vous d'inclure le `GITHUB_TOKEN` dans les variables d'environnement** afin que GenAIScript puisse s'authentifier auprès des GitHub Models.",
  "934288FE09E035A51FF7": "Actions personnalisées <a id=\"custom-actions\" />",
  "8C623BD119009F7AED40": "GitHub supporte le packaging des tâches sous forme d'[actions personnalisées](https://docs.github.com/en/actions/sharing-automations/creating-actions/about-custom-actions), généralement dans un dépôt dédié. C’est un excellent moyen d'empaqueter un script IA et de le partager avec d'autres.",
  "1A5D1AFCD39D0EFA1C46": "La CLI GenAIScript fournit une commande pour générer/mettre à jour le code standard afin d'empaqueter un script sous forme d’une [action conteneur Docker](https://docs.github.com/en/actions/sharing-automations/creating-actions/creating-a-docker-container-action), ce qui permet de l'utiliser dans GitHub Actions quel que soit le langage utilisé pour écrire le script.",
  "36A9B8033FC13859CBC5": "Pour commencer,",
  "F85A8D3B291C59ADDDE8": "Créez un nouveau dépôt pour votre action.",
  "284EFF016ACE5A087B66": "Ouvrez un terminal à la racine de votre dépôt.",
  "8A49B6FCE2DF857EC3BE": "Exécutez la commande pour générer le squelette de l’action :",
  "DE1F5EC6BF7D5FEA6636": "Le générateur de squelette d’action va écraser les fichiers suivants :",
  "C9356C9814E57D0DED14": "`action.yml` Fichier des métadonnées de l'action",
  "341045A2D23FD9EF5D39": "`Dockerfile` Dockerfile pour l'action",
  "7CC4CD7F0D25663B7C37": "`README.md` Documentation pour l'action",
  "F49911E6B430D725BCA9": "`.gitignore` Fichiers à ignorer dans le dépôt",
  "6B2A410F4777265F38D2": "`.github/workflows/ci.yml` Workflow CI pour tester l'action",
  "DEB9A14008AEB3B7E432": "`package.json` Configuration du package pour l'action",
  "690E694EF5D76CFC30C9": "`devcontainer/devcontainer.json` Configuration du devcontainer pour VS Code",
  "1131A757FF24A3453A4F": "`devcontainer/Dockerfile` Dockerfile du devcontainer pour VS Code. Doit être synchronisé avec le Dockerfile de l'action.",
  "B66FBF9F12CDC8F52043": "Pour mettre à jour le squelette de l’action, vous pouvez relancer la même commande :",
  "6EB9BD5961FD738E1E51": "Métadonnées",
  "37BAE48FBA426DA1636F": "Le fichier `action.yml` contient les métadonnées de l’action. Elles sont extraites de différentes parties de votre projet :",
  "4FBB042149B333A1D99A": "Le `name` est dérivé de l’identifiant du script.",
  "6DEDA4927E15A3051F1D": "La `description` est dérivée du `title` du script.",
  "66BAD65EEF1457F16141": "Les `inputs` sont dérivés des [paramètres](/genaiscript/reference/scripts/parameters) du script (voir ci-dessous).",
  "A04D5DA3F75818A9228C": "Notez que la `script.description` est utilisée pour remplir le fichier `README.md`.",
  "A6043A867CF478412D97": "Entrées",
  "CE1C922FB470F67474E6": "La section `inputs` du fichier `action.yml` est générée automatiquement à partir des paramètres du script.\nChaque paramètre est converti en une entrée (input) portant le même nom, et le type est inféré à partir du type du paramètre.",
  "53716D7C9649F4864DD6": "Le fichier `action.yml` généré ressemblera à ceci :",
  "BD48BC13A77988AE7D40": "Il existe aussi des champs additionnels communs à toutes les actions GenAIScript :",
  "11F4FA2BF63372E2F425": "`files` : Spécifie un chemin de fichier pour alimenter la variable `env.files`. Pour retirer ce champ, mettez `accept: \"none\"` dans le script.",
  "C52AF30E1AEC86E30117": "`github_token` : **Cela est requis pour s'authentifier auprès des GitHub Models.**  \nIl deviendra `INPUT_GITHUB_TOKEN` lorsque le conteneur sera créé et GenAIScript le détectera automatiquement.",
  "36BF00D18C26C90533AC": "`github_issue` : Le numéro actuel de l’issue ou de la pull request GitHub.",
  "2228C88045FD30BD8EC5": "`debug` : Le filtre pour contrôler les messages de [logging](/genaiscript/reference/scripts/logging) de débogage.",
  "4810A02DEC1C69FB94A8": "Sorties",
  "D7273A40550CD2971C11": "L’action remplit quelques champs de sortie.",
  "2052EA4E7C466E180F30": "`text` : le texte généré par le script.",
  "A069C7D9150BECC73E76": "`data` : la structure de sortie analysée et convertie en chaîne JSON. Ce champ est rempli si vous fournissez un [responseSchema](/genaiscript/reference/scripts/schemas) dans le script et si le LLM peut générer une réponse conforme au schéma.",
  "B3430BA3BE0AF112DA66": "Branding",
  "B1400D46607B0880EA3D": "Le champ `branding` du `script` est utilisé pour [personnaliser l'apparence de l'action dans l'interface GitHub](https://docs.github.com/en/actions/sharing-automations/creating-actions/metadata-syntax-for-github-actions?versionId=free-pro-team%40latest&productId=actions&restPage=sharing-automations%2Ccreating-actions%2Creleasing-and-maintaining-actions#branding).",
  "1E5BD0233715797DC1F4": "Conteneurs",
  "AD075F1B91C6FE90F732": "Par défaut, GenAIScript utilise [node:lts-alpine](https://hub.docker.com/_/node/) comme image de base pour le conteneur de l'action.  \nVous pouvez changer cela en spécifiant une autre image de base dans la `cli`.",
  "38264D2B0BA88B3AA84C": "GenAIScript créera également un [devcontainer](https://code.visualstudio.com/docs/devcontainers/create-dev-container) afin que vous puissiez développer l’action dans un environnement conteneurisé (presque identique) à celui où elle s’exécute dans GitHub Action.",
  "30E982E8C960CAF90DF1": "ffmpeg, playwright et autres paquets",
  "964D26AC76A053015F58": "Pour garder le conteneur d’action léger, GenAIScript n’inclut pas `ffmpeg`, `playwright` ni d’autres paquets par défaut.  \nVous pouvez les ajouter au conteneur en les spécifiant dans la commande de la `cli`.",
  "2E767747E7500D0F6551": "Vous pouvez également ajouter tous les autres paquets nécessaires en les indiquant dans la commande `cli`.",
  "27E7079D0D92FE1374B5": "Tests de l’Action",
  "70011A70F87EE894F940": "Votre script devrait être testable localement en utilisant la commande `npm run dev`. N’hésitez pas à la modifier dans `package.json`.",
  "F2A67025AA9FE4C680AE": "Ou si vous souhaitez simuler l’environnement GitHub Action, vous pouvez définir les variables `INPUT_<paramètre>` dans l’environnement.",
  "F96B1FE9EC7BBBFE0973": "Workspace GitHub vs Workspace Action",
  "6537A8303C212BEC83A9": "Lors de l’exécution de l’action dans un conteneur, le contenu du dépôt de l’action est d’abord copié dans le répertoire `/github/action`. GitHub clone le dépôt dans le répertoire `/github/workspace`.",
  "44BC2FA5BA77D5D2ECF9": "Le `ENTRYPOINT` du `Dockerfile` est configuré pour lancer la CLI `genaiscript` dans le répertoire `/github/action`, puis il détecte la variable d’environnement `GITHUB_WORKSPACE` pour déterminer le répertoire de travail et change le `cwd` en conséquence.",
  "E806E16D11491ED1316F": "Ce mode est activé par l’option `--github-workspace` dans la commande `cli`.",
  "7228D0E9D8E1E072D81F": "GenAIScript prend en charge les fichiers de configuration locaux et globaux pour permettre la réutilisation des paramètres de configuration courants et des secrets entre plusieurs scripts.",
  "845E0EB2FFDE571A4988": "Résolution des fichiers .env",
  "A941447795653A390213": "GenAIScript va scanner et charger les fichiers `.env` suivants dans l’ordre suivant :",
  "B2F3528B2A84F56BF5D8": "Propriété `envFile` dans les fichiers de configuration (voir ci-dessous)",
  "E74BBEBB3FE59CFFDAA9": "Variable d’environnement `GENAISCRIPT_ENV_FILE`",
  "39873336A5F5A6153AB8": "Options de ligne de commande `--env`",
  "77055CBD200C3CF8E348": "Si aucune des options ci-dessus n’est définie, il essaiera de charger les fichiers suivants :",
  "1CDA45618681A3558043": "`~/.env`",
  "E1840084BDB6E24AEA25": "`./.env`",
  "7F865EB35C3303D5B281": "`./.env.genaiscript`",
  "6BB10E07F6C307EE88C5": "Résolution des fichiers de configuration",
  "04A8FC7A34E39179FE56": "GenAIScript va scanner les fichiers de configuration suivants\net fusionner leur contenu dans la configuration finale.",
  "491C467FF0ADB0AF550D": "`~/genaiscript.config.yaml`",
  "5E8A3660671EBE333F90": "`~/genaiscript.config.json`",
  "C184FF66BC377313B834": "`./genaiscript.config.yaml`",
  "9CB19DF54E5CDE503067": "`./genaiscript.config.json`",
  "A5B652E4699071DEACCA": "Les fichiers JSON supportent le format [JSON5](https://json5.org/) (y compris les commentaires, les virgules finales, etc.).",
  "7D3271B7BF3AC975B3EE": "Schéma",
  "873516FE72C3220D86DC": "Le schéma de configuration est disponible à l’adresse [https://microsoft.github.io/genaiscript/schemas/config.json](https://microsoft.github.io/genaiscript/schemas/config.json).",
  "873C3707FEB63946953B": "Propriété `envFile`",
  "30DE10384595E2BE1BFD": "L’emplacement final de `envFile` sera utilisé pour charger le secret dans les variables d’environnement. Elle supporte un seul fichier.",
  "416C582E276EF512488F": "Propriété `include`",
  "504A743CF94E4CB489E4": "La propriété `include` vous permet de fournir des chemins globaux pour inclure davantage de scripts.\nCombinée à un fichier de configuration global, cela permet de partager des scripts entre plusieurs projets.",
  "8EE12BE45D39BB1BA0FB": "Propriété `modelAliases`",
  "CFC2DFD8D056B1FCACE9": "La propriété `modelAliases` vous permet de définir des alias pour les noms de modèles.",
  "D161A57A6CCA87CB5C64": "Propriété `modelEncodings`",
  "D064426577D8F3383263": "La propriété `modelEncodings` vous permet de définir l’encodage pour le modèle.",
  "1C8670C502E7E2D24F89": "Débogage",
  "41643461C41EAA91EDCA": "Activez la catégorie de débogage `config` pour voir des informations supplémentaires sur la résolution de la configuration.",
  "CC2A013BBE6AFF9166D9": "Vous pouvez également activer d’autres catégories de débogage pour obtenir des journaux plus détaillés.",
  "E10D71BE6C277A17B31D": "![Une capture d'écran d'Azure AI Foundry.](./azure-ai-foundry.png)",
  "E3FF4B8B10D4FB32BBBF": "GenAIScript prend en charge nativement divers services de [Azure AI Foundry](https://learn.microsoft.com/en-us/azure/ai-foundry/).",
  "11AD527EB1B6E2B8EFD0": "Authentification",
  "21910BD607CBCDCA2716": "GenAIScript prend en charge l'authentification par clé via des variables d'environnement ainsi que l'authentification Microsoft Entra pour chaque service.",
  "343BCDCC0F59585F6594": "Services Azure OpenAI et IA",
  "4B3CD0A735A31F50DF38": "GenAIScript peut effectuer des inférences sur les LLM hébergés dans Azure AI Foundry.",
  "F3AD1CF1516DADEA3DE8": "GenAIScript prend en charge 4 types de déploiements Azure :",
  "E9E806CDEF74010B4EBC": "[Azure OpenAI](/genaiscript/configuration/azure-openai)",
  "96A58760B2863B7453E9": "[Azure AI Inference](/genaiscript/configuration/azure-ai-foundry##azure-ai-inference)",
  "427662048D3E60CCB75B": "[Azure OpenAI Serverless](/genaiscript/configuration/azure-ai-foundry/#azure-ai-openai-serverless)",
  "07895FC92C6C51983129": "[Modèles Serverless Azure AI](/genaiscript/configuration/azure-ai-foundry/#azure_serverless_models)",
  "3EA81FB6C017338E4443": "Recherche Azure AI",
  "0B293A92706A9B8DBDD5": "[Azure AI Search](https://learn.microsoft.com/en-us/azure/search/search-what-is-azure-search) est un moteur de recherche hybride puissant combinant recherche vectorielle et par mots-clés dans une base de données.",
  "CDC4EEF4D1599F7C79EC": "[Recherche Vectorielle](/genaiscript/reference/scripts/vector-search/#azure-ai-search)",
  "22405D7B8E55D9BFEBAC": "[Configuration](/genaiscript/configuration/azure-ai-search)",
  "FAD9CD47BC276C7A5833": "Sécurité de contenu Azure",
  "C0B308DA01BB9CD9EA3D": "[Azure Content Safety](https://learn.microsoft.com/en-us/azure/cognitive-services/content-safety/) est un service qui vous aide à identifier et filtrer les contenus nuisibles dans vos applications.",
  "E4F6B48E5E4A6383FBF2": "GenAIScript offre une prise en charge intégrée pour utiliser Azure Content Safety, depuis l'analyse d'une partie de l'invite jusqu'à l'analyse des réponses des LLM ou des serveurs MCP.",
  "0E812E2CCC4B8655560C": "[Configuration](/genaiscript/reference/scripts/content-safety/#azure-ai-content-safety-services)",
  "6437D0BA78ED08C3B3D9": "Les paramètres suivants peuvent être accessibles via la commande **Préférences : Ouvrir les paramètres utilisateur**.",
  "11FE06146AACEECCBB5F": "CLI",
  "7333433CAC4026332519": "Ces paramètres contrôlent la manière dont le serveur GenAIScript\nest exécuté depuis l'extension.\nPar défaut, l'extension utilise [npx](https://www.npmjs.com/package/npx) et la version actuelle de l'extension pour exécuter le CLI GenAIScript.",
  "BC26B6EC4103E4C4FB62": "Chemin",
  "84A6125C94CBDAE5FB7A": "Si vous avez une version spécifique du CLI installée, vous pouvez définir son chemin ici.",
  "789D27B357A09D992811": "Version",
  "0C17EB523BE546D4A5D8": "Par défaut, l'extension utilise npx et la version actuelle de l'extension. Vous pouvez remplacer le numéro de version avec ce paramètre.",
  "A8E99712CBEFDB597903": "Masquer le terminal du serveur",
  "3126AA8D111D81AD7DB4": "Par défaut, le terminal du serveur GenAIScript est caché après le démarrage du serveur. Activer ce drapeau ouvrira un terminal où vous pourrez inspecter les journaux du serveur GenAIScript.",
  "AEF1CAE1C9218FDE8854": "Diagnostics",
  "CBDE43D6CDB34E2DB849": "Ce drapeau active diverses options de journalisation supplémentaires et comportements pour aider à diagnostiquer les problèmes avec le serveur GenAIScript.",
  "40164E6D13C3BEE03992": "L'extension GenAIScript pour Visual Studio Code offre un moyen pratique d'exécuter des scripts directement depuis l'éditeur.",
  "5F29D356A1847277B702": "Il existe principalement deux façons d'exécuter des scripts :",
  "1DF129027C9B5FB9A906": "exécuter un script « directement ». Ce scénario est utile lors du débogage d'un script ou pour un script qui ne nécessite aucun fichier d'entrée.",
  "688664004F497918826F": "exécuter un script à partir de fichiers ou dossiers d'entrée. Ce scénario est utile lorsque vous souhaitez exécuter un script sur plusieurs fichiers ou dossiers.",
  "2A7CB8278B53E289CCD6": "Exécution directe des scripts",
  "478571C52640F3B9DCC8": "ouvrir un fichier GenAIScript dans l'éditeur",
  "D0890C60C978E6996858": "cliquer droit dans l'éditeur et sélectionner **Exécuter GenAIScript** dans le menu contextuel",
  "0596A478FF91517A1BEC": "ou cliquer sur l'icône **Exécuter GenAIScript** dans le coin supérieur droit de l'éditeur",
  "47EE6A45D60C2672FC92": "Cela lancera l'exécution du script en utilisant les fichiers d'entrée par défaut spécifiés dans le champ `files` du `script`.",
  "2995068278DD17632135": "Ce mode est utile lors du développement d'un script ou pour les scripts qui ne nécessitent aucun fichier d'entrée.",
  "A992D86120A99E1A450B": "Exécution des scripts à partir de fichiers ou dossiers d'entrée",
  "3F303F401E86AB8641E5": "Ce mode permet d’exécuter des scripts sur n’importe quelle combinaison de fichiers et dossiers, qui alimenteront `env.files`.",
  "426481EF7B3A9C2BEF0E": "Depuis la fenêtre de l’explorateur :",
  "AC89A1C5EA8D79E2C38A": "sélectionnez n'importe quel fichier ou dossier dans l'explorateur. Vous pouvez utiliser la touche `Ctrl` ou `Shift` pour sélectionner plusieurs fichiers ou dossiers.",
  "08E6EF33D37C8383E5DC": "cliquez droit et sélectionnez **Exécuter GenAIScript** dans le menu contextuel",
  "8726DD26253DC3856C40": "Depuis un éditeur",
  "891FBB6766ED4C263FB3": "ouvrez un fichier dans l'éditeur (pas un fichier GenAIScript)",
  "E6E1C15E1E08DD6F2AE5": "Utilisation du texte sélectionné dans votre script",
  "5B2028FA5202593D2395": "Chaque fois que vous lancez un script, GenAIScript récupère le texte sélectionné dans l’éditeur de texte actif et le stocke dans la variable `editor.selectedText`.",
  "50206C7C0607DD4C2A08": "Cette valeur sera indéfinie si vous exécutez votre script depuis la ligne de commande, vous devez donc gérer ce cas dans votre script.",
  "31407C3A5D1FFDDC0103": "Règles du fichier .gitignore",
  "27F0A2DBE88BC9249BC8": "GenAIScript tente de respecter les **règles `.gitignore` de premier niveau dans l'espace de travail du projet** (il ignore les fichiers .gitignore imbriqués). Cela signifie que si vous avez un fichier `.gitignore` dans votre projet, GenAIScript ignorera tous les fichiers ou dossiers exclus par Git.",
  "7B47F12FD43B7DA31A20": "Il existe des exceptions à cette règle :",
  "175D7A8ED82629867504": "si vous exécutez **Exécuter GenAIScript** sur des fichiers individuels, ces fichiers ne sont pas filtrés par `.gitignore` puisque vous les avez explicitement choisis. Les dossiers sont toujours filtrés.",
  "679589FBE81F1D4DFA49": "si vous spécifiez `---ignore-git-ignore` dans la ligne de commande, GenAIScript ignorera le fichier `.gitignore` et exécutera le script sur tous les fichiers et dossiers.",
  "CA2DD7C6A6FA19E06B4B": "GenAIScript est pris en charge par une extension [Visual Studio Code](https://code.visualstudio.com/) qui offre un ensemble complet de fonctionnalités pour créer, déboguer et déployer des GenAIScripts.",
  "5061B8FBFB99DE055FF3": "Le [Visual Studio Code Marketplace](https://marketplace.visualstudio.com/items?itemName=genaiscript.genaiscript-vscode) contient la dernière version stable de l’[extension](https://marketplace.visualstudio.com/items?itemName=genaiscript.genaiscript-vscode).",
  "AA89C32B38BA808BF154": "[Télécharger](https://marketplace.visualstudio.com/items?itemName=genaiscript.genaiscript-vscode)",
  "7922F4640E442286ABF7": "[Instructions d'installation](/genaiscript/getting-started/installation/#visual-studio-code-extension)",
  "70501802CD84E3B26A85": "[Exécution des scripts](/genaiscript/reference/vscode/running-scripts/)",
  "DBD9A03FFCDE44A37839": "[Intégration Copilot Chat](/genaiscript/reference/vscode/github-copilot-chat/)",
  "22C6E571ACE5F7854B36": "[Paramètres](/genaiscript/reference/vscode/settings/)",
  "6A2A680763F23F9D4413": "GenAIScript s'intègre avec [GitHub Copilot Chat](https://marketplace.visualstudio.com/items?itemName=GitHub.copilot-chat)\nen fournissant un **participant de chat** qui vous permet d'exécuter des scripts dans le contexte d'une conversation de chat,\net une **invite personnalisée** pour générer GenAIScript plus efficacement avec Copilot Chat.",
  "108EC66DAC13F93A4614": "Si vous devez vérifier votre quota de requêtes premium disponible pour GitHub Copilot, rendez-vous sur [Fonctionnalités](https://github.com/settings/copilot/features)",
  "990BC127513EB866A2EC": "Le [participant de chat](https://code.visualstudio.com/api/extension-guides/chat#parts-of-the-chat-user-experience) `@genaiscript` vous permet d'exécuter des scripts sans le contexte \nd'une conversation [GitHub Copilot Chat](https://marketplace.visualstudio.com/items?itemName=GitHub.copilot-chat).\nCela est utile pour exploiter des scripts existants dans une session de chat interactive.",
  "334BE9B251575231BB99": "La commande `/run` attend un identifiant de script comme premier argument (par exemple, `/run poem`). Le reste de la requête est \ntransmis au script sous la variable `env.vars.question`.",
  "BF9A3B401BB9FFA049E4": "Si vous omettez la commande `/run`, GenAIScript recherchera un script nommé `copilotchat`. S'il en trouve un, il l'exécutera.\nSinon, il vous demandera de choisir un script dans la liste des scripts disponibles.",
  "1B86AEF6ABBBA69171A2": "Si votre script ne spécifie pas de modèle, GenAIScript vous invitera à en choisir un.\nVous pouvez également spécifier quel modèle choisir dans la configuration du script en utilisant le fournisseur `github_copilot_chat`.",
  "F0FC38E7780394DBB875": "modèle actuellement sélectionné : `github_copilot_chat:current`",
  "1ADDD79AE9B6E02E6F8B": "gpt-4o-mini : `github_copilot_chat:gpt-4o-mini`",
  "CE9B7151C16B872DE299": "Lorsque GenAIScript vous invite à choisir un modèle, il stocke vos choix dans les paramètres de l'espace de travail\nsous",
  "5F0A99908E47E7F89166": "**Les modèles GitHub Copilot Chat sont uniquement disponibles dans Visual Studio Code.** Ils ne fonctionneront pas depuis\nles interfaces [cli](/genaiscript/reference/cli) ou [playground](/genaiscript/reference/playground).",
  "E068101E4F75C2E8356C": "Disponibilité des modèles",
  "D4F55142305AB847DA65": "Tous les modèles listés dans l'interface utilisateur de GitHub Copilot Chat ne sont pas disponibles pour les extensions tierces.\nLorsque GenAIScript tente d'accéder à un modèle non disponible, il vous en informe mais n'a pas\nde contrôle sur votre configuration d'accès aux modèles.",
  "BC8ED055101BF11EF91A": "Le contexte sélectionné par l'utilisateur dans Copilot Chat est converti en variables et transmis au script :",
  "A9A870A5621DD17864FA": "le contenu de l'invite est passé dans `env.vars.question`. L'identifiant du script est supprimé dans le cas de `/run`.",
  "68F82DD0C1AAB5919776": "le texte courant de l'éditeur est passé dans `env.vars[\"copilot.editor\"]`",
  "D8E25A2E5377F7E56447": "la sélection courante de l'éditeur est passée dans `env.vars[\"copilot.selection\"]`",
  "72DBD9217E3F7E5EF7A5": "toutes les autres références de fichiers sont transmises dans `env.files`",
  "1BBE5A0B2303339F710C": "`mermaid` générera un diagramme à partir de l'invite de l'utilisateur.",
  "ED0F09828428657B540B": "`websearcher` effectuera une recherche web pour l'invite de l'utilisateur\net utilisera le fichier en contexte dans la réponse.",
  "CADBA9F7F3B491E7CE01": "`dataanalyst` utilise les outils d'interprète de code Python pour\nrésoudre une question de calcul de données.",
  "FD702E887DD5B78E2083": "Historique",
  "B56A11471F759F4CBCC4": "L'historique des messages est transmis dans `env.vars[\"copilot.history\"]`. Il s'agit d'un tableau de `HistoryMessageUser | HistoryMessageAssistant` :",
  "FE6289CFB029232E628E": "Vous pouvez utiliser le chat `@genaiscript` pour intégrer l'exécution d'un script dans une conversation existante\nou pour continuer la conversation avec Copilot avec les résultats du script. Les résultats\ndu script sont réintégrés dans l'historique du chat et sont accessibles à tout copilot par la suite.",
  "E576FBA11867C7F965C3": "`@genaiscript /run tool` exécutera le script `tool` et réintégrera les résultats dans l'historique du chat.",
  "6933184DF8F3C79074AD": "`analyze the results` continuera la conversation avec les résultats du script.",
  "A26B40E561BEA0AF9C9C": "Le script suivant peut être utilisé comme modèle de départ pour créer le script par défaut lorsque l'utilisateur n'utilise pas la commande `/run`.",
  "ED632C0EDE1B3ACFC45A": "Les fonctionnalités suivantes ne sont actuellement pas prises en charge dans le participant de chat :",
  "C753A2BC184B2AA425F4": "Outils (`#tool`)",
  "2E2BBDE2DF436EFEB132": "Référence `Workspace`",
  "65F237D6C0F47724BD0B": "GenAIScript sauvegardera automatiquement un fichier instructions.md dans le dossier `.genaiscript/instructions`\nlorsque vous exécutez un script. Ce fichier contient les instructions utilisées pour générer le script.",
  "923646F96A6358E7888C": "Voici comment démarrer une session de chat en utilisant l'invite `genaiscript`.",
  "100AAC3B339B43830210": "Sélectionnez l'icône **Attacher le contexte** 📎 (`Ctrl+/`), puis sélectionnez **Instructions...**,\npuis choisissez l'invite **genaiscript.instructions.md**.",
  "6C23EAE3F5180F5B7158": "Incluez des instructions pour écrire un script ou répondre à une question concernant GenAIScript,\n`write a script that summarizes a video`.",
  "E183FEADE39D25FB5D5B": "Comme l'invite injecte la documentation complète de GenAIScript (plus de 700 ko au moment de la rédaction),\nil est recommandé d'utiliser un modèle avec un grand contexte comme Sonnet ou Gemini.",
  "A537CEEA554A57984448": "N'oubliez pas non plus que la conversation entière est renvoyée à chaque itération, cette technique\nfonctionne donc mieux pour une requête détaillée en une seule fois.",
  "4D2C8FDF295D23A310D3": "[GitHub Gists](https://gist.github.com/) sont un moyen simple de partager des extraits de code et des notes avec d'autres.\nCe sont essentiellement des dépôts Git qui peuvent être créés et partagés facilement.\nLes gists peuvent être publics ou secrets, et ils supportent la gestion des versions, ce qui en fait un excellent outil de collaboration.",
  "8EFD976CE0E83471D10B": "![Une capture d'écran de GistPad dans Visual Studio Code](./gistpad.png)",
  "BBEF98E50C9F08DD49FB": "Exécution de GenAIScript à partir des Gists",
  "7F287B51F8F679B6AE9D": "GenAIScript prend en charge les formats d'URL suivants pour exécuter des scripts directement depuis un gist.",
  "F844DBCECA27B12BE51E": "`gist://<identifiant du gist>/<nom du fichier>`",
  "C9EB07C18E7A619F33C3": "`vscode://vsls-contrib.gistfs/open?gist=<identifiant du gist>&file=<fichier>`",
  "C0A94708A61B2353486F": "Le fichier gist est mis en cache localement dans `.genaiscript/resources` puis exécuté. Si disponible,\nil utilise les informations de connexion GitHub pour accéder aux gists privés.",
  "8B8080015F20FAB9FFFE": "GenAIScript utilise des fichiers JavaScript, assurez-vous donc d'exécuter uniquement des gists en lesquels vous avez confiance.",
  "A739C00EC73F309ECBC7": "GistPad dans Visual Studio Code",
  "31AE238F056610022452": "L'[extension GistPad](https://marketplace.visualstudio.com/items?itemName=vsls-contrib.gistfs)\npour Visual Studio Code vous permet de créer, modifier et gérer des gists directement depuis votre éditeur.",
  "6B61DA24C146DEEBB34F": "Vous pouvez ouvrir un fichier dans un Gist et l'exécuter en utilisant la commande `genaiscript`.",
  "B26CB2D66294BB5D7838": "Vérification de type",
  "1DE05440A87FDD5361C5": "Pour activer la vérification de type, nous devons télécharger le fichier `genaiscript.d.ts` dans le gist et y ajouter une référence\nen ajoutant ce commentaire **en haut du fichier** :",
  "CE80E13A9356B42143C9": "Cela peut être fait automatiquement :",
  "FC8102FDD34F21C38BA9": "clic droit sur le fichier GenAIScript du Gist",
  "A0DFE9A013C2CB04FE2F": "sélectionnez `GenAIScript: Fix Type Definitions`",
  "D5C474AA587EC724643E": "Vous pourriez être invité à autoriser GenAIScript à utiliser votre compte GitHub. GenAIScript demandera un jeton avec le scope `gist` pour uploader les fichiers manquants.",
  "8C14EADB1948273A6EA3": "Pour charger les types de GenAIScript, il faudra \"pousser\" un peu le compilateur TypeScript :",
  "04FD5119F70B6596E187": "ouvrez le fichier `genaiscript.d.ts` depuis l'arborescence GistPad (cela charge les types en mémoire)",
  "2F498FCB0E6583BEB3A4": "ouvrez votre fichier GenAIScript dans l'arborescence GistPad et la vérification de type devrait fonctionner !",
  "20B7C470B9ECC60783D5": "Comme l'extension GistPad n'est pas un IDE complet, certaines limitations sont à noter :",
  "352FDF9CEBDEA7EA658F": "les imports ne se résoudront probablement pas",
  "CF4F3C77DE37D2885966": "GenAIScript s'exécute dans un environnement Node.JS (légèrement modifié) où des variables globales supplémentaires ont été ajoutées.\nCet environnement est configuré par le [cli](/genaiscript/reference/cli).\nPar conséquent, pour exécuter un GenAIScript dans un processus Node.JS \"vanilla\", vous devrez utiliser\n**l’API `run` de Node.JS**. Cette API charge et exécute un script GenAIScript dans un thread worker séparé.",
  "8D7DA0AF7B41FCE74172": "Cette page décrit comment importer et utiliser GenAIScript comme une API dans votre application Node.JS.",
  "7753E8C14E7C4756CFB5": "En supposant que vous ayez ajouté le cli comme dépendance dans votre projet,\nvous pouvez importer le [cli](/genaiscript/reference/api) de la manière suivante :",
  "A04BD6C3AD038A807B91": "Utilisation",
  "7484A2962DF619B257B4": "L’API peut être importée via des imports depuis **\"genaiscript/api\"**.",
  "26BD2DCE4EDBE4482C73": "Le wrapper `api.mjs` importé est un chargeur très léger, sans dépendance,\nqui crée un [thread worker Node.JS](https://nodejs.org/api/worker_threads.html) pour exécuter GenAIScript.",
  "DF882421E3044C11AB5A": "Pas de pollution des variables globales",
  "17E71BB1FAAC3F1EC308": "Pas d’effets secondaires sur le processus",
  "1A1E7D77D7E6EC10934A": "`run`",
  "414C1850FC39EAE577BC": "La fonction `run` encapsule la commande [cli run](/genaiscript/reference/cli/run).",
  "8033DBB5F89D3C4C03E8": "Variables d’environnement",
  "508D2AEFF487BA0CB6BB": "Vous pouvez définir les variables d’environnement pour le processus GenAIScript en passant un objet via le champ `env` dans les options. Par défaut, le worker héritera de `process.env`.",
  "2BB6B53267DB9352A653": "Certaines des [capacités de traitement vidéo](/genaiscript/reference/scripts/videos) sont également disponibles dans la CLI.",
  "D6DD6F5C4A2BED153DB4": "`video probe`",
  "2AD3BA35589513C57C9D": "Renvoie le résultat de `ffprobe` dans la console.",
  "874C14DC7962E2A556D6": "`video extract-audio`",
  "51F771A4E8FE4A2A6F10": "Extraie l'audio dans un format plus léger, optimisé pour la transcription.",
  "333B4EB0F2089AD04215": "`video extract-frames`",
  "C116DDAD95AC9D621E2E": "Extrait des captures d'écran de la vidéo. Vous pouvez spécifier des timestamps en secondes ou en `h:mm:ss`, ou un nombre de vidéos.",
  "069CC231AD70EE02BD41": "Exécute les tests dans les scripts en utilisant [promptfoo](https://www.promptfoo.dev/).",
  "FFD8E65FCE64B7CF45F8": "Vous pouvez remplacer les modèles utilisés dans les tests avec `--models` :",
  "A2E2D442D2575ED67E28": "Cette fonctionnalité nécessite d’ajouter `@genaiscript/api` aux dépendances de votre `package.json`.",
  "842941C43903CADB58D7": "visualiseur de résultats",
  "254E55A2F410E1CE12CC": "Exécutez la commande `test view` pour lancer le visualiseur des résultats de test :",
  "80BF90D74027306B0032": "Lancez un serveur web local utilisé pour exécuter le playground ou Visual Studio Code.",
  "F84285E5F83BD2E1C31C": "Exécutez depuis la racine de l’espace de travail :",
  "8752815C58FBC39FC9E2": "port",
  "26CF07825768C3FBDBD2": "Le port par défaut est `8003`. Vous pouvez spécifier le port en utilisant le drapeau `--port`.",
  "B4323010FBC2A8D13125": "Clé API",
  "5B0C364287600FDCDB2E": "La clé API est utilisée pour authentifier les requêtes vers le serveur. Vous pouvez spécifier une clé API en définissant le drapeau `--api-key` ou la variable d’environnement `GENAISCRIPT_API_KEY`.",
  "24C6997F2A928956670F": "ou",
  "DF3D7E25348C78AACE7D": "La clé API peut être définie dans l’en-tête `Authorization` d’une requête ou dans le paramètre de requête URL `api-key` (`http://localhost:8003/#api-key=my-api-key`)",
  "AC9CD23E12B11CA06625": "CORS",
  "ED4FFE1BF862B65D88DA": "Vous pouvez activer le [Cross Origin Shared Resource](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) en utilisant le drapeau `--cors` ou en définissant la variable d’environnement `GENAISCRIPT_CORS_ORIGIN`.",
  "B242FDE851B36006373B": "Réseau",
  "5C11F64A84724E2C6998": "Vous pouvez lier le serveur à `0.0.0.0` et le rendre accessible depuis le réseau en utilisant le drapeau `--network`. Ce drapeau est nécessaire pour rendre le serveur accessible depuis un conteneur.",
  "F4DB90C31C6C65275BB0": "Nous recommandons vivement de définir la clé API lors de l’exécution du serveur sur le réseau.",
  "541CE9DAB390F97FE01A": "Dockerisé",
  "EB7BC5D76FBE1336AABC": "Pour exécuter une image docker minimale avec le serveur, commencez par créer une image docker avec genaiscript et tout outil requis.",
  "1E3E003842E1BBE6AC90": "Cela crée localement une image `genaiscript` que vous pouvez utiliser pour lancer le serveur.",
  "E28F7B889ACCC2B694CB": "puis ouvrez `http://localhost:8003` dans votre navigateur.",
  "EF651AA6F7EAC04D9472": "Points de terminaison API OpenAI",
  "B272FDD3BBDE7C94AF07": "Le serveur implémente divers points de terminaison compatibles avec l’API OpenAI. Vous pouvez utiliser le serveur comme proxy vers l’API OpenAI en activant le drapeau `--openai`. Les routes peuvent être utilisées pour fournir un accès stable aux LLM configurés à d’autres outils tels que promptfoo.",
  "9EBBEA64585045F87C10": "Cela activera les routes suivantes :",
  "A5F7E4843A3C2BE653A5": "`/v1/chat/completions`",
  "E95E69F8C15E5748A431": "Principalement compatible avec l’API de complétions de chat d’OpenAI. Le serveur transmettra les requêtes à l’API OpenAI et retournera la réponse.",
  "C5633987F3D74DF8D05D": "`stream` n’est pas pris en charge.",
  "9FB230BE6D0E2E499474": "`/v1/models`",
  "3C4E2BB160E5BC2279DC": "Renvoie la liste des modèles et alias disponibles sur le serveur.",
  "C159DF1AC0C51459BF28": "Créez des commentaires de revue de pull request à partir de chaque [annotations](/genaiscript/reference/scripts/annotations)\n([exemple](https://github.com/microsoft/genaiscript/pull/564#pullrequestreview-2151692644)).",
  "517F04608C13AEA9932E": "L’interface en ligne de commande GenAIScript **`genaiscript`** exécute des scripts GenAIScript\nen dehors de Visual Studio et dans votre [automatisation](/genaiscript/getting-started/automating-scripts).",
  "5FDC77A2A78E82368562": "Prérequis",
  "86FFE9B9BFF27ECF90C6": "L’interface CLI est un paquet Node.JS hébergé sur [npm](https://www.npmjs.com/package/genaiscript).",
  "7E8BD9C44A23ADB5BCAA": "Installez [Node.JS LTS](https://docs.npmjs.com/downloading-and-installing-node-js-and-npm) (Node.JS inclut npm et npx).",
  "2AFDF71C1973831FF8B7": "Vous avez besoin d’au moins Node.JS v22 !",
  "38B4D31606433BF06579": "Installation",
  "AFB54B9C591DB28C8268": "Installez-le localement comme une `devDependency` dans votre projet.",
  "2F540409002257D98213": "Installez-le globalement.",
  "1FCFC708182ECEDD9255": "Vérifiez que votre version de node est au moins 20._ et npm 10._ en exécutant cette commande.",
  "5475FBB5744ECCF1756E": "Pas d’installation (`npx`)",
  "C1559A56191F300D6873": "`npx` est installé avec **Node.JS**.",
  "356636BCA9F4B145CE9C": "En utilisant [npx](https://docs.npmjs.com/cli/v10/commands/npx),\nvous pouvez exécuter la CLI sans aucune étape d’installation préalable.\n_npx_ installera l’outil à la demande. npx gère aussi les problèmes complexes\ndu système d’exploitation où l’outil n’est pas trouvé dans le chemin.",
  "9263D3A6764BEAC83F50": "Ajoutez `--yes` pour passer la confirmation, ce qui est utile dans un scénario CI.",
  "DA32E590070C6D0E3863": "Spécifiez la plage de versions pour éviter des comportements inattendus avec des installations mises en cache de la CLI avec npx.",
  "2D5C8D2B2AD926F317B1": "Scripts d’aide",
  "5DC2B2EAB02CD08D555B": "Pour vous assurer que les fichiers de définition TypeScript sont écrits et mis à jour,\nvous pouvez ajouter les scripts suivants à votre `package.json`.",
  "FFC08FA2D3CE012C6298": "`genaiscript` est aussi un raccourci qui facilite l’invocation de la CLI\navec `npm run` :",
  "ED46475BA62B9B9DEDE3": "Travail derrière un Proxy",
  "F29D375C12E9C3015A11": "Certains paquets optionnels utilisés par la CLI ne supportent pas une installation derrière un proxy HTTP,\nce qui est très courant en environnement d’entreprise.",
  "BA8D001DE73290DD3BA6": "Si votre environnement de travail nécessite de passer par un proxy,\nvous devriez utiliser `npm install --omit=optional`\npour que les paquets optionnels échouent proprement durant l’installation.",
  "5306AC6356A62A3383F3": "Si votre environnement de travail nécessite de passer par un proxy,\nvous pouvez définir l’une des variables d’environnement suivantes\n(`HTTP_PROXY`, `HTTPS_PROXY`, `http_proxy` ou `https_proxy`) pour que la CLI utilise un proxy,\npar exemple `HTTP_PROXY=http://proxy.acme.com:3128`.",
  "AC1ADC555DC5FBF9A086": "La CLI chargera les [secrets](/genaiscript/getting-started/configuration) depuis les variables d’environnement ou un fichier `./.env`.",
  "3E375CD933939DB51E6C": "Vous pouvez remplacer le nom par défaut du fichier `.env` en ajoutant le fichier `--env .env.local`,\nou même importer les deux.",
  "516A0EFB9F2DF0EAD1DD": "Créer un nouveau script",
  "3A98A9539792AA9D1D91": "Crée un nouveau fichier script dans le dossier `genaisrc`.",
  "B04A8603E572DD8BDCAE": "Compiler les scripts",
  "2CC76FE6FC0622E40E31": "Exécute le compilateur TypeScript pour détecter les erreurs dans les scripts.",
  "31324364539AFF0736B1": "Exécuter un script",
  "F0D58279AD1F6D3EB177": "[Exécute un script](/genaiscript/reference/cli/run) sur un fichier\net transmet la sortie LLM vers stdout. **Exécuter depuis la racine du workspace**.",
  "458CA9FE07757BF64AEE": "où `<script>` est l’identifiant ou chemin de fichier de l’outil à exécuter, et `[files...]` le nom du fichier spec sur lequel l’exécuter.",
  "4D8EFD848AABECFEBD28": "La CLI supporte aussi le piping de style UNIX.",
  "9C66F7A783A3A397C6B7": "Lister la configuration du modèle",
  "C835F971781F09B8E39E": "Exécutez la commande `scripts model` pour lister les scripts disponibles et leur configuration de modèle. Cela peut être utile pour diagnostiquer des problèmes de configuration dans les environnements CI/CD.",
  "5B62B4FA40E0A92C2651": "où \\[script] peut être un identifiant de script ou un chemin de fichier.",
  "B7C908046959C1E0BFD4": "Utiliser la CLI en tant qu’API Node.JS",
  "BECE2B986062CD49FC66": "La CLI peut être importée et [utilisée comme une API dans votre application Node.JS](/genaiscript/reference/api).",
  "4AC5251CC78677F57294": "À propos du mélange entre fichiers et `--vars`",
  "7AF6C47D4E02FDA93A3D": "Les deux paramètres `files` et `--vars` sont des arguments de ligne de commande variables. C’est-à-dire qu’ils consommeront toutes les entrées suivantes jusqu’à ce qu’une nouvelle option commence. Par conséquent, l’ordre est important lors de leur mélange. Il est préférable de placer les fichiers, puis de suivre avec l’option `--vars`.",
  "9F0D8B3305A3BDCD1A54": "[ambiguïté de parsing](https://github.com/tj/commander.js/blob/HEAD/docs/options-in-depth.md#parsing-ambiguity)",
  "59573FD72C931BEECE5D": "Sujets",
  "376E90C4790B5D57AACC": "Convertit un ensemble de fichiers, séparément, à l'aide d'un script.",
  "92922F9185C0B7A5FEC7": "où `<script>` est l'identifiant ou le chemin du fichier de l'outil à exécuter, et `<files...>` est le nom du fichier de spécifications sur lequel l'exécuter.\nContrairement à `run` qui traite tous les fichiers en une seule fois, `convert` traite chaque fichier individuellement.",
  "1E6B9CE425E7BEFC5EF2": "`convert` prend un ou plusieurs motifs [glob](https://en.wikipedia.org/wiki/Glob_\\(programming\\)) pour correspondre aux fichiers dans l’espace de travail.",
  "D10A44D0F1F798CA3740": "--excluded-files \\<files...>",
  "FBA678640062E8E38C33": "--exclude-git-ignore",
  "20CA6B1E35EBD40E54EB": "La sortie de chaque fichier est enregistrée dans un fichier nouveau ou existant. Vous pouvez contrôler la logique pour décider quelle partie de la sortie sauvegarder et où la sauvegarder.\nPar défaut, le résultat de la conversion d’un fichier `<filename>` est enregistré dans un fichier `<filename>.genai.md`.",
  "231CF6659C3D831B2F48": "--suffix \\<suffix>",
  "1BB91812DDF80118C12E": "L’option `--suffix` vous permet de spécifier un suffixe à ajouter au nom du fichier de sortie.",
  "E1B40AB5FA0A30A7FC3A": "GenAIScript \"délimite\" automatiquement la sortie dans le markdown correspondant au suffixe (après `.genai`). Ainsi, si le LLM génère",
  "84924FF3B5D3F891604B": "Le contenu converti dans `<filename>.genai.txt` sera `:)`.",
  "079571CBAB4FCC709ECF": "--rewrite",
  "A627E5FB828A5949C8AE": "Ce drapeau remplace `suffix` et indique à GenAIScript de réécrire le fichier original avec le contenu converti.",
  "C7B0B4FA843E6448216F": "--cancel-word \\<word>",
  "7C03D487E249ED74F280": "Spécifiez le mot-clé \"ignorer la sortie, rien à voir ici\" en utilisant le flag `-cw`.",
  "4A2872D7E817679396B0": "La liste complète des options est disponible dans la [référence CLI](/genaiscript/reference/cli/commands#convert).",
  "C5A3ECCF6DCABEB5AEB8": "Configure",
  "17ECC9012B80EDC8A08F": "Configurez et validez les connexions LLM.",
  "56EEF0F1D05EA10DB804": "Commande interactive pour configurer et valider les connexions LLM.",
  "44AD73C4D93F440AB7CD": "LLMs",
  "12BA179E36FD96EEF9AC": "L’action `configure llm` vous permet de configurer et de valider les connexions LLM. Cela est utile pour garantir que votre application peut communiquer avec les LLMs que vous souhaitez utiliser.",
  "31839FC95A4B8CE0EE64": "Action GitHub",
  "13791A8821660645B3EF": "L’action `configure action` génère la structure de fichiers pour publier un script en tant que [action GitHub personnalisée en conteneur](https://docs.github.com/en/actions/sharing-automations/creating-actions/creating-a-docker-container-action).",
  "41A1E96E75A82F6188EC": "La plupart des métadonnées de l'action sont extraites du script lui-même, vous n’avez qu’à fournir le nom du script. Elle exporte les fichiers générés dans `.genaiscript/action/<script-id>` par défaut, mais vous pouvez modifier cela lors de la mise à jour d’un projet d’action existant.",
  "EB0F570C4825AA65A12E": "## Actions personnalisées ",
  "D5380CBB9EA800EB7CC1": "Participant de chat `@genaiscript`",
  "9BD3020DABDE337ABD20": "Choix du script à exécuter",
  "8AC852675E31AEBC2517": "Choix du modèle",
  "DF722808CDBC12737EAD": "Contexte",
  "8DE08C2356F86E9EC85B": "Exemples",
  "30680C3DF716FE97C1E4": "Conversation continue",
  "21F2ABD094724BE71D19": "Script par défaut <a id=\"copilotchat\" href=\"\" />",
  "C856E20F37A20D0A8A36": "Fonctionnalités non prises en charge",
  "EAA894F0F4DD8A7D3508": "Instructions personnalisées `genaiscript` <a href=\"\" id=\"genaiscript-custom-prompt\" />",
  "3EAA3FF57707FA2BE6FD": "Sessions de chat augmentées",
  "6768C7863E5384832166": "Port",
  "D9EEF4DB22B2BA622134": "Le port par défaut est `8003`. Vous pouvez spécifier le port en utilisant l'option `--port`. ",
  "7482804C752E068B2127": "Clé API",
  "3F3D1CE9410B9C9A0A14": "ou la variable d'environnement ",
  "EFF6BF43C0C320C9D05A": "ou",
  "AB6FDF6C7D54799A9846": "La clé API peut être définie dans l'en-tête `Authorization` ",
  "0E9C4B506DC4B473A559": "d'une requête ou dans le paramètre de requête URL `api-key` (`http://localhost:8003/#api-key=my-api-key`) ",
  "53D24FD4F328C8F93BCC": "CORS",
  "C50FB00A3B99880AD09F": "Vous pouvez activer les ",
  "49EDCF32CEBFDF05F52A": "Ressources Partagées entre Origines (Cross Origin Shared Resource)",
  "6C4AC58796F421116D5F": "en utilisant l'option ",
  "E542B5BE86A1B14588D2": "`--cors` ou en définissant la variable d'environnement `GENAISCRIPT_CORS_ORIGIN`. ",
  "324EF919111EEE7A06A2": "Réseau",
  "C792741DD29D156BE7AD": "Vous pouvez lier le serveur à `0.0.0.0` ",
  "4F0BE2C76D797255E321": "et le rendre accessible depuis le réseau en utilisant l'option `--network`. Cette option est nécessaire pour rendre le serveur accessible depuis un conteneur. ",
  "55B4B23832A2CFA3F3FD": "Dockerisé",
  "FAD18BA65C2F585C6334": "Cela crée une image `genaiscript` localement que vous pouvez utiliser pour lancer le serveur. ",
  "67112EAC748387BEEEFB": "puis ouvrez `http://localhost:8003` dans votre navigateur. ",
  "86058B70D3C4CFF219FB": "Points de terminaison API OpenAI",
  "1461E9763457455C83C8": "Note de Transparence",
  "4C797A9E52142C945640": "Ne faites pas confiance aux scripts",
  "9B0D2D765306F014CC9F": "Ne faites pas confiance aux sorties LLM",
  "3906DE2110339D20062E": "Une extension est **désactivée** lorsque vous ouvrez un dossier en mode [Mode Restreint](https://code.visualstudio.com/docs/editor/workspace-trust) dans Visual Studio Code.",
  "4E2E2B8AF06257876C2A": "[Mode Restreint](https://code.visualstudio.com/docs/editor/workspace-trust)",
  "8F6E17C410FB44ED3407": "API",
  "6C55C39A9A2466001082": "Utilisation",
  "BB3F2F627157B3F5A7D0": "L’API peut être importée en utilisant des imports depuis ",
  "B632A3C1C9CB9568F623": "\"genaiscript/api\"",
  "4555FEF986CC6657C468": "le wrapper importé `api.mjs` est un chargeur minuscule, sans dépendance, qui\nlance un [thread worker Node.JS](https://nodejs.org/api/worker_threads.html) pour exécuter GenAIScript. ",
  "4CA3CC96F372B533F281": "Pas de pollution des variables globales",
  "9BDC24584E5CF34EF508": "Aucun effet secondaire sur le processus",
  "BC74BF3EDEE0449E567F": "fonction ",
  "60AD73EC72FC7AD47D26": "cli run",
  "B13DA320949B63AC2D91": "Variables d’environnement",
  "DD608DFF14F7D8EC0DA7": "Vous pouvez définir les variables d’environnement pour le processus GenAIScript en passant un objet comme champ `env` dans les options. Par défaut, le worker hérite de `process.env`. ",
  "8A9B50693A8B0483ED99": "L’interface en ligne de commande GenAIScript ",
  "EAC6607A1D2CA8A5DE00": "exécute des scripts GenAIScript en dehors de Visual Studio et dans votre ",
  "9216D8B1BEC14027658E": "automatisation",
  "8545F0AB706AFA311D2D": "Prérequis",
  "ECEB49CFB61D066485AE": "npm",
  "F032FED56E5D36FE7B33": "Installez ",
  "18387B9DC4EFDA179AEB": "Installation",
  "3AD5B965AC280EB00719": "Installez localement en tant que ",
  "8FDEF78E9E20EBC46528": "est installée avec ",
  "2BE4BE7D230C736BC8BA": "En utilisant ",
  "C337643E6DC40E39C2FA": "Ajoutez ",
  "AA4E07AA7F68C2B23437": "Scripts d’aide",
  "B6D5D39F314CAE98A0C7": "est également un script raccourci qui facilite l’invocation de la CLI avec ",
  "E0223D58DCAD3DFDBC1E": "Utiliser derrière un proxy",
  "9040D4A2A15B005E8694": "La CLI va charger les ",
  "33F2532989141FCECA93": "secrets",
  "CBD8DDC5388B5427F0FA": "à partir des variables d’environnement ou d’un fichier ",
  "C912D8AB27E5DAC6A716": "Vous pouvez remplacer le nom par défaut du fichier ",
  "573646FCB5067BE50AF4": ".env en ajoutant le fichier ",
  "1F2F0E02FE8879D9CAF3": "Créer un nouveau script",
  "97FCD5A893EF3DB95DBD": "Crée un nouveau fichier de script dans le dossier ",
  "59CFBAD60FAF6C44D776": "Compiler les scripts",
  "5039B87F49CC33B3DF54": "Exécuter un script",
  "7BAD855D25AF87436A36": "Exécutez depuis la racine de l’espace de travail",
  "38AE8126A940899FDAEE": "Lister la configuration du modèle",
  "D6D969392D152D15F0E2": "La CLI peut être importée et ",
  "D4AEC8EC8A663569509E": "À propos du mélange des fichiers et ",
  "767A21802A9A9EC97C11": "Les deux arguments variables de ligne de commande ",
  "9B2833D1C8FD33B37C9C": "et ",
  "EA32B52ABAD2D049BDFE": "ambiguïté d’analyse",
  "36CFE44B2029FA025172": "Sujets",
  "BAA47FB21C6FE577FA80": "désactivé",
  "38E7086CE25574291622": "lors de l'ouverture d'un dossier en ",
  "A3F1F38410D226C55896": "La sortie du LLM et la trace utilisent l'aperçu Markdown intégré de Visual Studio Code.\nPar défaut, [VS Code limite le contenu affiché dans l'aperçu Markdown](https://code.visualstudio.com/Docs/languages/markdown#_markdown-preview-security).\nCela inclut la désactivation de l'exécution de script et n'autorise le chargement des ressources que via `https`.",
  "4C3157D15CFCEEDA1C3A": "Ces assistants d'exécution fournissent une interface conviviale autour de l'écosystème [remark](https://github.com/remarkjs/remark), [mdast](https://github.com/syntax-tree/mdast), [unified](https://github.com/syntax-tree/unist) pour analyser et manipuler des documents Markdown.",
  "73BDF6BC6A9335D79792": "Pour bénéficier de la complétion de type, vous devrez installer le paquet `@types/mdast` en tant que dépendance de développement.",
  "5067E948CD93973936BB": "Manipulation de Markdown",
  "439084435C1A4773BA90": "charger les analyseurs",
  "33A619973B9C1866CFE2": "analyse en arbre mdast",
  "BD0F8AE53088074678C8": "parcourir l'arbre (voir la [documentation](https://unifiedjs.com/learn/recipe/tree-traversal/pnp))",
  "3E06BA6CCC819B59C7EA": "sérialiser l'arbre en Markdown",
  "5A4694FC5F2E98906742": "Des résultats surprenants se produisent lorsque vous demandez à plusieurs reprises au LLM de « l'améliorer » (voir [article de blog](https://minimaxir.com/2025/01/write-better-code/)).",
  "42164D5BA9C9F97AD416": "Dans cet exemple, nous utilisons la fonction `makeItBetter` du [runtime GenAIScript](/genaiscript/reference/runtime)\npour réaliser exactement cela : demander au LLM de l'améliorer pendant quelques cycles.",
  "6F009CD4997B7659F341": "Explication du code",
  "1064DCDF403CBF448867": "Passons en revue le script ligne par ligne :",
  "AAA47F1E89CC3A1C9F33": "Cette ligne importe la fonction `makeItBetter` depuis le runtime GenAIScript. Cette fonction est utilisée pour améliorer le code en répétant un ensemble d'instructions plusieurs fois.",
  "4E16E832937C12A76A68": "Cette ligne définit une constante nommée \"CODE\" qui représente les fichiers dans l'environnement. Elle met essentiellement en place le contexte pour le code qui doit être amélioré.",
  "E773F4C0531B4F6D3934": "Cette ligne est une invite pour le modèle IA. Elle demande au système d'analyser et d'améliorer le code. Le `$` est utilisé pour indiquer qu'il s'agit d'une instruction spéciale, non d'une commande de code classique.",
  "FF71600DDFC805A05149": "Cette ligne appelle la fonction `makeItBetter` avec une option pour répéter le processus d'amélioration deux fois. Elle enregistre un [participant de chat](/genaiscript/reference/scripts/chat-participants)\nqui injecte des messages dans la boucle de conversation du chat.",
  "F6DCF80905A5CA48A667": "La fonction `makeItBetter` ressemble plus ou moins à ceci. Elle enregistre une fonction de rappel qui est appelée à chaque tour de chat.",
  "85583C8A9AD62619B5E5": "Le runtime GenAIScript fournit des aides supplémentaires et permet d'utiliser le runtime dans n'importe quelle application Node.JS.",
  "4ED2CBFEF2B04D9939C9": "Pour utiliser le runtime, vous devrez installer GenAIScript dans votre projet.",
  "26E36059755EADEA14BA": "Initialisation",
  "FF1BE522F1832C9A9C62": "Si vous utilisez GenAIScript sans la CLI ou l'extension Visual Studio Code, vous devez initialiser le runtime avant d'utiliser les types ou fonctions globales.",
  "6CB142CDB9A0BAA20975": "Importer le runtime",
  "DD6CFFDCB897FE298D05": "Le runtime est disponible en tant que module. Vous pouvez l'importer avec le code suivant :",
  "F9F0481796E0CC9F6A8C": "Globaux",
  "BAE80AAFC12E011814C6": "Le runtime installe des parseurs globaux et des types de prompt en ligne. Cependant, le global `$`, `def`, etc. ne sont pas disponibles, les prompts en ligne le sont.",
  "9709D2B11EA41535455D": "Assistants",
  "7AB90F5CDE367E8A7278": "[cast](/genaiscript/reference/runtime/cast), convertir n'importe quelle donnée en sorties structurées",
  "99181C4B8C472080626D": "[classify](/genaiscript/reference/runtime/classify), classifier du texte",
  "D4ADD29111FAD030F3A0": "[makeItBetter](/genaiscript/reference/runtime/make-it-better), demander au LLM d'améliorer son résultat",
  "1BA101FAFCFD7DA201F0": "La fonction `classify` dans GenAIScript vous permet de catégoriser des entrées en fonction d'un modèle d'apprentissage automatique.\nElle fournit une interface simple pour exploiter la puissance des LLM pour les tâches de classification.",
  "4378EBDCE12CBE857B9B": "`classify` est défini dans le [runtime GenAIScript](/genaiscript/reference/runtime) et doit être importé. Il prend en entrée le texte à classer, un ensemble d'étiquettes (et des options pour le LLM) \net renvoie l'étiquette fournie par le LLM.",
  "E8A927A42FE66619078D": "L'invite encourage le LLM à expliquer ses choix **avant** de retourner l'étiquette.",
  "595EF78584AA7E5F3F21": "Les tokens des étiquettes sont renforcés à l'aide du logit-bias pour améliorer la fiabilité de la classification.",
  "848EA0254C9CA915A69C": "`classify` est fourni en tant que partie du runtime (une façon légèrement différente de regrouper les fonctionnalités de GenAIScript) et doit être importé en utilisant ce code...",
  "EF3F17AE06337B44B810": "Images",
  "0BFF879056E1BD25898F": "Vous pouvez passer une fonction qui prend un contexte d'invite\net construire la variable `DATA` de manière programmatique.\nCela vous permet de sélectionner des fichiers, des images et d'autres options GenAIScript.",
  "17B4C3026654697267B6": "Étiquettes",
  "31E3AE20FECCF72DED1E": "Le paramètre `labels` est un objet où les clés sont les étiquettes dans lesquelles vous souhaitez classer l'entrée, et les valeurs sont les descriptions de ces étiquettes. Le LLM utilise ces descriptions pour comprendre ce que chaque étiquette signifie.",
  "F07C34BB79B198C719BF": "Chaque identifiant d'étiquette doit être un mot unique qui s'encode en un seul token. Cela permet de renforcer l'étiquette à l'aide du logit-bias et d'améliorer la fiabilité de la classification.",
  "679841D2DB7E73B03F39": "Étiquette `other`",
  "CADB396CF0C3B4F28982": "Une étiquette `other` peut être automatiquement ajoutée à la liste\ndes étiquettes pour offrir une échappatoire au LLM lorsqu'il n'est pas capable de classer le texte.",
  "3C35D0795E74B754E446": "Explications",
  "8CEBDE3D5DCBA914F471": "Par défaut, l'invite de classification est réglée pour retourner un token (`maxToken: 1`) en tant qu'étiquette.\nVous pouvez activer l'émission d'une justification avant de retourner l'étiquette.",
  "27F701D81F5136119F94": "Modèle et autres options",
  "7B3D35621E94EF3C044C": "La fonction `classify` utilise par défaut l'[alias de modèle](/genaiscript/reference/scripts/model-aliases) `classify`.\nVous pouvez modifier cet alias ou spécifier un autre modèle dans les options.",
  "C033703FDBDBE5C783A2": "Les `options` sont transmises en interne à l’[invite en ligne](/genaiscript/reference/scripts/inline-prompts) et peuvent être utilisées pour modifier le comportement du LLM.",
  "F0867985AE3FDA21D0C3": "Évaluation de la qualité de la classification",
  "205B14921D02F13CA105": "GenAIScript renvoie la [logprob](/genaiscript/reference/scripts/logprobs) (et l'entropie) de l'étiquette de classification. Vous pouvez utiliser cette valeur pour évaluer la qualité du classement.",
  "867BF561F9EDC30CC24F": "Si l'étiquette a une probabilité élevée, cela signifie que c'est probablement une classification de bonne qualité. Une probabilité plus faible peut signifier que le LLM a hésité ou que d'autres étiquettes ont également été envisagées.",
  "F018AA5530178C110A0C": "Configuration",
  "4DE5F68DB2557A7885A0": "Vous pouvez désactiver les `logprobs` en définissant `logprobs: false` dans les options. Vous pouvez désactiver les `topLogprobs` en définissant `topLogprobs: false` dans les options.",
  "927E1A1358161C4FB32B": "Remerciements",
  "18FC283B36C662900085": "Cette fonction est inspirée de la classification dans [Marvin](https://www.askmarvin.ai/docs/text/classification/).",
  "D74C9FB412DDFD7A26D4": "La fonction `cast` dans GenAIScript permet de convertir du texte ou des images en données structurées.\nElle offre une interface simple pour exploiter la puissance des LLM afin d'extraire des données à partir de textes et d'images non structurés.",
  "E3B4215213714943625A": "`cast` est défini dans le [runtime GenAIScript](/genaiscript/reference/runtime) et doit être importé. Il prend le texte non structuré (ou les fichiers), un schéma JSON\net retourne les données extraites (ou une erreur).",
  "FB7F796D3582AF004A56": "`cast` est fourni en tant que partie du runtime (une façon légèrement différente d'emballer les fonctionnalités de GenAIScript) et doit être importé en utilisant ce code...",
  "FFED6962041C008394D2": "Images",
  "D578B15E0FBB0DC9C58F": "Vous pouvez passer une fonction qui prend un contexte de prompt\net construire la variable `DATA` de manière programmatique.\nCela vous permet de sélectionner des fichiers, des images et d'autres options GenAIScript. ",
  "53349ACABB223AEEC8E1": "Modèle et autres options",
  "CE53D2EBF3E96F6283C4": "La fonction `cast` utilise par défaut l'[alias de modèle](/genaiscript/reference/scripts/model-aliases) `cast`.\nVous pouvez modifier cet alias ou spécifier un autre modèle dans les options.",
  "00FC83C234082C86DF46": "options ",
  "6586D3C9EE593F4C77EC": "prompt en ligne",
  "6552767AB7FA01030775": "Remerciements",
  "C7C7CEDC12076B566475": "Cette fonction est inspirée de [Marvin](https://www.askmarvin.ai/docs/text/transformation/).",
  "A771B9660DC806F1EF44": "Commandes",
  "B0882D879EA5B4F2851A": "Liste de toutes les commandes CLI",
  "13FE33EDC0AD50A75803": "Une liste complète des commandes CLI et de leur texte d'aide respectif.",
  "2A04525AD6455682AC64": "`configure`",
  "D10EDBAA359B7582DF1C": "`configure llm`",
  "541DB3FAF4CB92606903": "`configure action`",
  "5148AA5936DDA5C46310": "`runs`",
  "10FD077F557B077544B7": "`runs list`",
  "9278EEF0B80CFB20D083": "`test`",
  "7ECE9141EB36AB2B347C": "`test run`",
  "A829B6A2731F4DAE00B2": "`test list`",
  "8965FCDC796BEF21A584": "`test view`",
  "2082AD96463C1AD697EE": "`convert`",
  "47FE08F7A407DC755A86": "`scripts`",
  "B920378E2BB384EEB775": "`scripts list`",
  "CA1DE8AE88B128C0DA6F": "`scripts create`",
  "4D82B54900D5EBE130EF": "`scripts fix`",
  "CF63CCE0751CC9CEA7D4": "`scripts compile`",
  "05B2A0DF06451AAEC6AC": "`scripts model`",
  "F8224EF910E5D4B69B00": "`scripts help`",
  "7E249976A47F2728A73D": "`cache`",
  "49B704FC3228B54A9FDA": "`cache clear`",
  "2A91342A416C1ECB45B4": "`video`",
  "3421EE3E5F5587606799": "`retrieval`",
  "92325B67ACB22D87DD31": "`retrieval index`",
  "A08B900E4FAFD6D3371B": "`retrieval vector`",
  "F9D40783F9ECD4409D99": "`retrieval fuzz`",
  "1FC882A7B2F08EEAA468": "`serve`",
  "B14ABA312D0759D2675C": "`mcp`",
  "F596D52B305AFD23AF5F": "`webapi`",
  "EA30949CDDBAC340E2FF": "`parse`",
  "32B15254BD1A876EC3CF": "`parse data`",
  "93A688D1EECB9182C414": "`parse fence`",
  "F9085998831A7BC36F17": "`parse pdf`",
  "EEE96F74ECC2321B2E74": "`parse docx`",
  "C7A725C8F0DDA1F25D5A": "`parse html`",
  "31E7D6F174E39C106786": "`parse tokens`",
  "320063B03B8F672FB2F0": "`parse tokenize`",
  "E30E0F5A0276F9983E1B": "`parse jsonl2json`",
  "38CB0B4FE6CA1F125DD7": "`parse prompty`",
  "7BA2EC85AF8CD7214DFB": "`parse jinja2`",
  "8CDE4C050F4B939632EB": "`parse secrets`",
  "E71ADA6F60F20BB5155C": "`parse markdown`",
  "11174262995A4F47B999": "`info`",
  "BA3210998ED5422216AB": "`info help`",
  "9ACEB07CA923D0358EA0": "`info system`",
  "050F2F94DB4500B02265": "`info env`",
  "FDEA83E61F9DDDFB9D0F": "`models`",
  "AFA9E3059FB6D202E711": "`models list`",
  "73D7105637500B78E87B": "`models alias`",
  "50F5696854CFC5E4AEB9": "Ces assistants d'exécution fournissent une interface conviviale autour de l'écosystème ",
  "192623A3E6C39167C4FB": "Manipulation Markdown",
  "DF63D9DB262EF5F90638": "charger les analyseurs",
  "99F451685FE47786D9A0": "analyse en arbre mdast",
  "6F8E42FB19B51DD0001E": "documentation",
  "1DBAD466B8B15714594C": "sérialiser l'arbre en Markdown",
  "F6EC65CADC0B34788F8E": "article de blog",
  "8A9DB6557BA71F49B63B": "fonction ",
  "1C62FB0FA0C558093A8E": "environnement d'exécution GenAIScript",
  "78E5AC2F684A61AFAFCA": "Explication du code",
  "39507031DE3F6475F25D": "Cette ligne importe la fonction `makeItBetter` depuis l'environnement d'exécution GenAIScript. Cette fonction est utilisée pour améliorer un code en répétant un ensemble d'instructions plusieurs fois. ",
  "8DC2440C3ED6DD127F83": "Cette ligne appelle la fonction `makeItBetter` avec une option pour répéter le processus d'amélioration deux fois. Elle enregistre un [participant au chat](/genaiscript/reference/scripts/chat-participants) qui injecte des messages dans la boucle de conversation du chat. ",
  "2E82891F0987341FE0E5": "Initialisation",
  "A9497DC41CBCE4873B95": "Importation du runtime",
  "0A19EAC13C2D14F37024": "Globaux\n\nLe runtime installe des parseurs globaux et des types de prompts en ligne. Cependant, les variables globales `$`, `def`, etc., ne sont pas disponibles pour les prompts en ligne.",
  "D89E1E87243AE9DCFE2C": "Aides\n\n* [cast](/genaiscript/reference/runtime/cast), convertir n'importe quelle donnée en sorties structurées\n* [classify](/genaiscript/reference/runtime/classify), classifier du texte\n* [makeItBetter](/genaiscript/reference/runtime/make-it-better), demander au LLM d'améliorer son résultat",
  "BB5CBD70C6C92E84770B": "cast",
  "86BF2481E9C51F0E210E": "classify",
  "3C08D7CB31DF6C1F8237": "makeItBetter",
  "D70A44F249EBE5A8C950": "`cast` est défini dans le [runtime GenAIScript](/genaiscript/reference/runtime) et doit être importé. Il prend le texte non structuré (ou les fichiers), un schéma JSON\net retourne les données extraites (ou une erreur). ",
  "4DEB2D7234FBF9C7D85B": "`cast` ",
  "C70EE2432839C578B414": "alias de modèle",
  "B7623FCC6968AA4CB400": "Cette fonction est inspirée de ",
  "CB2313051175EEE17C4D": "Marvin",
  "921465B539D0C533F20E": "L'invite encourage le LLM à expliquer ses choix ",
  "48CF6E189EF018F7E369": "avant",
  "30FCDC672876D5349F83": "Étiquettes",
  "DA8400263618A66BBAAC": "autre",
  "7DD987F39CD80F40B0D9": "Une étiquette `other` peut être ajoutée automatiquement à la liste\ndes étiquettes pour offrir une issue de secours au LLM lorsqu'il n'est pas capable de classer le texte. ",
  "427305F4B0FCFBDBD648": "Explications",
  "3DCE916E24C3466DE3F0": "Évaluation de la qualité de la classification",
  "84A131CBCB2A5C2C939B": "GenAIScript renvoie la ",
  "AA017C83AD5AD7F4E5DA": "logprob",
  "F75A622736216F065DA5": "Vous pouvez désactiver ",
  "5DA023F0C57ED477E333": "en mettant `topLogprobs: false` dans les options. ",
  "1FAFBAD4C2953A8035AC": "Cette fonction s'inspire de la classification dans ",
  "0507A6694E09C5D562E0": "[Z3](https://microsoft.github.io/z3guide/) est un prouveur de théorèmes haute performance développé par Microsoft Research. C'est un outil intégré de GenAIScript. Z3 est utilisé pour résoudre des formules logiques et peut être employé pour diverses applications, notamment la vérification de programmes, la résolution de contraintes et l'exécution symbolique.",
  "0A399AEC33BA4E493136": "GenAIScript utilise le paquet npm [z3-solver](https://www.npmjs.com/package/z3-solver) basé sur WebAssembly pour exécuter Z3.",
  "B02745931DE0CD87C408": "Instance Z3",
  "D8ACD2C4A80037D00243": "La méthode `host.z3()` crée une nouvelle instance de Z3. L'instance peut être utilisée pour exécuter des commandes Z3 et obtenir les résultats. L'instance `z3` est un wrapper autour du paquet npm [z3-solver](https://www.npmjs.com/package/z3-solver). L'instance `z3` possède la méthode `run` qui exécute la formule SMTLIB2 donnée et retourne le résultat.",
  "AEE3F73EE9C085467E4F": "Outil Z3",
  "497BBB8F5DD825FD3B6C": "Le script de l'outil `z3` (dans [system.z3](/genaiscript/reference/scripts/system#systemz3)) encapsule Z3 en tant qu'outil LLM utilisable dans GenAIScript. L'outil prend une formule SMTLIB2 en entrée et retourne la sortie de Z3.",
  "617C689FCC0302998EDD": "L'outil ne peut pas gérer des problèmes arbitraires, ce qui nous amène à l'agent.",
  "E7D3C0EA757999D0682A": "Agent Z3",
  "24B24A8F6543E2FD65C0": "Le script de l'agent `z3` (dans [system.agent-z3](/genaiscript/reference/scripts/system#systemagent_z3)) encapsule l'outil `z3` avec un LLM capable de (tenter de) formaliser des problèmes arbitraires en SMTLIB2.",
  "94B78474C416945FBCCC": "La conversation LLM allant du problème à la formule SMTLIB2 peut être incorrecte. Vérifiez vos résultats avec l'outil Z3. L'agent ne remplace pas l'outil Z3, mais offre un moyen d'utiliser Z3 avec des problèmes arbitraires.",
  "C1A9CF3A188C8BC0D4E0": "[YAML](https://yaml.org/) est un format de sérialisation de données lisible par l'homme, couramment utilisé pour les fichiers de configuration et l'échange de données.",
  "41A563FFFA0EC2BC3E81": "Dans le contexte de LLM, YAML est plus convivial pour l'algorithme du tokenizer et est généralement préféré à JSON pour représenter des données structurées.",
  "8E9AA21F1FED2C9A8A17": "`defData`",
  "E707148DB3AF84EE4FFF": "La fonction `defData` convertit un objet en YAML dans l'invite (et d'autres formats si nécessaire).",
  "4908AA1FF382F2F35B2F": "`YAML`",
  "DE3FF010F2F8A9C9AB99": "De la même manière que la classe `JSON` en JavaScript, la classe `YAML` dans LLM fournit des méthodes pour analyser et convertir en chaîne des données YAML.",
  "B73DE2A8D2294C27C487": "`parsers`",
  "5FC1FA15046DAEB330FA": "Les [parsers](/genaiscript/reference/scripts/parsers) fournissent également un analyseur tolérant pour YAML.\nIl renvoie `undefined` pour les entrées invalides.",
  "A634236DC239F154A6F4": "Schémas",
  "81A6688F85841324A73A": "Les schémas JSON définis avec [defSchema](/genaiscript/reference/scripts/schemas) peuvent également être utilisés pour valider les données YAML.",
  "E72B9384306AA02A240B": "La fonction `def` analysera automatiquement les fichiers XML et en extraira le texte.",
  "778C75A2586C89D245F6": "La fonction globale `XML.parse` lit un fichier XML et le convertit en un objet JSON.",
  "2FC903AA6E3A9C8EB385": "Les noms d'attributs sont précédés de \"@_\".",
  "2AD9DF2CCDA734A8EC4A": "RSS",
  "286418152AF12B14BDE0": "Vous pouvez utiliser `XML.parse` pour analyser un flux RSS en un objet.",
  "F35EBDE3DBEAC0BE39ED": "Étant donné que les flux RSS renvoient généralement une description en HTML rendu, vous pouvez utiliser `parsers.HTMLToText` pour la convertir en texte brut.",
  "FAA07AF259F1726F1E16": "Analyse et conversion en chaîne des fichiers de tableur Excel, xlsx.",
  "D1F004857F8EC9C9AED8": "Les [parsers](/genaiscript/reference/scripts/parsers) fournissent également un analyseur polyvalent pour XLSX. Il renvoie un tableau de feuilles (`name`, `rows`) où chaque ligne est un tableau d'objets.",
  "B1E7C649DFDCF263E76B": "Bien que la plupart des LLM ne prennent pas en charge les vidéos nativement, elles peuvent être intégrées dans des scripts en rendant des images et en les ajoutant comme images au prompt. Cela peut être fastidieux et GenAIScript fournit des assistants efficaces pour simplifier ce processus.",
  "18E8F316666B901BFDB6": "Configuration de ffmpeg",
  "C97333E4B39192030428": "Les fonctionnalités de rendu et d'analyse des vidéos reposent sur [ffmpeg](https://ffmpeg.org/) et [ffprobe](https://ffmpeg.org/ffprobe.html).",
  "6218FFBCA25F097C6402": "Sous Linux, vous pouvez essayer",
  "AF15017BA544182209FD": "Assurez-vous que ces outils sont installés localement et disponibles dans votre PATH, ou configurez les variables d'environnement `FFMPEG_PATH` / `FFPROBE_PATH` pour pointer vers l'exécutable `ffmpeg`/`ffprobe`.",
  "E4BCDD19625878308B14": "Extraction des images",
  "F7BDCE16AB96D9112197": "Comme indiqué ci-dessus, les LLM multimodaux prennent généralement en charge les images sous forme d’une séquence d'images (ou captures d'écran).",
  "66DB0FAED3DDE87BE7B0": "La fonction `ffmpeg.extractFrames` va rendre des images à partir d’un fichier vidéo et les retourner sous forme de tableau de chemins de fichiers. Vous pouvez utiliser le résultat directement avec `defImages`.",
  "38D723361D0AC928BD2F": "par défaut, extraire les images clés (intra-images)",
  "82DE327C5B7E9F16E987": "spécifiez un nombre d’images à l’aide de `count`",
  "EC7006A929269E170639": "spécifiez des horodatages en secondes ou en pourcentages de la durée de la vidéo avec `timestamps` (ou `times`)",
  "8A665DD0501F2F4A9F0B": "spécifiez la transcription calculée par la fonction [transcribe](/genaiscript/reference/scripts/transcription). GenAIScript extraira une image au début de chaque segment.",
  "BD4174ADD8F037FB6244": "spécifiez un seuil de scène (entre 0 et 1)",
  "D39B99D6B5D82BF89500": "Extraction de l’audio",
  "F0B5C494B9675E9BFC7F": "La fonction `ffmpeg.extractAudio` extraira l’audio d’un fichier vidéo au format `.wav`.",
  "7674DB7DEA130297CC99": "La conversion vers l’audio se fait automatiquement pour les vidéos lors de l’utilisation de [transcribe](/genaiscript/reference/scripts/transcription).",
  "89E3EFFEE3CA07032A53": "Extraction de clips",
  "20AA8FAD0E82D251FF84": "Vous pouvez extraire un extrait d’un fichier vidéo en utilisant `ffmpeg.extractClip`.",
  "7E81BE34397C006F9CE5": "Cette opération est assez rapide car elle ne nécessite pas de ré-encodage. Vous pouvez spécifier la taille de sortie mais cela sera beaucoup plus lent car cela nécessitera un ré-encodage.",
  "E0097576064DDA673DC2": "Analyse des vidéos",
  "178027EC0B630965313C": "Vous pouvez extraire les métadonnées d’un fichier vidéo en utilisant `ffmpeg.probe`.",
  "40C643600A7BD84F91C8": "Options personnalisées pour ffmpeg",
  "BB136958560F9B1ED4D0": "Vous pouvez personnaliser davantage la configuration de `ffmpeg` en passant `outputOptions`.",
  "6A75F797A34AADDDEA19": "Ou interagir directement avec le constructeur de commandes `ffmpeg` (qui est le constructeur de commandes natif de [fluent-ffmpeg](https://www.npmjs.com/package/fluent-ffmpeg)). Notez que dans ce cas, vous devez également fournir un « hash » de cache pour éviter le rerendu.",
  "90BBCCD4DB08361A4F9D": "Le [cli](/genaiscript/reference/cli/video) prend en charge diverses commandes pour exécuter les transformations vidéo.",
  "653F7B6C2EF256135528": "La fonction `retrieval.webSearch` effectue une recherche web en utilisant [Tavily](https://docs.tavily.com/) ou Bing Web Search.",
  "925AD3F981466F660320": "Pages Web",
  "6CE8036D5C457552CEF1": "Par défaut, l'API renvoie les 10 premières pages web dans le champ `webPages` sous forme d'un tableau de fichiers, de manière similaire à `env.files`. Le contenu contient l'extrait résumé retourné par le moteur de recherche.",
  "D4330EB6403DA2F90EDA": "Vous pouvez utiliser `fetchText` pour télécharger le contenu complet de la page web.",
  "B352E3FD834B596AD54F": "Configuration Tavily <a href=\"\" id=\"tavily\" />",
  "A822040FFCD81F0D9199": "L’[API Tavily](https://docs.tavily.com/docs/rest-api/api-reference#endpoint-post-search) donne accès à un moteur de recherche puissant pour les agents LLM.",
  "3DCA3562B819F7F0AB67": "Configuration de Bing Web Search <a href=\"\" id=\"bing\" />",
  "68EF75490525F303CA78": "L'API utilise [Bing Web Search v7](https://learn.microsoft.com/en-us/bing/search-apis/bing-web-search/overview) pour effectuer des recherches sur le web. Pour utiliser l'API, vous devez créer une ressource Bing Web Search dans le portail Azure et stocker la clé API dans le fichier `.env`.",
  "516D99B2A28AA44E4123": "Outil",
  "6FBEC58DDEB052FC6B29": "Ajoutez le script système [system.retrieval_web_search](https://github.com/microsoft/genaiscript/blob/main/packages/core/src/genaisrc/system.retrieval_web_search.genai.mjs) pour enregistrer un [outil](/genaiscript/reference/scripts/tools) qui utilise `retrieval.webSearch`.",
  "02B7F79262DC5A1DEEEB": "GenAIScript fournit diverses bases de données vectorielles pour supporter la recherche par embeddings et la génération augmentée par récupération (RAG).",
  "832A4C90B5C54517B58C": "Création de l'index",
  "9C6A6B253CA0B10C0233": "La fonction `retrieve.index` crée ou charge un index existant. La création de l'index prend en compte plusieurs options **qui ne doivent pas changer** entre les exécutions.",
  "E482BE720E39C6638E5E": "Index local",
  "EB5C78D10D88BC7F489B": "Par défaut, les vecteurs sont stockés localement dans des fichiers sous le dossier `.genaiscript/vector` en utilisant une base de données vectorielle locale basée sur [vectra](https://www.npmjs.com/package/vectra). Les embeddings sont calculés à l'aide de l'[alias de modèle]( /genaiscript/reference/scripts/model-aliases) `embeddings`.",
  "A56B13FD4A893EDA226F": "Les `embeddings` peuvent également être configurés via les options.",
  "7B3C22B695BE3D04470C": "L'index est sérialisé par défaut. Si vous souhaitez le réinitialiser à chaque exécution, définissez `deleteIfExists: true`.",
  "3C43C5D7766EA404E439": "Recherche Azure AI",
  "B6E43C4FF0187B4A2B8B": "GenAIScript prend également en charge l'utilisation d'un service [Azure AI Search](https://learn.microsoft.com/en-us/azure/search/search-what-is-azure-search). Azure AI Search utilise la [syntaxe de requête simple](https://learn.microsoft.com/en-us/azure/search/query-simple-syntax).",
  "EB9F0BABDF0EC9CF78BA": "Pour configurer le service, vous devrez définir les variables d'environnement `AZURE_AI_SEARCH_ENDPOINT` et `AZURE_AI_SEARCH_API_KEY` dans votre fichier `.env`. Veuillez consulter la [documentation d'authentification](https://learn.microsoft.com/en-us/javascript/api/overview/azure/search-documents-readme?view=azure-node-latest#authenticate-the-client) pour plus de détails.",
  "31EC7FCE97ABA163E54D": "La gestion supplémentaire de l'index peut être effectuée via le portail Azure.",
  "3C6F800A2710034E138B": "Configuration du modèle et du découpage",
  "8AE685F30C26BECBDEE1": "Le calcul des embeddings est effectué via les API LLM en utilisant le même jeton d'autorisation que l'API LLM.",
  "B4AAC2B26B2052C6A5C0": "Vous pouvez également configurer le découpage des fichiers d'entrée. Vous pouvez modifier cela en définissant les options `chunkSize` et `chunkOverlap`.",
  "B93BEF35B10B3C484DEF": "Indexation",
  "313EF8C780BD12513D97": "La fonction `index.insertOrUpdate` gère le découpage, la vectorisation et la mise à jour de la base de données vectorielle.",
  "9E1983916F3E5C34DB21": "Recherche",
  "6FA2E114EE4CFCA209DC": "La fonction `index.search` effectue une recherche (vectorielle ou hybride) en utilisant l'index.",
  "14E70711A3E094A9C301": "La valeur retournée est un tableau de fichiers avec le contenu reconstitué à partir des morceaux correspondants.",
  "920DBF10190F6529A492": "L'objet `env.vars` contient un ensemble de valeurs variables. Vous pouvez utiliser ces variables pour paramétrer votre script.",
  "66D6962BDA596A0566F2": "Paramètres de script",
  "460577B09C3352F8788E": "Il est possible de déclarer des paramètres dans l'appel de la fonction `script`. L'objet `env.vars` contiendra les valeurs de ces paramètres.",
  "10B41AE9B87B863992F9": "Lors de l'exécution de ce script dans VS Code, l'utilisateur sera invité à fournir des valeurs pour ces paramètres.",
  "0E8E60D965CC77723313": "Variables depuis la CLI",
  "0E968EB14D4BE783F944": "Utilisez le champ `vars` dans la CLI pour remplacer les variables. `vars` prend une séquence de paires `clé=valeur`.",
  "54CC7FFA86E12723476C": "Variables dans les tests",
  "AA340436F3A53CA0CD3E": "Vous pouvez spécifier des variables dans l'objet `tests` de la fonction `script`. Ces variables seront disponibles dans le contexte du test.",
  "45A0A776D739D82CF782": "GenAIScript fournit diverses fonctions pour obtenir une entrée utilisateur lors de l'exécution d'un script.\nCeci est utile pour créer une expérience \"humain dans la boucle\"\ndans vos scripts.",
  "6DAD1AEAD82A4BD77838": "Lors de l'exécution de [CLI](/genaiscript/reference/cli),\nl'entrée utilisateur se fait via le terminal.",
  "D1CF83B940390CBB2B82": "[TypeScript](https://www.typescriptlang.org/) est un langage de programmation fortement typé qui s'appuie sur JavaScript, vous offrant de meilleurs outils à toutes les échelles. Les scripts GenAIScript peuvent être écrits en TypeScript.",
  "F4096D2101F7C1836892": "De JavaScript à TypeScript",
  "8C59311336B4648B6F6E": "Vous pouvez convertir n'importe quel script existant en TypeScript en changeant l'extension du fichier en **`.genai.mts`**.",
  "617EFCD03876E6F37B6A": "Assurez-vous d'utiliser l'extension de fichier **`.mts`** - et non `.ts` -, qui oblige Node.JS à utiliser le système de modules [ESM](https://www.typescriptlang.org/docs/handbook/modules/guides/choosing-compiler-options.html).",
  "B9716A96D2F60E24EA7E": "Importer des fichiers sources TypeScript",
  "8EA185EEBE1B4E6FD5C7": "Il est possible d’[importer](/genaiscript/reference/scripts/imports) des fichiers sources TypeScript.",
  "E4EDB4247115D20F6A8F": "import",
  "35CF386E8BB06608311A": "GenAIScript vérifie-t-il les types des prompts ?",
  "1C1064096BDCEFA98C74": "Oui et non.",
  "C49EBD09CD39AC83B998": "La plupart des éditeurs modernes, comme Visual Studio Code, vérifient automatiquement les types dans les sources TypeScript.",
  "70D2009843AA61F92F9F": "Vous pouvez aussi lancer une compilation TypeScript avec la commande `scripts compile`.",
  "1E11E656AD884AC77BF1": "Cependant, à l'exécution, GenAIScript convertit le TypeScript en JavaScript **sans vérification des types** via [tsx](https://tsx.is/usage#no-type-checking).",
  "4DD95D82AB8554FF8703": "GenAIScript prend en charge la transcription et les traductions depuis les API similaires à OpenAI.",
  "955678E137BA2FA76710": "L'API de transcription utilise automatiquement [ffmpeg](https://ffmpeg.org/) pour convertir les vidéos en fichiers audio ([codec opus dans un conteneur ogg](https://community.openai.com/t/whisper-api-increase-file-limit-25-mb/566754)).",
  "D000960E2FAD1ACEB0AD": "Vous devez installer ffmpeg sur votre système. Si la variable d'environnement `FFMPEG_PATH` est définie, GenAIScript l'utilisera comme chemin complet vers l'exécutable ffmpeg. Sinon, il tentera d'appeler ffmpeg directement (il doit donc être dans votre PATH).",
  "DBDF67F946DA3DCDCAA0": "Modèle",
  "777936CA2D22D0BCBE89": "Par défaut, l'API utilise l'[alias de modèle](/genaiscript/reference/scripts/model-aliases) `transcription` pour transcrire l'audio. Vous pouvez également spécifier un alias de modèle différent en utilisant l'option `model`.",
  "2D6F719F7EF4A5D22CDE": "Vous pouvez utiliser le [service Web Whisper ASR](/genaiscript/configuration/whisperasr) pour exécuter Whisper localement ou dans un conteneur docker.",
  "320F6523BF83BB414DAA": "Segments",
  "10A4378EA073F40F7D02": "Pour les modèles qui le supportent, vous pouvez récupérer les segments individuels.",
  "B1ED624389EE5AA81BAD": "SRT et VTT",
  "E82DDC70AABFA19B8EAD": "GenAIScript génère également les segments aux formats [SRT](https://fr.wikipedia.org/wiki/SubRip) et [WebVTT](https://developer.mozilla.org/en-US/docs/Web/API/WebVTT_API).",
  "1ADE7BA3048EDD7D8596": "Traduction",
  "1DE77B04660DD3081EBD": "Certains modèles prennent également en charge la transcription et la traduction en anglais en une seule passe. Dans ce cas, activez l'option `translate: true`.",
  "360F109CF54F3CFEE87F": "Cache",
  "88F530877D761743CF78": "Vous pouvez mettre en cache les résultats de la transcription en définissant l'option `cache` à `true` (ou un nom personnalisé).",
  "7D303C9F6A377B59599E": "ou un sel personnalisé",
  "5876C8533CBED7ACC08F": "Parseurs VTT et SRT",
  "ACF6F4A08CEF118CCD45": "Vous pouvez analyser les fichiers VTT et SRT en utilisant la fonction `parsers.transcription`.",
  "BB88415CE781D4B38A11": "Le module d'aide `tokenizers` fournit un ensemble de fonctions pour diviser le texte en tokens.",
  "43D42503287260A6B425": "Choisir votre tokeniseur",
  "E3FAD41A40BE43F9339D": "Par défaut, le module `tokenizers` utilise le tokeniseur `large`. Vous pouvez changer de tokeniseur en passant l'identifiant du modèle.",
  "B815757F5CAF86AEBB78": "`count`",
  "2B3587C28D5B09C267C1": "Compte le nombre de tokens dans une chaîne de caractères.",
  "51EFE82DA22A7EA3E3E7": "`truncate`",
  "9C7A3F8F14BD52B34587": "Supprime une partie de la chaîne pour respecter un budget de tokens",
  "EB4B423548125CB72439": "`chunk`",
  "8C639EBC63EBD8E311F3": "Divise le texte en segments d'une taille de tokens donnée. Le segment essaie de trouver des frontières de découpage appropriées en fonction du type de document.",
  "6A406D007A293F0399B8": "Vous pouvez configurer la taille des segments, le chevauchement et ajouter des numéros de ligne.",
  "F1B3817628DC1A50C77A": "Il est possible de définir des tests pour les scripts LLM, afin d’évaluer la qualité des sorties du LLM au fil du temps et selon les types de modèles.",
  "0279C73DA335DCB09C24": "Les tests sont exécutés par [promptfoo](https://promptfoo.dev/), un outil d’évaluation de la qualité des sorties des LLM.",
  "CBAD8F8023306A2953A2": "Vous pouvez également détecter des vulnérabilités de l’IA, telles que les biais, la toxicité et les problèmes de factualité, en utilisant la fonctionnalité [redteam](/genaiscript/reference/scripts/redteam).",
  "9C19A8550A2B19E44F9C": "Définition des tests",
  "1DB966C7C17699A49EE8": "Les tests sont déclarés dans la fonction `script` de votre test.\nVous pouvez définir un ou plusieurs tests (sous forme de tableau).",
  "6522BC146EE56A7F971C": "Modèles de test",
  "FCCB9A298246E60FF797": "Vous pouvez spécifier une liste de modèles (ou d’alias de modèles) à tester.",
  "E50A8314D310A8A20083": "Le moteur d’évaluation (PromptFoo) exécutera chaque test pour chaque modèle de la liste.\nCette configuration peut être remplacée par l’option `--models` en ligne de commande.",
  "2317A0B212D9235EA1A7": "Fichiers de test externes",
  "6B9FD6343EF0880255C4": "Vous pouvez aussi spécifier le nom de fichiers de test externes aux formats JSON, YAML, CSV, ainsi que des fichiers JavaScript `.mjs` ou `.mts` qui seront exécutés pour générer les tests.",
  "10F9A33C16D3F0213FE3": "Les fichiers JSON et YAML supposent que les fichiers contiennent une liste d’objets `PromptTest` et vous pouvez valider ces fichiers à l’aide du schéma JSON disponible à [https://microsoft.github.io/genaiscript/schemas/tests.json](https://microsoft.github.io/genaiscript/schemas/tests.json).",
  "2B5B94EAAE109F8BF9DE": "Les fichiers CSV supposent que la première ligne est l’en-tête et que les colonnes correspondent principalement aux propriétés de l’objet `PromptTest`.\nLa colonne `file` doit contenir un nom de fichier, la colonne `fileContent` contient le contenu d’un fichier virtuel.",
  "A2AA39D27AA77D48287A": "Les fichiers JavaScript doivent exporter une liste d’objets `PromptTest` ou une fonction qui génère cette liste.",
  "7BA739B54241CD7AF2F7": "`files`",
  "44A3B6BCAEC26E51DD17": "`files` prend une liste de chemins de fichier (relatifs à l’espace de travail) et remplit la variable `env.files` pendant l’exécution du test. Vous pouvez fournir plusieurs fichiers en passant un tableau de chaînes.",
  "5F1937004E79F11F28E1": "`rubrics`",
  "D85A00A50DC537EF8228": "`rubrics` vérifie si la sortie du LLM correspond aux exigences données,\nen utilisant un modèle de langage pour noter la sortie selon la rubrique (voir [llm-rubric](https://promptfoo.dev/docs/configuration/expected-outputs/model-graded/#examples-output-based)).\nVous pouvez spécifier plusieurs rubriques en passant un tableau de chaînes.",
  "2C5EF7B75E9FF79433A0": "GPT-4 requis",
  "19AA7ABAE1E58ADDF6C8": "Les tests avec `rubrics` nécessitent une configuration OpenAI ou Azure OpenAI avec un modèle `gpt-4` dans le fichier `.env`.",
  "98349725CE54B33D610D": "`facts`",
  "EE41ACDAC9467D93DD50": "`facts` vérifie la cohérence factuelle (voir [factuality](https://promptfoo.dev/docs/guides/factuality-eval/)).\nVous pouvez spécifier plusieurs faits en passant un tableau de chaînes.",
  "7FBAF9244A45DE10A865": "étant donné une complétion A et une réponse de référence B, évalue si\nA est un sous-ensemble de B, A est un sur-ensemble de B, A et B sont équivalents,\nA et B divergent, ou A et B diffèrent,\nmais la différence n’a pas d’importance du point de vue de la factualité.",
  "E8A662FFDF819160713F": "gpt-4o requis",
  "3E19F928942F08A5FA00": "Les tests avec `facts` nécessitent une configuration OpenAI ou Azure OpenAI avec un modèle `gpt-4o` dans le fichier `.env`.",
  "37375338B0DBEC821AC7": "`asserts`",
  "4977C2B6A57732307176": "Autres assertions disponibles sur\n[assertions et métriques de promptfoo](https://promptfoo.dev/docs/configuration/expected-outputs/).",
  "559518BED481A1A42FE4": "`icontains` (`not-icontains`) la sortie contient une sous-chaîne, insensible à la casse",
  "7535182F012CB04ACFBE": "`equals` (`not-equals`) la sortie est égale à la chaîne",
  "88F37B0798D033DE5EEF": "`starts-with` (`not-starts-with`) la sortie commence par la chaîne",
  "899FB7643135A6C3D697": "`contains-all` (`not-contains-all`) la sortie contient toutes les sous-chaînes",
  "8276CBDEFB42C4EB69FF": "`contains-any` (`not-contains-any`) la sortie contient n’importe quelle sous-chaîne",
  "291F9B7E7443F2834D92": "`icontains-all` (`not-icontains-all`) la sortie contient toutes les sous-chaînes, insensible à la casse",
  "F8715761E4CDE6BE040F": "transformer",
  "45274599A9E4C5712761": "Par défaut, GenAIScript extrait le champ `text` de la sortie avant de l’envoyer à PromptFoo.\nVous pouvez désactiver ce mode en définissant `format: \"json\"` ; dans ce cas, les `asserts` sont exécutés sur la sortie brute du LLM.\nVous pouvez utiliser une expression JavaScript pour sélectionner une partie de la sortie à tester.",
  "2F6661203BDAD374D769": "Exécution des tests",
  "838EBF3489209BFEE0E8": "Vous pouvez exécuter les tests depuis Visual Studio Code ou depuis la [ligne de commande](/genaiscript/reference/cli).\nDans les deux cas, genaiscript génère un [fichier de configuration promptfoo](https://promptfoo.dev/docs/configuration/guide)\net exécute promptfoo dessus.",
  "E09BC3305FCF92C7C4D2": "Visual Studio Code",
  "744FBD45C8D252D1A285": "Ouvrez le script à tester",
  "B666A4108163704FF69B": "Cliquez droit dans l’éditeur et sélectionnez **Run GenAIScript Tests** dans le menu contextuel",
  "C893809B35D5D8B99D21": "La [vue web promptfoo](https://promptfoo.dev/docs/usage/web-ui/) s’ouvrira automatiquement\net se rafraîchira avec les résultats des tests.",
  "22E72061417559355D26": "Ligne de commande",
  "7118C9E6724D57B9009C": "Exécutez la commande `test` avec le fichier script en argument.",
  "095056FFA3E78863C807": "Vous pouvez spécifier des modèles supplémentaires à tester en utilisant l’option `--models`.",
  "24DD67E78CFF5C992A1D": "GenAIScript fournit des API pour publier un message, avec des fichiers joints, sur un canal donné de [Microsoft Teams](https://www.microsoft.com/en-us/microsoft-teams/) et son partage de fichiers SharePoint.",
  "0AB9ACD91F90083BC378": "en utilisant la CLI, pour publier le résultat de la génération IA",
  "AAE08B1D1037FAD71D60": "en utilisant l'API, pour publier un message avec des pièces jointes",
  "626B2AB4AE7590AF1756": "GenAIScript utilise le client d’authentification Azure pour interagir avec Microsoft Graph. Connectez-vous à votre compte en utilisant l’interface en ligne de commande Azure CLI.",
  "78B36AC0F2A82E053BE4": "Pour utiliser l’intégration Microsoft Teams avec le [CLI](/genaiscript/reference/cli), vous devez fournir une URL de lien vers un canal Teams.",
  "7A055F6E93FE2EF457FA": "API",
  "DFE3B0ACF8F0058288D7": "L’API fonctionne en créant un client pour le canal, puis en appelant `postMessage`.",
  "F2029D161E3FC78654CE": "Vous pouvez également joindre des fichiers au message. Les fichiers seront téléchargés dans le dossier SharePoint Files.",
  "14664CCD6B9F7E617EE5": "Ajoutez une description au fichier pour renseigner ces métadonnées. La description peut être en markdown et sera rendue en HTML dans Teams autant que possible.",
  "1ED87639EC3FF43C2F27": "Pour les vidéos, GenAIScript divisera la description en un sujet/message afin de remplir les deux champs dans Microsoft Stream.",
  "FECFD12E263523712592": "Les invites système sont des scripts qui sont exécutés et injectés avant la sortie de l'invite principale.",
  "48D5CBA68C6E6E9E4774": "`system.*.genai.js` sont considérés comme des modèles d'invites système",
  "FE9B0F3E8EA05AA44DB4": "Les invites système sont non listées par défaut",
  "F0F6AEB4417F695476B8": "Les invites système doivent utiliser `system` au lieu de `script`",
  "4FD16A4A80A9264F57A8": "Les invites système sont exécutées avec le même environnement que l'invite principale",
  "9ACD070D355D2870DBEC": "Les invites système doivent avoir une fonction par défaut et utiliser le `ctx` passé dans la fonction.",
  "E26C40B2A6D68B38ED7F": "Pour utiliser les invites système dans un script, remplissez le champ `system` avec les identifiants des scripts.",
  "7E6EF2866AC952FF958F": "Il est également possible de peupler le script système en incluant les noms d'outils\nce qui entraîne l'importation de l'outil dans le script.",
  "4FD8137B8DEEEF80BBD4": "Paramètres et variables",
  "231D0EE2F937198809E0": "Le système supporte aussi les paramètres comme un script mais les noms de paramètres seront automatiquement préfixés\navec l'identifiant du script",
  "BB99DE080B22211DFCB4": "déclarez et utilisez le paramètre dans le script système",
  "8F57B568592790ACCEEC": "remplacez la valeur du paramètre dans le script script",
  "F60AE983C63191651BB2": "remplacez la valeur du paramètre dans une instance du script système",
  "2F034D672F1B2F9C1178": "Invites système automatisées",
  "F015B4C9F6AD6AE9C961": "Lorsqu'elles ne sont pas spécifiées, GenAIScript inspecte le code source du script\npour déterminer un ensemble raisonnable d'invites système ([code source](https://github.com/microsoft/genaiscript/blob/main/packages/core/src/systems.ts)).",
  "0CE34A62297477132559": "Le mélange par défaut est",
  "852F667029B73A368F5F": "system",
  "EC5C7E7D2820CF548AE1": "system.output_markdown",
  "A6AAFAD0C27AA2679700": "system.explanations",
  "CD2EB88B20D20EC50BC8": "system.safety_jailbreak",
  "37A9710D70EE6FF56DA8": "system.safety_harmful_content",
  "D8AF85D103DD2AD17308": "system.safety_protected_material",
  "C12AA44622D1B6A4E0CB": "Au-delà du défaut, d'autres scripts système sont injectés en fonction de la correspondance de mots-clés.",
  "5FA7BF8FF5545602FC43": "Invites Système Intégrées",
  "E117A01927D9F4DA02CD": "GenAIScript est livré avec un certain nombre d'invites système qui prennent en charge des fonctionnalités comme la création de fichiers, l'extraction de différences ou\nla génération d'annotations. Si elles ne sont pas spécifiées, GenAIScript recherche des mots clés spécifiques pour activer les différentes invites système.",
  "51FA71F1E1288B531F52": "`system`",
  "42477CDB8C16264A526F": "Invite système de base",
  "2032A5F52196611ABF59": "`system.agent_data`",
  "6173068489960DE1ACD8": "Agent capable d'interroger des données dans des fichiers",
  "D01120B61C28BEB636F1": "`system.agent_docs`",
  "8F0FAA76C4790442F09A": "Agent capable d'interroger la documentation.",
  "5E4EAD1219DCC6F829FD": "`system.agent_fs`",
  "DC562386BE8CCF1AF629": "Agent capable de trouver, rechercher ou lire des fichiers pour accomplir des tâches",
  "0B5255951D2170F0696C": "`system.agent_git`",
  "4259B78C057FBB8E3740": "Agent capable d'interroger Git pour accomplir des tâches.",
  "233FBD06CE5086D1D6A4": "`system.agent_github`",
  "9491F9F83EECD22BDEA5": "Agent capable d'interroger GitHub pour accomplir des tâches.",
  "02E192FBD9F5E55658E4": "`system.agent_interpreter`",
  "88A34BD2581C07037C8F": "Agent capable d'exécuter des interprètes de code pour Python, Math.",
  "DCBA3BF98820B0786E89": "`system.agent_mcp`",
  "5E18CDD3A961597D4E65": "Agent du protocole de contexte modèle",
  "F8B488656EBEE3B1CD3C": "Enveloppe un serveur MCP avec un agent.",
  "5D41108657386C71D0C1": "`system.agent_planner`",
  "8990104484ACFEB877E2": "Un agent planificateur",
  "753759DB38770F5BB2AB": "`system.agent_user_input`",
  "A5BA5A8393C259F2DBA6": "Agent pouvant poser des questions à l'utilisateur.",
  "01C6C2E526FD83459473": "`system.agent_video`",
  "8C13286FE25617BC7F75": "Agent pouvant traiter des vidéos",
  "6EA7EDF834F01DB29E49": "`system.agent_web`",
  "33C6DF5DE5E0550E61AC": "Agent capable de rechercher sur le web.",
  "CA4525E4EF0853EFDE9D": "`system.agent_z3`",
  "A38B6DA4F628CFFE1363": "Agent capable de formaliser et résoudre des problèmes avec Z3.",
  "16F05B0147994CEB062B": "`system.annotations`",
  "FC1C0FF42517143DEE4E": "Émet des annotations compatibles avec GitHub Actions",
  "1AC43447AAE1B277173C": "Les workflows GitHub Actions prennent en charge les annotations ([En savoir plus...](https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-error-message)).",
  "3CAC94CF763E22FD531D": "`system.assistant`",
  "24E8A156BADB86C2BD59": "Invite d'assistant utile.",
  "D122E0FAF05F504AE420": "Une invite pour un assistant utile provenant de https://medium.com/@stunspot/omni-f3b1934ae0ea.",
  "8295BEF5191D7CFF2B5F": "`system.chain_of_draft`",
  "886736F36EE742AFF048": "Raisonnement de chaîne de brouillon",
  "F86B4F4AC55D4A77548A": "Technique de raisonnement chaîne de brouillon. Plus d'informations sur https://learnprompting.org/docs/intermediate/zero_shot_cot.",
  "2FCD4C232F658DE2F216": "`system.changelog`",
  "7372C0C8992EEF13F86D": "Génère des modifications de formatteur de journal de modifications",
  "2DF5828239D7EF478BBD": "`system.cooperation`",
  "62C57A4B1F2AD7DFF8D8": "Principes de coopération de la maxime de Grice.",
  "56BB842DF7CD58DC6796": "`system.diagrams`",
  "F4A176C336955EAAE73E": "Générer des diagrammes",
  "1D279BCDA1CCF252702D": "`system.diff`",
  "A74A332A90BEC1AF0EEC": "Génère des différences concises de fichiers.",
  "9F4F8A3EA509AD585D37": "`system.do_not_explain`",
  "A9D827D4D78684F6A523": "Ne pas expliquer",
  "C8B12D264C6CB0DE9420": "`system.english`",
  "9D59EA86A18EB0754916": "Utiliser la sortie en anglais",
  "CED2B989F59714093635": "`system.explanations`",
  "A817A03EDFC8F7F69CE1": "Expliquez vos réponses",
  "42503D0CC53E879FCF7B": "`system.fetch`",
  "537EDFCCBB9460E3B368": "Un outil qui peut récupérer des données d'une URL",
  "A26E09308CC91F9D4806": "outil `fetch` : récupérer des données d'une URL depuis des domaines autorisés.",
  "36DD5E5B5E88998A7F00": "`system.files`",
  "C5985B7B29E13DA54322": "Génération de fichiers",
  "1225EA13FD60BF17B7DF": "Enseigne le format de fichier pris en charge par GenAIScripts",
  "F9B905F373ACD7D6DDC0": "`system.files_schema`",
  "3262C780BAD79D1078C9": "Appliquer des schémas JSON aux données générées.",
  "9714CEDA933848F2D7BB": "`system.fs_ask_file`",
  "3A270A07CB1EB89D1FEF": "File Ask File",
  "8FF2F56A52B759502D30": "Exécuter une requête LLM contre le contenu d'un fichier.",
  "C6D1EA8436A82B0147CE": "outil `fs_ask_file` : exécute une requête LLM sur le contenu d'un fichier. Utilisez cet outil pour extraire des informations d'un fichier.",
  "70C181EF59D80B6AB0B4": "`system.fs_data_query`",
  "969264E786D318948D19": "Un outil qui peut interroger des données dans un fichier",
  "287667DA8FAB7617748A": "outil `fs_data_query` : interroger des données dans un fichier en utilisant la syntaxe GROQ",
  "D6FCE75492CA3D18D3AE": "`system.fs_diff_files`",
  "5365B8CEEA5BD345BFB2": "File Diff Files",
  "C4BC31E374E76F8817D6": "Outil pour calculer un diff entre deux fichiers.",
  "510E974F6A1E36BA579B": "outil `fs_diff_files` : calcule un diff entre deux fichiers différents. Utilisez git diff pour comparer les versions d'un fichier.",
  "418C4446DDADCDAFE457": "`system.fs_find_files`",
  "09A52AA86915F5822431": "File find files",
  "1E70B666A4BE105E2EBF": "Trouver des fichiers avec glob et regex de contenu.",
  "230B0A18E13ED834B80D": "outil `fs_find_files` : trouve des fichiers correspondant à un motif glob. Utilisez pattern pour spécifier une expression régulière à rechercher dans le contenu du fichier. Faites attention à ne pas demander trop de fichiers.",
  "7443C48EBE1BE5F765C4": "`system.fs_read_file`",
  "07F00BAEEDF48587598F": "File Read File",
  "63F6E067C232DB7893CB": "Fonction pour lire le contenu d'un fichier en texte.",
  "38A61BF7264EBC42910B": "outil `fs_read_file` : lit un fichier comme texte depuis le système de fichiers. Retourne undefined si le fichier n'existe pas.",
  "CDBD15CEE84E6813D1A3": "`system.git`",
  "2FD5F7FF5FDE35FAB6A1": "opérations de lecture git",
  "505687BF0F4AEA31BC63": "Outils pour interroger un dépôt git.",
  "E9FCBE63202E0469B13B": "outil `git_branch_default` : obtient la branche par défaut en utilisant le client.",
  "3F627741D47509F6D65A": "outil `git_branch_current` : obtient la branche courante en utilisant le client.",
  "318B8C00BC6E9BDBA234": "outil `git_branch_list` : liste toutes les branches en utilisant le client.",
  "E5D7B47CF2CC5ADEA99E": "outil `git_list_commits` : génère l'historique des commits avec la commande git log.",
  "AF02CF9248323246EEC5": "outil `git_status` : génère le statut du dépôt en utilisant le client.",
  "0E8960932B26FDD33185": "outil `git_last_tag` : obtient le dernier tag en utilisant le client.",
  "6444CBA2B7BAE376ADA6": "`system.git_diff`",
  "7F46956D1B4410C9609E": "diff git",
  "28DEECE81A4AAD86C0C5": "outil `git_diff` : calcule les diffs de fichiers en utilisant la commande git diff. Si le diff est trop grand, il retourne la liste des fichiers modifiés/ajoutés.",
  "8EBD26A9491C50C6F0B8": "`system.git_info`",
  "07160CE4D520FCC6D5B3": "Information sur le dépôt Git",
  "0E9E75153153DB9EACFF": "`system.github_actions`",
  "749FC9DDCE545B11915F": "workflows github",
  "44062F9B773B63A5B947": "Interroge les résultats des workflows GitHub actions. Préférez utiliser les diffs pour comparer les logs.",
  "0877FCE7B9E5EB2F7FC8": "outil `github_actions_workflows_list` : liste tous les workflows github.",
  "24AA7650B5BBA8AFCB05": "outil `github_actions_jobs_list` : liste tous les jobs pour une exécution de workflow github.",
  "51B165FFB152AEAF531A": "outil `github_actions_job_logs_get` : télécharge le log de job de workflow github. Si le log est trop grand, utilisez 'github_actions_job_logs_diff' pour comparer les logs.",
  "79248D1F52970F542B7E": "outil `github_actions_job_logs_diff` : compare deux logs de job de workflow github.",
  "AE87AEA19F511400712B": "`system.github_files`",
  "AD14CFC0DB3D6ED266AE": "Outils pour interroger les fichiers GitHub.",
  "DCAD9264535DB94A5EB8": "outil `github_files_get` : obtenir un fichier d'un dépôt.",
  "81A398AB60C161709E12": "outil `github_files_list` : lister tous les fichiers d'un dépôt.",
  "C16FFE68FB21F5DA6C8F": "`system.github_info`",
  "1D7FEC04E5A121D973C7": "Informations générales sur GitHub.",
  "DA4759A592D5547F5FAA": "`system.github_issues`",
  "1A507C95467B1F76720D": "Outils pour interroger les issues GitHub.",
  "E2058A8586B376A4CE78": "outil `github_issues_list` : liste toutes les issues d'un dépôt.",
  "C517167B88F5F6B897FD": "outil `github_issues_get` : obtient une issue unique par numéro.",
  "0E5342304FFDC35D7EA2": "outil `github_issues_comments_list` : obtient les commentaires pour une issue.",
  "8BE32A3772BAD15E8FEE": "`system.github_pulls`",
  "8C1DF6E712675B5E23B6": "Outils pour interroger les pull requests GitHub.",
  "A0B75DF58E110526F11F": "outil `github_pulls_list` : liste toutes les pull requests d'un dépôt.",
  "1407FA0EA6F7CD091D63": "outil `github_pulls_get` : obtient une pull request unique par numéro.",
  "90A03FF016EDB9AD4183": "outil `github_pulls_review_comments_list` : obtient les commentaires de revue pour une pull request.",
  "F51A29FCFEE582C6397E": "`system.math`",
  "4D0113874D44EA1BC438": "Évaluateur d'expressions mathématiques",
  "4B1C6D84B6F8AC73D8D6": "Enregistre une fonction qui évalue les expressions mathématiques",
  "5EC48A77421ED0B6155D": "outil `math_eval` : évalue une expression mathématique. Ne tentez PAS de calculer vous-même, utilisez cet outil.",
  "01DE2F3A719D8A8A1D6C": "`system.mcp`",
  "3BD52F83FBFF8152D887": "Charge les outils depuis un serveur Model Context Protocol",
  "611193AF290E5BAD1C26": "Ce script système doit être configuré avec une configuration de serveur MCP.",
  "CD35D658302EDE760733": "`system.md_find_files`",
  "0C9547DC3206A0146DB0": "Outils pour aider dans les tâches de documentation",
  "7440517969633CC6663E": "outil `md_find_files` : obtient la structure des fichiers markdown/MDX de la documentation. Retourne le nom de fichier, titre, description pour chaque correspondance. Utilise pattern pour spécifier une expression régulière à rechercher dans le contenu du fichier.",
  "8C6FF0DE9D06F56C7C1A": "`system.md_frontmatter`",
  "2415C001C6C79CFEEE23": "Lecteur de frontmatter Markdown",
  "16C76DF641E34879144D": "Enregistre un outil qui lit le frontmatter d'un fichier markdown ou MDX.",
  "3732C167D96D522E2736": "outil `md_read_frontmatter` : lit le frontmatter d'un fichier markdown ou MDX.",
  "7085423CD7F34318A348": "`system.meta_prompt`",
  "1D3B687B9A641AF5E596": "Outil qui applique les directives de meta-invite d'OpenAI à une invite utilisateur",
  "C12F2B6A05CE6DC9D0E4": "Outil modifié de meta-invite provenant de https://platform.openai.com/docs/guides/prompt-generation?context=text-out.",
  "3BEDAE67EC662BE31D3A": "outil `meta_prompt` : outil qui applique les directives de meta-invite d'OpenAI à une invite utilisateur. Modifié de https://platform.openai.com/docs/guides/prompt-generation?context=text-out.",
  "9708EEB2CF2E562D2756": "`system.meta_schema`",
  "B5C1583542A3DCBB4267": "Outil qui génère un schéma valide pour le JSON décrit",
  "5B95678C73F36C6EB40F": "Générateur de méta schéma d'OpenAI depuis https://platform.openai.com/docs/guides/prompt-generation?context=structured-output-schema.",
  "1FD143B1EB22DC4DDD7C": "outil `meta_schema` : génère un schéma JSON valide pour le JSON décrit. Source https://platform.openai.com/docs/guides/prompt-generation?context=structured-output-schema.",
  "685928AD8A476C47E392": "`system.node_info`",
  "F1CC2075F1E37DEBAAE0": "Informations concernant le projet actuel",
  "28B203A9A2E2947CD483": "`system.node_test`",
  "E2008AA7692A0928B60B": "Outils pour exécuter des tests node.js",
  "4A011B4272880A751FA2": "outil `node_test` : compiler et tester le projet actuel avec `npm test`",
  "4FCE64D4D99CC7419A59": "`system.output_ini`",
  "02363A646E215813E92E": "Sortie INI",
  "6FA43C27033CF4CE0AD5": "`system.output_json`",
  "8C13E4DB25B0ED01DAE8": "Sortie JSON",
  "F94D7FD757CDE08D5460": "`system.output_markdown`",
  "C34F2B1C5951D00306E5": "Invite système de sortie Markdown",
  "8FC6A6920EA7343B4258": "`system.output_plaintext`",
  "C72F2E31B29EC3C9FE17": "Sortie texte brut",
  "1B02C2B689A8BE5D9B6D": "`system.output_yaml`",
  "059B7A07A1D2EDE4E3C0": "Sortie YAML",
  "335A704B829955EF40E9": "`system.planner`",
  "24E6E22F5FFED0D49A8A": "Instruction pour faire un plan",
  "920ADAFCBF29DFD05796": "`system.python`",
  "26C60AA7BB19DAF43CB1": "Expert en génération et compréhension de code Python.",
  "CF572A2BF7D7C03D2A29": "`system.python_code_interpreter`",
  "342230BFB2901086B267": "Exécution Dockerisée du code Python pour l'analyse de données",
  "9ABB1C140EDA46FCDE7A": "outil `python_code_interpreter_run` : exécute du code python 3.12 pour l'analyse de données dans un conteneur docker. Retourne la sortie du processus. Ne pas générer de visualisations. Seules les packages numpy===2.1.3, pandas===2.2.3, scipy===1.14.1, matplotlib===3.9.2 sont disponibles. Pas de connectivité réseau. Ne pas tenter d'installer d'autres packages ou faire des requêtes web. Vous devez copier tous les fichiers nécessaires ou passer toutes les données car le code python s'exécute dans un conteneur séparé.",
  "A73798BF024260790747": "outil `python_code_interpreter_copy_files_to_container` : copie des fichiers du système de fichiers du workspace vers le conteneur. Pas de chemins absolus. Retourne le chemin de chaque fichier copié dans le conteneur python.",
  "ACE878DE2905A17D80F9": "outil `python_code_interpreter_read_file` : lit un fichier depuis le système de fichiers du conteneur. Pas de chemins absolus.",
  "8B1B848A5474541B5CCE": "`system.python_types`",
  "F8AEC0A7ECAA973ECB2E": "Développeur Python qui ajoute des types.",
  "3033DD12F787FA67780C": "`system.retrieval_fuzz_search`",
  "736DD0636BE68F4CAE0C": "Recherche floue en texte intégral",
  "BD78398379A3083D32E3": "Fonction pour faire une recherche floue en texte intégral.",
  "36A2CC4A37B15DAD1A1D": "outil `retrieval_fuzz_search` : recherche des mots-clés en utilisant le texte intégral des fichiers et une distance floue.",
  "9429B239BCDF847B6193": "`system.retrieval_vector_search`",
  "D4FCD4D0A6E8EDEF2DEF": "Recherche vectorielle par embeddings",
  "4814958A3033149B71C5": "Fonction pour faire une recherche en utilisant la distance de similarité des vecteurs embeddings.",
  "B6F19E7D079062BE59D8": "outil `retrieval_vector_search` : recherche dans les fichiers en utilisant les embeddings et la distance de similarité.",
  "A4AE8120B0446205CC82": "`system.retrieval_web_search`",
  "A7ECD4A98FDCF92963DB": "Recherche web",
  "B4AC25FB0478E2A024B3": "Fonction pour faire une recherche web.",
  "459EEFFA8CB320E1F408": "outil `retrieval_web_search` : recherche sur le web pour une requête utilisateur en utilisant Tavily ou Bing Search.",
  "2F037068F643DCC7BF5E": "`system.safety_canary_word`",
  "9EA54C08B3D2EAFA25E9": "Protection contre la fuite d'invite de mot canari",
  "87AD5FD8CCD293787F5F": "Injecte un mot canari dans les invites système et surveille la sortie générée pour des fuites.",
  "47EEA27487DF1D1C116B": "`system.safety_harmful_content`",
  "9EDD1350AB8DA6ED3548": "Invite de sécurité contre contenu nuisible : haine et équité, contenu sexuel, violence, auto-mutilation",
  "F08DD93101FA9F6255FA": "Ce script système doit être considéré pour la génération de contenu (qu'elle soit fondée ou non), les chats multi-tours et single-tours, Q&A, réécriture et scénarios de résumé. Voir https://learn.microsoft.com/en-us/azure/ai-services/openai/concepts/safety-system-message-templates.",
  "9B9B81F2674A65844ABE": "`system.safety_jailbreak`",
  "69825C0E6C2A3B82F4AC": "Script de sécurité pour ignorer les instructions dans les sections de code.",
  "6F4A8387899337585A43": "`system.safety_protected_material`",
  "120EA5E7438A747562E7": "Invite de sécurité contre le contenu protégé - Texte",
  "22AB2B363D3FDD6785B5": "Ce script système doit être considéré pour des scénarios tels que : génération de contenu (fondée et non fondée), chat multi-tours et single-tours, Q&A, réécriture, résumé et génération de code. Voir https://learn.microsoft.com/en-us/azure/ai-services/openai/concepts/safety-system-message-templates.",
  "9D8FF004BC9068719185": "`system.safety_ungrounded_content_summarization`",
  "072C801C6467E9148546": "Invite de sécurité contre le contenu non fondé dans le résumé",
  "24B3DEC2E795BC1FE68C": "Doit être considéré pour des scénarios tels que le résumé. Voir https://learn.microsoft.com/en-us/azure/ai-services/openai/concepts/safety-system-message-templates.",
  "8EC038DCD67298FAE074": "`system.safety_validate_harmful_content`",
  "AA40483095247092A234": "Utilise le fournisseur de sécurité de contenu pour valider la sortie LLM pour contenu nuisible",
  "AA1D56AC8C64361C3AD3": "`system.schema`",
  "89A7A8CDA053CF63DC30": "Support de JSON Schema",
  "CD8BA45D2D5A34AD7ADE": "`system.tasks`",
  "E06A95B6D39A63F85966": "Génère des tâches",
  "795E3DC0F8D57A234F4B": "`system.technical`",
  "973242FCD5C5B3863D91": "Rédacteur Technique",
  "F764F3FC33B297849467": "`system.think`",
  "741AA966FFE8ED35EEB8": "L'outil think",
  "A2BA59D61C62CA6750E2": "L'outil 'think' d'Anthropic défini dans https://www.anthropic.com/engineering/claude-think-tool. Utilise l'alias de modèle 'think'.",
  "05C50ED1F948AF833DE5": "outil `think` : utilisez l'outil pour réfléchir à quelque chose. Il n'obtiendra pas de nouvelles informations ni ne changera la base de données, mais ajoutera simplement la pensée au journal. Utilisez-le lors d'un raisonnement complexe ou si une mémoire cache est nécessaire.",
  "FE17688E5B10B5979574": "`system.today`",
  "39808B0312BA6AA19D2C": "Date du jour.",
  "50F7B35CCBCCF1117D5F": "`system.tool_calls`",
  "68B074C1007379978C94": "Support des appels d'outils ad hoc",
  "E54A48F694F6015027B8": "`system.tools`",
  "8875838259A5C8C43A9C": "Support des outils",
  "696ABDB90A34B2508987": "`system.transcribe`",
  "8159FDE431B08B1EE866": "Outil de transcription vidéo",
  "5BE17F6852CF64DD7FA9": "outil `transcribe` : génère une transcription à partir d'un fichier audio/vidéo en utilisant un modèle de reconnaissance vocale.",
  "C2E488F7C6D0EDC21FA0": "`system.typescript`",
  "A9849E3525997EBAF14D": "Développeur expert TypeScript",
  "872E5CF3CC0AFA6C30D4": "`system.user_input`",
  "10F1C42A76A109A72E20": "Outils pour poser des questions à l'utilisateur.",
  "549B26A0084BFF9D8E71": "outil `user_input_confirm` : demande à l'utilisateur de confirmer un message.",
  "3118E6FDDC127975287A": "outil `user_input_select` : demande à l'utilisateur de sélectionner une option.",
  "99B272A33EFEF3D0320F": "outil `user_input_text` : demande à l'utilisateur de saisir du texte.",
  "08917AB10C25BCE16D2A": "`system.video`",
  "B7FC9305EF3C3B5EA003": "Outils de manipulation vidéo",
  "EB81926C5EF5573C3BED": "outil `video_probe` : analyse un fichier vidéo et retourne les informations méta.",
  "05375401BAE753B04B66": "outil `video_extract_audio` : extrait l'audio d'un fichier vidéo vers un fichier audio. Retourne le nom du fichier audio.",
  "F89C567898E33F01CEF3": "outil `video_extract_clip` : extrait un clip d'un fichier vidéo. Retourne le nom du fichier vidéo.",
  "A10440193CCE2DA745D7": "outil `video_extract_frames` : extrait des images d'un fichier vidéo",
  "D3F2F8FB5E58C9139C52": "`system.vision_ask_images`",
  "6B3A81D9900DC0504230": "Vision Ask Image",
  "EE37430667EAB59CA66A": "Enregistre un outil qui utilise un modèle de vision pour exécuter une requête sur des images",
  "C628FCAE5019385E3AF7": "outil `vision_ask_images` : utilise un modèle de vision pour exécuter une requête sur plusieurs images",
  "D664F9ACD20B1D62C160": "`system.z3`",
  "3540042E2E04145B6E44": "Z3",
  "C92D2445A483440B3C7A": "Résout les systèmes de contraintes en utilisant le solveur de contraintes Z3.",
  "57A3FAE4DA22259FD43A": "outil `z3` : résout un problème SMTLIB2 en utilisant le solveur de contraintes Z3. Envoyez les problèmes un par un. Utilisez cet outil si vous avez besoin d'exécuter Z3.",
  "E91CC4F7A0A5B9524FFE": "`system.zero_shot_cot`",
  "2CA2AC4079FDCB8BD215": "Chaîne de raisonnement Zero-shot",
  "2B0575BA26D46F7DD095": "Technique de chaîne de raisonnement Zero-shot. Plus d'informations sur https://learnprompting.org/docs/intermediate/zero_shot_cot.",
  "721EB0D935637BCA7107": "GenAIScript prend en charge la génération de sorties structurées avec des réparations automatiques des données. Il peut exploiter la validation de schéma intégrée fournie par les fournisseurs de LLM ou exécuter sa propre validation selon les besoins.",
  "8F9B40017988FD40019D": "Les sorties structurées sont configurées grâce à deux indicateurs : `responseType`, qui contrôle le format des données, et `responseSchema` qui contrôle la structure des données.",
  "6EAF00791D8B1800FEFA": "Type de réponse",
  "7FE590EF50C1F3B9B82E": "Le type de réponse est contrôlé par l'argument optionnel `responseType` et offre les options suivantes :",
  "FD67BF7A4DF8AB1ED721": "`json` : demander au LLM de produire une sortie JSON valide.",
  "28BA1E3CAF75931873BF": "`yaml` : demander au LLM de produire une sortie YAML valide.",
  "AB7769C482003315EAA4": "`json_object` : utiliser la sortie JSON intégrée d'OpenAI",
  "8A23908738A1426183C8": "`json_schema` : utiliser la sortie JSON intégrée d'OpenAI avec validation de schéma JSON",
  "4F27A140864E2C308846": "Notez que `text` et `markdown` sont également supportés pour configurer la sortie du LLM.",
  "48F2294A3FAFFC8F1A10": "`json`",
  "3A16E959DDF8C5350C89": "Dans ce mode, GenAIScript invite le LLM à produire une sortie JSON valide. Il valide également la sortie et tente de la réparer si elle n'est pas valide.\nCe mode est implémenté par GenAIScript et ne dépend pas du support des fournisseurs de LLM.",
  "6805B9257FEE40975DCA": "La validation du schéma est appliquée si `responseSchema` est fourni.",
  "DC1658E1DFB1DCA9AA71": "`yaml`",
  "2CF66738512EACB0188E": "`json_object`",
  "13F19D325F42D982EE3B": "Dans ce mode, GenAIScript invite le LLM à produire une sortie JSON valide. Il valide également la sortie et tente de la réparer si elle n'est pas valide.\nCe mode repose sur le support intégré des LLM comme OpenAI.",
  "BC2B79C93182ECD03E3C": "`json_schema`",
  "064025C19B231FD54D54": "La sortie structurée est une fonctionnalité qui vous permet de générer des données structurées au format de données, par exemple avec un [schéma JSON](/genaiscript/reference/scripts/schemas). Ce mode est plus strict que `json_object`.",
  "FDFA7983000346C0F5BF": "Pour activer ce mode, définissez `responseType` sur `json_schema` et fournissez un objet `responseSchema`.",
  "487D52135C17F8E3B8F5": "Notez qu'il existe [plusieurs restrictions](https://platform.openai.com/docs/guides/structured-outputs/how-to-use) sur les fonctionnalités des schémas prises en charge par ce mode.",
  "4A5C00EAC4953929C227": "`additionalProperties: true` n’est pas supporté.",
  "772FB3718EA5F1813DA2": "tous les champs optionnels (par exemple ceux qui ne sont pas dans `required`) seront retournés et peuvent être `null`.",
  "FC8077D35672C69F0A3D": "Schéma de réponse",
  "CF29F2DC0FFF6523B4B8": "Vous pouvez spécifier un [schéma](/genaiscript/reference/scripts/schemas) via `responseSchema` qui activera automatiquement le mode de sortie structurée. La sortie sera validée contre ce schéma, et GenAIScript tentera de réparer la sortie si elle n'est pas valide. Le script échouera si la sortie ne correspond pas au schéma.",
  "DED7A908FFBF865CA33C": "Schémas en ligne",
  "C46C0C668C97F827FACB": "Notez que cette section s'applique à la sortie entière d'une conversation. Vous pouvez également utiliser des [schémas en ligne](/genaiscript/reference/scripts/schemas) et utiliser un mix markdown/données que GenAIScript analysera.",
  "16BC37E9820C00E0242C": "Choix",
  "B54915BA0E22BF0A0E7B": "Si vous souhaitez créer un LLM-comme-juges et ne cherchez qu'à obtenir des sorties dans un ensemble de mots donné, vous pouvez aussi envisager d'utiliser des [choix](/genaiscript/reference/scripts/choices) pour augmenter la probabilité que le modèle génère les mots spécifiés.",
  "AFACE8ED99CD43BFBD7B": "`cast`",
  "F89518FA781ABEB013D3": "La fonction [cast](/genaiscript/reference/runtime/cast) est une [aide d'exécution GenAIScript](/genaiscript/reference/runtime) pour convertir du texte/images non structurés en données structurées.",
  "04D260FAA4DF65F861C2": "Les métadonnées sont une carte de paires clé-valeur utilisées pour activer les complétions stockées — une fonctionnalité dans OpenAI et [Azure OpenAI](https://learn.microsoft.com/en-us/azure/ai-services/openai/how-to/stored-completions) qui vous permet de stocker et de récupérer des complétions pour une invite donnée. Cela est utile pour les processus de distillation et d'évaluation.",
  "ADBB6CE1862A7E663B4D": "Vous pouvez attacher jusqu'à 16 paires clé-valeur à un objet. Cela est utile pour stocker des informations supplémentaires sous un format structuré et pour interroger des objets via l'API ou le tableau de bord.",
  "049D155543DF93317ED0": "Les clés sont des chaînes de caractères d'une longueur maximale de 64 caractères. Les valeurs sont des chaînes de caractères d'une longueur maximale de 512 caractères.",
  "7305B900E6B29D5068CB": "L'objet `env.secrets` est utilisé pour accéder aux secrets depuis l'environnement. Les secrets sont généralement stockés dans le fichier `.env` à la racine du projet (ou dans le `process.env` pour l'interface en ligne de commande).",
  "D6C391FBB391C410C691": "Vous devez déclarer la liste des secrets requis dans `script({ secrets: ... })` afin de pouvoir les utiliser dans le script.",
  "74FE6542F11F8662011D": "déclarez l'utilisation dans `script`",
  "E97C1566C9A5828158F2": "accédez au secret dans le script via `env.secrets`",
  "88554563C5064ADC482A": "On ne devrait pas avoir de secrets dans sa base de code, mais parfois cela arrive. \nPour vous aider à éviter cela, nous avons une fonctionnalité d'analyse des secrets qui scannera votre base de code à la recherche de secrets \net vous avertira si certains sont trouvés.",
  "4D51B703DD8118ACAA06": "La fonctionnalité d'analyse des secrets n'est en aucun cas exhaustive et ne doit pas être considérée comme la seule méthode \npour sécuriser votre base de code. C'est une fonctionnalité basée sur le meilleur effort qui vous aidera à éviter les erreurs communes.",
  "64F53549F2DF2A7E1047": "Motifs pris en charge",
  "3E8AEF6D3DC3E63C7FD6": "Par défaut, l'ensemble des motifs de secrets est presque vide et défini à l'adresse [https://github.com/microsoft/genaiscript/tree/main/packages/core/src/config.json](https://github.com/microsoft/genaiscript/tree/main/packages/core/src/config.json).",
  "AFF8517456E6FCA8ECFE": "Cette liste n'est pas complète par conception, et doit être mise à jour afin de correspondre à vos besoins.",
  "EFB11892D57D6E9FF3E2": "Vous pouvez trouver des exemples de motifs à [https://github.com/mazen160/secrets-patterns-db/](https://github.com/mazen160/secrets-patterns-db/).",
  "91F1119C11EC35EC54BF": "Messages analysés",
  "A9D40EEFA5068DDE6ED6": "Par défaut, tous les messages envoyés aux LLM sont scannés et expurgés si ils contiennent des secrets.",
  "07BA664935BD56FA8099": "Vous pouvez désactiver complètement l'analyse des secrets en définissant l'option `secretScanning` à `false` dans votre script.",
  "BB3C241428C719551652": "Configuration des motifs",
  "CFB5DA9C3A1E537107FF": "Si vous avez un motif spécifique que vous souhaitez rechercher, vous pouvez le configurer dans votre \n[fichier de configuration](/genaiscript/reference/configuration-files).",
  "31A3B58038E02DAD56AA": "- ne pas utiliser `^` ou `$` dans votre motif regex",
  "16B7849E93C1234F843B": "Désactivation des motifs",
  "085CA0F9EDE3D012E6D4": "Attribuez la valeur `null` ou `false` à la clé du motif pour le désactiver.",
  "81BEDB70FA6CE39E9F46": "Vous pouvez tester vos motifs sur des fichiers en utilisant la CLI.",
  "E446696EE2B36F5D92CD": "Il est possible de forcer le LLM à générer des données conformes à un schéma spécifique. Cette technique fonctionne assez bien et GenAIScript fournit également une validation automatique « au cas où ».",
  "F972F5618F2AB36C7708": "Vous remarquerez que le schéma pris en charge par GenAIScript est beaucoup plus simple que la spécification complète du JSON schema. Nous recommandons d'utiliser des schémas simples afin d'éviter de perturber le LLM ; vous pourrez ensuite les adapter au format de données spécifique à votre application.",
  "2693473800F44FBC79D2": "Schémas JSON",
  "71712AF82DD405556563": "Un schéma JSON est un langage déclaratif qui permet de valider la structure des données JSON. Il définit les types de données attendus, les propriétés et les contraintes pour les objets JSON. Les schémas JSON sont largement utilisés dans les APIs, les fichiers de configuration et les formats d'échange de données pour garantir que les données respectent une structure spécifique. Les schémas JSON sont définis au format JSON et peuvent être utilisés pour valider des données JSON par rapport au schéma défini. GenAIScript supporte les schémas JSON pour définir la structure des données que vous souhaitez générer.",
  "3CB9493AC6D940793B8E": "`responseSchema`",
  "497A57E69803CFCB7FDB": "Utilisez `responseSchema` pour définir un schéma JSON/YAML pour la sortie du prompt.",
  "06E3F9FCC32F16C62B4D": "Lorsque vous utilisez `responseSchema`, vous pouvez utiliser `responseType` pour spécifier comment le schéma doit être encodé dans la requête.",
  "F2C54376661E103EE2FB": "`responseType: \"json\"` : Le schéma est encodé dans un message système et validé par GenAIScript.",
  "9EAFA8677B979DE568E5": "`responseType: \"json_object\"` : Le schéma est encodé dans la requête, en utilisant le support natif de sortie structurée du LLM. Il est également validé par GenAIScript.",
  "E45431090F3306CA017E": "Les deux approches présentent des compromis et dépendent généralement du LLM que vous utilisez.",
  "18DEAA27C64813EFDAD3": "Vous pouvez aussi l'appliquer à `runPrompt` et GenAIScript analysera et validera la sortie par rapport au schéma, puis la stockera dans le champ `json`.",
  "CA5E1001E934523EDE8E": "`defSchema`",
  "A5B8472DFA5DABF3FB41": "Utilisez `defSchema` pour définir un schéma JSON/YAML pour la sortie du prompt.",
  "26D492DDC4DC0F9F35EF": "<summary>👤 utilisateur</summary>",
  "0B0A8821308FE980BE74": "<summary>🤖 assistant</summary>",
  "9AC047FE1D2268769F9F": "Support natif de zod",
  "9ECBF1D69CCA4CCD88C9": "Le [runtime GenAIScript](/genaiscript/reference/runtime) expose le module `z`.",
  "43DAE3A4F2D31693A615": "Un type [Zod](https://zod.dev/) peut être passé dans `defSchema` et sera automatiquement converti en schéma JSON. GenAIScript exporte également l'objet `z` de Zod pour plus de commodité.",
  "17FB1D498C9487E051BB": "Encodage des prompts",
  "650F58548B8D333275AC": "Suivant l'approche [\"All You Need Is Types\"](https://microsoft.github.io/TypeChat/docs/introduction/) de TypeChat, le schéma est converti en types TypeScript avant d'être injecté dans le prompt du LLM.",
  "22CC6FC016D870F56D03": "Vous pouvez modifier ce comportement en utilisant l'option `{ format: \"json\" }`.",
  "4AD4501CE343BDC707A4": "Lire la trace !",
  "D082CEDBEE329FAFFF2A": "La trace vous permet de voir la source du schéma et le prompt rendu, et le [cli](/genaiscript/reference/cli) écrira aussi les fichiers TypeScript générés dans le dossier de sortie.",
  "31745F905D4B93097FF7": "<summary>schéma CITY_SCHEMA</summary>",
  "9BC8E2D68DFB219F0B8E": "source :",
  "3A4589B34E16BD821653": "prompt (rendu en typescript) :",
  "2BCD822A815CFEDAF3ED": "Utiliser le schéma",
  "138BC1F940327CE8584E": "Puis dites au LLM d'utiliser ce schéma pour générer des données.",
  "E90125A8B3932C41C629": "Validation",
  "5BC3A60C57E974C421F5": "Lorsqu'une charge utile JSON/YAML est générée avec l'identifiant de schéma, GenAIScript valide automatiquement la charge utile par rapport au schéma.",
  "A2293BDE3EF7D9FE2D47": "Tous les formats de données ne se valent pas ! Certains formats comme JSON introduisent une ambiguïté et peuvent perturber le LLM.\n[En savoir plus...](https://betterprogramming.pub/yaml-vs-json-which-is-more-efficient-for-language-models-5bc11dd0f6df).",
  "E51C1DBE2BA99C2AEBC9": "Réparation",
  "F85F81C0D5BC71ECE5CE": "GenAIScript tentera automatiquement de réparer les données en envoyant des messages supplémentaires au LLM avec la sortie de l’analyse.",
  "A33AD0FDC5C08EFC21E2": "Validation à l'exécution",
  "12CA08826AF36528B2DB": "Utilisez `parsers.validateJSON` pour valider le JSON lors de l'exécution du script.",
  "FF854C151499970937CA": "La plupart des APIs sur l’objet `workspace` qui analysent les données supportent également une option `schema` pour valider les données.",
  "571051A75C3D6E222BA4": "remark",
  "EC337AA7CCDBAD8297D7": "mdast",
  "5F0BD7188419DB8A15AD": "unified",
  "43AEA00143FFEC8B8B24": "[Z3]",
  "DCA71A2AD5B8A27BF52D": "GenAIScript utilise le paquet npm [z3-solver] basé sur WebAssembly pour exécuter Z3. ",
  "C24DDAE08CAB06A543CA": "z3-solver",
  "C54A2B93E7818B9B9E9B": "Instance Z3",
  "F2615007422F4168CB55": "instance z3 est un wrapper autour du paquet npm ",
  "0BE3F6056360778996BC": "instance z3 possède la méthode ",
  "014597F60C68B8BE98FC": "Outil Z3",
  "E13D651333D91CF1CC73": "Agent Z3",
  "0067C51ECB5B15E43E1E": "[YAML]",
  "4ED88A9DCAA0F47896D5": "De la même manière que la classe `JSON` en JavaScript, la classe `YAML` dans LLM fournit des méthodes pour analyser et sérialiser les données YAML. ",
  "1AB21CC87279E1CA54C8": "[parsers]",
  "BCFB38E1FA3B2604BA97": "Schémas",
  "F30E8B05D15CE8F680F1": "Les schémas JSON définis avec ",
  "1A50825384BD4EA94441": "defSchema",
  "F7319BBC8AAD8D26CDD5": "La fonction globale `XML.parse` lit un fichier XML et le convertit en un objet JSON. ",
  "84B3D3443AF6E7629A12": "RSS",
  "3594E56A869CD2E01862": "Vous pouvez utiliser `XML.parse` pour analyser un flux RSS en un objet. ",
  "89C5D5780E85B34E0EA1": "exécute une recherche sur le web en utilisant ",
  "98677B9508184225566A": "Tavily",
  "544D968A0C0479E460DB": "Pages Web",
  "EF9E7E0328A320BCEB83": "Configuration Tavily ",
  "F292A4F076EEE64B2C68": "API Tavily",
  "458C732178312E721318": "Configuration Bing Web Search ",
  "F8E7159AE8D1B5EDB266": "L'API utilise ",
  "F2D986144B79B4D50216": "Bing Web Search v7",
  "E4BF07794E3B9FAA818F": "Outil",
  "EE9EBB34B2B6E6435FBC": "Ajoutez le script système ",
  "456B7B72CAC43FE4DBB5": "système ",
  "FA49DB86AEDFBEF0DA3B": "outil",
  "F99E38F3DD92A794CDBF": "qui utilise ",
  "902F0D0A575AF295F647": "Configuration de ffmpeg",
  "05BB27CB21A829A5E7D1": "Les fonctionnalités pour rendre et analyser des vidéos reposent sur ",
  "4FD489DBE3F1CB25ED04": "ou configurez les variables d'environnement `FFMPEG_PATH` ",
  "8EAE1CDCA5DE9747742B": "ou configurez les variables d'environnement `FFPROBE_PATH` pour pointer vers l'exécutable ",
  "34F24B2772D0E0476496": "Extraction des images",
  "056A63E4DA1269E5CB3A": "spécifiez un nombre d'images en utilisant ",
  "E8B4404E27F3B1D1802E": "spécifiez les horodatages en secondes ou en pourcentage de la durée de la vidéo en utilisant ",
  "6DED451EA771C8BC44EF": "spécifiez la transcription calculée par la fonction ",
  "133EA64399EE3826EF6A": "Extraction de l'audio",
  "2C57432B96BA2E05424F": "extrait l'audio d'un fichier vidéo au format ",
  "FE005DED50D53871BC33": "La conversion en audio se fait automatiquement pour les vidéos lors de l'utilisation de ",
  "58B1AB81ED61339086CA": "Extraction de clips",
  "56E0AB126127F4DE8CE5": "Vous pouvez extraire un clip d'un fichier vidéo en utilisant ",
  "2E1136887634FA544462": "Analyse des vidéos",
  "C309B6AAEE0A1CFB9F52": "Vous pouvez extraire des métadonnées d'un fichier vidéo en utilisant ",
  "E3DB0685CDA72C764434": "Options ffmpeg personnalisées",
  "F733DCAC9FA736EC7E4A": "Vous pouvez personnaliser davantage la configuration ",
  "15B3FAF9492AAD562AD2": "en transmettant `outputOptions`. ",
  "08AB27CD69FC1864E24B": "Ou interagir directement avec le générateur de commandes `ffmpeg` ",
  "C5231DF4FB52AA3A95B7": "Création d'index",
  "C27A9C9EBD640471CA32": "qui ne doivent pas changer",
  "4856FEE2DE9063CABF9B": "Index local",
  "04CB3295DD05FEB835DE": "dossiers en utilisant une base de données vectorielle locale basée sur ",
  "82FC0FCCE0F11A020F39": "vectra",
  "16B76372088203175A60": "GenAIScript prend également en charge l'utilisation d'un service ",
  "30191D4F161D901A9CD3": "syntaxe de requête simple",
  "2311DE538924C9468C10": "et ",
  "A93186346AC83FA4A66B": "variables d'environnement dans votre fichier ",
  "9E482FD363338684BB8C": "documentation d'authentification",
  "9417D65911DFBF044A82": "Configuration du modèle et du découpage",
  "72AAF87C01A4E87E8932": "Indexation",
  "0FE2233263364456C323": "Recherche",
  "AF79873997E1F9F760C9": "Paramètres du script",
  "B68E7B4A621862713960": "Il est possible de déclarer des paramètres dans l'appel de la fonction `script`. L'objet `env.vars` contiendra les valeurs de ces paramètres. ",
  "E42E21675A22EB205665": "Variables depuis la CLI",
  "F5F128D8D186A6253D72": "Utilisez le champ `vars` dans la CLI pour remplacer les variables. vars prend une séquence de paires `clé=valeur`. ",
  "94316C6B43854894C498": "Variables dans les tests",
  "735985E6635D6DEEBB13": "Vous pouvez spécifier des variables dans l'objet `tests` de la fonction `script`. Ces variables seront disponibles dans le scope des tests. ",
  "2BE4AE24BEF2CD32CCAF": " ",
  "6AAA046F315995BA18D8": "`host.confirm`",
  "F91D033FE9E97A2BCDDC": "Pose une question à l’utilisateur et attend une réponse oui/non. Elle retourne un `boolean`.",
  "8C79EF6E63A45A1B6E49": "`host.input`",
  "BF421C48784279D8FDE2": "Pose une question à l’utilisateur et attend une saisie de texte. Elle retourne une `string`.",
  "2BC6BF6D999C1B2EB41F": "`host.select`",
  "BED2F0D9FE2CDDD3A9D9": "Pose une question à l’utilisateur et attend une sélection dans une liste d’options.\nElle retourne une `string`.",
  "F5F131FB2D292181E38D": "Intégration Continue",
  "CE680EDF68739F49C068": "Les fonctions d’entrée utilisateur retournent `undefined`\nlorsqu’elles sont exécutées dans des environnements CI.",
  "71A113D3AAE485D74E43": "[TypeScript](https://www.typescriptlang.org/) est un langage de programmation fortement typé qui s'appuie sur JavaScript, vous offrant de meilleurs outils à n'importe quelle échelle. Les scripts GenAIScript peuvent être écrits en TypeScript.",
  "FBFB44BBDF9EDD951BB4": "De JavaScript à TypeScript",
  "D78209BD7AA4837BA821": "Vous pouvez convertir n'importe quel script existant en TypeScript en changeant l'extension du nom de fichier en ",
  "0C467C82F65DA8752DEE": "Assurez-vous d’utiliser l’extension de fichier ",
  "A1B5EEE9EDA65BD1D480": "et non `.ts`, ce qui oblige Node.JS à utiliser le système de modules [``ESM``](https://www.typescriptlang.org/docs/handbook/modules/guides/choosing-compiler-options.html). ",
  "472080279BB80F27F100": "ESM",
  "844AB400A2C1BC344D8C": "Importer des fichiers source TypeScript",
  "45EA10673478449C4C9F": "Il est possible de ",
  "8AE3E96D60F9522216BB": "importer",
  "EB53E5E7E99550323FE7": "Est-ce que GenAIScript vérifie les types dans les prompts ?",
  "4445B2F76C634A3253B7": "Vous pouvez également lancer une compilation TypeScript avec la commande ",
  "0B98FF7E893B95D4A5D8": "sans vérification de types",
  "0287EEEA5B9918B23494": "via ",
  "263A4A071EDA16294EBB": "tsx",
  "22FF28B594A1E53B571A": "L'API de transcription utilisera automatiquement ",
  "E2AFD60A428FCC08B1C4": "ffmpeg",
  "D6973AAADC1D44A7033D": "le codec opus dans un conteneur ogg",
  "C165759599358EA5BEE1": "Modèle",
  "28112969F36C75985280": "le service Web Whisper ASR",
  "33222A380A5ED30DD343": "Segments",
  "40C1E4E397A418983675": "SRT et VTT",
  "E7035EE7C06740B9D5D6": "GenAIScript génère les segments aux formats ",
  "3DFF71FE240D611FAC33": "SRT",
  "84F8D6F769837A643EE5": "WebVTT",
  "EB1CADD153A07936EC4D": "Traduction",
  "3909E383BD0CB7305FEF": "Cache",
  "91B810A5782665E4BE23": "Vous pouvez mettre en cache les résultats de transcription en définissant l'option ",
  "D2031EC311C09BE95DF9": " ",
  "4AFA775D7140E1B9F63D": "ou un \"sel\" personnalisé",
  "9575963382D99BCF20D0": "Vous pouvez analyser les fichiers VTT et SRT en utilisant la fonction ",
  "82C22F99AD58E19521A1": "Choisir votre tokenizeur",
  "62DAFC511B381670E896": "le module ",
  "3AF8C50798FEB6C3E42A": "Supprime une partie de la chaîne pour respecter un budget de tokens",
  "1B049C10FFABB2D28A31": "Les tests sont exécutés par ",
  "9E4CCB63323A2FC049E9": "redteam",
  "4356E6115E0F5C1EDE08": "Définition des tests",
  "8596F8C08379B93EAF08": "Les tests sont déclarés dans la fonction `script` de votre test.\nVous pouvez définir un ou plusieurs tests (tableau). ",
  "0D4D1985BB734C257559": "Tester les modèles",
  "07EB460384096AA7F84E": "Fichiers de test externes",
  "4374D677DB75AA84CC81": "Les fichiers JSON et YAML supposent que les fichiers sont une liste d'objets ",
  "A8136E24A4C938142C3B": "`PromptTest` ",
  "965FF79E6F5CFD14B68F": "Les fichiers CSV supposent que la première ligne est l'en-tête et que les colonnes correspondent principalement aux propriétés de l'objet ",
  "31B7DA774F472BE65FF1": "Les fichiers JavaScript doivent exporter une liste d'objets ",
  "B1DAE138B6BCDF4444C2": "`PromptTest` ",
  "714DDF279B75D130CBBB": "llm-rubric",
  "54DBDAD89667AA32D2B9": "GPT-4 requis",
  "722F56F7F3C3C48CFCEC": "facts ",
  "320CE271F1982C377CD0": "gpt-4o ",
  "919CE97C84963CE4E5EA": "factuality",
  "3A86C24DF7A79109B899": "gpt-4o requis",
  "E2BADE0F3ED76BC8561F": "Autres assertions sur ",
  "B87E8B2FB728EA38D64D": "assertions et métriques promptfoo",
  "3D2A61BBE65068AFB800": "transformation",
  "24F9F4D7D14B2EB4A355": "Exécution des tests",
  "B0F8FE975C7210AD9F64": "Vous pouvez exécuter les tests depuis Visual Studio Code ou en utilisant la ",
  "62B51CFFD55289C35E48": "ligne de commande",
  "3B7F7521A5770159106E": "fichier de configuration promptfoo",
  "531E15AB4F97F34AFB02": "Ouvrez le script à tester",
  "23B9583FEFE1C5914EC9": "Faites un clic droit dans l'éditeur et sélectionnez ",
  "FDBD2518C6A0311ABB2B": "Exécuter les tests GenAIScript",
  "A125B0E3CF53082910CE": "dans le menu contextuel",
  "D6FA628D6B723358CD03": "vue web promptfoo",
  "D8B3EA427DE50BCB3E18": "Ligne de commande",
  "D87E237C25C9532D551B": "Vous pouvez spécifier des modèles supplémentaires à tester en passant l'option ",
  "3DCEAA67E087CEFD6111": "Microsoft Teams",
  "3E194AF9E57817B928E5": "Pour utiliser l’intégration Microsoft Teams avec le ",
  "BE44A3F474F06817D824": "API",
  "6B19F55DBFEE2C2C37CB": "sont considérés comme des modèles d'invite système",
  "F46A1DBB508534B676CE": "Les invites système ne sont pas listées par défaut",
  "44907D2299729B307B62": "Les invites système doivent utiliser le ",
  "EA9CCC396693BD220BDB": "au lieu de ",
  "EDF906895EACD97F8628": "Les invites système sont exécutées avec le même environnement que l'invite principale",
  "2D55E19E827988C4C26D": "Les invites système doivent avoir une fonction par défaut et utiliser le ",
  "3172B336AA469B617F70": "Paramètres et variables",
  "3FFCC3A62D9160467A63": "Le système prend également en charge les paramètres comme les scripts mais les noms des paramètres seront automatiquement préfixés\navec l'identifiant du script",
  "6CA4C85936FB4193883E": "déclarer et utiliser le paramètre dans le script système",
  "37E7A89601F134484A29": "remplacer la valeur du paramètre dans le script script",
  "43B502C3FF6976729686": "remplacer la valeur du paramètre dans une instance du script système",
  "4108A6ED405B80F90453": "Invites système automatisées",
  "D320B8FEF8D459940F3F": "code source",
  "DCD4FEF5CF35A36AFF6D": "Le mélange par défaut est",
  "A054589B3421588DA63B": "système",
  "BF5BFBB0A1E4213A488A": "Invites système intégrées",
  "D191591C83B79B57AD54": "Invite système de base",
  "3133B0EAC01DBE113AFE": "Agent capable d'interroger des données dans des fichiers",
  "86664BCF1E3A1ECE3A89": "Agent du protocole de contexte de modèle",
  "A7FD039A2335A3E0C7AC": "Un agent planificateur",
  "8474C4093F1EA499850A": "Agent capable de travailler sur la vidéo",
  "1381E54BFF2342C58090": "Émet des annotations compatibles avec GitHub Actions",
  "9FAE34ED2A6A79AB521E": "Une invite pour un assistant utile de ",
  "54DE4374FB3459E8C215": "Raisonnement de chaîne de brouillon",
  "ECF36382A9477F814826": "Générer des modifications formatées du changelog",
  "188F5C6C3D995422AB54": "Générer des diagrammes",
  "0B085951BF6D90CA1A50": "Ne pas expliquer",
  "F548ACEB05D71DBCFB50": "Utiliser la sortie en anglais",
  "0BD81B364E98F1480365": "Expliquez vos réponses",
  "50F7C5610CD63BD533BD": "Un outil capable de récupérer des données depuis une URL",
  "8E28A8ACB311788149BE": "outil ",
  "7F13F7352361EDE0C1A3": "Génération de fichiers",
  "803FBD1B85CDD7D52002": "Enseigne le format de fichier supporté par GenAIScripts",
  "AF35569A521C92F7DAF7": "Interroger un fichier avec un LLM",
  "58D5396DFD5408303163": "Un outil pouvant interroger des données dans un fichier",
  "BAC500B1B382D0242984": "Différence de fichiers",
  "DEDFA9990F6E1529C563": "Trouver des fichiers",
  "54515B3E9497FC8BAC48": "Lire un fichier",
  "C828073E7C76B42F4201": "Opérations de lecture git",
  "5B13B398B6725D329A68": "diff git",
  "BD849F14F72768256B88": "Informations sur le dépôt Git",
  "E0F04ADBC9CE59B864AB": "workflows github",
  "420A90376A1B4E6695A7": "Évaluateur d'expressions mathématiques",
  "0DFD0C65DD8F28DB1B13": "Enregistrer une fonction qui évalue des expressions mathématiques",
  "C3033995DB412BDE8FB2": "Charge des outils depuis un serveur Model Context Protocol",
  "6B25208CC86934C1C13C": "Outils pour aider aux tâches de documentation",
  "52E98E9D09BD6B9A3E3A": "Lecteur de frontmatter Markdown",
  "8825158566BA52F20CD1": "Outil qui applique les directives d'OpenAI pour les méta-invites à un prompt utilisateur",
  "1069F95AE7A730D1F95F": "Outil méta-invite modifié de ",
  "DC7CC0F72C2AB2FFDB79": "Outil qui génère un schéma JSON valide pour le JSON décrit",
  "17D790E146200D5AA590": "Générateur de méta-schéma d'OpenAI de ",
  "67FA9076B8B630D9F6FC": "Informations sur le projet actuel",
  "28470999CEAC28FC289E": "Sortie INI",
  "8AFA69DDFE47793D39EE": "Sortie JSON",
  "FCF1623E8E6229F5369A": "Invite système pour sortie en Markdown",
  "FE867DBA76D4979844A8": "Sortie texte brut",
  "81C728E82CEE1C04DA0D": "Sortie YAML",
  "063370DB4DD37AD9A271": "Instruction pour faire un plan",
  "38CC9B16E25E2D6E61FE": "Exécution de code Python dans un conteneur Docker pour l'analyse de données",
  "CFA237A69A00DED5EF8C": "Recherche floue en texte intégral",
  "A6A23C8ABE4E9551CBA5": "Recherche vectorielle par embeddings",
  "C95ECA95C693D8602C2B": "Recherche Web",
  "F6EE728874E1A872D1D3": "Protection contre les fuites de prompt via mot canari (Canary Word)",
  "6DE1518941919E49B543": "Invite de sécurité contre le matériel protégé - Texte",
  "DEB1459ECF5FB6B70C0F": "Invite de sécurité contre le contenu infondé dans la synthèse",
  "4CD7004246E1A85B5B76": "Utilise le fournisseur de sécurité de contenu pour valider la sortie LLM contre le contenu nuisible",
  "0745D4853EF2774ED53D": "Support du JSON Schema",
  "AB1B4739662181D72E82": "Génère des tâches",
  "3F744E45291B50F87BF1": "Rédacteur technique",
  "85FE7E3F8D39F3501E6D": "L'outil think",
  "49BB2767DD72C354D947": "L'outil 'think' d'Anthropic tel que défini dans ",
  "D5641D8CD74A678DB5C1": "Support d'outils ad hoc",
  "F3BDA8A8B3EDBBE978B9": "Support des outils",
  "495BD43AA402058BB703": "Outil de transcription vidéo",
  "7C5BBBEC91053E18AA31": "Développeur expert TypeScript",
  "3F9492D99DFB3735F6AA": "Outils de manipulation vidéo",
  "FFE1769405B4817EE111": "Vision Ask Image",
  "BE81DE2DCEBB7300BE3B": "Outil qui utilise un modèle de vision pour exécuter une requête sur des images",
  "2B0EF2440E44FEE7F561": "Chaîne de pensée zero-shot",
  "DF6260987A834F703AC7": "Type de réponse",
  "D20AA460A24C5B2A176E": "Le type de réponse est contrôlé par l’argument optionnel `responseType` et offre les options suivantes : ",
  "9EF66FFD140B79A71F80": "Notez que `text` et `markdown` sont également supportés pour configurer la sortie du LLM. ",
  "BAD830C11425FDA3D35B": "La validation du schéma est appliquée si `responseSchema` est fourni. ",
  "A4F064D27421F21549BF": "`responseType` ",
  "06A60B43B1CE2CCCCDDA": "et fournissez un objet `responseSchema`. ",
  "20CCDE8E9B32B494DC33": "Schéma de réponse",
  "78785D73FF1BF4A53FE3": "Schémas intégrés",
  "03343B67FE9E419FB9DA": "schémas intégrés",
  "0154AD77C14CBE7C9F2F": "Choix",
  "70BFAB90D4D9F08531D2": "choix",
  "017B293C7A2E99EA2F6E": "La fonction [cast](/genaiscript/reference/runtime/cast) est un ",
  "17FF002B4285B897FD33": "assistant d’exécution GenAIScript",
  "DB1AA735FCBCA5C28A75": "Les métadonnées sont une carte de paires clé-valeur utilisées pour activer les complétions stockées — une fonctionnalité dans OpenAI et ",
  "917EEAF9EAA5E800E43F": "Vous devez déclarer la liste des secrets requis dans ",
  "F38F5DAB8678B7E33385": "déclarez leur utilisation dans `script` ",
  "D6CD770D6516FDAE9159": "accédez au secret dans le script via `env.secrets` ",
  "A27618BF5DEDB98AB5FE": "Motifs pris en charge",
  "033B4F3EC0113E7845E6": "Par défaut, l'ensemble des motifs de secrets est presque vide et défini à ",
  "CC1FBDEA62B7BE1CA601": "Vous pouvez trouver des exemples de motifs à ",
  "A7C08E87038DFDD3DD30": "Analyse des messages",
  "15A240E5265769FE1D26": "Vous pouvez désactiver complètement l'analyse des secrets en définissant l'option `secretScanning` sur `false` dans votre script. ",
  "6127A066C63E92FEF21E": "Configuration des motifs",
  "9089220D2E490763312D": "fichier de configuration",
  "AAD2953F2119A4457631": "n'utilisez pas ",
  "5D0FDE0588D6E4EF651F": "dans votre expression régulière",
  "63F325834E5D82E5DD17": "Désactivation des motifs",
  "93093CD64B2EB6E2636B": "Définissez la clé du motif sur `null` ou `false` pour le désactiver. ",
  "2BA58DB520AAB6F825D9": "VS Code limite le contenu affiché dans l’aperçu Markdown.\nCela inclut la désactivation de l’exécution de script et n’autorise le chargement des ressources que via `https`.",
  "E45F3A563CFA2D3FADF2": "Nous recommandons également la lecture de la [Note de Transparence](/genaiscript/reference/transparency-note/)\npour comprendre les capacités et les limites de GenAIScript. ",
  "5547EA2EDE58573B68AA": "Ne faites pas confiance aux scripts",
  "CE6DE312457904D8FCE4": "Étant donné que les fichiers GenAIScript `.genai.mjs` sont des fichiers JavaScript exécutables et utilisent en réalité un environnement d'exécution JavaScript (VSCode ou Node), il est essentiel de comprendre que le script peut faire tout ce que JavaScript peut faire. Cela inclut la lecture et l’écriture de fichiers, la réalisation de requêtes réseau, et l’exécution de code JavaScript arbitraire.",
  "FBD36B85B17823081BF1": "Ne faites pas confiance aux sorties de LLM",
  "61FD9F82B61BCFD00DE8": "Un script de confiance pourrait utiliser des fichiers malveillants du contexte pour générer une sortie malveillante. Par exemple, en substituant des fichiers dans le projet avec un nouveau code malveillant.",
  "90770987D833D5AADCEB": "dans Visual Studio Code, utilisez l’aperçu de refactorisation",
  "8C06364191D5F5A1C9AD": "dans votre CI/CD, créez une demande de tirage avec les modifications et examinez-les",
  "69BCA1CDD51AF2AEF1D5": "Confiance de l’espace de travail dans Visual Studio Code",
  "CAACBD9E198341968C69": "L’extension est **désactivée** lors de l’ouverture d’un dossier en [Mode Restreint](https://code.visualstudio.com/docs/editor/workspace-trust) dans Visual Studio Code.",
  "5DCA07E1C0CB2DC36A71": "Aperçu Markdown dans Visual Studio Code",
  "D20D03A260EE5F21DE18": "Depuis que les fichiers GenAIScript `.genai.mjs` sont des fichiers JavaScript exécutables et utilisent en fait un environnement d'exécution JavaScript (VSCode ou Node). Il est important de comprendre que le script peut faire tout ce que JavaScript peut faire. Cela inclut la lecture et l’écriture de fichiers, la réalisation de requêtes réseau, et l’exécution de code JavaScript arbitraire. ",
  "DC056875B1DEF0B0E0D2": "Ne pas exécuter `.genai.mjs` scripts provenant de sources non fiables. ",
  "D1D5911588D768B2AE24": "L’extension est **désactivée** lors de l'ouverture d'un dossier en [Mode Restrictif](https://code.visualstudio.com/docs/editor/workspace-trust) dans Visual Studio Code. ",
  "4FE248ACD83CD724482A": "Aperçu Markdown dans Visual Studio Code",
  "96032E2DFF6A1720D005": "Ne pas exécuter les scripts `.genai.mjs` provenant de sources non fiables.",
  "CCAF051B2EAC591B6483": "ffprobe",
  "2331B714B9D70DC660B7": "/",
  "C5E76BF847886DB3CE44": "transcribe",
  "A22E9160C3B53AF2826E": "fluent-ffmpeg",
  "7B51984256D4837DC6BB": "Lorsque vous exécutez le [CLI](/genaiscript/reference/cli),\nla saisie de l’utilisateur se fait via le terminal. ",
  "275A3E28512A3165F91B": "Les fonctions de saisie utilisateur renvoient `undefined`\nlorsqu’elles sont exécutées dans des environnements CI. ",
  "65EB25B9A31F4683EA93": "La sortie structurée est une fonctionnalité qui vous permet de générer des données structurées au format de données comme avec un ",
  "7A71A53D27745AEEC9D4": "schéma JSON",
  "EE40C1EB347AF7285CC9": "Notez qu'il existe ",
  "4049301161251E009C34": "plusieurs restrictions",
  "B5EA2FADA124766D1264": "Vous pouvez spécifier un ",
  "D9D63AF1D55ABE345369": "schéma",
  "239DB3CC3C3F92B4D209": "![Une complétion enregistrée](./stored-completions.png)",
  "52DD8770ABD9AF66F6A3": "Schémas JSON",
  "D27142E45541359B3703": "Utilisez ",
  "8BC6451160321F01028B": "Lors de l’utilisation de ",
  "CAAC868122D749E4E2E8": "pouvez également l’appliquer à ",
  "5DADA76DD8B23FF0023B": "et GenAIScript analysera et validera la sortie par rapport au schéma\net la stockera dans le champ ",
  "74ED1B9B79BC3DC0DFB0": "👤 utilisateur",
  "A44BCFDB4F4D21D29EF9": "🤖 assistant",
  "7B56E2FCE319DEB568D3": "Support natif de zod",
  "A6187B6FB829E5E41148": "expose le module ",
  "7157E2ABEDB0E9354828": "Zod",
  "6A9BEC90C4F473BAFF1E": "peut être passé dans ",
  "7B0D6E7BBE8E6F4EE366": "Encodage de l’invite",
  "3216DAD34F2D8FE8BCEB": "Suivant l’approche ",
  "0C68C5611D9C19E7754F": "« Tout ce dont vous avez besoin, ce sont des types »",
  "7BA536A63D0C09F9BEA2": "Vous pouvez changer ce comportement en utilisant l’option ",
  "B3AFD429140D1D8E6ACA": "Lire la trace !",
  "9DFE34CE187B0AD8719F": "La trace vous permet de voir la source du schéma et l’invite rendue\net la ",
  "344AF0F70BC19F199CE3": "schéma CITY_SCHEMA",
  "B0205D9672D93CBC3DE7": "Utiliser le schéma",
  "CABEA41CA45BCE5ABF92": "Validation",
  "A7ACC8125A942F435BD2": "Réparation",
  "2136CE06A9B4015D40B3": "Validation à l’exécution",
  "2143520ED702B1AD2901": "La plupart des API sur l’objet ",
  "56BABC7A2A0E1659C5DE": "Carnet de tutoriel",
  "99A5214D01A85C5FCDAB": "Apprenez à utiliser GenAIScript avec ce carnet tutoriel interactif contenant des blocs de code JavaScript exécutables.",
  "570D3FACCE0FFFB3C808": "Ce carnet est un tutoriel GenAIScript. C'est un document Markdown où chaque section de code JavaScript est un GenAIScript exécutable. Vous pouvez exécuter chaque bloc de code individuellement et voir les résultats dans la section de sortie sous le bloc de code. Pour ouvrir ce carnet dans Visual Studio Code, appuyez sur **F1** et lancez **GenAIScript : Créer un carnet Markdown GenAIScript**.",
  "FA4FA995F1164E55FADC": "Suivez les étapes dans [configuration](https://microsoft.github.io/genaiscript/getting-started/configuration) pour configurer votre environnement et l'accès au LLM.",
  "234A259CD09EA2470947": "Invite en tant que code",
  "56FCF629A04E4414ACE7": "GenAIScript vous permet d’écrire des invites sous forme de programme JavaScript. GenAIScript exécute votre programme ; génère des messages de chat ; puis gère le reste de l’interaction avec l’API LLM.",
  "C8F687BE24DFD0A9C460": "Écrire dans l’invite avec `$`",
  "95E77C5AF9564EF6A43A": "Commençons par un simple programme hello world.",
  "D39D2816710765A50031": "<summary>🤖 assistant </summary>",
  "95762DF44BA6CEC9B605": "La fonction `$` formate les chaînes et les écrit dans le message utilisateur. Ce message utilisateur est ajouté aux messages du chat et envoyé à l’API LLM. Sous l'extrait, vous pouvez consulter à la fois le message **utilisateur** (généré par notre programme) et la réponse de l’**assistant** (LLM).",
  "4B04D148C233A5522032": "Vous pouvez exécuter le bloc de code en cliquant sur le bouton **Exécuter la cellule** en haut à gauche du bloc de code. Par défaut, il utilisera les LLMs de différents fournisseurs. Si vous devez utiliser un autre modèle, mettez à jour le champ `model` dans l’en-tête YAML au début du document. De nombreuses options sont documentées dans [configuration](https://microsoft.github.io/genaiscript/getting-started/configuration).",
  "9B68D817CC7CC90310B4": "Une fois l’exécution terminée, vous aurez également une entrée **trace** supplémentaire qui vous permet d’examiner les détails internes de l’exécution GenAIScript. Cela est très utile pour diagnostiquer les problèmes avec vos invites. La trace peut être assez volumineuse, elle n’est donc pas sérialisée dans le fichier markdown.",
  "F05E3FAB5A955FE882FC": "Vous pouvez utiliser la boucle JavaScript `for` et séquencer plusieurs appels `$` pour ajouter du texte au message utilisateur. Vous pouvez également utiliser des expressions internes pour générer du contenu dynamique.",
  "484A4C395E81FADD172D": "Pour récapituler, GenAIScript exécute et génère des messages utilisateur ; ceux-ci sont envoyés au LLM. Vous pouvez consulter le message utilisateur (et d’autres) dans la trace.",
  "2843131F308AB24F77AF": "`def` et `env.files`",
  "B1C654B28784FE14A238": "La [`fonction def`](https://microsoft.github.io/genaiscript/reference/scripts/context/#definition-def) vous permet de déclarer et d’assigner des **variables LLM**. Le concept de variable est surtout utile pour importer des données contextuelles, en particulier des fichiers, et s’y référer dans le reste de l’invite.",
  "C0D8F9BA8ACFF378EC08": "Dans GenAIScript, la variable [`env.files`](https://microsoft.github.io/genaiscript/reference/scripts/context/#environment-env) contient la [liste des fichiers dans le contexte](https://microsoft.github.io/genaiscript/reference/script/files), qui peut être déterminée par une sélection utilisateur dans l’interface, les arguments CLI ou préconfigurée comme dans ce script. Vous pouvez modifier les fichiers dans `env.files` en éditant le champ `files` dans l’en-tête YAML au début du document.",
  "D6A0ACEFB3DA7526C7F6": "Filtrage de `env.files`",
  "3CE2E30D381F2FEA3FBC": "Lorsque vous utilisez GenAIScript depuis l’interface utilisateur, il est courant d’appliquer un script à un dossier entier. Cela signifie que vous recevrez un ensemble de fichiers dans `env.files`, y compris certains non nécessaires. La fonction `def` offre différentes options pour filtrer les fichiers, comme l’option `endsWith`.",
  "491F9F519C7D46DEF52B": "`def` propose également `maxTokens` qui tronque la taille du contenu à un nombre de tokens. Le contexte LLM est limité !",
  "6368D26E6B51A353BA58": "Outils",
  "6F68BA4A29479A4DAE35": "Vous pouvez enregistrer des fonctions JavaScript comme outils que le LLM appellera selon les besoins.",
  "AA943EEC9D4D471DA4B2": "Sous-invite",
  "2E29DF977C75C9421128": "Vous pouvez exécuter des LLM imbriqués pour effectuer des tâches sur d’autres modèles plus petits.",
  "B34142630E8B22A1F7CE": "Automatisation des scripts",
  "36901DA01682580DF9FF": "Apprenez à automatiser vos scripts en utilisant l'interface en ligne de commande GenAIScript pour un traitement par lot efficace et une intégration dans les pipelines CI/CD.",
  "675ED27265ABE2A6DC03": "Une fois que vous avez un script qui vous convient, vous pouvez l'automatiser en utilisant l'[interface en ligne de commande](/genaiscript/reference/cli).",
  "C189FBDB1662EFCA1E25": "Exécution d'un script avec la CLI",
  "6684C71D04BA9AF721AA": "L'utilisation de base de la CLI est de [lancer](/genaiscript/reference/cli/run/) un script avec un nom d'outil et une liste de fichiers.",
  "369D9A0E76686E45B27D": "où `<script_id>` est le nom du script (par exemple le nom de fichier sans `.genai.mjs`) et `<...files>` est une liste de fichiers sur lesquels exécuter le script.",
  "C5A10C3A73777D8450AB": "La CLI utilisera les secrets dans le fichier `.env`, remplira `env.files` avec `<...files>`, exécutera le script et affichera la sortie sur la sortie standard.",
  "BAF9EB9B36E0E639CC89": "[npx](https://docs.npmjs.com/cli/v10/commands/npx) vous permet d'exécuter une commande à partir du [package npm genaiscript](https://www.npmjs.com/package/genaiscript) (installé localement ou récupéré à distance). Ajoutez le drapeau `--yes` pour accepter automatiquement toutes les invites sans confirmation.",
  "269C4DAFAB0C4494A59E": "Vous pouvez utiliser la CLI pour exécuter vos scripts dans un pipeline CI/CD. La CLI renverra un code de sortie non nul si le script échoue, ce qui peut être utilisé pour faire échouer le pipeline.",
  "6E80E756DE19E6555A6F": "Appliquer les modifications",
  "B132343D08D367E2C06E": "Ajoutez l'option `--apply-edits` à la CLI pour écrire automatiquement les modifications dans les fichiers.",
  "936F69B3F8947464C330": "Un LLM peut générer du code arbitraire qui peut être nuisible à votre système. Nous vous recommandons de réviser le code modifié avant de l'exécuter. Cela peut se faire via une branche séparée et une demande de tirage. Vous pouvez également utiliser un [conteneur](/genaiscript/reference/scripts/container) pour exécuter le script dans un environnement isolé.",
  "7F6F72D98A6FB57BEF4D": "Consultez la section [Sécurité et confiance](/genaiscript/reference/security-and-trust) pour plus d'informations.",
  "9C038942914832B5A02E": "Action GitHub",
  "80ED44025902D49EB122": "[GitHub Actions](https://docs.github.com/en/actions) est une plateforme d'intégration continue et de livraison continue (CI/CD) qui vous permet d'automatiser votre pipeline de construction, de test et de déploiement. Cette section explique comment intégrer votre GenAIScript dans les workflows et demandes de tirage de GitHub Actions.",
  "9E927782F571A8A16519": "[GitHub Models](https://github.com/marketplace/models) offrent un moyen intégré d'exécuter une inférence LLM à partir d'une action GitHub.",
  "3C5A5F0D03C82B3AC88D": "Configurer GitHub Models",
  "3CAB1A1516BBEB9DF282": "Pour utiliser GitHub Models, vous devez ajouter la permission `models: read` à votre workflow, transmettre le secret `GITHUB_TOKEN` à la CLI, et configurer la CLI pour utiliser GitHub Models. Cela peut se faire en définissant le fournisseur LLM sur `github` dans la CLI.",
  "63F42B10EE5F7ACABA0E": "Configurer secrets et variables",
  "BBB35572AC9B28BA58DB": "Configurez les [secrets](https://docs.github.com/en/actions/security-guides/using-secrets-in-github-actions) et les [variables](https://docs.github.com/en/actions/learn-github-actions/variables) sur votre dépôt ou organisation afin que GenAIScript puisse se connecter à votre LLM.",
  "924823A6A11ADE6D615F": "Les secrets et variables doivent correspondre au fichier `.env` de votre environnement local.",
  "BF3B2210B4CC39EBE4E9": "Exécution d'un script",
  "3281DBBD94FE9CC90A6D": "Utilisez la [CLI](/genaiscript/reference/cli/run/) pour exécuter le script dans une action GitHub.",
  "0349502DCB63C7DD86ED": "Assurez-vous de transmettre les secrets et variables au script pour permettre l'accès au LLM.",
  "DC5CA52D7973FEF4F1D4": "Utilisez l'option `--out <path>` pour stocker les résultats dans un répertoire afin de pouvoir les télécharger comme artefact.",
  "6B273B19EB50F0DE74F7": "Ajouter la trace au résumé de l'action",
  "D55A242BD5A0F23DEC73": "Utilisez l'option `out-trace` pour écrire la trace dans le fichier de résumé, `$GITHUB_STEP_SUMMARY` (voir [exemple](https://github.com/microsoft/genaiscript/actions/runs/9370477073#summary-25797526178)).",
  "6B10ACDDBB7D58F6CA8E": "Diff",
  "6F730FD085086857A8BA": "Vous pouvez utiliser `git.diff` pour exécuter une commande [git](https://git-scm.com/) `diff` afin de récupérer les modifications dans la branche courante.",
  "57E712CE268EC738ECB0": "Notez que vous devrez récupérer la branche `origin/main` pour que cette commande fonctionne dans une action.",
  "46213FF0DE2E1F305BD0": "Stockage des résultats dans les artefacts",
  "E4483942BFE3315C1E98": "Assurez-vous que le répertoire contenant les résultats est téléchargé comme artefact. Vous pouvez consulter la trace en ouvrant le fichier `res.trace.md` dans l’artefact compressé.",
  "017FD3C0CA76CFFC4AAC": "Azure OpenAI avec un principal de service",
  "A3A5C7CED36A62657990": "La documentation officielle de l'[action azure login](https://github.com/Azure/login?tab=readme-ov-file#azure-login-action) contient des étapes détaillées pour configurer l'accès aux ressources Azure depuis GitHub Actions.",
  "EC3CB1AD696556F77B54": "La [connexion avec OpenID Connect (OIDC)](https://github.com/Azure/login?tab=readme-ov-file#login-with-openid-connect-oidc-recommended) est la solution recommandée dans les pages de documentation Azure.",
  "1E35D8023EB095D1FA11": "Les étapes ci-dessous montrent comment configurer l'action de connexion Azure pour accéder à la ressource OpenAI **en utilisant un secret client de principal de service**.",
  "1B42FB3A07D0E2489A7D": "Créez un principal de service en suivant le guide [connect from azure secret](https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure-secret#prerequisites).",
  "1D2430C1FDE0F76437F2": "Attribuez un rôle quelconque au principal de service (par exemple **Lecteur**) dans votre abonnement Azure. Vous en avez besoin pour vous connecter.",
  "37FE10313C715173D096": "Attribuez le rôle **Cognitive Services OpenAI User** au principal de service. Vous en avez besoin pour que le principal de service puisse accéder à la ressource OpenAI.",
  "945AD32986FD92CF3EC9": "Configurez le secret [AZURE_CREDENTIALS](https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure-secret#create-a-github-secret-for-the-service-principal) dans votre dépôt GitHub avec les identifiants du principal de service.",
  "5AEE3161373DE460684E": "Configurez la variable `AZURE_OPENAI_API_ENDPOINT` dans les variables GitHub Actions de votre dépôt.",
  "8081FBBF45FA38BCD64A": "Ajoutez l'étape suivante dans votre workflow GitHub pour vous connecter à Azure.",
  "51ADB3FF8DF154C176E4": "Mettez à jour chaque étape qui invoque la [CLI](/genaiscript/reference/cli) pour inclure la variable `AZURE_OPENAI_API_ENDPOINT`.",
  "17F69915BC981D924229": "Demande de tirage GitHub",
  "D76A1C54D2B870237B90": "Si votre action GitHub est déclenchée par un [événement de demande de tirage](https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request), vous pouvez utiliser les options suivantes pour ajouter des commentaires : description, conversation et revues.",
  "E04312D6F422DC5375FF": "Pour créer des commentaires, le workflow doit avoir la permission `pull-requests: write` et le secret `GITHUB_TOKEN` doit être transmis au script.",
  "60C8E76329B20FFE5518": "Mettre à jour la description",
  "23386985D12274A60AA2": "L'option `--pull-request-description` insère la sortie du LLM dans la section de la demande de tirage (voir [exemple](https://github.com/microsoft/genaiscript/pull/504)). La commande accepte un argument optionnel de chaîne pour identifier de manière unique ce commentaire, il est utilisé pour mettre à jour le commentaire (par défaut c'est l'id du script).",
  "1EC6C7AAFEE8D235D035": "Si vous souhaitez exécuter ce script lorsque la demande de tirage est prête pour révision, utilisez les événements [`ready_for_review`](https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request), `opened`, `reopened`.",
  "F7737D53C15A4B626FC2": "Le commentaire est encadré par deux commentaires XML (`<genaiscript begin [id]>`, `<genaiscript end [id]>`) pour permettre une identification et une suppression faciles. Veuillez les conserver.",
  "A88663F2738BA0DE9E21": "Commentaire de conversation",
  "92C152FF87B27A0E9AB3": "L'option `--pull-request-comment` ajoute la sortie du LLM en tant que commentaire à la conversation de la demande de tirage (voir [exemple](https://github.com/microsoft/genaiscript/pull/504#issuecomment-2145273728)). L'argument optionnel est un identifiant pour le commentaire (par défaut l'id du script) afin qu'un seul commentaire apparaisse pour cet id.",
  "8A1E1174BE4F12BAF868": "Commentaires de revue",
  "055E1488E821D9BF8673": "Utilisez l'option `--pull-request-reviews` pour convertir les [annotations](/genaiscript/reference/scripts/annotations) en commentaires de revue **sur le dernier commit** de la demande de tirage (voir [exemple](https://github.com/microsoft/genaiscript/pull/504#pullrequestreview-2093960791)).",
  "7CD5D42F4CCCEA214F82": "GenAIScript essaiera automatiquement d'ignorer les commentaires de revue en double et de ne créer que les nouveaux.",
  "8D698B6AB172306F017E": "Pour collecter les modifications du dernier commit dans la branche de la demande de tirage (voir [article intéressant](https://www.kenmuse.com/blog/the-many-shas-of-a-github-pull-request/)), vous pouvez essayer cette commande git :",
  "D7701468DC3E47FF71B9": "Meilleures pratiques",
  "6BE4D10EFA2EE6C6DA9F": "Suggestions pour utiliser GenAIScripts de manière plus efficace",
  "227F50D7B6D385360FDF": "GenAIScript permet aux utilisateurs de chatbot de créer des scripts réutilisables",
  "726ADE161E945CF6FA51": "Si vous avez utilisé un chatbot basé sur un LLM, comme ChatGPT, vous connaissez les types de choses que les LLM peuvent faire et que les logiciels ordinaires (qui n'utilisent pas de LLM) ne peuvent pas. Par exemple, les LLM peuvent examiner un document, écrire de la poésie et analyser des images, juste comme point de départ (avec la réserve qu'ils font parfois des erreurs). GenAIScript vous permet d'écrire une invite qui est intégrée dans un cadre JavaScript afin que l'invite puisse être paramétrée, testée, déboguée, réutilisée et exécutée depuis une ligne de commande.",
  "7BE681F65EC72671D286": "Fournir au modèle le contexte dont il a besoin à partir des documents",
  "7827304A8439775FE79C": "GenAIScript permet aux utilisateurs d'ajouter des documents à leurs invites. Cela permet au LLM d'avoir plus d'informations de fond liées à la tâche qu'on lui demande d'effectuer. Dans un GenAIScript, la commande JavaScript [`def`](/genaiscript/reference/scripts/context) donne au LLM le contenu d'un document et définit un nom qui peut être utilisé dans l'invite pour faire référence à ce document. Les formats de documents standard, comme [pdf](/genaiscript/reference/scripts/pdf) et [docx](/genaiscript/reference/scripts/docx) sont pris en charge, vous n'avez donc qu'à nommer les fichiers et nos bibliothèques extraieront automatiquement le texte. Vous pouvez paramétrer davantage le contexte d'entrée en utilisant [`env.files`](/genaiscript/reference/scripts/context).",
  "64FB45A2048E47108408": "Concentrez un GenAIScript pour que le LLM fasse bien une seule chose",
  "870E707ED0C548657F9B": "Supposons que je veuille utiliser un GenAIScript pour rédiger un livre blanc. Plutôt que de demander au modèle d'écrire tout le document en une seule invite, je diviserais la tâche en différentes parties : écrire l'introduction, rédiger les recommandations, écrire la conclusion, etc. En décomposant le problème en sous-problèmes, vous pouvez déboguer le script pour accomplir correctement la tâche spécifique, puis passer à la suivante.",
  "C127939020673197D957": "Utilisez la sortie d'un GenAIScript comme entrée pour un autre",
  "3984F958E4C534C36075": "En combinant les deux points ci-dessus, vous pouvez créer une collection de scripts interconnectés qui accomplissent un objectif plus ambitieux. Selon votre niveau d'expertise, la combinaison peut être réalisée en utilisant l'interface en ligne de commande des scripts [CLI](/genaiscript/reference/cli) et en utilisant un logiciel traditionnel pour les connecter.",
  "0264B52EC6338FD591D2": "Utilisez le bon LLM ou autre modèle de base pour la tâche",
  "E8C13A6375C32EC865F5": "Il existe actuellement de nombreux choix différents de modèles d'IA. Nous expliquons comment connecter plusieurs d'entre eux avec GenAIScript dans [configuration](/genaiscript/getting-started/configuration). Ils varient en capacités et en coût, certains étant disponibles en open source et utilisables (avec le bon GPU) gratuitement. Consultez la documentation du LLM ou autre modèle spécifique que vous utilisez pour comprendre comment écrire des invites qui communiquent efficacement la tâche que vous voulez que l'IA accomplisse. Les paramètres varient entre les LLM, par exemple, la taille du contexte d'entrée autorisée, alors assurez-vous que le contenu que vous voulez transmettre au LLM tient dans la taille de sa fenêtre de contexte.",
  "CA6BD3737937C4FD826C": "Configurez votre connexion LLM et les secrets d'autorisation avec des variables d'environnement pour une intégration fluide.",
  "9EB7B9246DADA411D6F3": "Vous devrez [configurer](/genaiscript/configuration) la connexion LLM et les secrets d'autorisation.\nVous pouvez utiliser des modèles distants (comme OpenAI, Azure, etc.) et des modèles locaux (comme Ollama, Jan, LMStudio, etc.) avec GenAIScript.",
  "6CBF4BE52F6833EDFD61": "Il existe quelques raccourcis où GenAIScript détectera automatiquement la configuration ; sinon, vous devrez suivre [les instructions de configuration](/genaiscript/configuration).",
  "5A86051E1E66C3D39F69": "dans Visual Studio Code avec GitHub Copilot Chat installé, GenAIScript utilisera automatiquement les modèles Copilot Chat",
  "CD3C2499ADF45D0F997D": "dans un GitHub Codespace, GenAIScript utilisera automatiquement les modèles GitHub",
  "0DA0524A0A8D839483D3": "si Ollama fonctionne, GenAIScript utilisera automatiquement les modèles Ollama",
  "32740759FFBECA18C6D7": "**Si aucun de ces scénarios ne s'applique, suivez [les instructions de configuration](/genaiscript/configuration).**",
  "AA4ACF246FDA21296066": "Étapes suivantes",
  "0EC622969D9AC250DAA6": "Écrivez votre [premier script](/genaiscript/getting-started/your-first-genai-script).",
  "B1C0FBE7DA691E240BE1": "Débogage des scripts",
  "982EF83F4A612E855C7F": "Apprenez à déboguer les fichiers GenAIScript à l'aide du débogueur de Visual Studio Code pour dépanner efficacement et améliorer vos scripts d'automatisation JavaScript.",
  "9C86345C8153AB4F4955": "Les fichiers de script GenAIScript sont des JavaScript exécutables et peuvent être débogués à l'aide du [débogueur de Visual Studio Code](https://code.visualstudio.com/Docs/editor/debugging), comme tout autre programme JavaScript.",
  "7D0C4E7CC94CA58036F8": "GenAIScript fournit également un [journalisation légère intégrée](/genaiscript/reference/scripts/logging) pour vous aider à dépanner vos scripts sans débogueur.",
  "C18649A79D853D358AA4": "Démarrer une session de débogage",
  "A46377D7F4F8DC739BFF": "Ouvrez le fichier `.genai.mjs` à déboguer et ajoutez des points d'arrêt.",
  "00A9A59B5F2B2EA60873": "Depuis les fichiers env",
  "9F1468CA35E2D9B1E88F": "Cliquez droit dans l'éditeur du fichier que vous souhaitez dans `env.files`.",
  "0182F07DCDBDD5D80680": "Sélectionnez GenAIScript dans le sélecteur.",
  "FC33246BAB32E3E80FB6": "Depuis le script lui-même",
  "6B306CFFDADBCF24E986": "Ajoutez un champ `files` dans la fonction `script`",
  "EB28B5B1CA104A17C3C5": "Cliquez sur le bouton icône **Déboguer** dans le menu de l'éditeur (caché sous le bouton d'exécution).",
  "EE05299D8696FC1A67F4": "Le débogueur lancera le [cli](/genaiscript/reference/cli) et exécutera le script en mode débogage.\nLe débogueur s'arrêtera aux points d'arrêt que vous avez définis.",
  "78486E1BED8333F79B21": "Le JavaScript s'exécute dans un processus Node externe. Par conséquent,",
  "C4F9855B2BA909FC39F1": "L'aperçu et la sortie de la trace ne sont pas pris en charge pendant le débogage.",
  "47419D5C4BC6D195F5E3": "Étapes suivantes",
  "2D55A58238A12284B531": "Continuez à itérer sur le script ou [ajoutez des tests](/genaiscript/getting-started/testing-scripts).",
  "A4C8E6F05EC8028DB073": "Installation",
  "EBD61C18FAD8854A105F": "Apprenez comment installer GenAIScript en tant qu'extension Visual Studio Code ou l'utiliser via la ligne de commande pour une intégration fluide dans votre flux de travail de développement.",
  "FD5B27DCFD7A825B1DD3": "GenAIScript est disponible en tant que [ligne de commande](#command-line) ou [extension Visual Studio Code](#visual-studio-code-extension).",
  "C1894F0FC4E65F9DCF6E": "Node.JS",
  "5838C3EEBB723E81B23F": "GenAIScript nécessite [Node.JS](https://nodejs.org/) pour fonctionner.\nNous recommandons d'installer la version LTS en utilisant un [gestionnaire de versions node](https://docs.npmjs.com/downloading-and-installing-node-js-and-npm).",
  "9553E3BE740CFA0DA676": "Installez Node.JS (node) [avec un gestionnaire de paquets](https://nodejs.org/en/download/package-manager).\n**Vous avez besoin d'au moins Node.JS v22.**",
  "2CA8581BD6E7AA1A080E": "Vérifiez votre installation",
  "016C2459008E36964BD5": "Vous devriez voir une version similaire ou supérieure aux versions suivantes :",
  "C922647CCAC184117B37": "Extension Visual Studio Code",
  "CCF7B003B2D284CA044A": "Installez [Visual Studio Code](https://code.visualstudio.com/Download).",
  "08212CD208E4EC94515A": "Visual Studio Code est un éditeur de code source léger mais puissant qui fonctionne sur votre bureau et est disponible pour Windows, macOS et Linux.",
  "9E8B3AD5B5898C01FB1A": "Ouvrez le dossier de votre projet dans Visual Studio Code.",
  "56E98C53705CD09BADA3": "Cliquez sur la vue **Extensions**",
  "373D2E5FFABBAEA79B35": "Cherchez **genaiscript** et cliquez sur **Installer**.",
  "AED26F5929BA15352094": "Si l'installation réussit, vous verrez l'icône dans la vue **Extensions**.",
  "D36928E562D680DFCC5D": "(Optionnel) Cliquez sur l'icône ⚙️ roue dentée sur la page de l'extension et sélectionnez **Ajouter aux recommandations de l'espace de travail**.",
  "3D861337EBC38A8803E2": "Pour installer une version spécifique de l'extension, nous recommandons de stocker le fichier `genaiscript.vsix`\ndans votre dépôt et d'utiliser les étapes d'installation manuelle.",
  "43F39F8E64C8B6825635": "Profil par défaut pour le terminal",
  "9E4E51CAE75BF1BD0419": "GenAIScript lance un serveur node dans le terminal par défaut. Si le terminal par défaut n'est pas configuré\nou ne supporte pas node.js, vous devrez peut-être le mettre à jour dans vos paramètres utilisateur/espace de travail.",
  "9A209283170E34FDCCDB": "Ouvrez la palette de commandes `Ctrl+Shift+P` et recherchez `Terminal : Sélectionner le profil par défaut`.",
  "B45DCD25C074B87EBD8A": "Sélectionnez un profil de terminal comme **Git Bash**",
  "B39D19574F302ABECCC9": "Installation manuelle (avancé)",
  "7717DE8061413C523966": "La dernière version de développement de l'extension est également disponible via les releases GitHub. Cela permet d'accéder\naux correctifs de bugs avant la sortie sur le marketplace.",
  "B494A89B82852E6281FD": "Ouvrez la [dernière release](https://github.com/microsoft/genaiscript/releases/latest/) sur GitHub",
  "227007ECB12068ACA3D9": "Téléchargez le fichier `genaiscript.vsix` dans le dossier racine de votre projet",
  "E0334C9051A26BA26F26": "...",
  "FA05659DB83CCB35334D": "dossier .genaiscript/ créé par l'extension pour stocker les fichiers de support",
  "5B7FC0030F8607784386": "cache/ divers fichiers cache",
  "A110A87318D2631F20C0": "retrieval/ caches de la base de données de récupération",
  "7EEFEC41707BFF522D9D": "... fichiers de support",
  "AE10BD216805B97DFA05": "**genaiscript.vsix**",
  "2BCCFAE8880DCE161206": "Ouvrez votre projet dans Visual Studio Code",
  "EA9A9F5DE0805BE9ECFE": "Cliquez droit sur le fichier `.vsix` et sélectionnez **Installer l'extension VSIX...**",
  "B0546EA14632CC636AA3": "Support de Cursor",
  "E073AE8EB97971EDEFBE": "GenAIScript peut être installé dans [Cursor](https://cursor.sh/how-to-install-extension)\nen suivant les étapes d'installation manuelle.",
  "519409B1C35D533D4BD4": "Ligne de commande",
  "638CDF674738A63B95F1": "L'outil en ligne de commande [genaiscript](/genaiscript/reference/cli/) vous permet d'exécuter votre GenAIScript\ndepuis n'importe quel terminal.",
  "85417FFD341027BBC111": "`npx` installera et mettra en cache automatiquement l'interface en ligne de commande.",
  "00518DA40B056B3194B6": "**npx peut être lent**. Apprenez comment installer localement dans la [référence CLI](/genaiscript/reference/cli/).",
  "7F1ADC9EC9F4672BE09B": "DevContainer",
  "445DD09B92D53E07C08F": "Vous pouvez ajouter ce fichier dans votre projet pour utiliser GenAIScript dans un\n[DevContainer](https://containers.dev/), il contient un minimum d'outils pour commencer.",
  "7CE756619B89E14A21D7": "La définition du devcontainer sera automatiquement utilisée par\n[GitHub CodeSpaces](https://docs.github.com/en/codespaces/setting-up-your-project-for-codespaces/adding-a-dev-container-configuration/introduction-to-dev-containers),\nle [cli devcontainer](https://github.com/devcontainers/cli)\nou diverses [intégrations éditeur](https://containers.dev/supporting).",
  "49921ECEA85207EFD4B6": "Configurons les [informations de connexion LLM](/genaiscript/getting-started/configuration)",
  "A7C64AE12910F7A673DA": "Test des scripts",
  "084A5401C471EEABFF18": "Apprenez comment déclarer et exécuter des tests pour vos scripts afin d'assurer leur exactitude et leur fiabilité.",
  "4AF944283609ADFACC47": "Il est possible de déclarer des [tests](/genaiscript/reference/scripts/tests) dans la fonction `script` pour valider la sortie du script.",
  "17B8ABD4EB2270223258": "Déclaration des tests",
  "19FB53BD17C081EE0735": "Les tests sont ajoutés sous forme d'un tableau d'objets dans la clé `tests` de la fonction `script`.",
  "FDFEB3DD5E96D553E2DC": "Spécification des modèles",
  "E8B25FAFB45D387F5776": "Vous pouvez également spécifier un ensemble de modèles (et d'alias de modèles) pour exécuter les tests. Chaque test sera exécuté pour chaque modèle.",
  "2300A4D2CE0F2ED31520": "Les `testModels` peuvent aussi être remplacés via la ligne de commande.",
  "A529F0E05A466EFD797B": "Ouvrez la [vue Test Explorer](https://code.visualstudio.com/docs/python/testing).",
  "A1ACE56A562DD48E6850": "Sélectionnez votre script dans l'arborescence et cliquez sur le bouton avec l'icône `play`.",
  "77EF4B43FACEDE71176D": "Ligne de commande",
  "66A6559D242B59962298": "Exécutez cette commande depuis la racine de l'espace de travail.",
  "3E036E589A1634DA2B62": "Limitations connues",
  "6ED5C3C3CD9B7891E3AE": "Actuellement, promptfoo considère la source du script comme le texte de l'invite. Par conséquent, il n'est pas possible d'utiliser des assertions qui dépendent également du texte d'entrée, comme `answer_relevance`.",
  "A4CBC7094048E0842E2F": "En savoir plus sur les [tests](/genaiscript/reference/scripts/tests) dans la référence.",
  "35E0ABE076A61ABA73F1": "[Automatisez](/genaiscript/getting-started/automating-scripts) l'exécution de scripts en utilisant l'interface en ligne de commande ([CLI](/genaiscript/reference/cli)).",
  "745A8CBABB201D442C85": "F1",
  "A4766F22C35134BC67ED": "et exécutez ",
  "B6C7ECC5F8E8A2FB62A1": "Suivez les étapes dans ",
  "C3331EAB0B6BAF3B0F9D": "configuration",
  "79CB491B55EAA9EAC50B": "Invite en tant que code",
  "7FB11A9D8F45F2F44D34": "Écrire dans l'invite ",
  "8C569B37CB210AEFE6E1": "🤖 assistant ",
  "515E7D192900CE7E60E2": "utilisateur",
  "EF1EB10B93670166A95C": "assistant",
  "BBA03D52D5038D6FB33B": "Vous pouvez exécuter le bloc de code en cliquant sur le bouton ",
  "6C35989AFA51DD3AF97E": "Exécuter la cellule",
  "DB5FC2982FF848BE8B8E": "trace",
  "67AC91298B865443B926": "Vous pouvez utiliser la boucle JavaScript ",
  "8461BF07D8E5AD7242A1": "for ",
  "F9F2F15D75F77B01D6DB": "fonction",
  "B9226AAD7E768212FF20": "vous permet de déclarer et d’assigner ",
  "CE0D171E861D2717FF6C": "variables LLM",
  "B966EC0277773D4E8905": "variable ",
  "C6C44D66099BB656A88E": "liste des fichiers dans le contexte",
  "8EC01A00468D92CC7FBD": "en modifiant le champ ",
  "87F603421B43C4ED96DB": "Filtrage ",
  "CCF834024801FB1BC535": "fournit également ",
  "977A627608E78114AABA": "Outils",
  "09737762BCF6A0624B71": "Sous-invite",
  "E0721CD691A2C95D8640": "Votre premier script GenAI",
  "1024CCAADF999C29799D": "Apprenez à créer et à exécuter votre premier script GenAI pour automatiser les interactions avec les modèles de langage.",
  "F54C6CD3FD0C74ACD643": "GenAIScript utilise un JavaScript stylisé avec une syntaxe minimale.\nIls sont stockés sous forme de fichiers JavaScript (`genaisrc/*.genai.mjs`) ou TypeScript (`genaisrc/*.genai.mts`) dans votre projet.\nL'exécution d'un genaiscript crée l'invite qui sera envoyée au LLM.",
  "70A136C85AD04FC43296": "Le fichier résultant sera placé dans le dossier `genaisrc` de votre projet.",
  "52F5B4330992C45F5BFC": "…",
  "93793A1AFB5DE944DA43": "Les scripts genaisrc sont créés ici par défaut",
  "522A9A9D19A5E8E25F8C": "genaiscript.d.ts (définitions de types TypeScript)",
  "0D68FC5C2E817CD7F501": "tsconfig.json (configuration du compilateur TypeScript)",
  "8818F46C1D46A91872FA": "**proofreader.genai.mts**",
  "06DF0CE2609EC823432F": "Regardez cette vidéo pour apprendre comment booster la puissance de GenAIScript dans GitHub Copilot Chat.",
  "C10F8A41064374AE6E5C": "l'Invite",
  "B9FF9D25BC0AC10A7F96": "L'exécution du GenAIScript génère une invite (et plus)\nqui est envoyée au modèle LLM.",
  "AFD7DE9D9FCDD832F39A": "La fonction de chaîne de modèle ` $``...`` ` formate et écrit la chaîne dans l'invite ;\nqui est envoyée au LLM.",
  "A823EBC1839C02C47497": "le Contexte",
  "0029BF05971FE074407E": "GenAIScript expose le contexte via la variable `env`. Le contexte est implicitement défini par l'emplacement où vous commencez à exécuter le script.",
  "36C68AEB8E00086F640F": "vous pouvez faire un clic droit sur un dossier et `env.files` contiendra tous les fichiers imbriqués dans ce dossier.",
  "9D55D33867FFE4922206": "vous pouvez faire un clic droit sur ou dans un fichier et `env.files` contiendra uniquement ce fichier.",
  "BDA79B3F42AD9AB9E85E": "vous pouvez exécuter le script en utilisant l’[interface en ligne de commande](/genaiscript/reference/cli) et spécifier le contenu de `env.files` dans les arguments CLI.",
  "1BACBFA1FC8BDF21B712": "la Tâche",
  "11CCD4A51BB36E17CB53": "La fonction `$` est utilisée pour construire le texte de l’invite, elle rend et écrit le texte dans l’invite\n(`$` est un [template literal](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals)).",
  "98D5BEDEBB0978C44C92": "les Métadonnées",
  "F0D76DCD79CFD0A6DC81": "Vous pouvez ajouter un appel à la fonction `script` pour fournir des métadonnées sur le script\net le modèle. Les métadonnées sont utilisées pour afficher le script dans l’interface utilisateur et configurer le modèle LLM.",
  "CAFCEDCFDD0FB08956A8": "Les propriétés `title`, `description` et `group` sont utilisées pour afficher le script dans l’interface utilisateur\net peuvent être utiles lorsque l’utilisateur recherche un script.",
  "70211829A9F923A667DB": "![Une capture d’écran d’un éditeur de texte montrant une tâche intitulée \"Technical proofreading\" avec la description \"Reviews the text as a tech writer.\" Un lien hypertexte intitulé \"documentation\" est à droite.](../../../assets/vscode-select-script.png)",
  "F423501BF53C84E7BC5E": "Suivez le [guide Prompt As Code](/genaiscript/guides/prompt-as-code) pour approfondir la génération programmatique d’invites",
  "16C4658060F4F33FE4D8": "[Exécutez votre script](/genaiscript/getting-started/running-scripts) depuis Visual Studio Code.",
  "E7DCFFF66400713052D8": "Vous devrez ",
  "259728C6182CF73551DD": "configurer",
  "3A560BB085538CD46981": "les instructions de configuration",
  "F414C25C3262C14FE270": "Écrivez votre ",
  "691F0BBDB271EE692A25": "premier script",
  "D63801CB07EAE99D078D": "interface en ligne de commande",
  "E552DDD02AE153C0C0B9": "Exécution d'un script avec la CLI",
  "1C75FBE958062FC3FE03": "L'utilisation de base de la CLI est de ",
  "3E693A2AC561830F99AC": "lancer",
  "BB837C3425CF435AAE1A": "La CLI utilisera les secrets du fichier ",
  "A061CF1C48DBC90150BA": "avec ",
  "4CB0D5824408BDC9B7A9": "vous permet d'exécuter une commande\ndepuis le paquet npm ",
  "D3AB5278F9BFF58C95D0": "genaiscript npm package",
  "9170B23F4A2CD707B566": "Appliquer les modifications",
  "80DA4C0486D547385075": "conteneur",
  "9AB64636B053A4A18E8F": "Consultez ",
  "C2DA0599D41A3F7AF7B0": "Sécurité et confiance",
  "56910C85FADDD61CBABE": "Configurer GitHub Models",
  "0ED7E2628431F6078018": "Configurer les secrets et variables",
  "2B37224D03677A4CCEE6": "Configurez la variable ",
  "A8B0FCC29F20866E5584": "variables",
  "D77E8727140E7EB666A9": "Les secrets et variables doivent correspondre au fichier ",
  "4998890F689733CDBA7E": "Exécution d'un script",
  "8D57B669B224A5F94C29": "utilisez l'option ",
  "488389388CA1D6FF6E85": "Ajouter la trace au résumé de l'action",
  "0F4ED4FE545C77DA8B82": "Différence",
  "6FECD46A4663B665692F": "pour exécuter une commande ",
  "E4E44A1D2466D61792BA": "git",
  "329804C1C0FA2618901D": "Notez que vous devrez récupérer la branche ",
  "306166022FFF459EB8F7": "Stocker la sortie dans des artefacts",
  "3425C53CD3BE42582E63": "Azure OpenAI avec un principal de service",
  "2ED9F16C33B268F86BB7": "La documentation officielle de l' ",
  "D91FE8562DE35722A4EC": "action de connexion Azure",
  "FE6B142ECA61A1EBABF1": "Les étapes ci-dessous montrent comment configurer l'action de connexion Azure pour accéder à la ressource OpenAI ",
  "E729A4B02821E3652068": "en utilisant un secret de client de principal de service",
  "67ACB6BA5707B2796D03": "Créez un principal de service en suivant le guide ",
  "32323BF84BACD184AF23": "connexion via un secret Azure",
  "21CCE0FDC30D6BAA6AC0": "Lecteur",
  "2921CD6B2AAC66558292": "Attribuez le rôle ",
  "440D2942EB590CFB25D0": "Utilisateur des services cognitifs OpenAI",
  "7F370EFF5C3A62020E01": "AZURE_CREDENTIALS",
  "87F8C17ADDD388C0A4F6": "mettez à jour chaque étape qui invoque la ",
  "E69BFC7E70B274452BB6": "CLI ",
  "19920546102C596901EF": "Pull request GitHub",
  "C484213BA612946EA882": "Si votre GitHub Action est déclenchée par un ",
  "792D8E9FC4CDAC09C561": "événement de pull request",
  "5F45C9A22872F692F9EE": "permission",
  "D62A6A20470BFAB12ECC": "et le secret ",
  "421B233B4868F0E96528": "Mettre à jour la description",
  "77C3E9F96AF39007F1D2": "Commentaire de conversation",
  "36C7B850381BB926AE7D": "Commentaires d'examen",
  "E381F2B9DD6A7AFB7552": "pour convertir ",
  "3CBDA059E30422BF97E9": "en commentaires d'examen ",
  "A6D298F3E02E68A31146": "sur le dernier commit",
  "F477EC099BC040CD5704": "super article de blog",
  "FF596138FAAE5D792933": "GenAIScript permet aux utilisateurs de chatbot de créer des scripts réutilisables",
  "14C1C742D3FDED8F5BCE": "Fournir au modèle le contexte dont il a besoin à partir des documents",
  "B089E2591A85F9A68E28": "pdf",
  "5801ED3C450E4AD876FD": "docx",
  "EDBD0E746D85418268E3": "Concentrez un GenAIScript sur une tâche précise que le LLM doit bien accomplir",
  "B9C80A60804F3ACBBA0B": "Utilisez la sortie d'un GenAIScript comme entrée pour un autre",
  "834B2A35CFF2F44ACC3F": "Utilisez le bon LLM ou autre modèle fondamental adapté à la tâche",
  "7EDA52E98AF136F9B907": "Les fichiers de script GenAIScript sont des fichiers JavaScript exécutables et peuvent être débogués\nen utilisant le [débogueur Visual Studio Code](https://code.visualstudio.com/Docs/editor/debugging), tout comme n'importe quel autre programme JavaScript. ",
  "3FA30273126FB68CA0C1": "GenAIScript offre également un [journal léger intégré](/genaiscript/reference/scripts/logging) pour vous aider à\ndépanner vos scripts sans utiliser de débogueur. ",
  "301381F6DFC5925C1295": "Démarrer une session de débogage",
  "2FEFE1B9D10AC40B1568": "Ouvrez le fichier `.genai.mjs` à déboguer et ajoutez des points d'arrêt. ",
  "9EA68237CE2DE6A0401A": "Depuis les fichiers env",
  "FCBEEE810DA19FBFD301": "Cliquez avec le bouton droit dans l'éditeur du fichier que vous souhaitez dans `env.files`. ",
  "C4F7CCE3879A9587685D": "Depuis le script lui-même",
  "246BE2D05F23057C6ABA": "Ajoutez un champ `files` ",
  "3CCAD439C8D838841805": "dans la fonction `script` ",
  "A8FE6BE1ADB002823ED5": "Cliquez sur l'icône ** ",
  "F8498B2CF8F950D9DF0D": "Déboguer",
  "71E3080FE8ED81A680F3": "Le débogueur lancera le [cli](/genaiscript/reference/cli) et exécutera le script en mode débogage.\nLe débogueur s'arrêtera aux points d'arrêt que vous avez définis. ",
  "97A4B0E996EE1ED45247": "Continuez à itérer sur le script ou ",
  "2379EF35E9B219012733": "ajoutez des tests",
  "42195E6B6D0CDFB2386C": "GenAIScript est disponible en tant que ",
  "978EEA723B361EA8C3B0": "ou en tant qu'[Extension Visual Studio Code](#visual-studio-code-extension). ",
  "37D504732965FD44F9BE": "GenAIScript nécessite [Node.JS](https://nodejs.org/) pour fonctionner.\nNous recommandons d’installer la version LTS en utilisant un [gestionnaire de versions node](https://docs.npmjs.com/downloading-and-installing-node-js-and-npm). ",
  "4E540BCE5A4039B43304": "gestionnaire de versions node",
  "9E52D0FDE4976B365795": "avec un gestionnaire de paquets",
  "AF61440A20B79AE494D7": "Vérifiez votre installation",
  "099F6CAA76F7C9E2AC31": "Extension Visual Studio Code <a id=\"visual-studio-code-extension\" href=\"\" />",
  "8BFACC4D3E37E9A980EF": "Extensions",
  "31974FC4EA1EB83CDD56": "vue",
  "BEEC2C4854543311E5FF": "Recherchez ",
  "1AE527ADE5B187E48784": "genaiscript",
  "DD5A34274212AB8BC7A0": "et cliquez sur ",
  "ACB6129A9AF480FD0BBA": "Installer",
  "CEF60EDFAE4627730C68": "Ajouter aux recommandations de l’espace de travail",
  "7E0BA746B772615B23BF": "Profil par défaut pour le terminal",
  "89994730EE8A876698B5": "Ouvrez la palette de commandes ",
  "28BE6673F61B1EE7FA7A": "et recherchez ",
  "EA10ABD7DA1D8B53B8BC": "Sélectionnez le profil de terminal comme ",
  "87DEC5FB4729B281A8E2": "Git Bash",
  "4BC2B96584243D67C6DC": "dernière version",
  "A61905EC8BC06FA50FB7": "sur GitHub",
  "24A25896844385C15C43": "Téléchargez le ",
  "3801030D8E1200F13606": "dans le dossier racine de votre projet",
  "86AD68861FD424937F47": "cache/ différents fichiers de cache",
  "53604C1765C86A8ECB83": "retrieval/ caches de la base de données de récupération",
  "7A302350B9672E6AFA7F": "Ouvrez votre projet dans Visual Studio Code",
  "19649EFBE4790A90EE80": "Cliquez-droit sur le ",
  "322B1FBCC8F451BB48A8": "fichier `.vsix` et sélectionnez **Installer l’extension VSIX...** ",
  "49162CCFE904876D7D7B": "Support de Cursor",
  "69519528F7C25E9C0189": "GenAIScript peut être installé dans ",
  "4552375F1CC690D8E9F3": "Cursor",
  "C8635B49B6C072CCF0BC": "Ligne de commande <a id=\"command-line\" href=\"\" />",
  "69F880E9C39F4C7A387F": "npx peut être lent",
  "C259E3FE4D15006E374D": "référence CLI",
  "36A58D839556521D9354": "DevContainer",
  "8F16160EF86361D6B05D": "Vous pouvez ajouter ce fichier dans votre projet pour utiliser GenAIScript dans un ",
  "BFD7699E39825A1D8AEC": "La définition devcontainer sera automatiquement utilisée par ",
  "1E655B7BF27F398211BC": "GitHub CodeSpaces",
  "05EA737257AFA18E8DB7": "cli devcontainer",
  "2750857DE48A89FBD401": "ou diverses ",
  "2C2684F4DC889A01A943": "intégrations d’éditeurs",
  "773F21BBE535A5C3FC21": "Configurons ",
  "F405F5699D7D09A9EE84": "les informations de connexion LLM",
  "8204FCA7A17DAB3E7EE6": "Il est possible de déclarer ",
  "B197A3915F78488AB5AF": "tests",
  "AAF6A766F9B91B599A19": "Déclaration des tests",
  "F953F03D5A6AD2868988": "Les tests sont ajoutés sous forme d'un tableau d'objets dans la ",
  "2711683D151AA0568C71": "clé ",
  "F391701184808044F504": "Spécification des modèles",
  "E73F1195082C633BA9E0": "vue Explorateur de tests",
  "B2AFCEF8032456C6A438": "Sélectionnez votre script dans l'arborescence et cliquez sur le bouton icône `play`. ",
  "BDFA1BA8D85FDE0359AD": "Ligne de commande",
  "27659694B0F576615C17": "Limitations connues",
  "3FD870E64E231DC0A3BF": "En savoir plus sur ",
  "A0AA07C5A05EF4EB595B": "Automatiser",
  "88256F3D577593C663C6": "Le fichier résultant sera placé dans le dossier ",
  "8223B2B30D94A50D4BE8": "…",
  "23E7FFACF9CB1558D224": "Les scripts genaisrc sont créés ici par défaut",
  "0F063E4725E4B097BC87": "Le Prompt",
  "F16FFA1CC5A1A1A68FE4": "Le Contexte",
  "02E2419784694EA52BB0": "GenAIScript expose le contexte via la variable ",
  "FE5EA2BA1EC6B9482238": "vous pouvez faire un clic droit sur un dossier et ",
  "3F2B2BB4743D6458D00F": "vous pouvez faire un clic droit sur ou dans un fichier et ",
  "B73EAB4B4815FEDAA2C0": "vous pouvez exécuter le script en utilisant l’interface en ligne de commande ",
  "A8488684E951713879CE": "et spécifier le contenu de ",
  "F635154DFC7ECAC5863F": "la Tâche",
  "8BBFD2B07873270942EE": "est une ",
  "5D457A5EFD86C6366BCB": "template literal",
  "094F9A9C9B87F9169D5B": "les Métadonnées",
  "4BCBD977CF37552EB00D": "Vous pouvez ajouter un appel à la fonction ",
  "96B74B6BC50D94644931": "Suivez le ",
  "B7E4D4939BCB97C803FF": "Guide du Prompt en tant que Code",
  "796CA3AAC38BB8B190D5": "pour approfondir la génération programmatique de prompts",
  "C729BD092734E75EFFF2": "Exécutez votre script",
  "C6FE869A6EF68C14AF0E": "Le débogueur Visual Studio Code",
  "EAA484319A4FFF0EA533": "journalisation légère intégrée",
  "12015AD0FCB949F9D60F": "Extension Visual Studio Code ",
  "250DECBB9A972A785A03": "Ligne de commande ",
  "AD0D3560F6146F8F6659": "Zine rencontre les Pull Requests (et plus)",
  "AF8353511BB8005AD5C8": "Une réflexion sur l'influence des nouveaux générateurs d'images et leurs impacts sur les ressources de développement logiciel telles que les pull requests.",
  "807532206C70B76C7C17": "La disponibilité de nouveaux générateurs d'images comme OpenAI `gpt-image-1` ouvre la porte à d'innombrables nouvelles façons de visualiser et d'annoter les artefacts logiciels.",
  "CA4FB6CCC846FB292E42": "Ça fonctionne aussi pour les **sketchnotes !**",
  "25D8525B657F8FFAD77C": "Zines",
  "B2923CC120392A14EFCA": "[\"Zine\"](https://en.wikipedia.org/wiki/Zine) est une forme d'art graphique populaire qui combine texte et images pour raconter une histoire. Peut-on demander au LLM de générer un zine à partir d'un diff de pull request ? *voix robotique hors ligne : Oui, nous le pouvons*.",
  "9D836179438B2954B11C": "Le script ci-dessous est une transformation en 2 étapes à l'aide du LLM du pull request en zine :",
  "7A09963BCCE85974CBA7": "utiliser `gpt-4.1-mini` pour transformer le diff en une invite pour génération d'image",
  "D194D5A1D1B57E504EE5": "utiliser `gpt-image-1` pour générer l'image à partir de cette invite",
  "96FB80985A6319FB163E": "un peu de plomberie pour téléverser l'image générée dans une branche et l'ajouter à la description de la pull request",
  "D3D19E72E1703E9FFDED": "https://github.com/microsoft/genaiscript/pull/1505",
  "9E3CACF12A5C685CBF7C": "![Une illustration style bande dessinée illustre un processus pour localiser des fichiers dans un répertoire. Un détective éclaire les fichiers avec une lampe torche, identifiant les répertoires et gérant les fichiers ignorés. \"Développez !\" est mis en valeur par des fleurs épanouies. Une personne triste tient une pancarte \"Aucun fichier trouvé !\". En bas, des URI analysées sont résolues en ressources et fichiers rassemblés sur un tapis roulant.](https://raw.githubusercontent.com/microsoft/genaiscript/refs/heads/genai-assets/522d1313a72276c6e257e8515aef10cefca29020918382165d523bed3ac84744.jpg)",
  "C5ADC36E2FF7E0B77EF9": "https://github.com/microsoft/genaiscript/pull/1503",
  "2101830FD3D6D3BD6250": "![Une illustration style dessin animé explique un workflow GitHub : une mascotte GitHub tient une URL d'asset, un robot téléverse des assets avec des options de format, un tapis roulant de cache de fichiers gère style, qualité et taille, une pieuvre corrige les chemins d'URL, des diagnostics montrent des messages générés, une personne vérifie les URLs, et un \"Pull Request Zine\" montre un diff de pull request.](https://raw.githubusercontent.com/microsoft/genaiscript/refs/heads/genai-assets/ac75c0e82897b9bc80b7bdbab503dacdee16da762f1048ae20d163c4d1b5e7ac.jpg)",
  "7EE4DD503636BF9186E5": "https://github.com/microsoft/genaiscript/pull/1507",
  "D5167A43B7B1BECF7102": "![Une illustration style bande dessinée présente un outil d'annotation pour le raffinage du code. Elle met en avant des fonctionnalités comme la suggestion de corrections d'erreurs, une analyse améliorée pour la détection de fautes de frappe, et l'intégration avec Git blame pour suivre l'auteur du code. Le visuel inclut des icônes, des bulles de texte, et un personnage avec une loupe soulignant un meilleur feedback et un suivi plus intelligent.](https://raw.githubusercontent.com/microsoft/genaiscript/refs/heads/genai-assets/1a2f6bff55de7c004d46cfd9b014b598f2be4903702095aaea02c01c95e0df4d.jpg)",
  "DCD44F0DFF26229E95A8": "https://github.com/microsoft/genaiscript/pull/1506",
  "86690F51CC918FD24DF5": "![L'image illustre un processus modulaire pour gérer les éléments UI et schéma, comprenant six panneaux : Schéma des paramètres, Concept uiGroup, Nettoyage de schéma, Nettoyage d'exemples, Types étendus, et Rendu UI regroupé. Chaque panneau utilise icônes et diagrammes pour représenter des étapes comme organiser les paramètres, grouper les éléments UI, nettoyer les schémas, étendre les types, et rendre les composants UI regroupés.](https://raw.githubusercontent.com/microsoft/genaiscript/refs/heads/genai-assets/1b560d071efb015942678ffc705eac01e0d1dad8fd1e88ab521c0283a535a278.jpg)",
  "1C685AD2002CE296B3EF": "Sketchnotes (mise à jour)",
  "E9899EF7A19CC1B8472F": "[\"Sketchnotes\"](https://sketchyideas.co/sketchnotes/) est un autre style de prise de notes visuelle qui combine des éléments dessinés à la main avec du texte pour transmettre des informations. C'est une excellente façon de résumer une pull request et de la rendre plus attrayante.",
  "C47A936A1EDA2D79CE9F": "https://github.com/microsoft/genaiscript/pull/1510",
  "5CD0E22E5F45FAE94626": "![Un diagramme de flux illustrant un processus de vérification de version Node.js pour TerminalServerManager. Il implique la vérification de l'installation et de la version de Node.js (≥20), l'utilisation de constants.ts, un flux de promesses, et des commandes comme \"node cliPath serve\" ou \"npx serve,\" avec des messages d'erreur pour Node.js manquant ou obsolète.](https://raw.githubusercontent.com/microsoft/genaiscript/refs/heads/genai-assets/034e747af0809c2ed0ed02f5e980cce1f48a6f80e0a3c63818694d3afa34647a.jpg)",
  "1225CD16A989B55A5C0A": "https://github.com/microsoft/genaiscript/pull/1511",
  "036D0BE7ADC4A8113DD4": "![Un diagramme visuel présente une fonctionnalité combinant zines et pull requests. Il montre un diff PR conduisant aux sketchnotes, qui sont une prise de notes visuelle avec dessins, puis la génération d'un résumé PR. Le texte met en avant les nouvelles invites d'images AI pour créer des sketchnotes, avec des icônes d'idées, dessins, et collaboration.](https://raw.githubusercontent.com/microsoft/genaiscript/refs/heads/genai-assets/d9461598f48703dceb7e4dd381292b713c993dbbde2dec3f2b2b18858d774dfb.jpg)",
  "5A1DD5ED63ABDB79D217": "Qu'en est-il des autres styles ?",
  "9069BB6DC9E72FE4B42E": "Pour pousser l'idée encore plus loin, nous pouvons demander au LLM de choisir un style graphique aléatoire et de générer un diff de pull request dans ce style. Cette idée a été appliquée dans [https://github.com/microsoft/genaiscript/pull/1512](https://github.com/microsoft/genaiscript/pull/1512).",
  "E16BB14FD4296AECC175": "collage",
  "22A005434689FF8D5D97": "![Un diagramme coloré illustre un « Pull Request Visual Renderer » entouré de créations comme des bandes dessinées, infographies, zines, sketchnotes et art découpé en papier. Des flèches relient des éléments comme du code, une loupe, et un upload cloud, symbolisant un workflow.](https://raw.githubusercontent.com/microsoft/genaiscript/refs/heads/genai-assets/0cfbcad27efd026c72d23b2d75e801add50a67a7061585e8c680299e2fe8dae6.jpg)",
  "FAB59F69F6FA561862C9": "mural",
  "3C94350BB6D39FABC900": "![Une illustration présentant un processus de rendu visuel de pull request avec des éléments interconnectés comme branches, genres, et images de sortie. Elle comporte des icônes d'engrenages, ampoule, cadenas, GitHub, et des chemins visuels vibrants reliant les composants, symbolisant workflows et créativité.](https://raw.githubusercontent.com/microsoft/genaiscript/refs/heads/genai-assets/a672ed828a6fa1e5dc2561f120f9c35353a2ba27a10cc285a0d40c4a68581e66.jpg)",
  "218B48A281A3F2C2DB3A": "illustration éditoriale",
  "9C9E451F8C45BA7EB4E7": "![Une illustration d'une personne travaillant sur ordinateur avec le texte \"Pull Request Visual Renderer\" à l'écran, entourée d'éléments visuels dynamiques tels que graphiques, diagrammes et icônes abstraites représentant données et collaboration.](https://raw.githubusercontent.com/microsoft/genaiscript/refs/heads/genai-assets/c5478b3f3015ee93578984a0c19874b5310fb556290309995077fb1f6077daa9.jpg)",
  "184A1850D6EBE6AF7FC6": "À venir",
  "0FFC631E70677AA62F63": "Le zine est une manière ludique de visualiser le diff de la pull request. Ce n'est pas parfait mais c'est attrayant et peut-être que c'est tout ce dont vous avez besoin pour inciter quelqu'un à revoir votre PR !",
  "4EF1DB0D56BEDD8C1B66": "Il y aura d'autres façons de visualiser le logiciel à l'avenir, grâce à ces incroyables générateurs d'images.",
  "4BCF9D17629AB1BFFA71": "Revamping the views...",
  "2D9E142DD594883C56C5": "Annonçant la nouvelle vue GenAIScript.",
  "0394744CAA7FAE847C1E": "Dans le passé, notre visualisation dans Visual Studio Code reposait sur la fonction d’aperçu Markdown intégrée. Elle fonctionnait très bien, mais parfois ce n’était pas suffisant. Nous voulions offrir une expérience plus interactive à nos utilisateurs. Nous avons donc décidé de créer une vue web personnalisée pour GenAIScript.",
  "0BB3B5B0D95C58EFCA4D": "Recréer cette vue nous donne également plus de contrôle sur la prise en charge du rendu de divers sousformats Markdown comme les diagrammes mermaid, les annotations, les mathématiques, ...",
  "D28FB69BDD46163138BA": "![Une capture d'écran de la vue GenAIScript.](./webview.png)",
  "846D68A2814C2A9DDCEB": "Accéder à la vue en dehors de Visual Studio Code",
  "CD78BF2408B122292F37": "Par conséquent, vous pouvez désormais accéder à la vue GenAIScript en dehors de Visual Studio Code. Cela signifie que vous pouvez maintenant **exécuter** vos scripts dans un navigateur ou toute autre application compatible avec les vues web.",
  "5670F98721C2F904C708": "Lancez la commande [serve](/genaiscript/reference/cli/serve) depuis le [cli](/genaiscript/reference/cli) pour démarrer le serveur et suivez les instructions pour ouvrir la vue dans votre navigateur.",
  "C051083B5674637078BD": "Écoutez le podcast",
  "154FC6C4104FC1DDEF57": "Si vous n'avez pas envie de lire quoi que ce soit, écoutez notre podcast.",
  "2C147DA0081162902FB0": "Nous avons créé un podcast à partir de l'aide de Google\\'s NotebookLM (pour que vous n\\'ayez pas à le faire). Le voici...",
  "81FCD2C217661EA2276A": "[lien direct](/genaiscript/podcasts/overview.wav)",
  "3ABBDBB832DA33388379": "Que la vidéo soit !",
  "D0EB948EE6524AA48677": "Ajoutez des vidéos à vos appels LLM.",
  "5C702D0677DE40FFCE7A": "La dernière version inclut la prise en charge de l'inclusion de vidéos et de transcriptions audio dans vos scripts.",
  "9CD31DF62A6A412F82BE": "Supposons que vous souhaitiez analyser un fichier vidéo. Pour la plupart des LLM qui supportent les images, vous devrez extraire des captures d'écran à des horodatages précis, puis les envoyer sous forme de séquence d'images. Choisir ces horodatages peut être un défi car vous risquez d'épuiser la fenêtre de contexte. GenAIScript fournit des assistants pour résoudre ces tâches fastidieuses liées à l'analyse vidéo avec les LLM.",
  "BB457EEB8E56256A5CCE": "consultez la [documentation](/genaiscript/reference/scripts/videos).",
  "16C83C2B8871DC5EE7E8": "outils et agents",
  "76170AEBB759787BDAAD": "Nous proposons également d'encapsuler les nouvelles fonctionnalités dans des [outils](/genaiscript/reference/scripts/tools) et des [agents](/genaiscript/reference/scripts/agents) afin que vous puissiez les utiliser dans vos scripts.",
  "AA2B0D526F19922D6E41": "Par exemple, pour inclure l'outil d'extraction de frames afin que le LLM puisse l'appeler, vous pouvez utiliser l'extrait suivant :",
  "F67E75BC632AF328D85D": "Ou laissez simplement l'agent travailler sur la vidéo pour vous.",
  "4002E63176464A0B7B64": "Video Introduction",
  "730029AD533078624B18": "une première démonstration de GenAIScript en action dans VSCode.",
  "E0E82E8DB536BB4D4145": "La toute première vidéo tutoriel sur GenAIScript est disponible sur YouTube.",
  "6405AC7C417E11B17311": "Il a fallu un certain temps pour remettre en place l'installation, mais nous sommes maintenant prêts à commencer la série de tutoriels\nsur GenAIScript. Utilisez les discussions si vous souhaitez suggérer un sujet pour la prochaine vidéo.",
  "C5D10122BC57C5EA33A1": "2.0 - Une bibliothèque Node.JS",
  "A387141EED7A10B6456D": "GenAIScript v2.0 introduit une refonte architecturale majeure avec\ndes paquets TypeScript appropriés, des types unifiés, une migration vers pnpm, et une\nexpérience développeur améliorée.",
  "7A2C4AFF2D654545C46B": "GenAIScript 2.0 représente une étape architecturale importante. Nous avons restructuré fondamentalement la base de code pour libérer l'exécution du runtime de sa dépendance au CLI, permettant à GenAIScript de fonctionner nativement dans n'importe quelle application Node.js.",
  "F7B6CC946F01E9138D8E": "**Vos scripts existants restent en grande partie compatibles**. La plupart des changements se font en coulisses, bien que nous ayons introduit quelques modifications de rupture au niveau du CLI et de certaines API pour améliorer la maintenabilité à long terme.",
  "9CB2D7A9CF67537FB15B": "Support des outils Agentic",
  "27BEEE1D2D6A355BE7EB": "La bibliothèque standard Agentic d'outils d'IA en TypeScript est optimisée à la fois pour une utilisation en TS et pour une utilisation basée sur LLM, ce qui est vraiment important pour les tests et le débogage.",
  "AC146C561EA623C9FBF3": "[Agentic](https://agentic.so/) est une bibliothèque standard d'outils d'IA en TypeScript optimisée à la fois pour une utilisation en TS et pour une utilisation basée sur LLM, ce qui est vraiment important pour les tests et le débogage.",
  "870FCFDF45BF53F8B258": "Agentic prend en charge une variété d'API en ligne, comme Bing, Wolfram Alpha, Wikipedia, et bien plus. Vous pouvez enregistrer n'importe quel [outil Agentic](https://agentic.so/tools/) dans votre script en utilisant `defTool`. Voici un exemple d'utilisation de l'outil Weather :",
  "768BF264D87474333929": "[Documentation Agentic](https://agentic.so/sdks/genaiscript)",
  "3D301277F20AD929439A": "[Documentation GenAIScript](https://microsoft.github.io/genaiscript/guides/agentic-tools/)",
  "A940C29ACDDCC6EDA818": "Super Charge Copilot Chat",
  "16B896534985BBD8D761": "Boostez votre conversation Copilot avec ces astuces et conseils.",
  "E17F12B50BF793FBBC3E": "Visual Studio Code v100 a légèrement modifié la façon d'ajouter l'invite `genaiscript` à la session de chat.",
  "926403CE12994FDB3736": "[Suivez ce guide](/genaiscript/reference/vscode/github-copilot-chat/#genaiscript-custom-prompt)",
  "AA1D99B6BCDEFA296D4A": "Connaissez-vous une astuce géniale pour faire de GitHub Copilot Chat un expert en GenAIScript ?\nVoici comment vous pouvez booster votre chat Copilot avec une technique simple.",
  "670F8034F324E86C6E85": "**Ajoutez toute votre documentation à la session de chat !**",
  "3D317A0423E0E2E79CFF": "Ça paraît fou ? Pas vraiment ! GenAIScript contient d'innombrables exemples d'utilisation des API. Il suffit de compresser\nla documentation pour qu'elle tienne dans la fenêtre de contexte.",
  "B57E91E1A1EDECF53831": "Comment puis-je essayer cela ?",
  "90EEEAA35D896BEC6E81": "Avec la dernière version de GenAIScript, vous pouvez désormais ajouter une invite **`genaiscript`** à votre session de chat.\nCette invite, créée par l'équipe GenAIScript, inclura la documentation GenAIScript\ndans le contexte pour aider le fournisseur de LLM à mieux répondre.",
  "DB835A1050136B3A65CA": "Comment cela fonctionne-t-il ?",
  "4814A0BD75D2567775B4": "La dernière version de GitHub Copilot Chat ajoute la prise en charge des [prompts réutilisables](https://code.visualstudio.com/docs/copilot/copilot-customization#_reusable-prompt-files-experimental).\nGitHub Copilot Chat a également ajouté la prise en charge de l'indexation locale de l'espace de travail, ce qui aide à gérer de grandes quantités de contexte.",
  "B621B3BF53F0F2DEA8BE": "GenAIScript tire parti de ces fonctionnalités en ajoutant un prompt personnalisé qui inclut la documentation GenAIScript.",
  "188B60939B7BC425DF4B": "À suivre",
  "280814B61AED749FF8C5": "Cette technique est vraiment nouvelle et il y a probablement beaucoup d'améliorations à apporter.",
  "58E5356121E20911A3E7": "Scripts as MCP tools!",
  "C2331B0C81418050F803": "Découvrez comment GenAIScript peut désormais faire apparaître n'importe quel script comme un outil MCP.",
  "F0F390664212AA18FCB6": "🚀 Le [Protocole de contexte de modèle (MCP)](https://modelcontextprotocol.io/introduction) bouscule le monde de la technologie, et nous sommes ravis d'annoncer que GenAIScript est en première ligne de cette révolution !",
  "B777BA7BBB5F46849080": "Avec l'adoption rapide du MCP, des outils comme GitHub Copilot Chat intègrent déjà le support (disponible dès aujourd'hui en version Insider), et [Copilot Studio](https://www.microsoft.com/en-us/microsoft-copilot/blog/copilot-studio/introducing-model-context-protocol-mcp-in-copilot-studio-simplified-integration-with-ai-apps-and-agents/) a également annoncé leur compatibilité.",
  "4C02718A152E42866207": "Pour suivre ces avancées passionnantes, **[GenAIScript vous permet désormais d'exposer des scripts comme des outils MCP](/genaiscript/reference/scripts/mcp-server)**. Imaginez les possibilités ! Les outils MCP fonctionnent de manière similaire aux outils LLM, où le modèle linguistique (LLM) décide du moment où les appeler, rendant votre processus de développement plus intelligent et plus efficace.",
  "468C57185FAF29F09DE7": "Plongez dans l'avenir du scripting avec GenAIScript et MCP. Consultez la [documentation](/genaiscript/reference/scripts/mcp-server) pour commencer.",
  "014B3B9E03E3840CE2C7": "Search and Transform",
  "8E31796812F3205D1C46": "Explore how GenAIScript automates the search and\n transformation of patterns across multiple files, enhancing efficiency in\n development tasks.",
  "85EA652E7BD6313183A5": "Avez-vous déjà été confronté à une situation où vous devez rechercher dans plusieurs fichiers de votre projet, trouver un motif spécifique, puis lui appliquer une transformation ? Cela peut être une tâche fastidieuse, mais ne vous inquiétez pas ! Dans cet article de blog, je vais vous présenter un script GenAIScript qui fait exactement cela, automatisant le processus et vous faisant gagner du temps. 🕒💡",
  "F1FBAF57028EDA48F253": "Par exemple, lorsque GenAIScript a ajouté la possibilité d'utiliser une chaîne de commande sous forme de chaîne de caractères dans\nle commande `exec`, nous avons dû convertir tout script utilisant",
  "995360BE5EAD88887CA1": "en",
  "C3047DBF3445AD7C8F0F": "Le guide [Search And Transform](/genaiscript/guides/search-and-transform) couvre les détails de cette nouvelle approche...",
  "59013E6D360B3E7EA251": "Prompting is the New Scripting: Meet GenAIScript - Yohan Lasorsa - dotJS 2025",
  "3E712C01DC82CD3436B6": "[Yohan Lasorsa](https://www.linkedin.com/in/yohanlasorsa/) a donné une conférence à dotJS 2025 sur GenAIScript, une nouvelle méthode pour interagir avec les modèles d’IA en utilisant un langage de Script.",
  "DC8A5BE870714F8FF211": "Yohan Lasorsa est un Principal Developer Advocate chez Microsoft, un Expert Google pour Angular, et un auteur et contributeur open-source actif.\nFort d’une expérience de plus de 15 ans dans la recherche appliquée, le mobile, l’IoT et l’architecture cloud,\nil a travaillé sur des systèmes à faible niveau jusqu’au développement web full-stack.\nQue ce soit pour créer des applications ou des projets DIY, il aime partager ses connaissances et repousser les limites du possible.",
  "0F3448CA6C801FB3CC7A": "Playground, o1 et DeepSeek",
  "CB587EBAF2D892AD1D53": "Le playground est une interface web légère pour exécuter des scripts GenAIScript.",
  "2C8F154C962073356802": "La nouvelle version de 2025 apporte un certain nombre de nouvelles fonctionnalités et la prise en charge de nouveaux modèles.",
  "E92B86ADF6D91CCED214": "Playground",
  "70B4071563CE89D287A6": "Le [Playground](/genaiscript/reference/playground) est une application web auto-hébergée qui vous permet d’exécuter des scripts GenAIScript via une interface conviviale. Il se situe entre l’interface en ligne de commande (CLI) de GenAIScript et l’intégration GenAIScript dans Visual Studio Code.",
  "1C6F7385CC1A45732F38": "o1",
  "FDAC66FB38D04CD6F978": "GenAIScript prend en charge les différentes variantes des modèles [OpenAI o1](https://openai.com/o1/) (mini, preview, ...). Il ajoute aussi la prise en charge d’outils.",
  "CC5315E1C9E955798CF8": "o1 est également disponible sur [GitHub Models](https://github.com/marketplace/models/azure-openai/o1/playground) !",
  "22B57916FF3635FB92D5": "DeepSeek",
  "D9DAB09B61C4881DD951": "GenAIScript prend en charge [DeepSeek V3](https://www.deepseek.com/) via leur API OpenAI.",
  "B5702CA7330FB2C7FE80": "Découvrez la nouvelle API pour appeler genaiscript depuis d'autres scripts typescript.",
  "70E20F10D207AE1C77F6": "Une demande de fonctionnalité récurrente était de pouvoir exécuter GenAIScript de manière programmatique depuis d'autres scripts. Nous sommes heureux d'annoncer que nous avons publié une API Node.JS pour GenAIScript. Cette API vous permet d'appeler GenAIScript depuis d'autres scripts TypeScript (v1.83+).",
  "E9D8B151D3D356FD6F48": "[Documentation](https://microsoft.github.io/genaiscript/reference/api/)",
  "C9E834DACC053168EEDF": "Vous devrez ajouter [genaiscript](https://www.npmjs.com/package/genaiscript) en tant que dépendance (dev) à votre projet.",
  "7B39B1A0864E7969422B": "L’API `run`",
  "19E23CEBEF9E51F826F0": "L’API `run` est conçue pour imiter le comportement de l’interface en ligne de commande (CLI) de GenAIScript. Elle prend les mêmes arguments que la CLI et retourne les mêmes résultats. Cela vous permet d’appeler GenAIScript depuis d’autres scripts TypeScript.",
  "36272BBE8ABD1C7E9B11": "L’objet résultat contient la liste complète des messages, ainsi que des informations analysées supplémentaires telles que les fichiers modifiés, les diagnostics, etc.",
  "0D25C658CF3409A7B43A": "Ne touchez pas à mon processus",
  "D7BD69D17B1B2063D9B7": "Du côté de l’appelant, [l’implémentation de run](https://github.com/microsoft/genaiscript/blob/main/packages/cli/src/api.ts) est une fonction sans dépendance ni effet secondaire. Elle crée un thread worker où GenAIScript effectue le travail.",
  "76B8F1B9F57B1160B5E5": "Aucune variable globale ajoutée",
  "B84E6BCC658D6BE44633": "Aucun package chargé",
  "F4F5531C3DBE3E467B83": "Quelques centaines de `b` de mémoire utilisées",
  "018792098DC5E9765A8B": "Aidez-nous à l’améliorer !",
  "005F4070CFA5FBE63AA1": "Évidemment, il s’agit d’un premier jet et nous pourrions mieux faire en proposant des callbacks pour le suivi de progression. Envoyez-nous vos retours !",
  "DC6035957E973726C92D": "Sirènes sans faille",
  "9502A5F0D5B87DFBB9D9": "Réparation automatique des diagrammes Mermaid",
  "675AC7A4BE90247E4BD0": "[Les diagrammes Mermaid](https://mermaid.js.org/) sont une méthode populaire pour créer des [diagrammes](/genaiscript/reference/scripts/diagrams) en markdown.\nIls sont utilisés dans de nombreux projets, [y compris dans GitHub Markdown](https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/creating-diagrams).\nÉtant donné qu'il existe de nombreux exemples de diagrammes mermaid dans la nature,",
  "470D7B139D3C792F41DC": "il n'est pas surprenant que les modèles de langage (LLM) soient assez bons pour en générer.",
  "209F4B6AC80341AF3742": "Diagrammes Mermaid dans Markdown",
  "DC1D0EFDCE8017274361": "Mermaid prend en charge plusieurs types de diagrammes ainsi que plusieurs options pour contrôler l’apparence des nœuds et des arêtes.\nVous pouvez essayer différents diagrammes dans le [aire de jeux Mermaid](https://www.mermaidchart.com/play)",
  "B33C13E7B5357B6E9D14": "Voici un exemple simple d'organigramme :",
  "3020F2D0B0ED9BDCC648": "Ce markdown sera rendu sous la forme d'un organigramme en mode aperçu (et sur GitHub !) :",
  "4FDC597C06F6E4CA629D": "Erreurs de syntaxe",
  "4E7A0FB65EB0EA0B4A61": "Un problème avec Mermaid est que... la syntaxe a de l’importance et les LLM se trompent parfois.\nIntroduisons une erreur de syntaxe dans l’exemple ci-dessus.",
  "05FCEEAF372E3D07F689": "Maintenant, Mermaid ne parvient pas à analyser et le diagramme n’est pas rendu :",
  "465B8173B79BB7D77DAE": "Dans la plupart des cas, le LLM est capable de corriger l'erreur de syntaxe et de générer un diagramme valide en utilisant le message d’erreur.",
  "2E51E791E3540A18FC58": "Réparation automatique",
  "B4BA8C5CF815A2A1DC90": "Nous avons ajouté un \"réparateur\" dans l’invite système [system.diagrams](/genaiscript/reference/scripts/system#systemdiagrams).\nLe réparateur recherche les blocs de code `mermaid` dans la sortie et tente de les analyser.\nSi le diagramme présente des erreurs d'analyse, le réparateur ajoute un message au chat pour les corriger.",
  "569B46A5A347140B7457": "Voici une trace d’un script simple qui génère un diagramme à partir de n’importe quel code.",
  "A723CBCBE501D386A730": "Nous exécutons la [cli](/genaiscript/reference/cli) avec le script `mermaid.genai.mjs` et le fichier [runpromptcontext.ts](https://github.com/microsoft/genaiscript/tree/main/packages/core/src/runpromptcontext.ts).",
  "005A80E403884AFD2C17": "Première tentative",
  "4733D4C7F2B1452F1FF0": "Le script génère une invite avec le code et les instructions pour générer un diagramme.",
  "E63242D5F154B745A9D4": "Erreur de syntaxe détectée, réparateur activé",
  "C0F011909F2C41BEB7CC": "Le diagramme mermaid généré contient une erreur de syntaxe.",
  "6E806493632C487653ED": "Le réparateur entre en jeu et répond à l’assistant avec un message pour corriger l’erreur. La conversation complète du chat est renvoyée au LLM,\ny compris le message d’erreur.",
  "E8940B7EB91906E36BBA": "Le LLM répare le diagramme",
  "5EE1F7E73B44301A584C": "Dans ce cas, le LLM parvient à réparer le diagramme et à générer un diagramme mermaid valide.",
  "B9251202F57DC932251E": "Le diagramme réparé",
  "678E6FD929CF2B4ED72E": "Enfin, le diagramme réparé est renvoyé à l’utilisateur :",
  "1315729AFF6754601859": "Puis-je analyser moi-même les diagrammes mermaid ?",
  "3DD74AC2A3627395332B": "Oui, vous pouvez utiliser `parsers.mermaid` pour analyser les diagrammes mermaid dans vos scripts\nde manière programmatique.",
  "F359A05987D75FF94CC1": "Validation des outils MCP",
  "06CAB1CED7CD3E897F54": "Apprenez à configurer la validation du contenu pour les outils du protocole Model Context (MCP) dans GenAI Script.",
  "FC068D2CC2EE2E1EF0BD": "GenAIScript a ajouté plusieurs fonctionnalités pour sécuriser les outils du protocole Model Context (MCP) et atténuer des attaques spécifiques telles que le rug pull, l’empoisonnement d’outils ou l’injection de prompt.",
  "FFEC17B0AA47EB24B1BC": "À partir de la `v1.127`, vous pouvez configurer les options suivantes comme [documenté ici](/genaiscript/reference/scripts/mcp-tools#security) :",
  "284B4BC6D1B060638A5B": "hachage de la signature des outils pour prévenir les attaques de rug pull, où la liste des outils est modifiée sans que vous le sachiez.",
  "2DEA7E2C367A7568A471": "détection d’injection de prompt utilisant un [scanner de sécurité du contenu](/genaiscript/reference/scripts/content-safety). Cela analysera à la fois le fichier de définition des outils, pour éviter **l’empoisonnement d’outils**, et chaque sortie d’outil, pour prévenir **l’injection de prompt**.",
  "763043A0A9EC75AAEB05": "en fait, chaque outil peut être instrumenté avec une analyse de sécurité du contenu.",
  "794B255536AF7FE62273": "Avons-nous terminé ?",
  "EDD3E499B5221824610B": "Il reste encore de nombreux autres aspects de sécurité à considérer lors de l’utilisation des outils MCP, ces fonctionnalités n’en sont que quelques-unes.",
  "34B188F85E119201A4DC": "Ressources MCP",
  "0DF06EF0B4846BBBFC84": "Apprenez à publier des ressources MCP sans effort grâce à GenAIScript.",
  "6136C93F19DBF8A10DA2": "Ressources MCP",
  "EC4CD556B67A93844B55": "Dans un [article précédent](/genaiscript/blog/scripts-as-mcp-tools/),\nnous avons annoncé que chaque script peut être un [outil MCP](https://modelcontextprotocol.io/docs/concepts/tools).",
  "2A614E9786C7EF762910": "Pour faire suite à cette idée, nous avons ajouté la prise en charge de la publication des [ressources MCP](https://modelcontextprotocol.io/docs/concepts/resources)\ndans le cadre de l'exécution du script.",
  "1E6533D0321681E422F8": "Les ressources sont une primitive essentielle du Model Context Protocol (MCP)\nqui permettent aux serveurs d'exposer des données et du contenu pouvant être lus par les clients et utilisés comme contexte pour les interactions avec les LLM.",
  "C3051CDD88BFABC534B9": "MCP gère la découverte et la résolution des ressources, donc une fois que votre script publie une ressource,\nle client MCP (IDE) en est \"informé\" et peut décider de la lire.",
  "9DD550BDBAB305EB00EA": "`publishResource`",
  "2C0837482DA4CA376AE4": "La méthode `publishResource` vous permet de publier une ressource avec un identifiant unique et un fichier/chaîne/tampon.\nLe reste du processus de publication de la ressource MCP est pris en charge par le framework GenAIScript.",
  "BEFED4E1D97E97DB26C1": "Êtes-vous prêt à créer vos propres outils et ressources MCP ?",
  "19BF03B15790D5EFD0F3": "[Lisez la documentation](/genaiscript/reference/scripts/mcp-server#resources)",
  "92102B2AB33F19446EF9": "MCP Intent Validation",
  "3AA612C209B243E49738": "Suite à l'article précédent sur [la Validation des Outils MCP](/genaiscript/blog/mcp-tool-validation),\nnous avons ajouté une validation expérimentale de l'intention de l'outil pour atténuer les risques liés aux outils MCP.",
  "50BBF7B7A99F4C8A31E8": "Validation de l’Intention",
  "0DB573AD271ABB405C86": "L’objectif est de détecter quand un outil se comporte (férocement) en dehors de son comportement attendu.",
  "12679BD96036ACC885EA": "Nous avons intégré une validation avec LLM-en-Qualificateur de (n’importe quel) résultat d’outil basé sur la description de l’outil (ou une intention personnalisée).\nLa validation avec LLM-en-Qualificateur s’effectue à chaque réponse d’outil avant son injection dans la conversation de chat.",
  "258F50B9A9B765E5EAF5": "Le petit outil météo curieux",
  "32EDA490E390E745F133": "Examinons un exemple où un outil météo inoffensif tente d’exfiltrer le contenu d’un fichier (inspiré par [Invariant Labs](https://invariantlabs.ai/blog/mcp-security-notification-tool-poisoning-attacks))\nen exploitant un autre outil chargé dans le LLM (`fs_read_file`).",
  "72C6C1EF52B932C627B7": "La trace de ce programme montre que l’outil finit par accéder au champ de version du `package.json`.",
  "8691EA7F32E33607DD2C": "- round 1 : l’utilisateur demande la météo à Seattle",
  "2BAA10F4C3C460F7B523": "- round 2 : l’assistant appelle l’outil météo, qui demande le numéro de version dans le fichier `package.json`",
  "D8A410BB770AB7ACE3DA": "- round 3 : l’assistant lit le fichier `package.json` avec `fs_read_file`",
  "D809D0FA67A89089BB9D": "- round 4 : l’assistant relance l’outil météo avec la version dans le paramètre `sidenote`",
  "69950921DC3EF4BDF9ED": "- round 5 : l’assistant fournit la réponse finale **sans mentionner qu’il a divulgué la version**",
  "CD1387C0FCD8DC16B5D2": "Clairement, l’outil météo ne fait pas ce qu’il est censé faire. Alors pouvons-nous essayer de détecter et arrêter cela avec un LLM-en-Qualificateur ?",
  "9EDA8447553E40A8C401": "Back to the weather tool",
  "09AD65E3E7191B5C39E1": "Dans l’exemple de l’outil météo, nous pouvons ajouter la validation d’intention à l’outil `weather`.",
  "6D253C6E6E890096BD78": "**validation d’intention** : le LLM-en-Qualificateur détecte que le résultat de l’outil ne correspond pas à l’intention",
  "1F1157E8E1DC2EBF9DFF": "L’itération s’arrête ici !",
  "F45EAB81EA8C376E0D79": "Les outils MCP",
  "D5922D51C331A11FC5DE": "Les outils MCP peuvent également être configurés pour utiliser la validation d’intention. Vous souhaitez probablement aussi verrouiller la signature de l’outil avec `toolsSha` pour empêcher le MCP de modifier la description de l’outil.",
  "AF788718498F8EC2CE72": "Avertissements",
  "3F8AF9ABBC4A1ED12E84": "La validation avec LLM-en-Qualificateur n’est pas parfaite et peut produire des faux positifs ou négatifs.",
  "2C618589C543C7A9BA35": "Le MCP peut décider de changer la description de l’outil, mais cela peut être atténué en utilisant un hash de la description de l’outil.",
  "7350857DC7320513DE5F": "La description de l’outil peut être trop générique et ne pas fournir assez de contexte pour que le LLM-en-Qualificateur puisse prendre une décision.",
  "0988CCAB7F9BBEF07953": "La sortie de l’outil peut aussi tenter de prendre le contrôle du LLM-en-Qualificateur et le faire échouer (on peut faire passer la sécurité du contexte sur la sortie en premier).",
  "F31EEB81D7B67A39A7E3": "Le LLM-en-Qualificateur peut aussi être confus par la sortie de l’outil et produire des faux positifs ou négatifs.",
  "C1D498483F7D68923450": "Il y a probablement plus à explorer, vous pouvez l’essayer dans GenAIScript 1.128.+.",
  "C58D9C0517C0DBA23453": "Make it better!",
  "D6DCA84B5A47D13E2598": "GenAIScript est fourni avec un assistant qui indique au LLM de \"l'améliorer\".\nC'est une façon surprenante d'améliorer votre code en répétant un ensemble d'instructions plusieurs fois.",
  "A4F38B8D86875D5272E6": "Ce commentaire explique la ligne de code suivante, précisant que la fonction `makeItBetter` sera appelée deux fois.",
  "5F94CEA703CF8629DD2C": "Cette ligne appelle la fonction `makeItBetter` avec une option pour répéter le processus d'amélioration deux fois. Elle déclenche le processus d'amélioration.",
  "634E7FD5BDE839C04202": "## Comment exécuter le script",
  "11BBFB2BA21B36BA4570": "Pour exécuter ce script avec le CLI de GenAIScript, vous devez lancer la commande suivante dans votre terminal :",
  "22A38A5AEC5455E6CF45": "Pour des instructions détaillées sur l'installation et la configuration du CLI de GenAIScript, consultez la [documentation de GenAIScript](https://microsoft.github.io/genaiscript/getting-started).",
  "028491B77D523ED1C622": "En suivant ces étapes simples, vous pouvez exploiter l'IA pour améliorer votre code en toute simplicité ! 🌟",
  "D073009E1BE5C5A844F3": "Modèles GitHub dans GitHub Actions",
  "7DC8E5BA246DBA910BE8": "Apprenez à utiliser les Modèles GitHub dans GitHub Actions pour automatiser vos workflows et améliorer votre processus de développement.",
  "37692F85A5703B472B1D": "Vous pouvez désormais utiliser `GITHUB_TOKEN` de GitHub Actions pour authentifier les requêtes vers [GitHub Models](https://github.com/marketplace/models) !!!",
  "AC863DA84A4565F39161": "Cela simplifie vos workflows en intégrant directement les capacités d'IA dans vos actions, supprimant ainsi le besoin de générer et de gérer des jetons d'accès personnels (PAT) !",
  "FF3F6589991AABABD13D": "[Lire l'annonce GitHub](https://github.blog/changelog/2025-04-14-github-actions-token-integration-now-generally-available-in-github-models/)",
  "E08D38A87DF21ADE61F2": "[Lire la documentation](/genaiscript/configuration/github)",
  "448B02FCD9F0468FE04D": "Libérer la puissance des invites - Une introduction douce à GenAIScript 🚀",
  "7AAA1A09DB6F80299C41": "Apprenez à utiliser GenAIScript pour la génération d'invites et plus encore avec cette introduction captivante.",
  "E27EBDFAFC816456CDE0": "Vous vous êtes déjà demandé comment exploiter la puissance de l'IA et des grands modèles de langage (LLM) dans vos projets ? Ne cherchez plus !\nCet article vous présentera [GenAIScript](https://microsoft.github.io/genaiscript), un outil conçu pour simplifier la création d'invites et les interactions avec les LLM. Plongeons-y ! 🌊",
  "95DAB803879CCEB97DF8": "Qu'est-ce que GenAIScript ?",
  "6B461CADE72B812B7A09": "GenAIScript utilise une version stylisée de JavaScript pour générer des invites, qui sont ensuite envoyées à un LLM.\nLes scripts sont stockés sous forme de fichiers (`genaisrc/*.genai.mjs`), exécutés pour produire le texte de l'invite, et les résultats structurés (fichiers, diagnostics) sont extraits automatiquement.",
  "BFA828BEF66F81E2B011": "Premiers pas",
  "FBA29C056036E876F8C8": "Voici un exemple simple pour commencer. Créez un fichier nommé `poem.genai.mjs` dans le dossier `genaisrc` et ajoutez le code suivant :",
  "84E6FE2A2C7624AF764D": "Lorsqu'il est exécuté, ce script générera l'invite suivante :",
  "48C5BB54380B010E3199": "<summary>👤 Utilisateur</summary>",
  "0A393F6E4B19EDBC2274": "<summary>🤖 Assistant</summary>",
  "1BD24A15640BC33DB847": "Ajouter du contexte",
  "6E37822F6A80E8E9E77F": "GenAIScript peut également utiliser des variables de contexte, vous permettant d'interagir avec des fichiers ou d'autres sources de données. Voyons un exemple où nous définissons une variable de contexte en utilisant `env.files` :",
  "D922E41A043CABB19AE4": "Exécutez ce script pour voir le message utilisateur généré et la réponse de l'assistant. La variable de contexte `FILES` contiendra la liste des fichiers dans l'environnement.",
  "0DF47EFE4C723500C34C": "Métadonnées et configuration du script",
  "B8BF5EA609C6BCA3F88C": "Vous pouvez ajouter des métadonnées à votre script en utilisant la fonction `script`. Cela aide à organiser et configurer le script, y compris la spécification du modèle et d'autres paramètres. GenAIScript supporte divers fournisseurs de LLM, tels qu'OpenAI, Azure OpenAI,\nGitHub Models, Ollama et plus encore.",
  "71C4141FA5511FB49640": "Étapes suivantes",
  "A521CC9A09B893FB6DAA": "[Guide de démarrage](https://microsoft.github.io/genaiscript/getting-started/) pour configurer et commencer à utiliser GenAIScript.",
  "AD634721343F5B45E590": "Explorez des scripts plus avancés en suivant le [guide Prompt As Code](https://microsoft.github.io/genaiscript/guides/prompt-as-code).",
  "6D5209B29ABFC8FA7B02": "Voilà ! Une introduction douce à GenAIScript pour vous lancer dans votre parcours d'ingénierie des invites. Bon scripting ! 💻✨",
  "EA3701B07D232999A627": "Server Discord",
  "F780F976BBB3BD89954C": "Support pour les outils.",
  "1589540DE3616DEDE664": "Nous avons un serveur Discord pour GenAIScript où vous pouvez poser des questions, \npartager vos scripts IA les plus fous, et échanger avec d’autres scriptors.",
  "78E27867FAC50EBF3384": "Créer des notes de version avec GenAI",
  "CFB60BEDCE8BA6920B13": "Apprenez à automatiser la création de notes de version attrayantes pour des logiciels en utilisant GenAI et GenAIScript.",
  "A5E0906562EE36515C6A": "Intelligence Artificielle Continue",
  "CF8159AE9FF5130ED48C": "Exploration de l'automatisation pilotée par les LLM dans la collaboration logicielle basée sur plateforme",
  "160938DAD8BCE1DE081C": "Depuis le [blog GitHub Next](https://githubnext.com/projects/continuous-ai/) :",
  "F1E9E015845E6F8E2280": "**Intelligence Artificielle Continue** est un terme que nous avons identifié pour toutes les utilisations de l'IA automatisée afin de soutenir la collaboration logicielle sur n'importe quelle plateforme. Toute utilisation d'IA automatisée pour soutenir une collaboration logicielle sur n'importe quelle plateforme, partout, est de l'Intelligence Artificielle Continue.",
  "F26C2FA505345EEFBF77": "Nous avons choisi le terme \"Intelligence Artificielle Continue\" pour nous aligner sur le concept établi d'Intégration Continue / Déploiement Continu (CI/CD). Tout comme le CI/CD a transformé le développement logiciel en automatisant l'intégration et le déploiement, l'Intelligence Artificielle Continue couvre les façons dont l'IA peut être utilisée pour automatiser et améliorer les flux de collaboration.",
  "F7E9F23513BCFBD313FC": "“Intelligence Artificielle Continue” n’est pas un terme détenu par GitHub, ni une technologie développée par GitHub : c'est un terme que nous utilisons pour focaliser notre réflexion, et que nous introduisons dans l'industrie. Cela signifie que l'Intelligence Artificielle Continue est un ensemble ouvert d'activités, de charges de travail, d'exemples, de recettes, de technologies et de capacités ; une catégorie, plutôt qu’un outil unique.",
  "3080021E14EC9E1DD221": "Attendez-vous à plus d’actions et de synergies autour de [GitHub Actions](https://github.com/features/actions), [GitHub Models](https://github.com/features/models), et [GenAIScripts](https://github.com/features/ai/genaiscripts) à l'avenir, alors que nous explorons cet espace.",
  "7AF3BB1B95145FD12CEF": "Écrire des workflows GenAIScript plus rapidement avec des assistants de codage",
  "1F7B177B900E98C5E1F8": "Introduction",
  "1D7F3C91D04FCE179DC4": "GenAIScript facilite la prise en main pour coder des workflows LLM. Cependant, il peut être difficile de l'utiliser efficacement pour écrire des workflows complexes, car les techniques avancées et les optimisations de performance peuvent être hors de portée de nombreux développeurs. Dans cet article, nous allons explorer comment les assistants de codage peuvent nous aider à écrire des workflows GenAIScript avancés plus rapidement et avec moins d'effort.",
  "8203230653AC597AF1F6": "La tâche",
  "1923C76D8530A16B0D97": "Documenter du code existant est une tâche courante dans le développement logiciel. Cela peut être chronophage et est souvent négligé. Pourtant, cela est essentiel pour maintenir la qualité du code et s'assurer que le code est compréhensible par d'autres développeurs.",
  "74398998E03646DC9E66": "Notre objectif aujourd'hui est d'écrire un workflow GenAIScript qui ajoute automatiquement des commentaires JSDoc au code TypeScript qui n'en possède pas encore.",
  "5F28ED10500B572C237C": "Le script utilisera les fonctions AST grep pour rechercher dans le code, puis utilisera un grand modèle de langage pour générer des commentaires JSDoc pour le code, et modifiera le code pour y ajouter les commentaires en place.",
  "ED8FA3E9B16B879F2D23": "AST grep est une fonctionnalité avancée de GenAIScript qui nous permet de rechercher des motifs spécifiques dans l'arbre syntaxique abstrait (AST) du code. C'est beaucoup plus efficace que d'utiliser les LLM pour analyser le code, car cela nous permet de trouver rapidement des segments de code qui correspondent à des critères spécifiques.",
  "70A0B135E135C4F0EEE3": "Peli a exploré cette fonctionnalité dans son article [AST Grep and Transform](https://microsoft.github.io/genaiscript/blog/ast-grep-and-transform/), et nous allons nous appuyer sur cela pour créer notre script.",
  "082AB8D17147041A5C4F": "Voici un exemple de ce que nous souhaitons accomplir :",
  "03B3380D7E9E7C9B3AC3": "Pourquoi GenAIScript et pas l'agent de codage ?",
  "F8008114BD795537B2DB": "Il y a plusieurs raisons pour lesquelles GenAIScript est un meilleur choix que l'utilisation d'assistants de codage en mode agentique pour réaliser les mêmes tâches.",
  "F2F9517107F65BF709CA": "**Vitesse** : Les workflows GenAIScript peuvent être exécutés en parallèle, ce qui peut significativement réduire le temps nécessaire pour terminer les tâches. Imaginez attendre qu'un assistant de codage génère du code pour un gros projet dans votre éditeur, comparé au lancement d'un workflow GenAIScript qui peut exécuter plusieurs tâches en arrière-plan. Que préféreriez-vous ?",
  "E7DD6D4FAC86652907C4": "**Efficacité économique** : GenAIScript vous donne un contrôle bas niveau sur vos invites, ce qui vous permet d’optimiser celles-ci pour votre cas d’utilisation spécifique. Cela signifie que vous pouvez réduire le nombre de jetons utilisés, ce qui peut vous faire économiser de l’argent sur l’utilisation des LLM.",
  "214E27C2ECADECC19552": "**Partageabilité** : Vous pouvez partager vos workflows GenAIScript avec d’autres développeurs de votre équipe. Vous pensez peut-être : « Mais je peux aussi partager mes invites d’assistant de codage ! » Cependant, les workflows GenAIScript sont plus que de simples invites ; ce sont des scripts autonomes qui enchaînent plusieurs appels LLM pour effectuer une tâche spécifique. Cela les rend plus puissants et flexibles qu’une simple invite.",
  "F9DC0E5A3A7C12CE9790": "Installation",
  "6CE383E7C8F7CB135825": "Nous utiliserons Cline pour écrire notre code GenAIScript. Mais vous pouvez utiliser n’importe quel assistant de codage, y compris Github Copilot, Cursor ou Windsurf.",
  "A6E20EE64AD080087B28": "Tout d’abord, installons Cline depuis le Marketplace de VS Code.",
  "A9916757163B714F143C": "![Installation de Cline](./cline-1.png)",
  "137FB7DFE8815FB996A0": "Ensuite, nous configurerons Cline avec nos identifiants. Si vous utilisez Bedrock, comme moi, vous devrez définir les variables d’environnement `AWS_ACCESS_KEY_ID` et `AWS_SECRET_ACCESS_KEY` dans votre terminal.",
  "4C902FC804DABBCB3357": "![Configuration du projet Cline](./cline-2.png)",
  "79CE136C6B851AD478A5": "Maintenant, nous sommes prêts à écrire notre code GenAIScript. Nous ouvrirons notre projet et le préparerons pour le développement GenAIScript. Cela implique de créer un nouveau fichier script. Je crée toujours un fichier appelé poem.",
  "0C5F7DF57F7B8A303ACB": "![Configuration GenAIScript](./cline-3.png)",
  "8573A3A6220E33EE41C3": "Enfin, nous écrirons une invite pour que Cline génère le code GenAIScript. L’invite décrira la tâche que nous voulons accomplir, et Cline générera le code pour nous.",
  "7FF113609104341AC12E": "L’invite",
  "F1C3472FA69F3C6052E6": "Voici l’invite que j’ai écrite pour Cline afin de générer le code GenAIScript. Elle est conçue pour être claire et concise, tout en fournissant suffisamment de détails pour que Cline comprenne la tâche.",
  "A3B97CD950C360DEE8F4": "Analyse de l’invite",
  "C0D93DF55C8B6EF71F67": "L’invite utilise plusieurs techniques pour s’assurer que le script généré répond à nos exigences :",
  "4628C8E9DE8960DFF0F3": "**Expertise** : L’invite spécifie que l’assistant doit être un expert en TypeScript et GenAIScript, ce qui garantit que le code généré sera de haute qualité.",
  "A7E65EF22B191FB0F9E1": "**Documentation** : L’invite fournit un lien vers la documentation GenAIScript, permettant à l’assistant de comprendre toutes les capacités de GenAIScript et de les utiliser efficacement.",
  "1409CA847E6D391714A1": "**Définition de la tâche** : L’invite définit clairement la tâche, y compris les exigences spécifiques pour rechercher du code sans commentaires JSDoc et générer des commentaires à l’aide d’un grand modèle de langage.",
  "45425DA8199FD6D7D428": "**Directives** : L’invite précise que le code source est écrit en TypeScript ESM pour node.js v20+, ce qui garantit que le code généré sera compatible avec notre projet.",
  "3C3077CFB30D7CACDA02": "**Format de sortie** : L’invite spécifie le format de sortie, y compris le nom du fichier et la structure attendue du script.",
  "5F25CFD3D15AE7BC9D9D": "Résultats",
  "93EE48AF1D9C692A747A": "Après avoir écrit l’invite, nous utilisons Cline pour générer le code GenAIScript. Cline analysera l’invite et générera un script qui répond à nos exigences.",
  "72A48903BEFB06CB92F4": "Voici le script que Cline a généré pour moi (votre script peut légèrement varier) :",
  "9FF363A10722601F58BD": "Exécution du script",
  "91BAC30FA3573B382706": "Pour exécuter le script, il faut le lancer dans notre terminal. Assurez-vous que GenAIScript est bien installé et configuré.",
  "D387A0475B8F714C6512": "Conclusion",
  "A8DA34B460A3BB032F51": "Dans cet article, nous avons exploré comment les assistants de codage peuvent nous aider à écrire des workflows GenAIScript plus rapidement et avec moins d’effort. Nous avons utilisé Cline pour générer un script qui ajoute automatiquement des commentaires JSDoc au code TypeScript qui n’en avait pas encore. Nous avons également discuté des avantages d’utiliser GenAIScript plutôt que des assistants de codage en mode agent pour cette tâche.",
  "E786F08F50396D24319C": "Blog Narration",
  "A3BED4D1EF2B6B2F3F45": "Analyse automatique du contenu des pages web",
  "66D5CD4BDD42DF113E01": "Découvrez comment GenAIScript exploite la bibliothèque d’automatisation des navigateurs Playwright pour une analyse efficace et automatisée du contenu des pages web.",
  "38E43C21F01826ABDAA5": "Dans cet article de blog, nous allons explorer un exemple pratique montrant comment tirer parti de GenAIScript pour l’analyse automatique du contenu des pages web. GenAIScript utilise la bibliothèque d’automatisation des navigateurs [playwright](https://playwright.dev/) qui permet de charger, interagir et inspecter des pages web.",
  "FA0F0CA56054429F9BB1": "### Explication étape par étape du code",
  "3B16CC9C5AF1A1DF4D83": "Le fragment suivant offre une méthode concise et efficace pour analyser le contenu d’une page web avec GenAIScript :",
  "EAA7E596AE5275B81B00": "Décomposons ce que fait chaque ligne de ce script :",
  "0E7333A0610BBDA42957": "Cette ligne navigue automatiquement vers l’URL spécifiée (`https://example.com`). La fonction `host.browse` est une fonctionnalité puissante de GenAIScript qui initialise une session de navigateur et renvoie un objet page pour d’autres interactions.",
  "3852F914A64450A9827F": "Ici, le script prend une capture d’écran de la vue actuelle de la page. Cela est particulièrement utile pour l’archivage ou l’analyse visuelle.",
  "2CEFC64BA8537BAD6904": "Après avoir capturé la capture d’écran, cette ligne enregistre l’image pour une analyse ultérieure. `defImages` est une fonction qui rend la capture disponible pour les fonctions analytiques ou IA suivantes dans le script.",
  "A0F825917B43FAF2156F": "Cette commande extrait tout le contenu textuel de la page, ce qui peut être précieux pour des audits de contenu ou des analyses textuelles.",
  "52338B551ECC81E04DD1": "Le texte extrait est ensuite stocké sous l’identifiant `PAGE_TEXT`, permettant de le référencer dans des parties ultérieures du script ou pour la documentation.",
  "90E2F54947212DC4A3F0": "Enfin, cette ligne représente un appel à une fonction IA ou définie par script qui analyse le contenu capturé et fournit des insights. C’est ici que se révèle la véritable puissance de l’automatisation et de l’intégration IA dans GenAIScript, permettant une analyse détaillée sans intervention manuelle.",
  "4B61A771D20F24B4EA8D": "Avec un script simple mais puissant comme celui discuté, GenAIScript facilite l’automatisation du processus d’analyse de contenu de pages web. Que vous meniez une analyse concurrentielle, que vous réalisiez des audits de contenu ou que vous archiviez simplement des pages web, GenAIScript offre une solution évolutive et efficace.",
  "9CB12040190B7D4DCE89": "AST Grep et Transformation",
  "43EF44C465AB5C6EC1DB": "Apprenez comment analyser le code source en utilisant ast-grep et mettre à jour les nœuds dans l'arbre.",
  "61427B4AC1719CAF36C7": "Page décrivant une stratégie pour construire des scripts GenAI utilisant des arbres de syntaxe abstraite (AST) pour analyser et modifier le code source. Lorsqu’elle est applicable, elle offre une méthode extrêmement flexible et stable pour appliquer des modifications à grande échelle sur le code source. Intéressé ? Allons-y !",
  "6A2EBD6155D09E676923": "Si vous êtes pressé, allez directement à la **dernière génération/saisie de documentation que vous aurez jamais besoin** dans la [section des exemples](#sample).",
  "3DE41A5274301FE46EE1": "*: pour TypeScript, peut-être.*",
  "72D5E1A338DCE1188E6F": "La stratégie de transformation de code basée sur l'AST",
  "328319C4BBA0C0C61C8A": "L’un des défis lors de la création de scripts GenAI qui mettent à jour le code source consiste à localiser et à mettre à jour correctement ce code. La moindre erreur dans la localisation du code à modifier peut rendre le code cassé. Cela est particulièrement vrai lorsque le code à mettre à jour n’est pas une simple chaîne de caractères, mais une structure complexe comme un objet ou un appel de fonction.",
  "E87972B5229A7FD047D7": "Dans certains cas, vous savez « précisément » quelle partie du code vous souhaitez\nmettre à jour. Par exemple, vous souhaitez rafraîchir la documentation d’une fonction après une modification. Vous savez\nque la documentation se trouve juste avant la définition de la fonction au moins au sens du langage de programmation,\nmais le nombre de lignes vides ou d’espaces peut varier.",
  "3DA492BCBD863CC4281A": "Dans ce genre de scénario, vous pouvez utiliser l’Arbre de Syntaxe Abstraite (AST) pour localiser le code à mettre à jour. L’AST est une représentation arborescente du code.",
  "FD6C81431C02538E8555": "Ainsi, au lieu de lutter contre les espaces et les sauts de ligne, vous pouvez simplement localiser le nœud `function_declaration` qui suit\nun nœud `comment`.",
  "9524B410755812963A38": "Une fois que vous avez localisé le nœud à mettre à jour, vous pouvez faire toutes les transformations que vous souhaitez, par exemple le remplacer par un autre texte. En termes de script GenAI, cela signifie que vous pouvez construire une invite qui inclut autant de contexte que nécessaire, générer une réponse.",
  "6C0A1501F35FA743E01D": "Une fois que le LLM répond avec le nouveau commentaire, vous pouvez l’insérer comme contenu du nœud dans l’AST.",
  "5656F2E7EF5B09914D93": "Voila ! Vous n’avez touché que la partie du fichier que vous vouliez mettre à jour !",
  "09AB86525C6B442C5717": "Pour résumer, cette stratégie repose sur les étapes suivantes :",
  "6D21FC7E1A2D26E6D239": "**rechercher** Utilisez l’AST pour localiser le nœud à mettre à jour.",
  "F0E16B89C1BBF868D803": "**transformer et remplacer** Utilisez le LLM pour générer le contenu du nœud.",
  "6AFD085F3B44F68C8C5C": "**valider** Mettez à jour le nœud dans l’AST avec le nouveau contenu.",
  "F08FFBC47B3518C82A37": "AST-grep",
  "6F4C5AEAC1B778E57901": "![Logo AST-Grep](https://ast-grep.github.io/logo.svg)",
  "7B953DB2DBDB11134127": "[ast-grep(sg)](https://ast-grep.github.io/) est un outil rapide et polyglotte pour la recherche structurelle dans le code,\nlint, réécriture à grande échelle. **sg** nous fournit les capacités de recherche/remplacement dans l’AST nécessaires pour\nimplémenter la stratégie ci-dessus.",
  "840CE5FAE784F6F7468A": "GenAIScript bénéficie de la parfaite [intégration avec Node.JS](https://ast-grep.github.io/reference/api.html#napi),\nqui est disponible via la méthode [`host.astGrep()`](https://microsoft.github.io/genaiscript/reference/scripts/ast-grep).",
  "953DBB49275D94B8FFEF": "### Recherche",
  "8782E01D86EC2F19FC4F": "La méthode `sg.search` permet de rechercher des nœuds dans l’AST. Elle prend en paramètre la langue, le motif de fichier,\net la syntaxe du modèle, et retourne une liste de correspondances.",
  "5A6F0A7DE9AE9DC4429A": "### Édition",
  "6E9C264EFC49E93C882E": "La méthode `sg.changeset` crée un ensemble de modifications pouvant être appliqué à un ensemble de fichiers.",
  "50D5F1618F27AC4CF499": "## Exemple : Générateur / mise à jour de documentation <a id=\"sample\" />",
  "F5169ED65C3A6BA1A148": "Vous trouverez ci-dessous une description complète de la création du script de générateur/mise à jour de documentation dans la [documentation](/genaiscript/reference/scripts/ast-grep). Je vous encourage à la lire pour approfondir.",
  "8E5450EDE3EF1D33B70D": "Le script `docs` est un générateur/mise à jour de documentation.",
  "D177454C6BD578743C88": "*: utilise ast-grep pour trouver et générer la documentation manquante pour une fonction TypeScript exportée. Une seconde\nrequête en tant que juge par LLM est utilisée pour vérifier que la documentation générée est correcte.",
  "7C6D8FCFDC6D22F07E24": "*: si l’option `diff` est sélectionnée, elle filtrera les fonctions qui n’intersectent pas avec la diffférence (ce qui est assez naïf mais un bon début…).",
  "EE16F6F9380BC63EA2C7": "*: elle peut également être utilisée pour mettre à jour la documentation d’une fonction modifiée.",
  "4AFB0E20D21F42B3CCDA": "*: elle fonctionne indépendamment de la taille du fichier ou du nombre de fichiers, car la majorité des transformations sont hyper-localisées.",
  "7BD76B51CD589552E405": "Voici quelques exemples d’application des scripts (one-shot, sans modification humaine, édition multiple par fichier) :",
  "6D5AB517074334625267": "- [Code TypeScript](https://github.com/pelikhan/TypeScript/pull/1), j’ai arrêté le script après un moment, il tournait en douceur.",
  "67073DD2BA9103EF9323": "- [Code GenAIScript](https://github.com/microsoft/genaiscript/pull/1376/files), cette modification inclut aussi la mise à jour vers GenAIScript lors de la construction de la fonctionnalité.",
  "52F0B721CB62FF958FDE": "Voici, c’est parti :",
  "52B461D05CDC5A0B2572": "- [source originale](https://github.com/microsoft/genaiscript/blob/main/genaisrc/docs.genai.mts)",
  "D95550DF459DC4C98AE1": "Anthropic Models",
  "CF1C948A87694B9B8524": "Support for Claude.",
  "6F87A78AEF213E8D4FAD": "Un grand merci à [@waltoss](https://github.com/waltoss) qui a contribué au support du [modèle Anthropic](https://github.com/microsoft/genaiscript/pull/788). Il y a encore quelques [TODOs](https://github.com/microsoft/genaiscript/discussions/790) mais les bases sont en place.",
  "92ED864C056EE439ABF5": "TLA+ AI Linter",
  "668AF8468B87EF1EB9F7": "Découvrez comment le TLA+ AI Linter exploite des scripts GenAI et des LLMs pour améliorer les spécifications TLA+ grâce à un linting automatisé et une vérification cohérente des commentaires.",
  "DE8E1E5CB7B607D72C56": "[TLA+](https://lamport.azurewebsites.net/tla/tla.html) est un langage de haut niveau pour modéliser des programmes et des systèmes, en particulier ceux qui sont concurrents et distribués. Il repose sur l'idée que la meilleure façon de décrire les choses avec précision est d'utiliser des mathématiques simples.",
  "D99803A2AB8498BD3BAA": "TLA+ ne dispose pas d'un linter ou d'un formateur traditionnel. Le TLA+ AI Linter est un script GenAI qui utilise des LLMs pour analyser les fichiers TLA+.",
  "A234ED4810FB0FE89749": "Spécifications TLA+",
  "732924DDD2C451A8F348": "Voici une spécification TLA+ qui modélise une solution fondamentale au [problème de détection de terminaison dans les systèmes distribués](https://www.cs.utexas.edu/users/EWD/ewd09xx/EWD998.PDF).",
  "78441C14355003C6B5AC": "Script",
  "76C266E09153233C44E5": "Le script GenAI suivant analysera la spécification TLA+ ci-dessus. Plus précisément, il vérifiera si les commentaires en prose dans la spécification sont cohérents avec les définitions TLA+.",
  "0932DB8BF3656CAD491A": "des numéros de ligne sont ajoutés au contenu du fichier pour aider le LLM à localiser précisément les problèmes.",
  "CD01C1646DE25787C261": "le script utilise un support intégré pour les [annotations](/genaiscript/reference/scripts/annotations) afin de générer des avertissements et erreurs analysables. Les annotations sont automatiquement intégrées comme problèmes dans VSCode ou comme erreurs de compilation dans la chaîne CI/CD.",
  "226CD67900059F8ECED8": "GPT-4 connaît déjà beaucoup de choses sur la logique et les mathématiques de base. Cependant, le script liste également des idiomes communs à TLA+ pertinents pour analyser une spécification.",
  "4BD333243237F161CE44": "Github Action",
  "11455EED10AA332997F5": "après avoir cloné le dépôt et installé des dépendances telles que node.js, le script GenAI est exécuté pour analyser les spécifications TLA+ qui ont été ajoutées ou modifiées dans la Pull Request.",
  "D4816E74CF0EAEEB9941": "La sortie du script, c’est-à-dire les annotations générées par le LLM, est formatée comme un rapport [SARIF](https://sarifweb.azurewebsites.net) et [téléversée](https://docs.github.com/en/code-security/code-scanning/integrating-with-code-scanning/uploading-a-sarif-file-to-github) dans la Pull Request.",
  "FB398AE1AB0A90CA05AE": "Résultats",
  "A8A30D25EAC5D0C970DC": "Le linter a généré des annotations pour chaque commentaire en prose dans la spécification, et un commentaire a été trouvé incohérent avec les définitions TLA+. Un avertissement correspondant est ajouté à la Pull Request.",
  "795F9DE3DD03239B693D": "Métadonnées SEO",
  "BC98CCF7573F4FF8AECA": "Apprenez à automatiser la création de métadonnées optimisées pour le SEO dans vos documents markdown avec GenAIScript.",
  "3DC1E1220AE30C937517": "La génération et la maintenance de bonnes métadonnées SEO peuvent être une tâche fastidieuse. GenAIScript peut vous aider à automatiser ce processus.",
  "3057CEF407C54E7252BA": "Le script ci-dessous générera des informations SEO et mettra à jour le fichier existant. Le script utilise une stratégie de fusion personnalisée pour fusionner les nouvelles métadonnées avec celles existantes.",
  "7C3F9D54AC2EC033B530": "Traitement par lots sur tous les fichiers",
  "C188FA392084C99C7209": "Une fois le script ajusté sur quelques fichiers, vous pouvez automatiser son utilisation avec la [CLI](/genaiscript/reference/cli). La CLI dispose d'un indicateur **--apply-edits** pour appliquer les modifications au fichier.",
  "2BFB42F65FA06136D1BD": "Vous pouvez exécuter cette commande dans votre pipeline CI/CD pour garder vos métadonnées SEO à jour.",
  "3DDB3FC6101754466CE6": "Ajoutez cette commande à votre `package.json` pour facilitaer son exécution à nouveau.",
  "8361BF4FF993AC6D5EEB": "Notes de version",
  "5D37D0F54B99F5F86192": "Générez des notes de version complètes en combinant l'historique des commits\net les différences de code",
  "AEFC7611528B87A64817": "Il existe de nombreux générateurs automatisés de `notes de version` qui examinent la liste des commits depuis la dernière version et génèrent une liste de modifications. Les notes de version sont généralement basées exclusivement sur les messages de commit.",
  "DDC3D32E1CB66B669E0B": "Dans le projet GenAIScript, nous créons un générateur de notes de version **qui utilise à la fois l'historique des commits et le diff des modifications**.",
  "7BEC53D046D338988C72": "Vous pouvez voir l'une des premières notes de version générées par prototype pour [v1.41.6](https://github.com/microsoft/genaiscript/releases/tag/1.41.6).",
  "C2C497958F8112809FA4": "Historique des commits et diff",
  "8F732EDC570EC285FE57": "Nous commençons notre script en appelant `git` plusieurs fois pour récupérer le tag de la version précédente, la liste des commits, et le diff depuis ce tag. (Cette astuce a principalement été trouvée lors d'une session GitHub Copilot Chat).",
  "906604B424CFB02AEFC1": "Nous utilisons la fonction `def` avec `maxTokens` pour intégrer ces informations sans dépasser la fenêtre de contenu du modèle (entrée de 32k).",
  "3ACC9904339B3EBAF956": "Rôle et tâche",
  "7F16B0E48FDCB9B8177D": "Le reste du script suit un schéma typique avec un rôle et une tâche.",
  "AB34B0F75D85EC72C03A": "Le script",
  "D024D256457394552347": "Le script complet tel qu'il s'exécute dans GenAIScript est le suivant :",
  "F5CAA5BDC4F003808F37": "Intégration Release-it",
  "E19818D88F50574BF58F": "GenAIScript utilise [release-it](https://github.com/release-it/release-it) pour automatiser le processus de publication. Nous avons configuré release-it pour exécuter le script à l'aide du [cli](/genaiscript/reference/cli) en ajoutant un champ `github.releaseNotes` dans la configuration de `release-it`.",
  "B9EE4131FCB1F1CEEA0A": "Texte alternatif des images",
  "32323889E2F555C54219": "Découvrez comment générer automatiquement un texte alternatif descriptif pour les images en utilisant le modèle OpenAI Vision afin d'améliorer l'accessibilité et le référencement SEO.",
  "B32D13224008A8F6668C": "Il est recommandé de fournir un attribut `alt` pour les images.\nCet attribut sert à décrire l'image aux utilisateurs qui ne peuvent pas la voir.\nIl est également utilisé par les moteurs de recherche pour comprendre le contenu de l'image.",
  "01350347DCB2B5A64510": "Cependant, cette tâche peut être fastidieuse et les développeurs sont souvent tentés de l'omettre ou de fournir un texte `alt` générique comme \"image\".",
  "A9757CDC3F2240BE9676": "Le script",
  "48897A8425C05E85F978": "Pour résoudre ce problème, nous avons créé un script qui utilise le modèle OpenAI Vision pour analyser les images de la documentation et générer un texte alternatif descriptif.",
  "4E751ABC938A5674E570": "Pour commencer, nous supposons que le script s'exécute sur un seul fichier image et nous utilisons [defImage](/genaiscript/reference/scripts/images) pour l'ajouter au contexte de la requête.",
  "703799A9331993CA9C18": "Ensuite, nous donnons une tâche au modèle de langage pour générer un bon texte alternatif.",
  "029FF55B4FC41D6F1A8D": "Enfin, nous utilisons [defFileOutput](/genaiscript/reference/scripts/file-output) pour définir une destination de sortie de fichier.",
  "F11AFAF35F3256815284": "Utilisation dans Astro",
  "65AA5A70A93A71DB4F4A": "La documentation GenAIScript utilise Astro, qui permet de créer des pages en [MDX](https://docs.astro.build/en/guides/markdown-content/).\nLe code ci-dessous montre comment le texte alternatif généré, stocké dans un fichier texte séparé, est injecté dans le HTML final.",
  "62100460C71CFC9BDE0C": "L'image `debugger.png` montre une capture d'écran d'une session de débogage ainsi que le contenu du fichier texte généré pour le texte alternatif.",
  "114F8B350D29FD75A10E": "Automatisation",
  "48A7493E5C9B278F9638": "Avec la commande [run](/genaiscript/reference/cli/run), nous pouvons appliquer le script à chaque image dans la documentation.",
  "484AC03C8F7381C36DDA": "Pour éviter de régénérer le texte alternatif, nous détectons également si un fichier existe dans le script et annulons l'opération en conséquence.",
  "FAE0577974649DAB29FB": "Code source complet",
  "8E3C9975D449038DE462": "Le code source complet est le suivant :",
  "7E3AA0B6CECF5054E68A": "Traductions de la documentation",
  "E1CAFE9E266BA7E99A0B": "Découvrez les défis et les solutions pour localiser la documentation MakeCode avec des macros personnalisées tout en maintenant un rendu riche dans plusieurs langues.",
  "8C7224785ED16EC475D5": "[Microsoft MakeCode](https://makecode.com) est une plateforme web pour créer des expériences d'apprentissage en informatique engageantes. Elle offre un environnement de programmation par blocs qui permet aux élèves de créer des jeux, des animations et des histoires interactives.",
  "E636819276EFF1215F16": "La documentation et les tutoriels MakeCode utilisent [le markdown avec de nombreuses macros supplémentaires et micro-syntaxes](https://makecode.com/writing-docs) pour créer des tutoriels et documentations à rendu riche, comme le [tutoriel Pierre Papier Ciseaux](https://makecode.microbit.org/projects/rock-paper-scissors).",
  "8F6F65602B196D317BB9": "Défi de localisation",
  "60BDB919FA38E3457570": "Un défi majeur dans la localisation de la ressource MakeCode est que des outils comme Bing Translator ou Google Translate ont tendance à détruire l'annotation de macro personnalisée ; ce qui casse le rendu riche de la documentation.",
  "DE0090DF8AD582D5A872": "Illustrons cela avec l'Étape 6 du tutoriel Pierre Papier Ciseaux :",
  "EB33AF71DB77376A0F8E": "Dans ce contenu, il est crucial de conserver les annotations `||variables:hand||` et `||logic:0 = 0||` telles quelles. De plus, la macro `blocks` doit rester intacte.",
  "B7C2332F4F442D41D852": "Malheureusement, les systèmes de traduction traditionnels n'ont pas de moyen de \"enseigner\" la syntaxe ni de souligner l'importance de ces annotations.",
  "E9613B8F5CD933D11163": "Par exemple, lorsqu'il est traduit en français avec Bing Translate, plusieurs erreurs apparaissent : ` `` ` devient `'`, des espaces supplémentaires, `logic` devient `logique`, etc.",
  "CC563DDE9BFC8B0D1B2C": "Apprendre à l’LLM comment traduire",
  "B99AF84B9C07E284A09B": "GenAIScript a permis de développer et d’automatiser un script qui crée des traductions de haute qualité basées sur LLM pour la documentation MakeCode.",
  "144C5A93B20802C62D1B": "Une version (simplifiée) du script est présentée ci-dessous, annotée avec des commentaires.",
  "6AF1A63807CC412B3272": "En utilisant ce script, la traduction de `Step 6` en français est la suivante, et vous remarquerez que toutes les erreurs ont été corrigées.",
  "A51B2ADC70FAA0435C7B": "Automatisation",
  "86145E38D30CC0169421": "Notez que nous utilisons la [variable](/genaiscript/reference/scripts/variables) `env.vargs.lang` qui permet de modifier cette valeur via la ligne de commande.",
  "73C212EBEF5F1A7C20F7": "Avec l’outil en ligne de commande genaiscript, nous pouvons exécuter le script pour chaque langue souhaitée dans une Action GitHub.",
  "ECD0CD7DADCFF00F4C7F": "Validation et téléversement",
  "A32A7F832A04F24DD7CA": "Le CLI peut être automatisé en utilisant votre environnement bash/script préféré. Par exemple, avec [zx](https://google.github.io/zx/), nous automatisons pour plusieurs locales :",
  "E09615E284C5B0B53054": "traduire la documentation,",
  "B09B8AAA9B92CCEF3F86": "enregistrer la traduction dans des fichiers,",
  "B43AD2C4E0A3D26E217C": "exécuter le compilateur MakeCode pour valider les traductions",
  "D2080F322EB896C1A266": "téléverser/metttre à jour la base de données de traductions",
  "97E8DFCD057FECE2899F": "Localisation des blocs",
  "4B9E3C81A027EF5F9C6C": "Apprenez comment localiser les blocs de programmation MakeCode tout en conservant les propriétés des blocs et les noms de variables pour un public international.",
  "3A3C838973B0387EA426": "Ceci est un autre exemple d'utilisation du LLM pour produire la traduction de chaînes naturelles avec un DSL intégré, de manière similaire au guide [Traduction de documentation](/genaiscript/case-studies/documentation-translations).",
  "AA5C7309914408597FA9": "[MakeCode](https://makecode.com) utilise un [microformat](https://makecode.com/defining-blocks) pour définir la forme des blocs de codage. Lors de la traduction des chaînes de format, il est crucial de conserver les propriétés des blocs, comme le nombre d'arguments, leurs types et l'ordre des arguments.",
  "3DF54372B0602DA0CC20": "Ne cassez pas les blocs !",
  "6689BB0E823AFFC5CCF0": "Les [chaînes de localisation](https://github.com/microsoft/pxt-jacdac/blob/45d3489c0b96ed0f74c9bbea53fb0714ae9f7fcc/buzzer/_locales/jacdac-buzzer-strings.json#L1) pour la bibliothèque buzzer sont :",
  "336D86E8594D21D503E6": "Par exemple, la chaîne pour le [bloc jouer une note du buzzer Jacdac](https://github.com/microsoft/pxt-jacdac/blob/45d3489c0b96ed0f74c9bbea53fb0714ae9f7fcc/buzzer/_locales/jacdac-buzzer-strings.json#L5-L6) contient une référence à des variables (`%music`) qui doivent être conservées dans la chaîne traduite.",
  "00D601D684F552505AC7": "et Bing Traduction nous donne la traduction suivante",
  "2E8602F06D97CDD1DC99": "Comme on peut le voir, Bing a traduit le nom de la variable `%variable` ce qui cassera la définition du bloc.",
  "7559B9DCF70FDAD9F8CC": "La traduction [GenAIScript](https://github.com/microsoft/pxt-jacdac/blob/45d3489c0b96ed0f74c9bbea53fb0714ae9f7fcc/buzzer/_locales/de/jacdac-buzzer-strings.json#L5) est correcte.",
  "7308D1BA52B27A94D121": "Si vous regardez attentivement dans le code source du script, vous trouverez dans l'invite des instructions pour manipuler correctement les variables.",
  "06304E7708E7D40D1F0A": "Format de données personnalisé",
  "9F284EFE394BB265F449": "Un autre défi avec les traductions est que la chaîne localisée contient souvent des caractères échappés qui cassent des formats comme JSON ou YAML. Par conséquent, nous utilisons un format simple personnalisé `key=value` pour encoder les chaînes, afin d'éviter les problèmes d'encodage. Nous utilisons la fonctionnalité `defFileMerge` pour convertir le fichier clé-valeur analysé et les fusionner avec les traductions existantes.",
  "57082B868F799ABCF22D": "Paramétrage pour l'automatisation",
  "4190935618E4DACF9B98": "Le code de langue `langCode` est récupéré depuis les [variables](/genaiscript/reference/scripts/variables) `env.vars` ou par défaut à `de`.",
  "448C89039B09667D3B1B": "Cette technique permet de reconfigurer ces variables depuis la ligne de commande en utilisant l'argument `--vars lang=fr`.",
  "00641BDBE9E8E515967D": "Script",
  "DB4A1FB115F30EF45AE3": "Le script complet est montré ci-dessous.",
  "44F9D751DF4EDD9A4055": "Le résultat de ce script peut être consulté dans cette [pull request](https://github.com/microsoft/pxt-jacdac/pull/108).",
  "720265F482E157ED8D74": "Pratiques exemplaires pour Bicep",
  "1DFEE03ADAFD429C4765": "Apprenez comment appliquer les meilleures pratiques aux fichiers Azure Bicep pour une infrastructure en tant que code plus efficace et plus facile à maintenir.",
  "1D695FC0A8F89542A545": "[Azure Bicep](https://learn.microsoft.com/en-us/azure/azure-resource-manager/bicep/overview?tabs=bicep) est un langage spécifique à un domaine (DSL) pour déployer de manière déclarative des ressources Azure.\nC'est un langage conçu pour être plus lisible\net plus facile à maintenir afin de définir les ressources Azure.",
  "D1E81F033BD706D43050": "Bicep est livré avec un [linter](https://learn.microsoft.com/en-us/azure/azure-resource-manager/bicep/linter) qui détecte différentes erreurs, mais propose également\ndes meilleures pratiques en ligne qui ne sont pas entièrement couvertes par le linter.",
  "7EBCA6CB31DC4D6BAEA0": "Application Web Basique Linux",
  "CF1A4A8582FD4F9098D0": "Le fichier suivant est un fichier Bicep qui déploie une application web avec un plan de service d'application Linux.\nC’est l’exemple de modèle **microsoft.web/webapp-basic-linux/main.bicep**\ndans le [bac à sable Bicep](https://azure.github.io/bicep/).",
  "185F69C69D1AE02E128D": "Le fichier est conforme au `linter`, mais certaines améliorations peuvent être apportées en suivant les meilleures pratiques.\nLe script suivant appliquera les meilleures pratiques au fichier Bicep.",
  "DD3E4421B9583C53D317": "le script utilise un support intégré pour les [annotations](/genaiscript/reference/scripts/annotations)\npour générer des avertissements et des erreurs analysables. Les annotations sont automatiquement intégrées comme problèmes\ndans VSCode ou comme erreurs de build dans la chaîne CI/CD.",
  "8BC58FA14F378B3C3B23": "ajout du support pour ignorer les faux positifs en utilisant le commentaire `#disable-next-line genaiscript`",
  "E0512B21DA4184FF2BFD": "GPT-4 connaît déjà les meilleures pratiques pour Bicep, il n’est pas nécessaire de les répéter !",
  "BBF0A9BB653609809612": "Le LLM génère 3 annotations pour le fichier Bicep. Les annotations sont affichées\nsous forme de lignes ondulées dans VSCode.",
  "A3265006359AF84ED7D7": "Le fournisseur `windows` prend en charge [AI for Windows Apps](https://learn.microsoft.com/en-us/windows/ai/) qui offre des modèles locaux à la pointe de la technologie, avec support matériel NPU.",
  "CCA4C8C9A52D899993BE": "Installez l’extension [AI Toolkit pour Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-windows-ai-studio.windows-ai-studio).",
  "1DE97BAF04676D76B312": "Ouvrez le **Catalogue de modèles** et ajoutez un modèle depuis la section d’exécution **Modèles ONNX**.",
  "BF085D53506EF3E9409D": "Faites un clic droit sur le modèle dans la vue Explorateur et sélectionnez **Copier le nom du modèle**.",
  "42D57356E924B29463EA": "Définissez le nom du modèle dans votre script avec le nom du modèle que vous avez copié.",
  "08C5D87FD4F02F8BB91E": "Voir le [guide de démarrage rapide de l’Azure AI Toolkit](https://learn.microsoft.com/en-us/windows/ai/toolkit/toolkit-getting-started).",
  "2E13492C83D4515591D6": "Whisper ASR WebServices",
  "1DE5B38EF2D54F390F7E": "Ce fournisseur `whisperasr` permet de configurer une tâche de [transcription](/genaiscript/reference/scripts/transcription) \npour utiliser le projet [Whisper ASR WebService](https://ahmetoner.com/whisper-asr-webservice/).",
  "D96E9C90FD930F833E14": "Ce service whisper peut fonctionner localement ou dans un conteneur docker (voir la [documentation](https://ahmetoner.com/whisper-asr-webservice/)).",
  "2DB9F027957D934712F5": "Vous pouvez également remplacer l'alias du modèle `transcription` pour modifier le modèle par défaut utilisé par `transcribe`.",
  "C350595860B77C1A0CA7": "[vLLM](https://docs.vllm.ai/) est une bibliothèque rapide et facile à utiliser pour l'inférence et le déploiement des grands modèles de langage (LLM).",
  "14E14C8BA7A570340C9C": "Le fournisseur est `vllm` et le nom du modèle est ignoré.",
  "7805128FAC11CBE7EB0F": "[SGLang](https://docs.sglang.ai/) est un framework de déploiement rapide pour les grands modèles de langage et les modèles de langage visuel.",
  "89983678E1085444191A": "Le fournisseur est `sglang` et le nom du modèle est ignoré.",
  "F48274D068BE83065F59": "Vous pouvez configurer le fournisseur OpenAI pour utiliser à la place le service [OpenRouter](https://openrouter.ai/docs/quick-start) en définissant `OPENAI_API_BASE` sur `https://openrouter.ai/api/v1`.\nVous aurez également besoin d'une [clé API](https://openrouter.ai/settings/keys).",
  "24B98B230094B4DE9509": "Utilisez ensuite le nom du modèle OpenRouter dans votre script :",
  "5B21018528D2C4749FAF": "Par défaut, GenAIScript définira l'URL et le nom du site sur `GenAIScript`, mais vous pouvez remplacer ces réglages avec vos propres valeurs :",
  "67366D381CCB87E24B3D": "`openai` est le fournisseur de modèle de chat OpenAI.\nIl utilise les variables d'environnement `OPENAI_API_...`.",
  "90BB501166A38950E35D": "[Mettez à niveau votre compte](https://platform.openai.com/settings/organization/billing/overview) pour accéder aux modèles.\nVous obtiendrez des erreurs 404 si vous n'avez pas de compte payant.",
  "174BAC49DC53B2A6E518": "Créez une nouvelle clé secrète depuis le [portail des clés API OpenAI](https://platform.openai.com/api-keys).",
  "71C95504ADE8866DB2D9": "Mettez à jour le fichier `.env` avec la clé secrète.",
  "EB5A2A4802E529E230E9": "Trouvez le modèle que vous souhaitez utiliser\ndans la [référence API OpenAI](https://platform.openai.com/docs/models/gpt-4o)\nou dans le [Playground de chat OpenAI](https://platform.openai.com/playground/chat).",
  "9267E721070C37859D41": "Définissez le champ `model` dans le `script` au modèle que vous voulez utiliser.",
  "064C7BA1C77D99617CEB": "Configuration par défaut du modèle",
  "8C1B52246477DB133DAC": "Utilisez `GENAISCRIPT_MODEL_LARGE` et `GENAISCRIPT_MODEL_SMALL` dans votre fichier `.env` pour définir le modèle par défaut et le modèle léger.",
  "989BACD6308F73C40F95": "Journalisation",
  "73B1E71654D5E37AC660": "Vous pouvez activer les [espaces de noms de journalisation](/genaiscript/reference/scripts/logging) `genaiscript:openai` et `genaiscript:openai:msg` pour obtenir plus d'informations sur les requêtes et réponses :",
  "C4602CB0D1C537AF2A6D": "[Ollama](https://ollama.ai/) est une application de bureau qui vous permet de télécharger et d'exécuter des modèles localement.",
  "3B86C900214155D57C53": "L'exécution d'outils localement peut nécessiter des ressources GPU supplémentaires selon le modèle que vous utilisez.",
  "16CF687DEA395B0261D6": "Utilisez le fournisseur `ollama` pour accéder aux modèles Ollama.",
  "0042BE1A5ACC9319D458": "GenAIScript utilise actuellement la couche de compatibilité API OpenAI d'Ollama.",
  "EF5192BECFCB1DC66347": "Lancez l'application Ollama ou",
  "6FB9F2D79AA5A72C4684": "Mettez à jour votre script pour utiliser le modèle `ollama:phi3.5` (ou tout autre [modèle](https://ollama.com/library) ou provenant de [Hugging Face](https://huggingface.co/docs/hub/en/ollama)).",
  "19A0D1E94A0133B2C376": "GenAIScript téléchargera automatiquement le modèle, ce qui peut prendre un certain temps en fonction de la taille du modèle. Le modèle est mis en cache localement par Ollama.",
  "F268AFF3AF789E8DC421": "Si Ollama s'exécute sur un serveur, un autre ordinateur ou sur un port différent,\nvous devez configurer la variable d'environnement `OLLAMA_HOST` pour vous connecter à un serveur Ollama distant.",
  "D2CB56230CB77DEE40EC": "Vous pouvez spécifier la taille du modèle en l'ajoutant au nom du modèle, comme `ollama:llama3.2:3b`.",
  "E429B136FB6C6D4DC40D": "Ollama avec les modèles Hugging Face",
  "0F68BC1C0F7BB7D06A27": "Vous pouvez également utiliser les [modèles GGUF](https://huggingface.co/models?library=gguf) de [Hugging Face](https://huggingface.co/docs/hub/en/ollama).",
  "E3FE1594D23DA76D31C4": "Ollama avec Docker",
  "678A0F694859A0D70488": "Vous pouvez facilement exécuter Ollama dans un conteneur Docker.",
  "51382B4915D706F8C860": "si vous utilisez un [devcontainer](https://code.visualstudio.com/devcontainers)\nou un [GitHub Codespace](https://github.com/features/codespaces),\nassurez-vous d'ajouter l'option `docker-in-docker` dans votre fichier `devcontainer.json`.",
  "ACB46378B75D438A80C7": "démarrez le [conteneur Ollama](https://ollama.com/blog/ollama-is-now-available-as-an-official-docker-image)",
  "D643606B6159EFCD3289": "arrêtez et supprimez les conteneurs Ollama",
  "951BF38BA8F7AAF5C253": "Ajoutez ces scripts à votre fichier `package.json` pour faciliter le démarrage et l'arrêt du conteneur Ollama.",
  "B4A8AB498415EE41BBE1": "Le fournisseur `mistral` vous permet d'utiliser les [Modèles Mistral AI](https://mistral.ai/technology/#models)\nen utilisant l'[API Mistral](https://docs.mistral.ai/).",
  "92ED6E33E52855BE4D79": "Inscrivez-vous pour un [compte Mistral AI](https://mistral.ai/)\net obtenez une clé API depuis leur [console](https://console.mistral.ai/).",
  "24D6F14DA6D6A2E92EFB": "Ajoutez votre clé API Mistral AI au fichier `.env` :",
  "5507F77A74CC9ED8A06E": "Mettez à jour votre script pour utiliser le `model` de votre choix.",
  "7852A3C7840C16663CA0": "[LocalAI](https://localai.io/) agit comme une API REST de remplacement prête à l’emploi, compatible avec les spécifications de l’API OpenAI pour l’inférence locale. Il utilise des modèles Open Source gratuits et fonctionne sur des CPU.",
  "CBD428514C8FA477FD45": "LocalAI agit comme un remplacement d’OpenAI, vous pouvez consulter le [mapping des noms de modèles](https://localai.io/basics/container/#all-in-one-images) utilisé dans le conteneur, par exemple `gpt-4` est mappé à `phi-2`.",
  "01B0C6608B838174665C": "Installez Docker. Voir la [documentation LocalAI](https://localai.io/basics/getting_started/#prerequisites) pour plus d’informations.",
  "9B5C828209A41609E360": "Mettez à jour le fichier `.env` et définissez le type d’API à `localai`.",
  "4D354BAC5E982FC4F0F5": "Pour démarrer LocalAI dans Docker, exécutez la commande suivante :",
  "962CD8BCC4EDB960AF91": "Le fournisseur `lmstudio` se connecte au serveur sans interface [LMStudio](https://lmstudio.ai/) et permet de faire fonctionner des LLM locaux.",
  "AB495F7D9C829A11E6EA": "Installez [LMStudio](https://lmstudio.ai/download) (v0.3.5+)",
  "08E1EA537C4A66695E84": "Ouvrez LMStudio",
  "AFDB6B17E1C77798A810": "Ouvrez le [Catalogue de modèles](https://lmstudio.ai/models),\nsélectionnez votre modèle et chargez-le au moins une fois afin qu'il soit téléchargé localement.",
  "91CFBD12F34E4A2E36B7": "Ouvrez les paramètres (icône roue dentée) et activez **Activer le service LLM local**.",
  "2444D009F1204AA05900": "GenAIScript suppose que le serveur local est par défaut à l'adresse `http://localhost:1234/v1`.\nAjoutez une variable d'environnement `LMSTUDIO_API_BASE` pour changer l'URL du serveur.",
  "CD66F1A24EC464F90A53": "Trouvez l'**identifiant API** du modèle dans la fenêtre des modèles chargés, puis utilisez cet identifiant dans votre script :",
  "35675ED006F0698D1C9E": "GenAIScript utilise la [CLI LMStudio](https://lmstudio.ai/docs/cli)\npour télécharger les modèles à la demande.",
  "57CE0047A18E6E68041C": "La spécification de la quantification n'est actuellement pas prise en charge.",
  "E4E53DD3281A237BB5C9": "LM Studio et les modèles Hugging Face",
  "2949AE5AA10DD04C7976": "Suivez [ce guide](https://huggingface.co/blog/yagilb/lms-hf) pour charger des modèles Hugging Face dans LMStudio.",
  "D88560E0AED956DE63BF": "Jan",
  "4EBC2339E58BB27DE080": "Le fournisseur `jan` se connecte au serveur local [Jan](https://jan.ai/).",
  "390DDFF0CDF2F1F6B1E1": "[Jan](https://jan.ai/)",
  "CEAB62EF01B67C71EA85": "Ouvrez Jan et téléchargez les modèles que vous envisagez d’utiliser. Vous trouverez l'identifiant du modèle dans la page de description du modèle.",
  "E502CC2AAADC41897B4F": "Cliquez sur l’icône **Serveur API Local** (en bas à gauche), puis sur **Démarrer le serveur**.",
  "F09A362C120DA2DA844E": "Laissez l’application de bureau ouverte !",
  "EDE43CCDC546C515788B": "Pour utiliser les modèles Jan, employez la syntaxe `jan:modelid`.\nSi vous changez l’URL par défaut du serveur, vous pouvez définir la variable d’environnement `JAN_API_BASE`.",
  "401F69DAF4757296A6EC": "[https://llamafile.ai/](https://llamafile.ai/) est une application de bureau mono-fichier qui vous permet d'exécuter un LLM localement.",
  "7BE2A5BF285C2DDE2EEC": "Le fournisseur est `llamafile` et le nom du modèle est ignoré.",
  "885D53016F9087742B54": "[LLaMA.cpp](https://github.com/ggerganov/llama.cpp/tree/master/examples/server)\npermet également d'exécuter des modèles localement ou d'interfacer avec d'autres fournisseurs de LLM.",
  "47E99BE42698A261BEA0": "Mettez à jour le fichier `.env` avec les informations du serveur local.",
  "6D3E8CA4F6166C7DD9AC": "La passerelle proxy [LiteLLM](https://docs.litellm.ai/) fournit une API compatible OpenAI pour exécuter des modèles localement.\nConfigurez les clés `LITELLM_...` pour définir la clé et, éventuellement, l'URL de base.",
  "3ADEAB3541637847CFFD": "Utilisez le fournisseur `litellm`.",
  "43A466DC3D941C8A121B": "fournisseur `jan` se connecte au serveur local [``Jan``](https://jan.ai/). ",
  "884F1D8679E7F5C21144": "Jan",
  "0ED6CD40B4B22FF25485": "Serveur API Local",
  "98939C9A32C7686B3665": "Démarrer le serveur",
  "BDC0BE6DF66962F44C38": "Gardez l'application de bureau en cours d'exécution !",
  "7D3B525721E9A706E64F": "Vous devez configurer la connexion LLM et les secrets d'autorisation. Vous pouvez utiliser des modèles distants (comme OpenAI, Azure, etc.) et locaux (comme Ollama, Jan, LMStudio, etc.) avec GenAIScript.",
  "B928E3C2C0F6882295D0": "Sélection du modèle",
  "3ED814D9E31EB12EA1C4": "Le modèle utilisé par le script est configuré via le champ `model` dans la fonction `script`.\nLe nom du modèle est formaté en `provider:model-name`, où `provider` est le fournisseur du LLM\net `model-name` est spécifique au fournisseur.",
  "1959F3CF9F15144BD04A": "Modèles large, small, vision",
  "01097344F7238E9311B9": "Vous pouvez également utiliser les [alias de modèle](/genaiscript/reference/scripts/model-aliases) `small`, `large`, `vision` pour utiliser les modèles petits, grands et activés pour la vision configurés par défaut.\nLes modèles larges correspondent généralement à la gamme de raisonnement gpt-4 d'OpenAI et peuvent être utilisés pour des tâches plus complexes.\nLes petits modèles sont dans la gamme gpt-4o-mini d'OpenAI, et sont utiles pour des tâches rapides et simples.",
  "C1DEA31A9BA0F35C8365": "Les alias de modèles peuvent aussi être remplacés via la [commande cli run](/genaiscript/reference/cli/run),\nles variables d'environnement ou un fichier de configuration. [En savoir plus sur les alias de modèles](/genaiscript/reference/scripts/model-aliases).",
  "80AF609D9ECFD38C43D6": "ou en ajoutant les variables d'environnement `GENAISCRIPT_MODEL_LARGE` et `GENAISCRIPT_MODEL_SMALL`.",
  "C5A09D955FD1F482076A": "Vous pouvez aussi configurer les alias par défaut pour un fournisseur LLM donné en utilisant l'argument `provider`.\nLes valeurs par défaut sont documentées sur cette page et affichées dans la sortie console.",
  "825EBB90890D44B4CFE8": "Alias de modèles",
  "FE84B35234CB8135A08D": "En fait, vous pouvez définir n'importe quel alias pour votre modèle (seuls les caractères alphanumériques sont autorisés)\nvia des variables d'environnement nommées `GENAISCRIPT_MODEL_ALIAS`\noù `ALIAS` est l'alias que vous souhaitez utiliser.",
  "E6240C6704FC0D3B283B": "Les alias de modèles sont systématiquement mis en minuscules lors de leur utilisation dans le script.",
  "93F8ECE45244B7570A45": "Fichier `.env` et fichier `.env.genaiscript`",
  "A2B789DA92D216DCF4A0": "GenAIScript utilise un fichier `.env` (et `.env.genaiscript`) pour charger les secrets et informations de configuration dans les variables d'environnement du processus.\nGenAIScript peut charger plusieurs fichiers `.env` pour configurer l'environnement.",
  "6ACA0E16171FF97B266F": "Créez ou mettez à jour un fichier `.gitignore` à la racine de votre projet et assurez-vous qu'il inclut `.env`.\nCela garantit que vous ne commettez pas accidentellement vos secrets dans votre gestionnaire de version.",
  "C884B5B11E494B0F05A0": "Créez un fichier `.env` à la racine de votre projet.",
  "B4804DF90DCBFBE780B3": ".gitignore",
  "ED324834DF81A1036581": "**.env**",
  "9EF5347BDBC17E528CD8": "Mettez à jour le fichier `.env` avec les informations de configuration (voir ci-dessous).",
  "7EB0F43EEC0FEA97A3B6": "Ne pas commettre les secrets",
  "059B4CD40B8C22686A09": "Le fichier `.env` ne doit jamais être commité dans votre gestionnaire de version !\nSi le fichier `.gitignore` est correctement configuré,\nles fichiers `.env` et `.env.genaiscript` apparaîtront grisés dans Visual Studio Code.",
  "E485F1CF6926530E1D59": "Emplacement personnalisé du fichier .env",
  "F2BD4B8E7C3BEB6C0E4F": "Vous pouvez spécifier un emplacement personnalisé pour le fichier `.env` via la CLI ou une variable d'environnement.",
  "2E9478E06C0D6D57B233": "GenAIScript charge par défaut les fichiers `.env` suivants dans cet ordre :",
  "E1A6AA2F09DA847EDC2A": "`~/.env.genaiscript`",
  "6422BD9502832749F65F": "en ajoutant l'argument `--env <...files>` à la CLI. Chaque fichier `.env` est importé dans l'ordre et peut écraser les valeurs précédentes.",
  "B17AE400AE87FDB18291": "en définissant la variable d'environnement `GENAISCRIPT_ENV_FILE`.",
  "41322386D763D7226B57": "en spécifiant l'emplacement du fichier `.env` dans un [fichier de configuration](/genaiscript/reference/configuration-files).",
  "3576B873708929752E4D": "Pas de fichier .env",
  "18C99B43562491D944F6": "Si vous ne souhaitez pas utiliser de fichier `.env`, assurez-vous de remplir les variables d'environnement\ndu processus genaiscript avec les valeurs de configuration.",
  "F021ACA402195C3B7078": "Voici quelques exemples courants :",
  "26148E142CBCD72396B7": "Utilisation de la syntaxe bash",
  "D7E3E11FF683F1700FCE": "Configuration GitHub Action",
  "83B36BF68ABB718CE8A4": "Commande `configure`",
  "17C7311A0BC3AEE6922F": "La commande [configure](/genaiscript/reference/cli/configure) est une commande interactive pour configurer et valider les connexions LLM.",
  "804556F3594B80D5CF41": "Conteneurs de développement sous Windows",
  "D9140F98D09D36DCDFA1": "Vous pouvez utiliser les [Dev Containers](https://code.visualstudio.com/docs/devcontainers/tutorial) pour créer facilement un environnement de développement conteneurisé.",
  "7C02A77942F62C097ACF": "Installez [WSL2](https://learn.microsoft.com/en-us/windows/wsl/install)",
  "445C580C64D90D85EE4C": "Installez [Docker Desktop](https://docs.docker.com/get-started/get-docker/). Assurez-vous que le service Docker est en cours d'exécution.",
  "178E014E98AF6EF5366B": "Ouvrez Visual Studio Code",
  "375BF824FD3E92787AC4": "Installez l'[extension dev container](vscode:extension/ms-vscode-remote.remote-containers) dans VSCode",
  "18C1756C93E24FFB48F7": "Ouvrez la palette de commandes (`Ctrl`+`Shift`+`P`) et tapez _Nouvel environnement de développement conteneurisé..._",
  "29D4C7B811B5DE1BC357": "Sélectionnez l'image `Node.JS & TypeScript`.",
  "9564740C27FD0BCE01A8": "Echo",
  "79E0835C4F750AD461E1": "Le fournisseur `echo` est un fournisseur LLM sans exécution qui renvoie les messages sans appeler de LLM.\nIl est particulièrement utile pour le débogage lorsque vous souhaitez voir la requête LLM résultante sans l'envoyer.",
  "09BA21876CB4DD648650": "Echo répond avec les messages du chat sous forme markdown et JSON, ce qui peut être utile pour le débogage.",
  "F449B3E263AA8F890069": "None",
  "B42F504274907B43CB95": "Le fournisseur `none` empêche l'exécution du LLM. Il est typiquement utilisé dans un script de premier niveau qui utilise exclusivement des prompts en ligne.",
  "4FBFAD1F8B7AE57A9259": "Fournisseur personnalisé (compatible OpenAI)",
  "E47A100F963C6470058F": "Vous pouvez utiliser un fournisseur personnalisé compatible avec l'[API de génération de texte OpenAI](https://platform.openai.com/docs/guides/text-generation).\nCela est utile pour exécuter des LLM sur un serveur local ou un autre fournisseur cloud.",
  "60419F64913859ADDFFD": "Par exemple, pour définir un fournisseur `ollizard`, vous devez configurer la variable d'environnement `OLLIZARD_API_BASE` avec l'URL du fournisseur personnalisé,\net `OLLIZARD_API_KEY` si nécessaire.",
  "ABA7264B9E2679F6C7FC": "Vous pouvez ensuite utiliser ce fournisseur comme n'importe quel autre fournisseur.",
  "7B4296CBBEC60A6E92B3": "Variables d'environnement spécifiques au modèle",
  "A0A22FC8524B1AF06F7A": "Vous pouvez fournir différentes variables d'environnement\npour chaque modèle nommé en utilisant le préfixe `PROVIDER_MODEL_API_...` ou `PROVIDER_API_...`.\nLe nom du modèle est mis en majuscules et\ntous les caractères non alphanumériques sont convertis en `_`.",
  "B2A551A6C948960D2B56": "Cela permet d'avoir diverses sources de calcul de LLM\npour différents modèles. Par exemple, activer le modèle `ollama:phi3`\nfonctionnant localement, tout en conservant les informations de connexion du modèle `openai` par défaut.",
  "12F34365F4D4A00B69B3": "Exécution derrière un proxy",
  "90F2CCCADCFD2867167B": "Vous pouvez définir les variables d'environnement `HTTP_PROXY` et/ou `HTTPS_PROXY` pour exécuter GenAIScript derrière un proxy.",
  "91EA2753524442FBE74D": "Vérification de votre configuration",
  "FBC3D52D48D11197D508": "Vous pouvez vérifier votre configuration en exécutant la commande `genaiscript info env` [command](/genaiscript/reference/cli).\nElle affichera les informations de configuration actuelles analysées par GenAIScript.",
  "7E9FEED0947870AF922B": "Le fournisseur `huggingface` vous permet d'utiliser les [modèles Hugging Face](https://huggingface.co/models?other=text-generation-inference) via [Text Generation Inference](https://huggingface.co/docs/text-generation-inference/index).",
  "07CAB7556D08B9625D1B": "Pour utiliser les modèles Hugging Face avec GenAIScript, suivez ces étapes :",
  "D74C68EE8545C2B37568": "Inscrivez-vous pour un [compte Hugging Face](https://huggingface.co/) et obtenez une clé API depuis leur [console](https://huggingface.co/settings/tokens).\nSi vous créez un token **Fined Grained**, activez l'option **Make calls to the serverless inference API**.",
  "7B60FDEF75F2A73D7698": "Ajoutez votre clé API Hugging Face au fichier `.env`\nen tant que variables `HUGGINGFACE_API_KEY`, `HF_TOKEN` ou `HUGGINGFACE_TOKEN`.",
  "6443E680FAB49442D043": "Trouvez le modèle qui correspond le mieux à vos besoins en visitant les [modèles HuggingFace](https://huggingface.co/models?other=text-generation-inference).",
  "57B0B8A78AFAD4CF528C": "Mettez à jour votre script pour utiliser le `model` que vous avez choisi. ",
  "0A0286C722958C0C7F0E": "Certains modèles peuvent nécessiter un compte Pro.",
  "0B1CBD04CD37B9B6C311": "Journalisation",
  "AD6DD9DF18E582A0CEBB": "Vous pouvez activer les [espaces de noms de journalisation](/genaiscript/reference/scripts/logging) `genaiscript:huggingface` et `genaiscript:huggingface:msg` pour obtenir plus d'informations sur les requêtes et réponses :",
  "28C24287ECD5D24824F9": "Google AI",
  "952CCC45AB7695AE7391": "Google AI <a href=\"\" id=\"google\" />",
  "7194720F37ECB97A7E08": "Le fournisseur `google` vous permet d'utiliser les modèles Google AI. Il vous donne accès",
  "3301E1B0228D7DD772EE": "GenAIScript utilise la couche de [compatibilité OpenAI](https://ai.google.dev/gemini-api/docs/openai) de Google AI, donc certaines [limitations](https://ai.google.dev/gemini-api/docs/openai#current-limitations) s'appliquent.",
  "4FFE6CB5A379CCCDE198": "`seed` n'est pas pris en charge et est ignoré.",
  "6CE637CD976DBDC1DCDF": "Les [outils de secours](/genaiscript/reference/scripts/tools#fallbacktools) sont activés en utilisant Google pour compléter la couche de compatibilité OpenAI. (Voir [forum](https://discuss.ai.google.dev/t/gemini-openai-compatibility-multiple-functions-support-in-function-calling-error-400/49431)).",
  "AB130200B6566F78B6CA": "Ouvrez [Google AI Studio](https://aistudio.google.com/app/apikey) et créez une nouvelle clé API.",
  "BF7338A7129C60D81C20": "Mettez à jour le fichier `.env` avec la clé API.",
  "94F027985E13374A62E7": "Trouvez l'identifiant du modèle dans la [documentation Gemini](https://ai.google.dev/gemini-api/docs/models/gemini) et utilisez-le dans votre script ou CLI avec le fournisseur `google`.",
  "DD02C24638E9B6C885FE": "puis utilisez l'identifiant du modèle dans votre script.",
  "6FBE7FA643B6B15C652F": "Grand merci à ",
  "112B5FF25BD04BB30577": "@waltoss",
  "B5F14E77055821F9E86B": "qui a contribué au support du ",
  "C8390890DFDAA5C6C5E7": "modèle Anthropic",
  "46F5CE172DF98D888E24": "TODOs",
  "32375B6D67DA122C455D": "la documentation",
  "462FD7139E02E750AB81": "La description est conservée en l’état.",
  "A3CB61455449A7B6F9B0": "Si vous êtes pressé, passez directement au **dernier générateur/mise à jour de documentation dont vous aurez jamais besoin**\ndans la section [exemple](#sample).\n\n*\\*: pour TypeScript, peut-être.*\n::: ",
  "8B989859B3A602DC5A1C": "## La stratégie de transformation du code basée sur l'AST\n\nL’un des défis lors de la création de scripts GenAI qui mettent à jour le code source est de localiser et de mettre à jour le code source de manière précise.\nLa moindre erreur dans l’emplacement du code à mettre à jour peut rendre le code inutilisable. Cela est particulièrement vrai lorsque\nle code à mettre à jour n’est pas une simple chaîne de caractères, mais une structure complexe comme un objet ou un appel de fonction.\n\nDans certains cas, vous savez \"précisément\" quelle partie du code vous voulez\nmettre à jour. Par exemple, vous souhaitez rafraîchir la documentation d’une fonction après une modification. Vous savez\nque la documentation se trouve juste avant la définition de la fonction, du moins dans le sens du langage de programmation,\nmais le nombre de lignes vides ou d’espaces peut varier.\n\n```ts title=\"math.ts\"\n/** somme de a et b */\nfunction fn(a: number, b: number): number {\n    return a - b // oops, obsolète\n}",
  "C0881EEC1DDBE4F36093": "La Tâche",
  "0E342C3D3E255B7620CA": "Peli a exploré cette fonctionnalité dans son ",
  "AEA04B96936DB2877BB9": "AST Grep and Transform",
  "793D74664966185165B9": "Pourquoi choisir GenAIScript plutôt que l'agent de codage ?",
  "BCABA3C1B5F8C6553B09": "Vitesse",
  "1CC55B39A92F7FA29C04": "Rentabilité",
  "8D20FD7733D9DE7E5F06": "Partageabilité",
  "AB8B11869C3457684F95": "Configuration",
  "9C9B346845F1EE0C4DB6": "L'Invite",
  "E6E47E1BEE52572DFA93": "Analyse de l'Invite",
  "07A35510ED6835E13565": "Expertise",
  "20D91699132E2D01E33E": "Définition de la Tâche",
  "219B7950A2583C8E4D0D": "Directives",
  "37A8D67A020B738D8772": "Format de Sortie",
  "10A1FC530FCAF40C6664": "Exécution du Script",
  "E009BF02B00CF0A6632B": "Conclusion",
  "9373E974F2A9ADD32BE8": "Depuis le ",
  "FF25FFDD3D8A2F873A1D": "blog GitHub Next",
  "F9DA067BF6D1517D6E3B": "IA Continue",
  "F2CB91ADA3E8C283CD64": "Attendez-vous à plus d'actions et de synergies autour de ",
  "955A009649A48E83EC98": "GenAIScripts",
  "A09799991153C1851CB4": "Qu'est-ce que GenAIScript ?",
  "4BB0C19F4FE13DFC4C1E": "Premiers pas",
  "734D396B9DF515D7F2B2": "👤 Utilisateur",
  "BD66A969B2AEBF77A6CC": "🤖 Assistant",
  "AA40178FB1C143B7C2DE": "Ajout de contexte",
  "7E249310BE1D7E602F8C": "Métadonnées et configuration du script",
  "7ADAC53BD6F29D3ABDF7": "Vous pouvez ajouter des métadonnées à votre script en utilisant la fonction ",
  "3780C1B0EF0856415EBA": "Étapes suivantes",
  "6CD52BD19C82DE877B16": "Premiers pas",
  "9CF088B166B1B935DC92": "Explorez des scripts plus avancés en suivant le guide ",
  "0FBDF6AB57965AC37EAD": "Vous pouvez désormais utiliser ",
  "0F7F3C007464DAEA3AA3": "`GITHUB_TOKEN` de GitHub Actions pour authentifier les requêtes vers ",
  "FEED4A80945E47AFC573": "[GitHub Models](https://github.com/marketplace/models) !!!",
  "233AF8FCF8E643A08374": "Lire l'annonce GitHub",
  "59105C005D9E0FE74C08": "Lire la documentation",
  "A7B38B1586E711270EA6": "Comment exécuter le script",
  "B304119E96F35D220689": "la [documentation de GenAIScript](https://microsoft.github.io/genaiscript/getting-started).",
  "FCA302C1FE485E011079": "Suite à l’article précédent sur [la validation des outils MCP](/genaiscript/blog/mcp-tool-validation),\nnous avons ajouté une validation expérimentale de l’intention de l’outil afin de réduire les risques liés aux outils MCP. ",
  "D73DADBAB1D320A6827E": "Validation de l’intention",
  "3DE678E09A77E2534CF4": "L’objectif est de détecter quand un outil se comporte (de manière erratique) en dehors de son comportement attendu.\nNous avons ajouté une validation par un LLM-en-juge du résultat (de n’importe quel) outil basé sur la description de l’outil (ou une intention personnalisée).\nCette validation par le LLM-en-juge se fait à chaque réponse d’outil avant qu’elle ne soit injectée dans la conversation de chat.",
  "7C09DE2ABEC846F9A64B": "L’outil météo curieux",
  "344F65FC08000DB12339": "La traçabilité de ce programme montre que l’outil finit par accéder au champ de la version dans le `package.json`. ",
  "1A882DD1B4B0EA60DF42": "Il est évident que l’outil météo ne fait pas ce qu’il est censé faire. Peut-on tenter de détecter et arrêter cela avec un LLM-en-juge┘T006┘ ?\n\n## Retour à l’outil météo",
  "6A56251DB4B834716E00": "Dans l’exemple de l’outil météo, on peut ajouter la validation de l’intention au niveau de l’outil `weather`. ",
  "8F830A08FC1FEE3B53E8": "Ressources MCP",
  "13AB50E36DB398E60DCE": "Dans un ",
  "CDADB9F4ECE11F53A0BE": "article précédent",
  "BBBF27E89D494759E799": "outil MCP",
  "12328030D607FDC7AC83": "ressources MCP",
  "601306959925BDEE0DD7": "Êtes-vous prêt à créer vos propres outils et ressources MCP ?",
  "CBA744C4A9318C3D51F7": "Lire la documentation",
  "26965510DBBDF74E77F2": "À partir de ",
  "D3729ED9949CA4502098": "documenté ici",
  "507C20961BBF7D727F44": "détection d'injection de prompt utilisant ",
  "2E4C6C6B826F33CD1482": "scanneur de sécurité de contenu",
  "7564A6A5E72B5E2E017E": "empoisonnement d'outil",
  "ACF2A1BB978955E7D13F": "injection de prompt",
  "5A0DE177BDE5917F4912": "Avons-nous terminé ?",
  "FD2B98D9AA8AE7C02529": "Diagrammes Mermaid",
  "0A0755DB962D2257F158": "sont un moyen populaire de créer des ",
  "20548C836DB435468F9C": "diagrammes",
  "292647B7E6C801F7C962": "y compris dans GitHub Markdown",
  "4B24656B545AC3DF6967": "Il n’est pas surprenant que les LLM soient assez bons pour les générer.",
  "3795887CCFCB1F619E2C": "Diagrammes Mermaid dans Markdown",
  "5E8EE6ED64460E8D27E5": "bac à sable Mermaid",
  "13381063A09BF1BFDE0D": "Erreurs de syntaxe",
  "C6362D23B5C669D194FC": "Réparation automatique",
  "5EB2FF6970FC615730DA": "Nous avons ajouté un « réparateur » dans l’invite système ",
  "8B396D83C5AB0F8D1D48": "Nous exécutons la ",
  "7471C5A9AC29D7D4F31C": "avec le script ",
  "D5FC2194FEAEF06C659B": "et le fichier ",
  "CB4896FC8455C00F6214": "Première tentative",
  "C3A305502B1C91724C8E": "Le LLM répare le diagramme",
  "0D588A8772EC9182C3F2": "Le diagramme réparé",
  "89AB357B5B3736A519D5": "Puis-je analyser moi-même les diagrammes mermaid ?",
  "72CAFBCFA81241D4D9E6": "Vous devrez ajouter [genaiscript](https://www.npmjs.com/package/genaiscript) comme dépendance (dev) à votre projet. ",
  "F0DB51B9922EA5642CD8": "Ne perturbez pas mon processus",
  "BD02B9BBFC382E40A82B": "implémentation de `run`",
  "EABF59AAB5D41C94B6DE": "Aucun global ajouté",
  "36C9B3EF4C9B02B25263": "Aucun package chargé",
  "C337B954FB04A54467E4": "Quelques centaines de ",
  "7F1919B966E15E425B78": "de mémoire utilisées",
  "D99C644A18B9679429E2": "Aidez-nous à l'améliorer !",
  "1ADFB45BA3824E39B7D3": "o1",
  "9EF8F73357C25264E2C9": "o1 est également disponible sur [GitHub Models](https://github.com/marketplace/models/azure-openai/o1/playground) ! ",
  "D776D02FA4753AA803C1": "DeepSeek",
  "A5CDB7FBB3D0B79666F2": "GenAIScript prend en charge [DeepSeek V3](https://www.deepseek.com/) via leur API OpenAI. ",
  "67C465CDBC6CC62D4606": "Visual Studio Code v100 a légèrement modifié la manière d'ajouter l'invite `genaiscript` à la session de chat. ",
  "7F3DCAE24C7A7F587D6A": "Suivez ce guide",
  "AF60FFEDCBCB88EE6FB6": "Ajoutez l'intégralité de votre documentation à la session de chat !",
  "12A33F35BBBF27C263B5": "Comment puis-je essayer cela ?",
  "BCF1D4E649A265895704": "La dernière version de GitHub Copilot Chat ajoute la prise en charge des ",
  "1DDFFDE6CAC7E1437B8C": "prompts réutilisables",
  "DF7DFD4FF78AB21FC036": "À suivre",
  "0DCF59F3EA0DAFA87430": "Agentic",
  "7C221C6D7AAC2D51036D": "outil Agentic",
  "B576D83A2E1B662CFC28": "dans votre script en utilisant ",
  "DCD5260A643C14EE000A": "Documentation Agentic",
  "F269BA2CB7A74461157F": "Vos scripts existants restent largement compatibles.",
  "C4125EAFDFAC6E796DF0": "La version 2.0 est disponible sur [npm](https://www.npmjs.com/package/genaiscript) et dans Visual Studio Code.",
  "79BAD84B51B3E1FB1DDA": "Une refonte majeure",
  "7488351A80F3883C8301": "Lorsque [Matthew Podwysocki](https://www.linkedin.com/in/podwysocki/) ([@mattpodwysocki](https://github.com/mattpodwysocki)) nous a approchés pour contribuer à GenAIScript, nous avons d’abord suggéré des fonctionnalités plus modestes pour l’aider à se familiariser avec la codebase. Au lieu de cela, Matthew a vu plus grand et a proposé **une refonte architecturale complète afin de créer un système plus modulaire et maintenable**.",
  "573B0F4B68D5E6CAF55B": "Cette suggestion a permis de traiter une partie importante de la dette technique du projet. GenAIScript est né comme un projet de recherche qui a évolué de manière organique, accumulant des hypothèses sur son environnement d’exécution. La contrainte la plus significative : les scripts ne pouvaient s’exécuter qu’au sein d’un runtime Node.js augmenté, géré par notre CLI. Cette architecture créait une barrière artificielle — chaque exécution de GenAIScript nécessitait le CLI comme intermédiaire.",
  "C5CAB7A891870D3CAA24": "**Matthew a transformé cette limitation en opportunité.** Il a dirigé la tâche complexe de [refonte de l’ensemble de notre système de build](https://github.com/microsoft/genaiscript/pull/1594), décomposant la structure monolithique en paquets npm ESM et CommonJS consommables. Il ne s’agissait pas seulement d’une mise à niveau technique — cela a changé fondamentalement la façon dont les développeurs peuvent intégrer GenAIScript dans leurs projets.",
  "42BB983F604E9CAB4A09": "Introduisant `@genaiscript/runtime`",
  "B77B10B8BACD71824D07": "Le nouveau paquet [@genaiscript/runtime](https://www.npmjs.com/package/@genaiscript/runtime) fournit un [runtime](/genaiscript/reference/runtime) autonome de GenAIScript qui fonctionne indépendamment dans tout environnement Node.js — aucune interface CLI requise.",
  "D1036CD70202AA060B3C": "Autrefois, accéder aux fonctionnalités du runtime signifiait importer une exportation personnalisée `genaiscript/runtime` depuis le paquet `genaiscript`. Désormais, `@genaiscript/runtime` existe en tant que paquet dédié, conçu pour cette tâche, avec une API claire.",
  "29039C4370ABBB47182D": "**Se lancer est simple :**",
  "6B0D5F5E2C619532034E": "Le processus d’initialisation charge les analyseurs globaux et [les aides pour prompts inline](/genaiscript/reference/scripts/inline-prompts), préparant le runtime à l’exécution des scripts.",
  "0358B94D9C00B6E1996F": "**Note architecturale importante :** Les fonctions de prompt de niveau supérieur comme `$` et `def` restent exclusives au contexte CLI, car elles dépendent d’une initialisation spécifique au CLI. Lors de l’utilisation directe du runtime, vous travaillerez avec des prompts inline à la place :",
  "5C63569277B214C054E4": "Développement unifié : CLI et runtime Node.js",
  "3FDCBFBD907804507FD7": "Cette évolution architecturale ouvre une nouvelle capacité puissante : vous pouvez désormais écrire du code de bibliothèque GenAIScript qui fonctionne sans couture à la fois dans les environnements CLI et Node.js. Cette approche unifiée élimine la friction de la gestion d’implémentations séparées pour différents contextes de déploiement.",
  "7899421B9AC5E361A71D": "Accès API simplifié avec `@genaiscript/api`",
  "ED3B4F04AD9AB1731293": "Le package [@genaiscript/api](https://www.npmjs.com/package/@genaiscript/api) fournit un moteur léger pour Node.js optimisé pour [l’exécution programmatique](/genaiscript/reference/api) avec un minimum de dépendances en runtime. Ce package se concentre sur la performance et la simplicité, offrant juste ce dont vous avez besoin pour [exécuter](/genaiscript/reference/api) GenAIScript en environnement de production.",
  "1DC8001159D7C92D8442": "Grand merci à [@matthew-podwysocki](https://github.com/matthew-podwysocki) pour avoir investi son temps et ses efforts dans ce projet.",
  "5EC1E1AE81E27EC17E71": "visitez la ",
  "8A2D2A4EF4C550D13205": "outils et agents",
  "98F310D2299B3EDC414D": "Nous proposons également d'intégrer les nouvelles fonctionnalités dans ",
  "A98305C7C3D9F0F47FF0": "La disponibilité de nouveaux générateurs d'images comme OpenAI ",
  "D83EA968D95F57C69A0D": "Cela fonctionne aussi pour ",
  "9C8AF96D103D098B5CEB": "sketchnotes !",
  "FE43982FDBF607F5E691": "Zines",
  "C26F6A67FF93B53B3A6D": "« Zine »",
  "1BB4338129A28719E602": "utiliser ",
  "E5EEAC9406FE3B235782": "pour transformer le diff en une invite de génération d'image",
  "B9952DD8E148B28493BF": "pour générer l'image à partir de l'invite",
  "E7A6BFA23B653327B4CC": "un peu de plomberie pour téléverser l'image générée dans une branche et l'ajouter à la description de la pull request",
  "7FEA663841EF42129AB5": "« Sketchnotes »",
  "DD91F8C4473D3B2454EC": "Qu'en est-il d'autres styles ?",
  "9EF06132A502E7105A6D": "collage",
  "FC7B2FD06678641EA824": "fresque",
  "E5FF2D24933124F76768": "illustration éditoriale",
  "900DA055D40F85828E34": "À venir",
  "97C261C477A1FEF6F416": "Diapositives",
  "72F35164AF02EC6C0A76": "[agents-oct2024](https://microsoft.github.io/genaiscript/slides/agents-oct2024/)",
  "4D75311F5A2363E123E2": "[ast](https://microsoft.github.io/genaiscript/slides/ast/)",
  "2A631D466ADEC196B93D": "[default](https://microsoft.github.io/genaiscript/slides/default/)",
  "09284CC8B2E27F7A653F": "[eng-july2024](https://microsoft.github.io/genaiscript/slides/eng-july2024/)",
  "7B338A20B5BAB995F634": "[feb2025](https://microsoft.github.io/genaiscript/slides/feb2025/)",
  "17B3305A5FA39F79C2BE": "[garage-august2024](https://microsoft.github.io/genaiscript/slides/garage-august2024/)",
  "E37F6AA5BFB981DE4416": "[msr-eng-may2024](https://microsoft.github.io/genaiscript/slides/msr-eng-may2024/)",
  "11DD4B6D38FEB446BB46": "[networking-apr2024](https://microsoft.github.io/genaiscript/slides/networking-apr2024/)",
  "B5A2EFF51ADF4F8CBDA3": "[overview-june2024](https://microsoft.github.io/genaiscript/slides/overview-june2024/)",
  "D40882D62F2D27BDF87F": "[overview-may2024](https://microsoft.github.io/genaiscript/slides/overview-may2024/)",
  "0FA64E14DB2316533F90": "[pnw-plse-may2024](https://microsoft.github.io/genaiscript/slides/pnw-plse-may2024/)",
  "5B8C23C08F24E6E9D78D": "[seattlejs-jan2025](https://microsoft.github.io/genaiscript/slides/seattlejs-jan2025/)",
  "D794DBCFBE7EB17E293B": "[vs-aua](https://microsoft.github.io/genaiscript/slides/vs-aua/)",
  "865151339E9CA461386E": "Scripting AI génératif",
  "6A89F1D74698B313ED57": "GenAIScript, scripting pour l’IA générative.",
  "DEE8B8FC788C4480D211": "Assembler programmatique des prompts pour les LLMs en utilisant JavaScript. Orchestrer LLMs, outils et données dans un seul script.",
  "4DBC2E8ECD98662EC60E": "Boîte à outils JavaScript pour travailler avec les prompts",
  "27E396747753DD2C13C2": "Abstraction pour rendre cela simple et productif",
  "82E320C55E5ED558CCF1": "Intégration transparente avec Visual Studio Code ou ligne de commande flexible",
  "13F1A0DE1A2266168367": "Support intégré pour GitHub Copilot et GitHub Models, OpenAI, Azure OpenAI, Anthropic, et autres",
  "52F184AC84BE041266E9": "Bonjour le monde",
  "6D0AC784788FC370FE4F": "Supposez que vous souhaitez créer un script LLM qui génère un poème ‘bonjour le monde’. Vous pouvez écrire le script suivant :",
  "5201B05B5B93FD56C784": "La fonction `$` est une balise de gabarit qui crée un prompt. Le prompt est ensuite envoyé au LLM (que vous avez configuré), qui génère le poème.",
  "CD6C78DA9BA9AB21E800": "Rendons cela plus intéressant en ajoutant des fichiers, des données et une sortie structurée. Supposons que vous souhaitez inclure un fichier dans le prompt, puis sauvegarder la sortie dans un fichier. Vous pouvez écrire le script suivant :",
  "0E8771315AD7CFE6DFD2": "La fonction `def` inclut le contenu du fichier, et l’optimise si nécessaire pour le LLM cible. Le script GenAIScript analyse aussi la sortie du LLM\net extraira automatiquement le fichier `data.json`.",
  "016FAF920964EA8FD9B6": "Dernières nouvelles",
  "0B238AD189E7C22E9472": "Fonctionnalités",
  "9CDCC48790F10523C7BF": "GenAIScript apporte les outils essentiels de prompts pour LLM dans un environnement de scripting cohérent.",
  "5F8E5ECF2F63AD1FFF9F": "Glossaire",
  "1717190E8C5760A56346": "Un glossaire des termes utilisés dans le projet GenAI.",
  "87D6F4387CC922F61125": "Ce glossaire fournit des définitions pour les termes utilisés dans le projet.\nChaque terme est lié à sa section correspondante dans la documentation pour une référence facile.",
  "F7871E7F9F6920581706": "Ce glossaire est généré automatiquement à partir des fichiers sources.",
  "12F4EAB30A555CAC9B21": "Termes",
  "6318A2A5733EA575316B": "**À propos du mélange des fichiers et --vars** : Ordre des arguments CLI pour spécifier les fichiers et variables.",
  "5469136798AC938BD556": "**Drapeaux supplémentaires** : Drapeaux de clonage de dépôt : `--remote-branch <branche>` pour spécifier la branche, `--remote-force` pour forcer l'écrasement, `--remote-install` pour installer les dépendances après clonage.",
  "40E7649E26C88E53174B": "**Astro** : Astro est un générateur de sites statiques moderne pour construire des sites web rapides et optimisés utilisant n'importe quel framework.",
  "64DC7C32383399114EAF": "**Authentification** : Supporte les secrets via des variables d'environnement et l'authentification Microsoft Entra.",
  "1987A5106E1F0C2B3805": "**Azure AI Foundry** : Plateforme pour construire et déployer des modèles d'IA.",
  "BAEEF0722891A37873E2": "**Azure AI Inference** : [Azure AI Inference](/genaiscript/getting-started/configuration/)",
  "8E9275F2C48C1975C148": "**Azure AI Search** : Moteur de recherche hybride vecteur et mot-clé.",
  "3567B8480A9A80E1AF1C": "**Azure AI Serverless Models** : [Azure AI Serverless Models](/genaiscript/getting-started/configuration/)",
  "CB0BEF532DBF8BF138DB": "**Azure Content Safety** : Service pour détecter et filtrer les contenus nuisibles dans les applications.",
  "30CDE262C90BDC73125B": "**Azure OpenAI and AI services** : Permet à GenAIScript d'exécuter l'inférence de LLM dans Azure AI Foundry.",
  "BDAC096E00CCD7BCDF1B": "**Azure OpenAI Serverless** : [Azure OpenAI Serverless](/genaiscript/getting-started/configuration/)",
  "D0F112C35A4F9F87DE6A": "**Capacités** : Permet aux équipes, y compris les non-développeurs, de créer et déboguer des scripts JavaScript enrichis par l'IA appelant des LLMs et des modèles de base.",
  "6B8D105D5138CD30F9BD": "**Compilation des scripts** : Exécute le compilateur TypeScript pour vérifier les erreurs dans les scripts.",
  "D9932AA2D341685E878A": "**Résolution des fichiers de configuration** : Processus par lequel GenAIScript analyse et fusionne les paramètres des fichiers de configuration.",
  "A3EA48F6AD87BFCF8FFC": "**Configuration** : La CLI charge les secrets depuis les variables d'environnement ou un fichier `./.env`.",
  "26CE10DC29DC86508153": "**Créer un nouveau script** : Commande pour générer un nouveau fichier de script dans le dossier `genaisrc`.",
  "14C5112493D21237CFE2": "**Débogage** : Activez la catégorie debug dans la configuration pour voir plus d'informations sur la résolution de la configuration.",
  "4C531E6CEF6CB96FFE69": "**envFile** : Spécifie le fichier d'environnement à charger pour les secrets en tant que variables d'environnement.",
  "281DADD881DD2E8F909D": "**Modèles de base et LLMs** : GenAIScript supporte plusieurs LLMs et prévoit d'inclure d'autres modèles de base au-delà des modèles de langage.",
  "A011417C6FAC788E2DCB": "**GenAIScript** : GenAIScript est un langage de script qui fait des LLMs une partie à part entière du processus de scripting, permettant aux utilisateurs de créer, déboguer et déployer des scripts alimentés par LLM pour des tâches au-delà du code conventionnel.",
  "6D077EAC0C19807DE018": "**CLI GenAIScript** : Outil en ligne de commande `genaiscript` pour exécuter des scripts hors VS Code et [automatisation](/genaiscript/getting-started/automating-scripts).",
  "C2FD8907633045AD51A9": "**GPVM** : Système d'exécution pour GenAIScript intégrant le contexte dans les invites, appelant les LLMs spécifiés et extrayant les résultats.",
  "0C287BDED689F8494A9B": "**Scripts d'aide** : Entrées `package.json` garantissant la génération correcte des fichiers de définition TypeScript pour les scripts.",
  "52037323B67948D8C3CA": "**include** : Motif glob pour inclure des scripts supplémentaires et permettre le partage entre projets.",
  "1B9881D1626B8DCA47EC": "**Lancement** : Depuis la racine de l'espace de travail, exécutez `npx --yes genaiscript serve` et accédez à l'URL fournie (typiquement `http://127.0.0.1:8003/`).",
  "E5F1906F079A2EAB2DFD": "**Liste de la configuration des scripts** : Liste les scripts et les configurations de modèles pour le dépannage CI/CD.",
  "82391F31C84D53C80CD9": "**Liste des configurations de modèles** : Liste les scripts et configurations de modèles disponibles pour le dépannage CI/CD.",
  "4B4EBCD4D41E4CE4D9D1": "**Installation locale** : Pour éviter la lenteur de `npx`, installez localement avec `npm install -g genaiscript`.",
  "62213CEE27724F25738E": "**Markdown** : Markdown est un langage de balisage léger avec une syntaxe de formatage en texte brut utilisé pour la création de contenus, notamment la documentation et les applications web.",
  "D71025174D85F97CF1FC": "**modelAliases** : Permet des alias pour les noms de modèles dans la configuration GenAIScript.",
  "A99173AC6FCC0F50B7C8": "**modelEncodings** : Définit des encodages spécifiques aux modèles pour les LLMs.",
  "3B49DEA1943D6FF84051": "**Sans installation (npx)** : Exécutez la CLI GenAIScript avec npx sans installation préalable.",
  "CB8338411DD6FE9164AD": "**API d'exécution Node.JS** : API pour exécuter GenAIScript dans des threads de travail Node isolés, évitant la pollution du scope global.",
  "DDF594A04DB0E2D5F59E": "**Playground** : Application web auto-hébergée pour exécuter des scripts GenAIScript via une interface utilisateur conviviale, faisant le lien entre la CLI et les intégrations VS Code.",
  "9B324A9E378310365BCE": "**Prérequis** : Exigences pour utiliser la CLI GenAIScript, comme l'installation de Node.JS.",
  "45F4825144C3B783CB72": "**Dépôt distant** : Le Playground peut exécuter des scripts à partir d'un dépôt distant en utilisant les secrets `.env` actuels.",
  "101F1FA8107CC34CD670": "**run** : La fonction `run` encapsule la commande [CLI run](/genaiscript/reference/cli/run) pour exécuter des scripts.",
  "4E4241D5AEAAD4AE8104": "**Exécuter un script** : Exécute un script en diffusant la sortie LLM vers stdout depuis la racine de l'espace de travail.",
  "FEB9778AE3827C25BF89": "**Exécution des scripts depuis un dépôt distant** : Utilisez `--remote` pour charger et exécuter des scripts depuis un dépôt distant via un clonage superficiel.",
  "4C73D5E923898C12032F": "**Exemples** : Les scripts d'exemple sont pleinement fonctionnels et prêts à l'usage, mais peuvent être modifiés ou adaptés selon vos besoins.",
  "23246BD7A1EDB25E3890": "**Fichiers de script** : GenAIScript identifie tout fichier `*.genai.mjs`, `*.genai.js` ou `*.genai.mts` dans votre espace de travail comme script, lesquels peuvent être placés n'importe où.",
  "BCF64598FDEF4717CC35": "**Starlight** : Starlight est un projet pour construire et rédiger des sites web de documentation utilisant Astro et des principes de design spécifiques.",
  "0205B46505E137F8BA5C": "**Comportement du système** : Cadre pour intégrer l'exécution de code et les invocations de modèles de base/LLM, permettant aux utilisateurs de spécifier le contexte LLM, d'invoquer les modèles et d'analyser les résultats.",
  "D7864550CCD1B4156EA7": "**templates d'invite système** : Les fichiers `system.*.genai.mjs` sont des [templates d'invite système](/genaiscript/reference/scripts/system), cachés par défaut.",
  "233094F37CD4E8E3EB95": "**system.*.genai.mjs** : Les fichiers `system.*.genai.mjs` sont des [templates d'invite système](/genaiscript/reference/scripts/system), non listés par défaut.",
  "CC2B65B63D5B26BAE178": "**Note de transparence** : Informations pour aider les utilisateurs à comprendre les capacités et limites de GenAIScript.",
  "05C14A33FFFF79BE1471": "**Utilisation de la CLI comme API Node.JS** : Importez et utilisez la CLI GenAIScript comme une API dans Node.JS.",
  "F4304C426AA75375EADF": "**Recherche vectorielle** : [Recherche vectorielle](/genaiscript/reference/scripts/vector-search/)",
  "92638A5457CBAC9C11CE": "**vision_script** : Fichiers de script (`*.genai.mjs` ou `*.genai.mts`) utilisant le prompting LLM pour la construction d'invites.",
  "4AA9C51F845221327F25": "**Extension Visual Studio Code** : Plugin pour VS Code pour créer, déboguer et déployer des scripts GenAIScript.",
  "76154AFB0A9C35F8FB6F": "**Aperçu Markdown de Visual Studio Code** : Utilise l'aperçu Markdown intégré de VS Code pour la sortie LLM et la trace, limitant l'affichage de certains contenus.",
  "E6ABD6B59BC411EA3873": "**Marketplace Visual Studio Code** : Le [Marketplace Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=genaiscript.genaiscript-vscode) fournit la dernière version stable de l'[extension GenAIScript pour VS Code](https://marketplace.visualstudio.com/items?itemName=genaiscript.genaiscript-vscode).",
  "5144FB5328321FDE0A96": "**Confiance de l'espace de travail Visual Studio Code** : Désactive l'extension en [mode restreint](https://code.visualstudio.com/docs/editor/workspace-trust).",
  "884EE88BAEE92D6F96C0": "**Extension VS Code GenAIScript** : Extension VS Code pour créer, éditer, exécuter et déboguer des scripts GenAIScript.",
  "49A7AAA5BFA7B86EEB41": "**WarningCode** : Composant pour afficher des avertissements de sécurité et des solutions dans la documentation.",
  "A807523C1ACB3A4A560F": "**Travail derrière un proxy** : Instructions pour utiliser la CLI dans des environnements avec un proxy HTTP.",
  "46D356C33075CBEC12DC": "FAQ",
  "AC5545C12F4186056B50": "Trouvez des réponses aux questions fréquentes concernant la génération de scripts par IA, ses utilisations, ses performances et les meilleures pratiques pour une application efficace.",
  "843275CE9DCFACF0FBC8": "Prise en main",
  "4A258A5FC82AACCE51E3": "**Qu'est-ce que GenAIScript et comment cela fonctionne-t-il ?**  \nGenAIScript est un framework qui permet aux utilisateurs de créer des scripts enrichis par l'IA pour automatiser des tâches. Il utilise des commandes simples et s'intègre avec des modèles d'IA pour exécuter des tâches basées sur des invites écrites par l'utilisateur.",
  "30E8894CEF8701981745": "**Qui peut utiliser GenAIScript et faut-il être développeur ?**  \nTout le monde peut utiliser GenAIScript, y compris les non-développeurs. Il est conçu pour être convivial, mais une compréhension de base du scripting ou de la programmation peut être utile.",
  "4844F7E74C9C80C7082E": "**Quelles sont les prérequis pour utiliser GenAIScript ?**  \nVous devez avoir VS Code installé pour utiliser l'extension GenAIScript, et une certaine familiarité avec les concepts de programmation est bénéfique mais pas obligatoire.",
  "770F8C64DA8D828CA374": "**Comment installer le framework GenAIScript et son extension VS Code ?**  \nLes étapes d'installation spécifiques sont documentées ici : [Installation](/genaiscript/getting-started/installation)",
  "6AE69B39136E9E38E276": "**Faut-il installer Node.JS ?**  \nOui. Pour l’installer, suivez les [instructions d'installation](/genaiscript/reference/cli/).",
  "8C184E9A475B5E7037E9": "**Puis-je utiliser GenAIScript dans des IDE autres que VS Code ?**  \nActuellement, GenAIScript est intégré à VS Code, mais il peut être écrit dans n'importe quel IDE. L'extension VS Code fournit cependant un support supplémentaire pour la création et le débogage des scripts. Bien que non entièrement testé, vous pouvez utiliser GenAIScript dans des variantes de VS Code comme Cursor.",
  "FF590B59CCDA0EBC9C54": "**Que sont les modèles foundation et les LLM dans le contexte de GenAIScript ?**  \nLes modèles foundation et les LLM (Modèles de Langage Large) sont des modèles d'IA avec lesquels GenAIScript peut interagir pour exécuter des tâches telles que la génération de texte ou le traitement d'informations.",
  "63D20D04A533E8D55FA9": "**Comment écrire mon premier GenAIScript ?**  \nCommencez par apprendre les bases de JavaScript et du framework GenAIScript, puis utilisez l'extension VS Code pour créer un script qui définit la tâche, appelle le LLM et traite la sortie. Plus d'informations sont disponibles ici : [Prise en main](/genaiscript/getting-started)",
  "C3E5105D341D8F37FAA7": "Utilisation de GenAIScript",
  "1C2407AD2E4E35F55689": "**Comment déboguer un GenAIScript dans VS Code ?**  \nUtilisez l'extension GenAIScript dans VS Code, qui fournit des outils pour exécuter, déboguer et tracer l'exécution de votre script. Les instructions de débogage sont ici : [Débogage](/genaiscript/getting-started/debugging-scripts)",
  "01698C0BCDA50B9EAC3D": "**Quelles sont les meilleures pratiques pour rédiger des invites efficaces dans GenAIScript ?**  \nVoir [Meilleures pratiques](/genaiscript/getting-started/best-practices)",
  "22C20EE002CE61050A09": "**Comment intégrer des appels à plusieurs modèles LLM dans un seul GenAIScript ?**  \nLe framework vous permet de paramétrer des appels à différents modèles, vous pouvez donc inclure plusieurs invocations de modèles dans votre script et les gérer en conséquence à l'aide de la fonction runPrompt documentée ici : [Invites en ligne](/genaiscript/reference/scripts/inline-prompts)",
  "FAD8176805CC40A1F843": "**GenAIScript peut-il générer des sorties dans des formats autres que JSON ?**  \nOui, GenAIScript prend en charge plusieurs formats de sortie, y compris les modifications de fichiers, JSON et des schémas définis par l'utilisateur. Plus d'informations ici : [Schémas](/genaiscript/reference/scripts/schemas)",
  "0FFDF63272D9506419F9": "**Comment exécuter un GenAIScript depuis la ligne de commande ?**  \nUne fois que vous avez empaqueté un GenAIScript, vous pouvez l’exécuter depuis la ligne de commande comme n'importe quel autre script. Plus d'informations ici : [Ligne de commande](/genaiscript/getting-started/automating-scripts)",
  "BB26A8B810E37B8AEB11": "**Les GenAIScripts peuvent-ils prendre des entrées de fichiers dans plusieurs formats, tels que .pdf ou .docx ?**  \nOui, le framework GenAIScript prend en charge en natif la lecture des formats .pdf et .docx. Consultez les pages de documentation [PDF](/genaiscript/reference/scripts/pdf) et [DOCX](/genaiscript/reference/scripts/docx) pour plus d'informations.",
  "C684033A02C9960C2264": "Fonctionnalités avancées",
  "F7A8C16B8025B44CEF58": "**Comment utiliser GenAIScript pour automatiser la traduction de documents ?**  \nUne de nos études de cas illustre l'utilisation de GenAIScript pour traduire des fragments de documents entre langues : [Étude de cas Traduction](/genaiscript/case-studies/documentation-translations)",
  "E2B659D8AE2DDFD179EC": "**Puis-je utiliser GenAIScript pour résumer des documents ou créer des dialogues à partir de monologues ?**  \nOui, les LLM sont performants pour résumer et peuvent être utilisés dans GenAIScript pour résumer des documents ou convertir des monologues en dialogues.",
  "B17EE4D0EAD7F5E29BA1": "Dépannage",
  "365D6C72A454CC8B4829": "**Que faire en cas d'erreurs lors de l'exécution d'un GenAIScript ?**  \nVérifiez les messages d'erreur, consultez la documentation et utilisez les outils de débogage de l'extension VS Code pour identifier et résoudre les problèmes.",
  "2B9AC27637BEFE9301B9": "**Comment résoudre les problèmes liés à l'analyse des sorties LLM dans GenAIScript ?**  \nRevoyez l'invite et la sortie, assurez-vous que votre script gère correctement la réponse du LLM, et ajustez votre logique d'analyse si nécessaire.",
  "BFF5D10D4A3BC998ED19": "**Où trouver des exemples de GenAIScript pour mieux comprendre ses capacités ?**  \nVisitez le dépôt GitHub de GenAIScript pour des exemples et la documentation. [Documentation GenAIScript](/genaiscript/)",
  "2DDAD2EAE6B75A61B5C2": "Sécurité et IA responsable",
  "8F9D0A287841E43EBAEC": "**Quels sont les usages non intentionnels de GenAIScript et comment les éviter ?**  \nLes usages non intentionnels incluent toute application malveillante. Pour les éviter, suivez les pratiques d'IA responsable et utilisez les modèles recommandés dotés de fonctionnalités de sécurité.",
  "7E99DBC8618A947E6322": "**Comment GenAIScript s'aligne-t-il avec les pratiques d'IA responsable ?**  \nGenAIScript encourage l'usage de modèles avec des atténuations robustes pour l'IA responsable et fournit des conseils pour un usage sécurisé et éthique.  \nPour plus d'informations, voir la [Note de transparence](/genaiscript/reference/transparency-note)",
  "51CCC5A5E55AD72D7449": "**Quels modèles foundation et LLM sont recommandés pour une utilisation avec GenAIScript ?**  \nDes services comme Azure Open AI avec des fonctionnalités mises à jour de sécurité et d'IA responsable sont recommandés. GenAIScript peut aussi être utilisé avec des LLM open source existants.",
  "7C8163B93556F9D7B027": "**Fournissez-vous des invites système pour se prémunir contre des problèmes courants comme les contenus nuisibles ou le jailbreak ?**  \nOui, GenAIScript inclut des invites système pour se protéger contre les contenus nuisibles et le jailbreak. Pour plus d'informations, voir la documentation [Sécurité du contenu](/genaiscript/reference/scripts/content-safety).",
  "9E8EB26F7A2D96F94FEA": "**Supportez-vous les services Azure Content ?**  \nOui, GenAIScript fournit des API pour interagir avec les services Azure Content Safety. Pour plus d'informations, voir la documentation [Sécurité du contenu](/genaiscript/reference/scripts/content-safety).",
  "3D19F0305CED9EE50661": "Communauté et support",
  "21CFD68EBDD5E49F3FC4": "**Où trouver la communauté GenAIScript pour discussions et support ?**  \nLe dépôt GitHub de GenAIScript est un bon point de départ pour les discussions communautaires et le support. [GenAIScript GitHub](https://github.com/microsoft/genaiscript/)",
  "00FA642BA1DB6F7D5EDE": "**Comment puis-je contribuer au projet GenAIScript ?**  \nConsultez le dépôt pour les directives de contribution et envisagez de fournir des retours, de soumettre des issues, ou de contribuer du code. Visitez la page [Contribuer](https://github.com/microsoft/genaiscript/blob/main/CONTRIBUTING.md) pour plus d'informations.",
  "3B119E2474BADB6B5064": "**Qui contacter pour des retours ou questions sur GenAIScript ?**  \nVous pouvez envoyer un courriel aux contacts fournis dans le document [Note de transparence](/genaiscript/reference/transparency-note/) pour des retours ou questions.",
  "60EAC2A7A5CB0F00E1C0": "Mises à jour et feuille de route",
  "BD98ADD9904297C1AD31": "**À quelle fréquence GenAIScript est-il mis à jour et comment rester informé des nouveautés ?**  \nVous pouvez suivre le dépôt GitHub pour les mises à jour et annonces.",
  "F41ADAAF817ED99843F2": "**Existe-t-il une feuille de route pour le développement de GenAIScript ?**  \nLe dépôt GitHub fournit des informations sur les plans de développement futurs.",
  "F1B814FF17256FD2F2CB": "Guide du développeur",
  "630D6F8307D7CD18F10A": "Directives de contribution pour la création et l’ajout de fonctionnalités à GenAIScript",
  "95A4C376857E74A2F558": "GenAIScript accueille les contributions de la communauté. Ce document fournit des directives pour la configuration de l’environnement de développement, la compilation du projet, et la contribution à la base de code.",
  "87E14EBBC78C79807C1E": "Vous pouvez ouvrir ce dépôt dans GitHub CodeSpace/Docker pour obtenir l’environnement de compilation nécessaire.",
  "FF076ECB0B478DCCE6CB": "[![Ouvrir dans GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://github.com/codespaces/new?hide_repo_select=true&ref=main&repo=679784368)",
  "BBF0BF56F5A7C9E8CCD1": "Allez sur https://github.com/microsoft/genaiscript",
  "CC2EBFA731E3FE27B1FD": "Cliquez sur **Code**",
  "5668DDBA894A18760ACB": "Sélectionnez Créer un nouveau Codespace",
  "CF2F8FC87F298079CB9C": "Sélectionnez la branche **dev**",
  "21F28863CCBE327A24EC": "Configuration manuelle",
  "2E5D52208E5952A60337": "Installez [Node.JS LTS](https://docs.npmjs.com/downloading-and-installing-node-js-and-npm)",
  "A92F4419B28079A5A9D0": "Exécutez yarn",
  "089F0776AED3FFCCDC0E": "Compilation",
  "037485000331EAC2B92F": "Vous pouvez effectuer une compilation complète avec esbuild.",
  "DA7D290BB04FCD00E1B6": "ou seulement l'interface en ligne de commande (cli)",
  "A5986A52C8EE65210BE0": "Demandes de tirage (Pull Requests)",
  "12B793FB0A41567E2E04": "Vous devez créer des pull requests contre la branche `dev`. La branche `main` est réservée aux versions.\nLa branche `dev` est la branche principale de développement. C’est là que toutes les nouvelles fonctionnalités et corrections de bugs sont fusionnées avant d’être publiées.",
  "E416DF706BD8FB0706F0": "Lors de la création d'une pull request, veuillez vous assurer que votre code respecte les directives suivantes :",
  "C7F6256EDB96222BE6EA": "Respectez le [Code de conduite open source Microsoft](https://opensource.microsoft.com/codeofconduct/).",
  "F7500CDF224770B66BC9": "Assurez-vous que votre code est bien documenté et respecte le style de codage du projet.",
  "F1B3040221CDFFAA947D": "Si possible, ajoutez des tests pour toutes nouvelles fonctionnalités ou corrections de bugs.",
  "D40F83AC2ECB2C79614A": "Exécution de scripts locaux",
  "0289A2866C0237C7712A": "Pour exécuter un script avec l’interface de commande localement compilée,",
  "EDB43FD1BF1C0241D35D": "Pour exécuter un script d’exemple dans le dossier `packages/sample` :",
  "6E53C3BFD0EF1B40D35F": "Dans ce cas, le fichier `packages/sample/.env` sera utilisé pour les variables d'environnement et l’espace de travail sera raciné à `packages/sample`.",
  "EF9E1533DE30B1651910": "Débogage des scripts locaux",
  "A083DF8FDE6101F37D82": "Ouvrez un `Terminal de débogage JavaScript` et lancez le script avec",
  "FB7CE01B7DBCCB786F6E": "ou pour les exemples",
  "460D439586BF1BD1F95C": "Journalisation",
  "4E881F773597B546132D": "GenAIScript utilise la bibliothèque [debug](https://www.npmjs.com/package/debug) pour la journalisation. Vous pouvez activer la journalisation en définissant la variable d’environnement `DEBUG` à `genai:*`.",
  "E303D840BBCA6ED5CCA8": "Visionneuse web",
  "414752E8C319F0260781": "L’application web (React 19) est conçue pour fonctionner à la fois comme un panneau Visual Studio Code et comme un visualiseur autonome (**playground**). Pour des tests, le mode autonome est le plus simple.",
  "E04F92AC8F582323B3D7": "React 19, avec très peu de dépendances actuellement",
  "F3BD4393032CFBF77BC7": "react-markdown + quelques plugins pour interpréter le markdown",
  "4199B34737C3D49CDD1D": "[vscode-elements](https://vscode-elements.github.io/) est le système de design que nous utilisons car il imite l’apparence de vscode.",
  "BAB27BDC923B1BD2AFC6": "Utilisez la commande suivante pour démarrer le serveur web local :",
  "FEDB5E1ABF01F2C3D012": "Il démarrera un serveur local et reconstruira le client react lors des modifications de fichiers. **Il ne reconstruira/niera pas le serveur lors des modifications.**\nIl n’y a **pas** de rechargement à chaud, vous devez actualiser le navigateur. Si un état doit être sérialisé, nous devrions commencer à l’ajouter au hash.",
  "158732D85D626ACEF256": "Développement de l'extension Visual Studio Code",
  "29D66018F509C2BC7FC7": "Travailler sur VSCode implique de lancer le débogueur principal du projet, qui ouvre une seconde instance de VSCode avec l’extension GenAIScript.",
  "FC1BC670205E86B6AEC7": "Vous pouvez placer des points d’arrêt dans les fichiers TypeScript de GenAIScript et ils seront pris en compte.",
  "F6E39E11356FA4327933": "désinstallez l’extension officielle GenAIScript sinon elle entrera en conflit avec celle compilée localement",
  "EC935A7FB4B2BA1C7128": "ouvrez la vue `Débogage` dans Vs Code",
  "7E04B6FBD2B8C1D6E53A": "sélectionnez la configuration de débogage **Samples** et cliquez sur **Exécuter**",
  "4863D877F401F64186B7": "N’oubliez pas que le débogueur est seulement attaché à l’extension ; pas au serveur GenAIScript.",
  "9ADE11D48FDB48A1E631": "Précautions",
  "E24492758CA17B145314": "Le lancement du débogueur échoue parfois pour des raisons encore inconnues. Pour contourner ce problème, ouvrez un terminal et exécutez `pnpm build` une fois. Puis relancez le débogueur.",
  "8258A219FCD2E294694A": "Documentation",
  "F320B10F57C55E6CA94F": "Exécutez `docs` pour lancer le site de documentation.",
  "1B569AE7D640ABB790E2": "Exécutez cette commande pour détecter les liens brisés",
  "02CE0336B68E93E6E184": "Slides",
  "5C0FDDF9C00F69148540": "Tous les fichiers `slides/*slides.md` seront compilés et déployés lors de la compilation.",
  "5AB59EFDB3AAC8C53933": "exécutez `slides` pour lancer la présentation (ajoutez le nom du fichier ou il prendra `slides.md` par défaut)",
  "85EFB8E5E40108BC5C22": "En savoir plus sur Slidev dans la [documentation](https://sli.dev/). Pour les diagrammes, utilisez [mermaid](https://sli.dev/guide/syntax#diagrams) ou draw.io, tldraw.",
  "E1DAD92B2187A6693D00": "GenAIScripts",
  "0C946F0A0B40993ED64D": "Commettre avec un message généré automatiquement",
  "431BFC37B35845B87F89": "Ajouter la documentation aux nouvelles APIs ou mises à jour",
  "70BB7BE1AEC1B9576E4E": "Générer des images pour les articles de blog",
  "AFD79909EF3A6F38E8AE": "Emballage",
  "EE27EF75FB0C91B37BC0": "Pour compiler et empaqueter l’extension Visual Studio Code, exécutez le script `package`.",
  "E1DC631E271E25B99715": "Vous trouverez les fichiers du paquet compilé, `genaiscript.vsix`,\ndans le dossier `packages/vscode`.",
  "594220B0AE51042236AA": "Publication",
  "C42910331C52A06A5DD4": "Exécutez le script `release`.",
  "AA7180BC65C6CF212799": "Les pages GitHub sont automatiquement mises à jour lors d’une nouvelle version ; ou via un déclenchement manuel sur\nhttps://github.com/microsoft/genaiscript/actions/workflows/docs.yml .",
  "7E88B2E7D4A36175BE0A": "Contribution",
  "B7FD38B9C24040751616": "Ce projet accepte les contributions et suggestions. La plupart des contributions exigent que vous acceptiez un Accord de Licence de Contributeur (CLA) déclarant que vous avez le droit, et accordez effectivement, les droits pour utiliser votre contribution. Pour plus de détails, visitez https://cla.opensource.microsoft.com.",
  "00429E6E47D14CFDAC7A": "Lorsque vous soumettez une pull request, un bot CLA déterminera automatiquement si vous devez fournir un CLA et décorera la PR en conséquence (par ex., vérification de statut, commentaire). Suivez simplement les instructions fournies par le bot. Vous ne devrez faire cela qu’une seule fois sur tous les dépôts utilisant notre CLA.",
  "49121ED838518EAE5F02": "Ce projet a adopté le [Code de conduite open source Microsoft](https://opensource.microsoft.com/codeofconduct/).\nPour plus d’informations, consultez la [FAQ du Code de conduite](https://opensource.microsoft.com/codeofconduct/faq/) ou contactez [opencode@microsoft.com](mailto:opencode@microsoft.com) pour toute question ou remarque.",
  "7E1ED1998425633DA496": "Recherche et transformation",
  "E84E573B66299FEAC8A1": "Recherche d'un motif dans des fichiers et application d'une transformation LLM sur la correspondance",
  "449F76F2B7D55B361CD4": "La fonction Rechercher et Remplacer est un outil puissant de la boîte à outils du développeur qui peut vous faire gagner du temps et des efforts...\nsi vous savez formuler la bonne expression régulière.",
  "95EC695D1F202C6657DA": "**Rechercher et Transformer** est une variante du même concept,\nmais nous utilisons un LLM pour effectuer la transformation au lieu d'un simple remplacement de chaîne.",
  "B2C741BB432EF5A4E7A1": "👩‍💻 Comprendre le code du script",
  "433C494313E90B0929A8": "Le script commence par définir son but et ses paramètres en utilisant la fonction `script`. Ici, nous définissons le titre, la description et les trois paramètres dont le script aura besoin : `glob` pour spécifier les fichiers, `pattern` pour le texte à rechercher, et `transform` pour la transformation souhaitée.",
  "C76BB9AD63708C0C9A7F": "Extraction et validation des paramètres",
  "3C9B173722119D796AA7": "Ensuite, nous extrayons les paramètres `pattern`, `glob` et `transform` des variables d’environnement et les validons. Si `pattern` ou `transform` sont manquants, le script annulera l'exécution. Nous compilons ensuite `pattern` en un objet expression régulière pour une utilisation ultérieure.",
  "242A2380AA3E80B613FC": "Recherche des fichiers et des correspondances",
  "5470B7FE00762AE04867": "Ici, nous utilisons la fonction `grep` de l’API `workspace` pour rechercher les fichiers qui correspondent au motif `glob` et contiennent le motif regex.",
  "9378A408BC37DE19680F": "Transformation des correspondances",
  "1D5C2DCB52601D8BC03C": "Nous initialisons un objet appelé `patches` pour stocker les transformations. Ensuite, nous parcourons chaque fichier, lisons son contenu et ignorons les fichiers binaires. Pour chaque correspondance trouvée dans le contenu du fichier, nous vérifions si une transformation a déjà été calculée pour cette correspondance afin d’éviter un travail redondant.",
  "8DEAD32096FBA3FFE593": "Génération des invites pour les transformations",
  "E5DF3942036281B061B6": "Pour chaque correspondance unique, nous générons une invite avec la fonction `runPrompt`. Dans l’invite, nous définissons la tâche et le contexte pour la transformation, en précisant que le texte transformé doit être renvoyé sans guillemets. Nous définissons aussi le texte correspondant et la transformation à appliquer.",
  "CAB3E243E929013C5177": "Application de la transformation",
  "8012F1661F13734F8A35": "Nous extrayons ensuite le texte transformé du résultat de l’invite et le stockons dans l’objet `patches`. Enfin, nous appliquons les transformations au contenu du fichier en utilisant `String.prototype.replace`.",
  "546370CC8344D332CB0B": "Sauvegarde des modifications",
  "73FBB696375BF841F155": "Si le contenu du fichier a changé après l’application des transformations, nous enregistrons le contenu mis à jour dans le fichier.",
  "68F8DA31D95E6AAD4E24": "Pour exécuter ce script, vous aurez besoin de l’interface en ligne de commande GenAIScript. Consultez le [guide d'installation](https://microsoft.github.io/genaiscript/getting-started/installation) si vous devez le configurer. Une fois la CLI installée, lancez le script en exécutant :",
  "CADCF9F2ECB7891A4B9C": "Source complète ([GitHub](https://github.com/microsoft/genaiscript/blob/main/packages/sample/genaisrc/samples/st.genai.mts))",
  "074E9C095C5A867DF408": "Sécurité du contenu",
  "56371F0D52C2EB7A0D2F": "Les mesures suivantes sont prises pour garantir la sécurité du contenu généré.",
  "D47D5900C4B17F311EA4": "Ce script inclut des invites système pour empêcher les injections de prompt et la génération de contenu nuisible.",
  "6F3639466CBE0C4DAF8E": "[system.safety_jailbreak](/genaiscript/reference/scripts/system#systemsafety_jailbreak)",
  "020194A679781FB07F5D": "[system.safety_harmful_content](/genaiscript/reference/scripts/system#systemsafety_harmful_content)",
  "686A43EAA70B14412918": "La description générée est sauvegardée dans un fichier à un chemin spécifique, ce qui permet une revue manuelle avant de valider les modifications.",
  "E57ADEF62E9C79372FBE": "Des mesures supplémentaires pour renforcer la sécurité incluent l’exécution [d’un modèle avec un filtre de sécurité](https://learn.microsoft.com/en-us/azure/ai-services/openai/concepts/content-filter?tabs=warning%2Cuser-prompt%2Cpython-new)\nou la validation du message via un [service de sécurité de contenu](/genaiscript/reference/scripts/content-safety).",
  "B9F7B462FE1BF8660837": "Consultez la [Note de transparence](/genaiscript/reference/transparency-note/) pour plus d’informations sur la sécurité du contenu.",
  "C0EEB838381F7B277B98": "Checker orthographique",
  "B71400A4E7095076C617": "Revue de la documentation pour l’orthographe et la grammaire",
  "59B14333602602390663": "Cet exemple montre la mise à jour de fichiers et le push d’un commit avec les modifications\ndans une action GitHub utilisant GitHub Models.",
  "18EDCB6097B619D50E86": "Ajouter le script",
  "8FD1D02542FFC7914791": "Ouvrez votre dépôt GitHub et lancez une nouvelle pull request.",
  "4CD6E247422587DB431D": "Ajoutez le script suivant à votre dépôt sous le nom `sc.genai.mts` dans le dossier `genaisrc`.",
  "0E4E335296372A0F0E1A": "Lancez le [CLI GenAIScript](/genaiscript/reference/cli/) pour ajouter les fichiers de définition de type et corriger les erreurs de syntaxe dans l’éditeur (optionnel).",
  "339A848D886A42FA3468": "Le script collecte la liste des fichiers modifiés dans le dernier commit et ne conserve que ceux en `.md` et `.mdx`.\nIl exécute ensuite une invite pour chaque fichier, demandant au LLM de corriger les erreurs d’orthographe et de grammaire tout en conservant le contenu.",
  "1F868AE239B929425EFE": "L’invite inclut des instructions pour éviter de modifier le frontmatter, les régions de code, les URLs et le code TypeScript inline dans les fichiers `.mdx`.\nLe script utilise la fonction `runPrompt` pour exécuter l’invite et gérer la réponse.\nLa réponse est ensuite écrite dans le fichier si des modifications sont apportées.\nLa section `system` définit également les invites système à utiliser dans le script.",
  "6EEF0E91C6963B107FF8": "Run the script locally",
  "94F79B84E162DFFB095E": "Vous pouvez exécuter le script et ajuster l’invocation selon vos besoins.\nVous pouvez utiliser l’extension Visual Studio Code de GenAIScript ou le CLI.",
  "9200EB51A34EDEFB5D07": "Vous verrez une sortie similaire à ce qui suit. Dans la sortie, vous trouverez des liens vers les rapports d’exécution (fichiers markdown),\ndes informations sur le modèle, un aperçu des messages et l’utilisation des tokens.",
  "472FF72255FECFF2C07B": "Ouvrez les rapports `trace` ou `output` dans votre visualiseur Markdown préféré pour inspecter les résultats. Cette étape du développement\nest entièrement locale, c’est l’occasion d’affiner la sollicitation.",
  "EB6B2D99109D9966C4EA": "Consultez la [Note de transparence](/genaiscript/reference/transparency-note/) pour plus d’informations sur la sécurité du contenu. ",
  "42A4FB78127B866F9FCA": "Relecteur de Pull Request",
  "70AE995DC8261FFAB078": "Examiner les fichiers ou modifications actuels",
  "3544CC14DBD0010C3B61": "L'exemple suivant montre un script qui analyse les modifications dans une pull request et publie les commentaires sur GitHub.\nNous développerons le script localement puis créerons une action GitHub pour l'exécuter automatiquement.",
  "F602563BD4A129F4452D": "Ajouter le script",
  "78E0D3D6C683191545D9": "Ajoutez le script suivant à votre dépôt sous le nom `genaisrc/prr.genai.mts`.",
  "02E846BF148A74D4B7B4": "exécutez la ",
  "8077B7FB227133870795": "GenAIScript cli",
  "A8ABBB75C869FA43B061": "Le script commence par une section de métadonnées (`script({ ... })`) qui définit le titre, la description et les options de sécurité système.\nLe script utilise ensuite l'outil `git` pour obtenir la différence (diff) de la pull request et la stocke dans la variable `GIT_DIFF`.",
  "08DC0247A84CE08B4BA6": "Le script utilise ensuite le littéral de gabarit `$` pour générer un rapport basé sur la différence. Le rapport inclut les meilleures pratiques pour le langage de programmation de chaque fichier, et il est important d'analyser tout le code.\nLe script comprend également une note recommandant d'utiliser des outils pour lire le contenu complet des fichiers afin d'obtenir plus de contexte et d'éviter de signaler des avertissements.",
  "03692C83844F2081C72C": "Exécuter le script localement",
  "1EF22E7CFE238CE15098": "Puisque vous êtes déjà dans une pull request, vous pouvez exécuter le script et ajuster les requêtes selon vos besoins.\nVous pouvez utiliser l'extension GenAIScript pour Visual Studio Code ou utiliser la CLI.",
  "4449997D8C0A3269514B": "Rendez-le Agentique",
  "C5031983F80870DFB419": "GenAIScript fournit plusieurs agents intégrés, y compris un agent pour le système de fichiers et un agent git.\nCela peut être utile pour que le LLM lise les fichiers dans la pull request et les analyse.",
  "5EFA3315464D91755389": "Il existe essentiellement deux niveaux d'agentivité que vous pouvez atteindre avec GenAIScript :",
  "A65348D7A2D2F7C646F0": "ajoutez la [fs_read_file](/genaiscript/reference/scripts/system/#systemfs_read_file) pour lire les fichiers dans le script.",
  "8B5F2AFC4590DDA300AC": "ajoutez l'[agent du système de fichiers](/genaiscript/reference/scripts/system/#systemagent_fs) qui peut répondre à des requêtes plus complexes au prix de tokens supplémentaires.",
  "8932E7DB7128D4D9E19E": "Automatiser avec GitHub Actions",
  "042C440F5D6F880E6B3C": "En utilisant [GitHub Actions](https://docs.github.com/en/actions) et [GitHub Models](https://docs.github.com/en/github-models),\nvous pouvez automatiser l'exécution du script et la création des commentaires.",
  "B26693969C9C810B6AF9": "Ajoutez le workflow suivant dans votre dépôt GitHub.",
  "DA24ECAE8BA3A49148FA": "La ligne de commande utilise deux options spéciales pour générer des commentaires et des revues de pull request :",
  "1D4320ED4A7E1D31BA53": "`--pull-request-reviews` pour générer des commentaires de revue de pull request à partir de chaque annotation,",
  "34DB9A65B0BAF572CFD9": "`--pull-request-comment` pour générer un commentaire global pour la pull request à partir de la sortie.",
  "6A6CDB2521EEF690675D": "Validez les modifications, créez une nouvelle pull request et commencez à tester le workflow en demandant une revue ou en déclenchant l’événement `ready_for_review`.",
  "9E43D8437AA277927955": "Des mesures supplémentaires pour renforcer la sécurité consisteraient à utiliser [un modèle avec un filtre de sécurité](https://learn.microsoft.com/en-us/azure/ai-services/openai/concepts/content-filter?tabs=warning%2Cuser-prompt%2Cpython-new)\nou à valider le message avec un [service de sécurité du contenu](/genaiscript/reference/scripts/content-safety).",
  "3BBFE9768127CB66E572": "Descripteur de Pull Request",
  "D37FF757DB8BEA53C895": "Générer une description pour une pull request",
  "15288175C90A981C12BA": "L'exemple suivant montre un script qui génère une description des modifications dans une pull request.\nNous allons développer le script localement puis créer une GitHub Action pour l'exécuter automatiquement.",
  "94402248EF4442A6222D": "**Créez une nouvelle branche** dans votre dépôt.",
  "529F78E6BB0EB3FF0DEA": "Ajoutez le script suivant à votre dépôt sous le nom `prd.genai.mts` dans le dossier `.genaisrc`.",
  "DB076059530CD0AB03EF": "outil git pour obtenir le diff de la pull request et le stocke dans la variable ",
  "31E92C2D2C7B6A831E1C": "Le script utilise ensuite le littéral de modèle `$` pour générer un rapport basé sur le diff. Le rapport inclut les meilleures pratiques pour le langage de programmation de chaque fichier, il est important d'analyser tout le code.\nLe script inclut également une note pour utiliser des outils afin de lire le contenu complet du fichier pour obtenir plus de contexte et éviter de rapporter des avertissements. ",
  "C28DD12DACFE738AEC77": "Assurez-vous de valider vos modifications sur la branche et de les pousser sur GitHub. Puis **créez une nouvelle pull request**.",
  "8389DDB4E1536E947196": "Automatiser avec GitHub Actions",
  "379C6F1D11A83B9CC907": "L'action se déclenche lorsque la pull request est marquée comme `ready_for_review` ou lorsqu'une revue est demandée.",
  "90C223BFA0500A47B02F": "La ligne de commande utilise un drapeau spécial pour mettre à jour la description générée de la pull request :",
  "87CE92AD7EB35D2DD20B": "`--pull-request-description` pour mettre à jour la description de la pull request",
  "2188AA5396653E5E50C9": "Nous avons également ajouté `continue-on-error: true` afin que le workflow ne soit pas interrompu si le script échoue.",
  "8FC8477480FB1E028D01": "Des mesures supplémentaires pour renforcer la sécurité seraient d'exécuter ",
  "EF206854D5F3F02EFEBD": "un modèle avec un filtre de sécurité",
  "2EFCBDBF758E49CD3A48": "ou de valider le message avec un ",
  "2D51D1AD26F6CB0B4B16": "service de sécurité du contenu",
  "C0CBA7F0A5DC2DCE6EB8": "Rendez-le Agentique",
  "F4E3B34292E5B8E73BDD": "Outils",
  "0D4A2F0AEBB4BBB769A7": "fs_read_file",
  "EBC65EC29F2BE04D642A": "Agents",
  "B0200328271BA915B513": "agent système de fichiers",
  "1A171068DBC3E654B97C": "La motivation derrière ce script est de fournir aux développeurs un outil automatisé capable de vérifier et de signaler la justesse et le style des fichiers de code et de langue naturelle.\nIl exploite la puissance des grands modèles de langage (LLM) pour inspecter le code ou les documents de nouvelles façons.",
  "45879EC941165770083A": "Le script utilise également la prise en charge intégrée des erreurs et des avertissements dans GenAIScript pour faire remonter automatiquement les problèmes détectés dans l'IDE.",
  "20F1A22123C83B006885": "Décomposition du script",
  "AC9D0A69ADB162953174": "Voici une explication pas à pas du script :",
  "8440502F6F03B992B51E": "**`script({...})`** : Cette fonction initialise un script GenAI.",
  "92CA72EFB6DFD99A6A08": "**`title`** : Un libellé pour le script, \"Universal Linter\", qui décrit succinctement son objectif.",
  "6A5652811F1B83A758B2": "**`description`** : Une brève explication de ce que fait le script - il vérifie les fichiers pour la justesse et le style.",
  "FD8A9B73AC39CE10A5C4": "**`model`** : Spécifie l'utilisation d'un modèle d'IA \"large\" afin de tirer parti de capacités avancées de traitement.",
  "6F8FB0131FE6F6E7100A": "**`system`** : Un tableau listant différents modules système nécessaires pour le fonctionnement du script, incluant des mesures de sécurité et des systèmes d'annotation.",
  "96F1CD8DA5999814EAAF": "Le script contient aussi un bloc de prompt :",
  "7494FACF2BEAA8C018CD": "**`$``Task`** : Commence une section de prompt où la tâche de l'IA est définie.",
  "6B8C0A92144B2F9F5117": "**`You are Linty...`** : Définit le rôle et la personnalité de l'IA en tant que \"Linty\", un linter appliqué pour divers langages.",
  "60BDB287644AE7B9D418": "**`Your task...`** : Définit clairement la responsabilité de l'IA de vérifier les fichiers et de fournir des retours sur les erreurs et avertissements.",
  "BE4C1C3D20A951079034": "**`Rules`** : Un guide détaillé des règles pour garantir que l'IA effectue sa tâche efficacement. Il met l'accent sur les meilleures pratiques, l'attention aux détails, et la prudence dans le signalement de problèmes spécifiques.",
  "579F9D690148216E8724": "Enfin, le script spécifie les fichiers à traiter :",
  "8829683BE2CF166FCF2A": "**`def(\"FILE\", env.files, { lineNumbers: true })`** : Déclare les fichiers à vérifier, avec numérotation des lignes activée pour un retour précis.",
  "77CC4B4125FEC1176AA9": "Exécution du script",
  "09D51361B634B3D9BF37": "Pour exécuter ce script, vous pouvez le lancer depuis Visual Studio Code ou utiliser la CLI GenAIScript. Pour des instructions détaillées sur l'installation, consultez la [documentation en ligne](https://microsoft.github.io/genaiscript/getting-started).",
  "F2E3EBF0F61F559558E2": "Cette commande exécutera le script \"Universal Linter\", traitant les fichiers tels que définis.",
  "86DF369B06815357080D": "Depuis la fenêtre GitHub Copilot Chat, vous pouvez exécuter le linter sur tous les fichiers du contexte en lançant :",
  "AE6448D60B0E16C35329": "Code source complet",
  "93264ACD029A4D077A4F": "Le code source complet est disponible à l'adresse [https://github.com/microsoft/genaiscript/blob/main/packages/sample/genaisrc/lint.genai.mts](https://github.com/microsoft/genaiscript/blob/main/packages/sample/genaisrc/lint.genai.mts).",
  "8EF7AD82F8EEB864BB75": "Scripts complets prêts à l'emploi.",
  "7626549DFF8CE219076E": "Les scripts d'exemple sont une collection de scripts complets prêts à l'emploi.\nIls sont conçus pour être utilisés tels quels, mais nous vous encourageons à les ajuster ou à les modifier pour répondre à vos besoins.",
  "8A01C68BDF063EFAA31B": "Les contributions de la communauté sont les bienvenues et peuvent être consultées dans la section [Awesome Scripts](/genaiscript/samples/awesome).",
  "E82423BF632BC0025193": "Image Alt Textify",
  "0855395DCFC83F8E9DF8": "Générer du texte alternatif pour les images dans les fichiers markdown",
  "7F5531A878AA39C14601": "Le texte alternatif est essentiel pour rendre les images accessibles à tous, y compris aux personnes malvoyantes. Il fournit une description textuelle de l'image, permettant aux lecteurs d'écran de transmettre le contenu aux utilisateurs qui ne peuvent pas voir l'image.\nCependant, écrire du texte alternatif pour les images peut prendre du temps, surtout lorsqu'il s'agit d'un grand nombre d'images. C'est là que l'IA peut aider. En utilisant un modèle de langage comme GPT-4 d'OpenAI, vous pouvez générer automatiquement du texte alternatif pour les images, ce qui permet de gagner du temps et de l'effort.",
  "A02B30C7F72B037D1352": "Dans cet exemple, nous allons construire un outil qui génère du texte alternatif pour les images dans les fichiers Markdown.",
  "FC33AA52AA3E08AC3E9D": "Configuration du script",
  "FFE08BE0CADFB6C853D4": "Ce script est composé de code TypeScript, conçu pour s'exécuter avec le GenAIScript CLI. Décomposons-le :",
  "692C6B16475D697CA5CA": "Ici, nous déclarons le script avec un titre et une description, en précisant qu'il utilise le modèle GPT-4 d'OpenAI.\nNous définissons également des paramètres pour les chemins de fichiers, l'option de régénérer toutes les descriptions, ainsi que le chemin des ressources.",
  "7A9215F13F9AA7B177E8": "Ensuite, nous extrayons les variables d'environnement :",
  "97DC04B039D76157A8BD": "Recherche d'images",
  "2FA0341FAABCE3696F3F": "Ensuite, nous définissons une expression régulière pour trouver les images dans Markdown :",
  "DE89CB85F3D785653EC7": "Le script utilise [workspace.grep](/genaiscript/reference/scripts/files#grep) pour trouver toutes les occurrences du motif regex dans les documents spécifiés.",
  "B48D7490EC5BF7AD2C05": "Génération du texte alternatif",
  "210F7B8C6E99B7C389FC": "Pour chaque URL d'image trouvée, nous générons un texte alternatif en utilisant un [prompt inline](/genaiscript/reference/scripts/inline-prompts)\net [defImages](/genaiscript/reference/scripts/images).",
  "E0BAE815A6A5B938AA55": "Mise à jour des fichiers",
  "2D21684F5FAA8E13B692": "Enfin, nous mettons à jour le contenu Markdown avec le texte alternatif généré :",
  "7E2B78A9043145D3026F": "Nous remplaçons le substitut dans le contenu original par le texte alternatif et enregistrons le fichier mis à jour.",
  "84F0E8428498185FC9CF": "💻 Comment exécuter le script",
  "FAC0F9D3C043A3BA75B7": "Pour exécuter ce script, vous aurez besoin du GenAIScript CLI.\nSi vous ne l'avez pas encore installé, consultez le [guide d'installation](https://microsoft.github.io/genaiscript/getting-started/installation).",
  "465D24E2DBC97F46F74C": "Une fois que vous avez le CLI, vous pouvez exécuter le script avec la commande suivante :",
  "C8691BCA4F157F72CEF2": "Automatisation avec GitHub Actions et GitHub Models",
  "FC31F9A8ECBDE41CD6B7": "L'action GitHub suivante automatise le processus de génération du texte alternatif pour les images dans les fichiers Markdown. Elle s'exécute à chaque push sur la branche `dev` et utilise le CLI `genaiscript` pour exécuter le script.\nElle utilise le modèle OpenAI `gpt-4.1` via GitHub Models pour l'inférence.",
  "A96A7C27E1C0BFA7CE1D": "Source complète ([GitHub](https://github.com/microsoft/genaiscript/blob/main/packages/sample/genaisrc/samples/iat.genai.mts))",
  "C538F55589323940F8A5": "Le script `gcm` propose un flux guidé pour créer des commits avec des messages générés.\nIl commence par générer un message de commit basé sur les changements mis en scène dans votre dépôt Git\nen utilisant un [prompt en ligne](/genaiscript/reference/scripts/inline-prompts),\npuis demande à l'utilisateur de valider le commit ou de régénérer le message.",
  "F37E539169F05C4C67F3": "Tout d'abord, nous définissons la fonction `script`, qui configure notre script GenAI en fournissant un titre et une description, et en spécifiant le modèle que nous allons utiliser :",
  "9DC3BAFC4C3C04D81C8C": "Recherche de modifications",
  "EFF923232F326A1C8886": "Ensuite, nous vérifions la présence de modifications mises en scène dans votre dépôt Git à l'aide de `git diff`.\nS'il n'y a rien de mis en scène, GenAI propose gentiment de tout mettre en scène pour vous :",
  "8231802CE599C11F2C89": "Nous affichons ensuite la différence dans la console pour que vous puissiez vérifier les modifications qui vont être validées :",
  "682E263817FE10705BAB": "Générer et affiner le message de commit",
  "35DCA82F322BB45CDAD6": "Voici la partie intéressante. Nous entrons dans une boucle où GenAI génère un message de commit pour vous sur la base du diff. Si le message ne vous satisfait pas, vous pouvez choisir de le modifier, de l'accepter ou de le régénérer :",
  "A7621A7713F5E1C6F8C8": "Valider et pousser",
  "46E6F731AAB3BE1A251B": "Si vous choisissez de valider, GenAI exécute la commande `git commit` avec votre message, et si vous êtes très confiant, il peut même pousser les modifications vers votre dépôt juste après :",
  "B319C8AA11BD316176D9": "Exécution du script avec GenAIScript CLI",
  "9B1E71E8167B5537BFFE": "Utilisez le [cli](/genaiscript/reference/cli) pour exécuter le script :",
  "BB963895A8CA620E6C5F": "Source complète ([GitHub](https://github.com/microsoft/genaiscript/blob/main/packages/sample/genaisrc/samples/gcm.genai.mts))",
  "804CAFB3654BEC68F339": "Le message de commit est examiné et approuvé par l'utilisateur avant de valider les modifications.",
  "04D4748981EE16FC74E6": "Enquêteur GitHub Action",
  "C17681376CB2F40922AC": "Enquêter sur les échecs des GitHub Actions",
  "2113BFDD85AE2CAF5DA7": "L'exemple suivant montre un script qui analyse un journal de tâche d'un GitHub Action Workflow et tente de déterminer la cause première du problème.",
  "BE66E1E2CA2A9E27B7D8": "Stratégie",
  "E77C4E60986222C09480": "Le script est un hybride entre un logiciel traditionnel et un logiciel basé sur LLM/Agent. Nous commençons par collecter des informations pertinentes pour le LLM, afin de remplir le contexte avec des informations pertinentes, puis nous laissons l'agent raisonner et demander plus d'informations si nécessaire à travers des outils.",
  "2DA52B93DF832DB4152B": "La première partie du script est un logiciel traditionnel qui collecte les informations et prépare le contexte pour le LLM. Il utilise la stratégie simple suivante :",
  "6020F363FE30E990DDCF": "trouver des informations sur l'exécution du workflow ayant échoué, y compris le commit et les journaux de tâches",
  "DB4B8265B807C3F0E8E8": "trouver la dernière exécution réussie du workflow, si elle existe, et rassembler le commit ainsi que les journaux de tâches",
  "A3B5368130B33D41A4D3": "construire un contexte LLM avec toutes les informations, y compris les différences de commits et les différences des journaux de tâches.",
  "E224838EFF70C9284F09": "Les informations collectées dans cette section ne sont **pas** hallucinaient par conception et sont ajoutées au résultat final en utilisant l'objet `env.output`.",
  "73D7ED84326BD9FDF203": "La seconde partie est un agent qui utilise le LLM pour raisonner sur les informations et demander plus d'informations si nécessaire.",
  "5704B507077784D8D2E4": "Ajoutez le script suivant à votre dépôt sous le nom ",
  "3428C305046FD6A3BE99": "Vous pouvez décider d'activer ou de désactiver la partie agentique du script en commentant la ligne `agent_*`. Un script sans agent a un comportement prévisible de consommation de jetons (c'est un appel LLM) ; un script agentique entrera dans une boucle et consommera plus de jetons, mais il sera capable de demander plus d'informations si nécessaire.",
  "58D46F0DB86A28B248BC": "Avons-nous fini ?",
  "A18644FD754499C8187A": "Non ! Ce script est loin d'être parfait et en fait, il nécessite probablement de meilleures heuristiques pour construire le contexte **spécifique à votre dépôt**. C'est un bon point de départ, mais vous devrez ajuster les heuristiques pour le faire fonctionner pour votre dépôt.",
  "621B66E175813E595DDF": "Diagramme",
  "F317F25133B7B8669D3A": "Générateur de diagramme de classes",
  "B6765B7DE6E2473D32CF": "Cet exemple analyse tout le code dans son contexte et tente de générer un diagramme en utilisant [mermaid](https://mermaid.js.org/).",
  "4326533E9A6D83F198B6": "Commenter",
  "191DC67338C8839517AA": "Ajoute des commentaires à votre code",
  "EACF350143F173203249": "Cet exemple automatise le processus d'ajout de commentaires au code source à l'aide d'un LLM\net vérifie que les modifications n'ont pas introduit de changements dans le code.",
  "160643EF72E6DD11A9F7": "Pour cela, nous pouvons utiliser une combinaison d'outils pour valider la transformation : formateurs de code,\ncompilateurs, linters ou un LLM comme juge.",
  "76B734C7EBC3DDA28D81": "L'algorithme peut se résumer comme suit :",
  "6B5BB7B78DD4C24B9EEA": "Commençons par analyser le script.",
  "E5DDA02A97EAF28789D9": "Récupération des fichiers à traiter",
  "C2926FAFBED40DAEAA41": "L'utilisateur peut sélectionner les fichiers à commenter ou, si aucun fichier n'est sélectionné, nous utiliserons Git pour trouver tous les fichiers modifiés.",
  "BBACB70DB526A31258DF": "Nous traitons chaque fichier séparément pour ne pas surcharger le contexte de tokens et pour maintenir la concentration de l'IA. Nous pouvons utiliser des [prompts en ligne](/genaiscript/reference/scripts/inline-prompts) pour effectuer des requêtes internes.",
  "03D133AB0D0638735B56": "Le prompt pour ajouter des commentaires",
  "E8C504DAF8FDBDE6D6FD": "Dans la fonction `addComments`, nous demandons à GenAI d'ajouter des commentaires.\nNous le faisons deux fois pour augmenter la probabilité de générer des commentaires utiles,\ncar le LLM peut avoir été moins efficace lors du premier passage.",
  "69822FF5F86F44469926": "Nous fournissons un ensemble d'instructions détaillées à l'IA afin qu'elle analyse et commente le code.",
  "47289FB3CD9843F823A6": "À ce stade, nous avons un code source modifié par un LLM. Nous devons essayer d'utiliser tous les outils disponibles pour valider les modifications. Il est préférable de commencer par les formateurs et les compilateurs, car ils sont déterministes et généralement rapides.",
  "C1F538746834F1ECC009": "Nous lançons un prompt supplémentaire pour juger le code modifié (`git diff`) et nous assurer que le code n'a pas été modifié.",
  "2F4393D425DF3167BE3B": "Pour exécuter ce script, vous devez d'abord installer l'interface en ligne de commande GenAIScript. [Suivez le guide d'installation ici](https://microsoft.github.io/genaiscript/getting-started/installation).",
  "BACB12AB22124D11873C": "Formatage et compilation",
  "BDD0F61D407B4B4986D1": "Un aspect important est de normaliser et de valider le code généré par l'IA. L'utilisateur peut fournir une commande `format` pour exécuter un formateur\net une commande `build` pour vérifier si le code est toujours valide.",
  "00A72CCAB15D893017BB": "Source complète ([GitHub](https://github.com/microsoft/genaiscript/blob/main/packages/sample/genaisrc/samples/cmt.genai.mts))",
  "700EC218B1269A628F7B": "Les mesures suivantes sont prises pour assurer la sécurité du contenu généré :",
  "3F0350D5D0ECDA2FD92A": "La description générée est sauvegardée dans un fichier à un chemin spécifique, ce qui permet une revue manuelle avant de valider les modifications.",
  "85845304611804A65165": "Des mesures supplémentaires pour renforcer la sécurité incluent l'utilisation ",
  "204235AF72C139460DA5": "d'un modèle avec un filtre de sécurité](https://learn.microsoft.com/en-us/azure/ai-services/openai/concepts/content-filter?tabs=warning%2Cuser-prompt%2Cpython-new)\nou la validation du message avec un [service de sécurité du contenu](/genaiscript/reference/scripts/content-safety). ",
  "2FA17E244571F2C8340B": "Scripts Géniaux",
  "0AB21BE70F50959696B4": "Une liste sélectionnée de scripts géniaux",
  "323CFF86B87A9EC3EDA2": "Voici quelques scripts écrits par la communauté qui sont utiles pour diverses tâches. Si vous avez un script que vous pensez devoir être inclus, veuillez soumettre une pull request pour l'ajouter à cette liste.",
  "00AA71C25D18298D79CA": "[Soumettez votre script](https://github.com/microsoft/genaiscript/edit/dev/docs/src/content/docs/samples/awesome.mdx).",
  "45B3991D04709ED02241": "le fournisseur `windows` prend en charge ",
  "F3388F602FE804310DFE": "IA pour les applications Windows",
  "C5578604C9F0CEED3677": "Installez l'extension ",
  "044E76AFBF6CD95A9B59": "Boîte à outils IA pour Visual Studio Code",
  "9621C52A071E69750CEC": "Catalogue de modèles",
  "32FB686CBE7B18D71A47": "et ajoutez un modèle de la section d'exécution ",
  "156B9DB7E872E8FCEE34": "Modèles ONNX",
  "86B6CF6DCE159850A2C2": "Cliquez avec le bouton droit sur le modèle dans la vue Explorateur et sélectionnez ",
  "088AAC30C1E9EAE5D229": "Copier le nom du modèle",
  "5A4E2643F43493C2E03D": "Voir ",
  "842070F41100D93158B0": "Guide de démarrage rapide de la boîte à outils Azure AI",
  "014E4B9570028A922E52": "Ce ",
  "4DE27C5C478FBA4ACBA3": "fournisseur `whisperasr` permet de configurer une tâche de ",
  "815F139EE5EB7AB78564": "transcription",
  "D009CDA6576EDC29232C": "utilisation du projet ",
  "E4421F9E2298E9346C61": "Whisper ASR WebService",
  "1CDFBD5F57333EEF9640": "Vous pouvez également remplacer l'alias du modèle ",
  "B5DE1BDAEC135DED8242": "`transcription` pour changer le modèle par défaut utilisé par `transcribe`. ",
  "DDD84BD986900FACDD24": "vLLM",
  "E4882B6EF47623FA5D67": "vLLM",
  "BBA45DCDB2F85B7CE662": "vLLM",
  "DD736F4B044D28EF57AE": "Le fournisseur est `vllm` et le nom du modèle est ignoré. ",
  "0186908CF9EB0A317058": "SGLang",
  "95E8E7962834A01987FD": "[SGLang](https://docs.sglang.ai/) est un framework de service rapide pour les grands modèles de langage et les modèles de langage visuel.\nLe fournisseur est `sglang` et le nom du modèle est ignoré.",
  "6ABA5BB9F63E3DCB6CD6": "OpenRouter",
  "51BDDF2AAC97FF94B3BC": "Vous pouvez configurer le fournisseur OpenAI pour utiliser à la place le service ",
  "ABCE971E11CA4715AB99": "OpenRouter",
  "F435EA3CAA311B650BC0": "en réglant la variable `OPENAI_API_BASE` sur `https://openrouter.ai/api/v1`.\nVous aurez également besoin d'une [clé API](https://openrouter.ai/settings/keys). ",
  "8446C83824806815E4A2": "clé API",
  "15061E4182F74CBB23C6": "OpenAI",
  "151CF8CCDA076CC3D919": "Mettez à niveau votre compte",
  "01724B2B15C673A35EE7": "Créez une nouvelle clé secrète depuis le portail ",
  "0C5FD4F3B97F9679536F": "portail des clés API OpenAI",
  "449EE17CF3AF4F4E6036": "Mettez à jour le fichier ",
  "3176B2801C7F7FF82D93": "Trouvez le modèle que vous souhaitez utiliser ",
  "2B410A47B1DF991115E4": "Référence API OpenAI",
  "836E7927E07FBD6B7190": "ou ",
  "3FD0C1CA07708CA1719E": "Playground de chat OpenAI",
  "E7CED1E99092CA7FADD3": "Définissez le champ ",
  "79F8831BE42EC6D3B4C8": "dans ",
  "920C427643AC9500911D": "Configuration par défaut du modèle",
  "8AF1EF67A3A3C40EB17D": "dans votre fichier ",
  "BF020F180F3C2D758EFB": "Vous pouvez activer les espaces de noms de journalisation ",
  "372B77471B690592B0EB": "espaces de noms de journalisation",
  "A66FF1BBC41D8325D10F": "Ollama",
  "7DA6072A11B297AFE677": "[Ollama](https://ollama.ai/) est une application de bureau qui vous permet de télécharger et d'exécuter des modèles localement.",
  "9242FE1F8E7D73B3D3E2": "Démarrez l'application Ollama ou",
  "0DEEBEFBDA9852B8857B": "un autre modèle",
  "D20661E3ADB928BC99BE": " ",
  "DBD0725BDF460DDC986A": "Hugging Face",
  "64699D935E8A64467964": "Ollama avec les modèles Hugging Face",
  "023C749AD1A5EDD7C1D9": "Vous pouvez également utiliser ",
  "2C45B5E9E22F139A8817": "modèles GGUF",
  "E3B41B72EB2AEBDA8EFE": " ",
  "320683A3AA63EAF090D1": "Ollama avec Docker",
  "E921FE08714E4E3ABFD7": "si vous utilisez un ",
  "100B3AFCFC24877CB3BA": " ",
  "FE5A165A73DCF6BE599F": "GitHub Codespace",
  "B1C652C1187BD896B143": "option à votre ",
  "E3FFCBDEFDA705B862C5": "démarrez le ",
  "A05A2805D9C7C694E847": "conteneur Ollama",
  "390C3B1BDA4816427D36": "arrêtez et supprimez les conteneurs Ollama",
  "50C2881C44745D5DD314": "Ajoutez ces scripts à votre fichier ",
  "102D771842CC8B37875E": "le fournisseur ",
  "BC01E626D786800F0D68": "Modèles Mistral AI",
  "A5C5CB0FF62C14B73A29": "en utilisant l’API ",
  "301EFD7CED51A68B55F3": "API Mistral",
  "CE3EDCE7FF12B23DA3C9": "Inscrivez-vous pour un ",
  "41188D19FC32C8B634BC": "compte Mistral AI",
  "1916392098E02D0C54AD": "et obtenez une clé API depuis leur ",
  "CEDE44170D553FB97213": "console",
  "C0ACC87CAA6D91965FCD": "Ajoutez votre clé API Mistral AI dans le fichier ",
  "0B2C374A1DC6FDFFE3A1": "LocalAI",
  "BB2BCA638D9D02F6A245": "LocalAI",
  "FFB6B7B1BCEFE9818AED": "correspondance des noms de modèles",
  "71A9AF215944A8DD6D96": "est mappé sur ",
  "5F65A7AA596B9551BB63": "documentation LocalAI",
  "C35CC2CAAEECFEA58867": "fichier ",
  "EC60AD3E95F5BA5983EB": "LM Studio",
  "F62E74A2D1D9CB4FD7DA": "LMStudio",
  "0A1759C627F86A1BD237": "Ouvrez LMStudio",
  "5705DEF7CD4E9E579DE0": "Activer le service local LLM",
  "55473065A20CE8986401": "GenAIScript suppose par défaut que le serveur local est à ",
  "EC34365F5DC9401FC1C6": "Trouvez l'**identifiant API** ",
  "907A00FD8ABE78B6CF5B": "identifiant API",
  "F14F3A28643F2AD61C89": "GenAIScript utilise ",
  "2D62AA7E2DF4FC25B290": "LMStudio CLI",
  "C839568861C26C797F2E": "LM Studio et les modèles Hugging Face",
  "47FBABA9EA79DFD33F4D": "Suivez ",
  "A0866312615233983E46": "ce guide",
  "6752E8AA4D9241ADA0F5": "Llamafile",
  "5E5FF0CDE3340DD00C2A": "LLaMA.cpp",
  "501CEA13EBFE44158B6E": "LiteLLM",
  "A465271E5E0F450F6048": "LiteLLM",
  "EEE5CCDF4CCE69545D37": "Le fournisseur `jan` se connecte au serveur local [Jan](https://jan.ai/).",
  "CE3E10C4D04DC9F36E1A": "Sélection du modèle",
  "0274898BEC882B64C209": "Le modèle utilisé par le script est configuré via le champ ",
  "849325F82B59D72F1782": "fournisseur LLM et le ",
  "EC9BB63814EA4FB8A51B": "Vous pouvez également utiliser les alias de modèles `small`, `large`, `vision` [alias de modèles](/genaiscript/reference/scripts/model-aliases) pour utiliser les modèles small, large et vision activé par défaut. ",
  "C1AE24BF78CB3FE303C2": "aliases de modèles",
  "C37990F241A61544B783": "Les alias de modèles peuvent aussi être redéfinis à partir de la commande [cli run command](/genaiscript/reference/cli/run), ",
  "60FCDDC82AD8459D8134": "commande d'exécution cli",
  "60F1F0B4FDE0D5067E9B": "En savoir plus sur les alias de modèles",
  "50ADE9E93619DB2EC513": "ou en ajoutant les variables d'environnement `GENAISCRIPT_MODEL_LARGE` et `GENAISCRIPT_MODEL_SMALL`. ",
  "F0B6838C9DEA8177C26D": "Vous pouvez également configurer les alias par défaut pour un fournisseur LLM donné en utilisant l'argument `provider`. ",
  "6C83C534158F6EB5CBD5": "Alias de modèles",
  "601517A7C539236E8553": "où ",
  "3D8C593A624F736973B6": "fichier ",
  "64503E1E1DDE67ABC72A": "GenAIScript utilise un fichier `.env` (et `.env.genaiscript`) pour charger les secrets et les informations de configuration dans les variables d'environnement du processus.\nGenAIScript supporte plusieurs fichiers `.env` pour charger les informations de configuration. ",
  "BF1AFBBB3CE6F0A2C91D": "Créez ou mettez à jour un fichier `.gitignore` ",
  "4521EDCE4BB68A8D7A5A": "fichier `.env` ",
  "0F7DAFA71340527B7B81": "Créez un fichier `.env` ",
  "8744610C28677506F6AA": "Ne pas committer les secrets",
  "3F92442C187D82049940": "fichier `.env` ",
  "DED405AFB71E823932EC": "Vous pouvez spécifier un emplacement personnalisé pour le fichier `.env` via la CLI ou une variable d'environnement. ",
  "B670F7EB8FCC8EADCA1D": "GenAIScript charge par défaut les fichiers `.env` suivants dans l'ordre : ",
  "4809AC8879F60F241FBE": "en ajoutant l'argument `--env <...files>` à la CLI. Chaque fichier `.env` est importé dans l'ordre et peut écraser les valeurs précédentes. ",
  "C639D1CFEC976187C01F": "en définissant la variable d'environnement `GENAISCRIPT_ENV_FILE`. ",
  "6237DE63CCCA91E7AC04": "en spécifiant l'emplacement du fichier `.env` ",
  "0CF6CFF93BFDBFF39DB7": "fichier de configuration ",
  "DC114F1EE5012FE56C58": "Si vous ne souhaitez pas utiliser un fichier `.env`, assurez-vous de renseigner les variables d'environnement du processus genaiscript avec les valeurs de configuration. ",
  "070847A45DB367406CEE": "Syntaxe bash",
  "CB0884C259EA9FC72CDF": "Configuration GitHub Action",
  "337323E5F25488323BEA": "commande",
  "1AB9FBE3587D06D73CAC": "Conteneurs de développement sous Windows",
  "4651AFF7005C0CD63351": "Conteneurs de développement",
  "037CD005ABB1BAF37393": "WSL2",
  "82ABC90FE667D558F02E": "Docker Desktop",
  "0FCBD56A524D516575CD": "Ouvrez Visual Studio Code",
  "AFAABB3A37C2121AD7F3": "extension de conteneur de développement",
  "BBC02D3C82307B9C4616": "dans VSCode",
  "926F744F3A608D1DF858": "+",
  "C26C358454A2D42D8EAE": "Echo",
  "290F5144053A234B1811": "Aucun",
  "43E22C13D98DEDB4A08C": "Vous pouvez utiliser un fournisseur personnalisé compatible avec l' ",
  "5E4265B7A53C88996252": "API de génération de texte OpenAI",
  "895BD25AE363061F7C7E": "Variables d'environnement spécifiques au modèle",
  "68712DD31E690883CCE3": "Vous pouvez fournir différentes variables d'environnement pour chaque modèle nommé en utilisant le préfixe ",
  "D436232F89C41026059A": "préfixe ou le préfixe ",
  "9820632EBB7A4664CE65": "Fonctionnement derrière un proxy",
  "E9DE85F54D9CFF227BEF": "Vous pouvez définir les variables d'environnement ",
  "73C12F4782F2CC855F7F": "et/ou ",
  "47A931C3BD82CB3B475A": "Vérification de votre configuration",
  "7FE790D046C0B2835BD8": "Vous pouvez vérifier votre configuration en exécutant la commande ",
  "61DAC593E36685DFE76B": "commande",
  "AF5EF78A1C14307F1F91": "Modèles Hugging Face",
  "7722858CBFFB88C2FE73": " ",
  "476B13AE71EA0261281B": "Text Generation Inference",
  "DBC23E5397DD93572F06": "compte Hugging Face",
  "6903E3900D820B5C3BED": " ",
  "2D8A41A625E682067D47": "Granulaire",
  "E5EFE75D2836E27CF1AE": "Autoriser les appels à l'API d'inférence sans serveur",
  "B5B641DB876736B71648": "Ajoutez votre clé API Hugging Face au fichier ",
  "6C2FDA3D8626F9E2728F": " ",
  "9B4A65C1B4B32034B2D1": "Trouvez le modèle qui correspond le mieux à vos besoins en visitant les ",
  "9BDAE7320740E5DDF997": "modèles HuggingFace",
  "99A4B9993F54514D0353": "Google AI ",
  "DA30B171C081EE8E50E9": "couche de compatibilité OpenAI",
  "AD5A71D8E540FC0CE5A6": "limites",
  "84B1C4778C7C53F645E2": "outils de secours",
  "D549CF4AB509B025E1C9": "forum",
  "D90397AFC26928CE3379": "Ouvrez ",
  "D0B195BE880992BF4CCD": "Google AI Studio",
  "1C50AB309965B457D050": "Trouvez l'identifiant du modèle dans la ",
  "2CCD0EC782EC6A848DB1": "documentation Gemini",
  "9B5540A42BFF4D0E022C": " ",
  "7F325CBE88761900FF1C": "GitHub Models",
  "054B36CC145D2FB4B3FE": "Le fournisseur [GitHub Models](https://github.com/marketplace/models), `github`, permet d’exécuter des modèles via le GitHub Marketplace.  \nCe fournisseur est utile pour le prototypage et est soumis à des [limites de taux](https://docs.github.com/en/github-models/prototyping-with-ai-models#rate-limits)  \nselon votre abonnement.",
  "F15BBDC408462FFB67E9": "Configuration de Codespace",
  "076E3B7EB020333C99BD": "Si vous utilisez un [GitHub Codespace](https://github.com/features/codespaces), le token est déjà configuré pour vous...  \nÇa fonctionne simplement.",
  "1BB1C1140D8E7874C6FD": "Configuration de GitHub Actions",
  "EDD362A9130AC6DB9F9C": "Depuis [avril 2025](https://github.blog/changelog/2025-04-14-github-actions-token-integration-now-generally-available-in-github-models/),  \nvous pouvez utiliser le token GitHub Actions (`GITHUB_TOKEN`) pour appeler des modèles d’IA directement dans vos workflows.",
  "720642EA91D159EB2C99": "Assurez-vous que la permission `models` est activée dans la configuration de votre workflow.",
  "19981D6BA4EDBDBC3718": "Passez le `GITHUB_TOKEN` lors de l’exécution de `genaiscript`",
  "18CAB0680DB68D4EFB99": "Pour en savoir plus, consultez la [Documentation GitHub](https://docs.github.com/en/github-models/integrating-ai-models-into-your-development-workflow#using-ai-models-with-github-actions)",
  "7F04C21E01377EF93265": "Configurer avec votre propre token",
  "6DF0474A0BF103376DE9": "Si vous n’utilisez pas GitHub Actions ou Codespaces, vous pouvez utiliser votre propre token pour accéder aux modèles.",
  "46CD387FBE623B7A89CA": "Créez un [token d’accès personnel GitHub](https://github.com/settings/tokens/new).  \nLe token ne doit pas avoir de scopes ou permissions.",
  "1DB662B30B0B17778DC2": "Mettez à jour le fichier `.env` avec le token.",
  "C9395981C2D61A791B43": "Pour configurer un modèle spécifique,",
  "C99B3CE99FE99080C5C7": "Ouvrez le [GitHub Marketplace](https://github.com/marketplace/models) et trouvez le modèle que vous souhaitez utiliser.",
  "7D932E8F4C82749BDCEB": "Copiez le nom du modèle à partir des exemples Javascript/Python",
  "EC5A79F62FE330007852": "pour configurer votre script.",
  "5AC7F16696D23F441E28": "Si vous utilisez déjà la variable `GITHUB_TOKEN` dans votre script et avez besoin d’un token différent  \npour GitHub Models, vous pouvez utiliser la variable `GITHUB_MODELS_TOKEN` à la place.",
  "045448331BF2A3B87278": "Modèles `o1-preview` et `o1-mini`",
  "88E770D8EE7E8268A063": "Actuellement, ces modèles ne supportent pas le streaming ni les invites système.  \nGenAIScript gère cela en interne.",
  "66BD406102911E95B134": "Si vous avez accès à **GitHub Copilot Chat dans Visual Studio Code**,\nGenAIScript pourra également exploiter ces [modèles de langage](https://code.visualstudio.com/api/extension-guides/language-model).",
  "D70ED063BFCCEDEDA96F": "Ce mode est utile pour exécuter vos scripts sans avoir besoin d'un fournisseur de LLM distinct ou de LLM locaux. Cependant, ces modèles ne sont pas accessibles depuis la ligne de commande\net sont soumis à des limitations supplémentaires ainsi qu'à un contrôle du taux défini par la plateforme GitHub Copilot.",
  "3E8733D07487006861E6": "Aucune configuration n'est nécessaire tant que GitHub Copilot est installé et configuré dans Visual Studio Code.",
  "C1C4D874B729F7E6205E": "Vous pouvez forcer l'utilisation de ce modèle en utilisant `github_copilot_chat:*` comme nom de modèle\nou définir le paramètre **GenAIScript > Language Chat Models Provider** sur true.\nCela rendra GenAIScript par défaut l'utilisation de ce fournisseur pour les alias de modèles.",
  "33AB802C6E964636E3CE": "Installez [GitHub Copilot Chat](https://marketplace.visualstudio.com/items?itemName=GitHub.copilot-chat) (insistance sur **Chat**)",
  "9C390782056AF3FDD34B": "<li>exécutez votre script</li>",
  "E392C93186294B055B67": "Confirmez que vous autorisez GenAIScript à utiliser les modèles GitHub Copilot Chat.",
  "50D7DD31941B47305AF2": "sélectionnez le meilleur modèle de chat correspondant à celui que vous avez dans votre script",
  "B4586611B79CDBAFD9DC": "(Cette étape est sautée si vous avez déjà des correspondances dans vos paramètres)",
  "3860BDCD6CA0AD47DF96": "La correspondance des noms de modèles GenAIScript avec les modèles Visual Studio est enregistrée dans les paramètres.",
  "8D97645FE131AA81B256": "Le fournisseur `docker` se connecte au serveur local [Docker Model Runner](https://docs.docker.com/model-runner/).\nIl suppose que GenAIScript s'exécute dans un conteneur et utilise par défaut le point de terminaison `http://model-runner.docker.internal/engines/v1/`.",
  "806AC79B5BAFB3B5C26C": "Installez [Docker](https://docs.docker.com/)",
  "B32A70147725C664F81E": "Pour utiliser les modèles Docker Model Runner, utilisez la syntaxe `docker:modelid`.\nSi vous changez l'URL du serveur par défaut, vous pouvez définir la variable d'environnement `DOCKER_MODEL_RUNNER_API_BASE`.",
  "3A175F78EB043A4DC8E6": "`deepseek` est le fournisseur de modèle de chat [DeepSeek (https://www.deepseek.com/)](https://www.deepseek.com/).\nIl utilise les variables d'environnement `DEEPSEEK_API_...`.",
  "5212E556CDE8ADCC7F22": "Créez une nouvelle clé secrète depuis le [portail des clés API DeepSeek](https://platform.deepseek.com/usage).",
  "A1BED78B4BD8B0A3E01B": "Définissez le champ `model` dans `script` à `deepseek:deepseek:deepseek-chat` qui est actuellement le seul modèle supporté.",
  "BFF0DF70CAE3F85441F2": "Le fournisseur [Azure OpenAI](https://learn.microsoft.com/en-us/azure/ai-services/openai/reference#chat-completions), `azure` utilise les variables d'environnement `AZURE_OPENAI_...`.\nVous pouvez utiliser une identité managée (recommandée) ou une clé API pour vous authentifier auprès du service Azure OpenAI.\nVous pouvez également utiliser un principal de service comme documenté dans [automation](/genaiscript/getting-started/automating-scripts).",
  "FF6A9A9C045E623232E8": "Si vous êtes abonné à Visual Studio, vous pouvez [obtenir des crédits Azure gratuits](https://azure.microsoft.com/en-us/pricing/member-offers/credit-for-visual-studio-subscribers/)\npour essayer le service Azure OpenAI.",
  "AFFA906F7AB0C92AE7B6": "Identité managée (Entra ID)",
  "3A586FBA872146510963": "Ouvrez votre ressource Azure OpenAI dans le [Portail Azure](https://portal.azure.com)",
  "35F2F608CCCBF26C2286": "Naviguez vers **Contrôle d'accès (IAM)**, puis **Afficher mon accès**. Assurez-vous que votre utilisateur ou principal de service dispose du rôle **Cognitive Services OpenAI User/Contributor**.\nSi vous obtenez une erreur `401`, cliquez sur **Ajouter**, **Ajouter une attribution de rôle** et ajoutez le rôle **Cognitive Services OpenAI User** à votre utilisateur.",
  "45E712C240565FD6AF28": "Naviguez vers **Gestion des ressources**, puis **Clés et point de terminaison**.",
  "D4969B8A57DBA865614D": "Mettez à jour le fichier `.env` avec le point de terminaison.",
  "D0E83C6041D3C267C119": "Assurez-vous de supprimer toutes les entrées `AZURE_API_KEY`, `AZURE_OPENAI_API_KEY` du fichier `.env`.",
  "66A4B44F77C10A823299": "Naviguez vers **déploiements** et assurez-vous que votre LLM est déployé, puis copiez le `deployment-id`, vous en aurez besoin dans le script.",
  "073859032ADEFB82AFEB": "Ouvrez un terminal et **connectez-vous** avec [Azure CLI](https://learn.microsoft.com/en-us/javascript/api/overview/azure/identity-readme?view=azure-node-latest#authenticate-via-the-azure-cli).",
  "24EF58A8A2A1085F4276": "Mettez à jour le champ `model` dans la fonction `script` pour correspondre au nom du modèle déployé dans votre ressource Azure.",
  "07E1255F1952D4412A51": "Définissez la variable d'environnement `NODE_ENV` sur `development` pour permettre à `DefaultAzureCredential` de fonctionner avec Azure CLI.\nSinon, elle utilisera une chaîne de jetons d'informations d'identification incluant `env`, `workload`, `managed identity`, `azure cli`, `azure dev cli`, `azure powershell`, `devicecode`.",
  "6D506205587DB8A916D5": "Liste des modèles",
  "ADB84E30098D493AE721": "Il existe deux façons de lister les modèles dans votre ressource Azure OpenAI : utiliser les API de gestion Azure\nou en appelant un point de terminaison personnalisé `/models`.",
  "308C5BAD1A31E994B7BB": "Utilisation des API de gestion (méthode courante)",
  "0D1D5C8C45F8D0A5AE15": "Pour permettre à GenAIScript de lister les déploiements dans votre service Azure OpenAI,\nvous devez fournir l'ID d'abonnement **et vous devez utiliser Microsoft Entra !**.",
  "03DAAE6BB32C4B8ED3DF": "Ouvrez la ressource Azure OpenAI dans le [Portail Azure](https://portal.azure.com), ouvrez l'onglet **Vue d'ensemble** et copiez l'**ID d'abonnement**.",
  "53C988A547C2FAF31565": "Mettez à jour le fichier `.env` avec l'ID d'abonnement.",
  "DC0F46E27DDE86BA8438": "Testez votre configuration en exécutant",
  "8F2A124679F4529F3D2B": "Cette fonctionnalité ne fonctionnera probablement pas avec `AZURE_OPENAI_API_KEY`\ncar le jeton n'a pas la portée adéquate pour interroger la liste des déploiements.",
  "CEA43F1C20BEEC656FE1": "Utilisation du point de terminaison `/models`",
  "951760305C66B4C1A182": "Cette approche suppose que vous avez configuré un point de terminaison `/models` compatible OpenAI dans votre abonnement\nqui renvoie la liste des déploiements dans un format compatible avec l'API OpenAI.",
  "6C2FCC62C50AB4078178": "Vous pouvez définir la variable d'environnement `AZURE_OPENAI_API_MODELS_TYPE` pour pointer vers `openai`.",
  "EF27D1C122E2E10E55D7": "Informations d'identification personnalisées",
  "33AACB7AB5D63CA40A5A": "Dans certaines situations, la chaîne par défaut de recherche des informations d'identification peut ne pas fonctionner.\nDans ce cas, vous pouvez spécifier une variable d'environnement supplémentaire `AZURE_OPENAI_API_CREDENTIALS`\navec le type d'informations d'identification qui doit être utilisé.",
  "76A543614134DE341FCB": "Les types sont directement mappés aux types d'informations d'identification de [@azure/identity](https://www.npmjs.com/package/@azure/identity) :",
  "CF37F13E5ECBC8A19921": "`cli` - `AzureCliCredential`",
  "498448C214CD01D25703": "`env` - `EnvironmentCredential`",
  "F454605AB968C0392D14": "`powershell` - `AzurePowerShellCredential`",
  "9E8D6B1790A8ECCACADB": "`devcli` - `AzureDeveloperCliCredential`",
  "820285F531B617E4FA7B": "`workloadidentity` - `WorkloadIdentityCredential`",
  "E3EED5DFF4003B98272F": "`managedidentity` - `ManagedIdentityCredential`",
  "A3A6305304D756533AB3": "Réglez `NODE_ENV` sur `development` pour utiliser `DefaultAzureCredential` avec GenAIScript.",
  "43A58579EE05D3FBB713": "Portées personnalisées de jeton",
  "77C7BA9C297A67FAB1B3": "La portée de jeton par défaut pour l'accès Azure OpenAI est `https://cognitiveservices.azure.com/.default`.\nVous pouvez remplacer cette valeur en utilisant la variable d'environnement `AZURE_OPENAI_TOKEN_SCOPES`.",
  "0BD8A06403C3D382C827": "Version de l'API",
  "3F9D1A75DD221654275C": "GenAIScript maintient une [version API par défaut](https://learn.microsoft.com/en-us/azure/ai-services/openai/api-version-deprecation) pour accéder à Azure OpenAI.",
  "0B611EACB8331C116CDD": "version actuelle : {AZURE_OPENAI_API_VERSION}",
  "19A2B69F68944EA505D1": "Vous pouvez remplacer cette valeur en utilisant la variable d'environnement `AZURE_OPENAI_API_VERSION`.",
  "381C068717F6F24D5E3E": "Vous pouvez également remplacer la version API sur une base par déploiement en définissant la variable d'environnement `AZURE_OPENAI_API_VERSION_<deployment-id>` (où deployment-id est en majuscules).",
  "13D77C6E7A5B05B1E1A5": "Clé API",
  "5103969A84455E062EA9": "Ouvrez votre [ressource Azure OpenAI](https://portal.azure.com) et naviguez vers **Gestion des ressources**, puis **Clés et point de terminaison**.",
  "8A0722C61CF598997628": "Mettez à jour le fichier `.env` avec la clé secrète (**Clé 1** ou **Clé 2**) et le point de terminaison.",
  "E9D80442B79339402D5B": "Le reste des étapes est identique : trouvez le nom du déploiement et utilisez-le dans votre script, `model: \"azure:deployment-id\"`.",
  "F53B6D524D99AC7B38FB": "Ce n'est pas un fournisseur de LLM, mais un fournisseur de recherche de contenu. Cependant, puisqu'il est configuré de manière similaire aux autres services Azure,\nil est inclus ici. Il vous permet de faire une [recherche vectorielle](/genaiscript/reference/scripts/vector-search) de vos documents\nen utilisant [Azure AI Search](https://learn.microsoft.com/en-us/azure/search/search-what-is-azure-search).",
  "AEDA8BB79F33956FB1B4": "Le service est configuré via la variable d'environnement `AZURE_AI_SEARCH_ENDPOINT`\net la [configuration de l'identité gérée](https://learn.microsoft.com/en-us/azure/search/search-security-rbac?tabs=roles-portal-admin%2Croles-portal%2Croles-portal-query%2Ctest-portal%2Ccustom-role-portal).",
  "CCCA1835C03C90CF9A90": "Ouvrez votre ressource **Azure AI Search** dans le [portail Azure](https://portal.azure.com),\ncliquez sur **Présentation** puis sur **Propriétés**.",
  "5C2969668A3890E20459": "Cliquez sur **Contrôle d'accès API** et activez **Contrôle d'accès basé sur les rôles** ou **Les deux**.",
  "9920956586130EF9650C": "Ouvrez l'onglet **Contrôle d'accès (IAM)** et assurez-vous que votre utilisateur\nou principal de service possède le rôle de **Contributeur au service de recherche**.",
  "BBED1C69384E285EBEE0": "Clé API",
  "F67954E19D747268B203": "Le service est configuré via les variables d'environnement `AZURE_AI_SEARCH_ENDPOINT` et `AZURE_AI_SEARCH_API_KEY`.",
  "AACE066A6C7CEFC0F262": "Azure AI Foundry fournit un accès à des modèles sans serveur et déployés, tant pour OpenAI que pour d'autres fournisseurs. Plusieurs moyens d'accéder à ces serveurs sont pris en charge dans GenAIScript :",
  "83A2B6273191E2CEBC26": "sans aucun déploiement, en utilisant le fournisseur [Azure AI Model Inference](#azure_ai_inference),",
  "72A894AAC17ED400A934": "avec déploiement pour les modèles OpenAI, en utilisant le fournisseur [Azure AI OpenAI Serverless](#azure_serverless),",
  "6E88404A4BB4B0C99CFB": "avec des déploiements pour les modèles non-OpenAI, utilisez le fournisseur [Azure AI Serverless Models](#azure_serverless_models).",
  "C391C19F79DAB9804DC4": "Vous pouvez déployer des modèles \"sans serveur\" via [Azure AI Foundry](https://ai.azure.com/) et payer à l'usage par jeton.\nVous pouvez parcourir le [catalogue des modèles Azure AI Foundry](https://ai.azure.com/explore/models)\net utiliser le filtre [Serverless API](https://learn.microsoft.com/en-us/azure/ai-studio/how-to/deploy-models-serverless-availability) pour voir les modèles disponibles.",
  "34657E2318E2C2D84444": "Il existe deux types de déploiements sans serveur qui nécessitent des configurations différentes : les modèles OpenAI et tous les autres modèles.\nLes modèles OpenAI, comme `gpt-4o`, sont déployés sur des points de terminaison `.openai.azure.com`,\ntandis que les modèles Azure AI, comme `Meta-Llama-3.1-405B-Instruct`, sont déployés sur des points de terminaison `.models.ai.azure.com`.",
  "BCCC14AE1E3B3D592304": "Ils sont configurés de manière légèrement différente.",
  "0FBDE605DD39391AC27E": "Azure AI Inference <a href=\"\" id=\"azure_ai_inference\" />",
  "A7C3ADEC2330F6F6DB7C": "L'[API Azure AI Model Inference](https://learn.microsoft.com/en-us/azure/ai-foundry/model-inference/reference/reference-model-inference-api?tabs=javascript)\nfournit un point de terminaison unique pour accéder à plusieurs LLM. C'est une excellente façon d'expérimenter car il n'est pas nécessaire de créer des déploiements pour accéder aux modèles.\nElle prend en charge l'authentification Entra ID et par clé.",
  "C435B72D2DF9060300F2": "Identité gérée (Entra ID)",
  "100BFCBDB9B4ECCC98C0": "**Suivez attentivement [ces étapes](https://learn.microsoft.com/en-us/azure/ai-foundry/model-inference/how-to/configure-entra-id?tabs=rest&pivots=ai-foundry-portal)** pour configurer les rôles nécessaires pour votre utilisateur.",
  "9C4BE591542AD16FABD4": "Ouvrez https://ai.azure.com/ et ouvrez votre projet",
  "BF85A6C55F04626E9577": "Configurez l'**URL cible du point de terminaison** en tant que `AZURE_AI_INFERENCE_API_ENDPOINT`.",
  "CF4D71729EE40776B6D5": "Trouvez le nom du modèle dans le catalogue avec le filtre **Options de déploiement = Serverless API** et utilisez-le dans votre script,\n`model: \"azure_id_inference:model-id\"`.",
  "751C3F5A016C5F5D4C57": "Clé API",
  "5285977A814601B2AFE2": "Ouvrez https://ai.azure.com/, ouvrez votre projet et allez à la page **Présentation**.",
  "BD5C0B3892D7C99DC231": "Configurez l'**URL cible du point de terminaison** en tant que variable `AZURE_AI_INFERENCE_API_ENDPOINT` et la clé dans\n`AZURE_AI_INFERENCE_API_KEY` dans le fichier `.env`\\***\\*.\\*\\***",
  "BF4A2D68ACEAAE87C23D": "Version de l'API",
  "C9927D513C816B22B781": "La version d'API par défaut pour Azure AI Inference est {AZURE_AI_INFERENCE_VERSION}.\nVous pouvez la modifier en configurant la variable d'environnement `AZURE_AI_INFERENCE_API_VERSION`\n(voir [Documentation Azure AI](https://learn.microsoft.com/en-us/azure/ai-services/openai/api-version-deprecation))",
  "6CB92BB5B11DE37F7772": "Azure AI OpenAI Serverless <a href=\"\" id=\"azure_serverless\" />",
  "ACE75F24B64785DACAB8": "Le fournisseur `azure_serverless` prend en charge les modèles OpenAI déployés via les déploiements sans serveur Azure AI Foundry.\nIl supporte l'authentification Entra ID ainsi que par clé.",
  "AB782C81D2C65410E900": "Ce type de déploiement est différent des déploiements **Azure OpenAI** (fournisseur `azure`).",
  "7BE7842A6FFAAAEC452E": "Ouvrez https://ai.azure.com/, ouvrez votre projet et allez à la page **Déploiements**.",
  "C200C450F323299B01A3": "Déployez un **modèle de base** depuis le catalogue.\nVous pouvez utiliser l'option `Options de déploiement` -> `Serverless API` pour déployer un modèle en tant qu'API sans serveur.",
  "ABB4C755D9653BA97EF2": "Déployez un modèle de base OpenAI.\nCela créera également une nouvelle ressource Azure OpenAI dans votre abonnement (qui peut être invisible pour vous, plus d'informations plus tard).",
  "19F37FFABA8D54CD6112": "Mettez à jour le fichier `.env` avec le point de terminaison du déploiement dans la variable `AZURE_SERVERLESS_OPENAI_API_ENDPOINT`.",
  "E980AF50F648855BF172": "Retournez à l'onglet **Présentation** dans votre projet Azure AI Foundry et\ncliquez sur **Ouvrir dans le centre de gestion**.",
  "49C9D35017416FE6F364": "Cliquez sur la ressource **Azure OpenAI Service**, puis cliquez sur le lien externe **Ressource** qui vous ramènera vers le service Azure OpenAI (sous-jacent)\ndans le portail Azure.",
  "3094B7DAA09FA67E5809": "Naviguez vers ",
  "19CFFF5F1CC01998C04D": "Voir mes accès",
  "1A3726243A287F69A1FC": "Utilisateur/Contributeur Cognitive Services OpenAI",
  "B4D9F0B0EF93E70C63E3": "Ajouter",
  "A697A75D1A3CF6FA38EC": "Ajouter une attribution de rôle",
  "98E18A1226A08A2B83EF": "et ajoutez le rôle ",
  "4413DE3D025A1C44B51C": "À ce stade, vous êtes prêt à vous connecter avec Azure CLI et à utiliser l'identité managée.",
  "E77FFE6634293E66AC42": "Les ressources créées par Azure AI Foundry ne sont pas visibles par défaut dans le portail Azure.\nPour les rendre visibles, ouvrez [Toutes les ressources](https://portal.azure.com/#browse/all), cliquez sur **Gérer la vue**\net sélectionnez **Afficher les types masqués**.",
  "B005A346A8BBDFA9FB90": "Installez l'[Azure CLI](https://learn.microsoft.com/en-us/javascript/api/overview/azure/identity-readme?view=azure-node-latest#authenticate-via-the-azure-cli).",
  "B8FAA6E9A487BAF87710": "Ouvrez un terminal et connectez-vous",
  "87F6D31A232B379AE19D": "Ouvrez votre ",
  "BF4BABB6E840242C4B05": "ressource Azure OpenAI",
  "7E6D02B55EE5BCCD7D0C": "et naviguez vers ",
  "A4A1CBA2945903CFC84F": "Gestion des ressources",
  "FA4796C813A52E2A033A": "Clés et point de terminaison",
  "E8C7961B24B2CA0827AC": "Mettez à jour le fichier `.env` avec le point de terminaison et la clé secrète (**Clé 1** ou **Clé 2**) ainsi que le point de terminaison.",
  "E704E70F69980AAA7E1F": "Azure AI Serverless Models <a href=\"\" id=\"azure_serverless_models\" />",
  "60C676DD305510331D26": "Le fournisseur `azure_serverless_models` prend en charge les modèles non-OpenAI, tels que DeepSeek R1/v3, déployés via les déploiements sans serveur Azure AI Foundry.",
  "95259AC9918E9320EB17": "Ouvrez votre ressource **Projet Azure AI** dans le [portail Azure](https://portal.azure.com)",
  "C03D3D4A624ED673344F": "Naviguez vers **Contrôle d'accès (IAM)**, puis **Voir mes accès**. Assurez-vous que votre\nutilisateur ou principal de service dispose du rôle **Développeur Azure AI**.\nSi vous recevez une erreur `401`, cliquez sur **Ajouter**, **Ajouter une attribution de rôle** et ajoutez le rôle **Développeur Azure AI** à votre utilisateur.",
  "C9AF04386472C179AF67": "Configurez l'**URL cible du point de terminaison** en tant que `AZURE_SERVERLESS_MODELS_API_ENDPOINT`.",
  "109429BCC1B754AE3132": "Naviguez vers **déploiements** et assurez-vous que votre LLM est déployé, puis copiez le nom des informations de déploiement, vous en aurez besoin dans le script.",
  "3D65D934821B89DCA815": "Ouvrez https://ai.azure.com/ et ouvrez la page **Déploiements**.",
  "1DE2B3E503820FAE7261": "Configurez l'**URL cible du point de terminaison** en tant que variable `AZURE_SERVERLESS_MODELS_API_ENDPOINT` et la clé dans\n`AZURE_SERVERLESS_MODELS_API_KEY` dans le fichier `.env`\\***\\*.\\*\\***",
  "BF4CCD9BB160FF706EBB": "Trouvez le nom du déploiement et utilisez-le dans votre script, `model: \"azure_serverless_models:deployment-id\"`.",
  "DF40B61943D72D5D8910": "Prise en charge de plusieurs déploiements d'inférence",
  "226B5057DABF152E67FA": "Vous pouvez mettre à jour la variable `AZURE_SERVERLESS_MODELS_API_KEY` avec une liste de paires `deploymentid=key` pour prendre en charge plusieurs déploiements (chaque déploiement ayant une clé différente).",
  "382225491CFF6FD6D47C": "Le fournisseur `anthropic` donne accès aux modèles [Anthropic](https://www.anthropic.com/). Anthropic est une entreprise de recherche en intelligence artificielle qui propose des modèles de langage puissants, y compris la série Claude.",
  "96CF40E62446374953E6": "Pour utiliser les modèles Anthropic avec GenAIScript, suivez ces étapes :",
  "D777E1C813AD5C1189F7": "Inscrivez-vous pour un compte Anthropic et obtenez une clé API depuis leur [console](https://console.anthropic.com/).",
  "E2409040FEE5E7BED87D": "Ajoutez votre clé API Anthropic dans le fichier `.env` :",
  "3B961D08027C93976CEE": "Trouvez le modèle qui correspond le mieux à vos besoins en visitant la [documentation des modèles Anthropic](https://docs.anthropic.com/en/docs/about-claude/models#model-names).",
  "C25CEB6B1920269D89AD": "Le fournisseur `anthropic_bedrock` accède aux modèles Anthropic sur Amazon Bedrock. Vous pouvez trouver les noms des modèles dans la [documentation des modèles Anthropic](https://docs.anthropic.com/en/docs/about-claude/models#model-names).",
  "5DC6BB6745FF659A9466": "GenAIScript suppose que vous avez configuré les identifiants Amazon Web Services (AWS)\nd’une manière que le [SDK AWS Node reconnaîtra](https://docs.aws.amazon.com/sdk-for-javascript/v3/developer-guide/setting-credentials-node.html).",
  "AEC24D0C68E3B1703A7C": "Le fournisseur `alibaba` donne accès aux modèles de [Alibaba Cloud](https://www.alibabacloud.com/).",
  "5A5FE6C7C223594C96B1": "Inscrivez-vous pour un [compte Alibaba Cloud](https://www.alibabacloud.com/help/en/model-studio/developer-reference/get-api-key) et obtenez une clé API depuis leur [console](https://bailian.console.alibabacloud.com/).",
  "808290DE6667D8485F64": "Ajoutez votre clé API Alibaba dans le fichier `.env` :",
  "0759D1A87932BE25C192": "Trouvez le modèle qui correspond le mieux à vos besoins en visitant les [modèles Alibaba](https://www.alibabacloud.com/help/en/model-studio/developer-reference/use-qwen-by-calling-api).",
  "C93DE92B5B11A98FBA13": "Zod Schema",
  "586B17876EBDC36A9ACB": "Apprenez comment définir et convertir des schémas Zod, orientés TypeScript, en schémas JSON",
  "B5E993CDCA9A53F5D9B1": "[zod](https://zod.dev/) est une validation de schéma orientée TypeScript avec inférence de type statique.",
  "3C3AC33E28579EC33628": "Video Alt Text",
  "95FA3733F0919829CEC8": "Apprenez à générer des textes alternatifs pour les vidéos",
  "7F5B61F2BC15D7664B1D": "GenAIScript supporte la [transcription vocale](/genaiscript/reference/scripts/transcription)\net [l'extraction de frames vidéo](/genaiscript/reference/scripts/videos) qui peuvent être combinés pour analyser des vidéos.",
  "41F3D16AE48B91E78F81": "Vidéo Texte Alternatif",
  "F1D4B1A972EE0EC3CC52": "L'attribut vidéo HTML n'a pas d'attribut `alt`.. mais vous pouvez tout de même attacher une description accessible en utilisant l'attribut `aria-label`.\nNous allons créer un script qui génère la description en utilisant la transcription et les frames vidéo.",
  "E9C933C755850D25BCB8": "Transcription",
  "ADC7D85F3D94C57967B9": "Nous utilisons la fonction `transcribe` pour générer la transcription. Elle utilisera l'alias de modèle `transcription` pour calculer une transcription.\nPour OpenAI, le mode par défaut est `openai:whisper-1`.",
  "69BD45A5223198C1BF48": "Les transcriptions sont utiles pour réduire les hallucinations des LLM lors de l’analyse d’images et fournissent également\nde bons candidats pour les timestamps pour capturer une capture d'écran du flux vidéo.",
  "6F0321AED1328C7AF243": "Frames vidéo",
  "AC816B2D00DA4F558972": "L’étape suivante consiste à utiliser la transcription pour capturer des images du flux vidéo. GenAIScript utilise [ffmpeg](https://ffmpeg.org/) pour rendre les images\nassurez-vous qu’il l’est installé et configuré.",
  "79432A1A1971F96645FE": "Contexte",
  "017E058F2DCC94F3850D": "Les deux, transcription et images, sont ajoutées au contexte de l'invite. Étant donné que certaines vidéos peuvent être silencieuses, nous ignorons les transcriptions vides.\nNous utilisons également une faible résolution pour les images afin d'améliorer la performance.",
  "73A3D75AB9F1412D16D5": "Mise en route ensemble",
  "9A116F917F813016D5C0": "Enfin, nous confions la tâche au LLM pour générer le texte alternatif.",
  "AA077DA8C82B0491D393": "En utilisant ce script, vous pouvez générer automatiquement des textes alternatifs de haute qualité pour les vidéos.",
  "8AA37527F2C66A4D7B8C": "Full source",
  "AEF2E82E83C1396FFC3A": "Utilisation des secrets",
  "00401D547ED014CDAE80": "Utilisez des secrets pour augmenter des documents avec TypeScript et les API REST",
  "E35070CCB62600DA2278": "Ce guide montre comment utiliser TypeScript, un service de recherche tiers, et les [secrets](/genaiscript/reference/scripts/secrets) pour créer\nun script qui augmente des documents avec des informations provenant du web.",
  "7202B7AC0961664F79F9": "L'objectif est de créer un script qui augmentera un document existant avec des informations\nrecueillies sur le web.",
  "E7C0CFAD55BCC1A013A8": "Recherche Tavily",
  "2CD06A2E73D53EE6911D": "[Tavily](https://tavily.com/) est un service de recherche optimisé pour les LLM qui fournit une [API REST](https://docs.tavily.com/docs/tavily-api/rest_api).",
  "A530A2C7829C5568D0E6": "L'API REST peut être invoquée en utilisant JavaScript [fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch)\net nécessite une clé API.",
  "D5D7037805C8156D282D": "Le script utilise la clé `TAVILY_API_KEY` qui devra être déclarée dans le script en utilisant cette fonction.",
  "F99620505DAE61947303": "Nous définissons une fonction `tavilySearch` en [TypeScript](/genaiscript/reference/scripts/typescript) qui encapsule l'appel `fetch` et nous ajoutons des annotations de type pour offrir\nune bonne expérience d'édition.",
  "F0E0A9282DF5F30CF43C": "Question -> Recherche -> Augmentation",
  "3934FAF0B238C1F624ED": "Le script est divisé en 3 phases :",
  "ECF3586DFE5AD439B33F": "exécuter une invite pour générer une question basée sur le contenu du document",
  "BFE8FCAD49A8C289198A": "utiliser Tavily pour générer une réponse à la question",
  "CE0E19C6A722EEC26221": "exécuter une invite pour augmenter le document avec la réponse",
  "432AB5381B6844D027D9": "Le secret `TAVILY_API_KEY` nécessaire pour Tavily est déclaré dans l'appel de la fonction `script`.\nAssurez-vous également de l'ajouter à votre fichier `.env`.",
  "5CE26835C5ED59D13F79": "La fonction `tavilySearch` est importée en utilisant un [import](/genaiscript/reference/scripts/imports) dynamique.",
  "3B1F03CD813411B4624A": "Mettre en œuvre la synthèse avec Transformers.js et tirer parti de l'accélération matérielle locale",
  "E3E16D600E6BD56B62DB": "Nous avons temporairement supprimé le support pour `transformers` afin de réduire l'empreinte d'installation.",
  "6FBD2631827B6C30BDAA": "HuggingFace [Transformers.js](https://huggingface.co/docs/transformers.js/index) est une bibliothèque JavaScript qui vous permet d'exécuter des modèles pré-entraînés localement sur votre machine. La bibliothèque utilise [onnxruntime](https://onnxruntime.ai/) pour exploiter les capacités CPU/GPU de votre matériel.",
  "A8D564C1FAE06ECE119C": "Dans ce guide, nous allons montrer comment créer des [résumés](https://huggingface.co/tasks/summarization) à l'aide de la bibliothèque [Transformers.js](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.SummarizationPipeline).",
  "2A017CC50C2ACED417E3": "Transformers.js dispose d'une liste étendue de tâches disponibles. Ce guide n'en couvrira qu'une seule, mais consultez leur [documentation](https://huggingface.co/docs/transformers.js/pipelines#tasks) pour en savoir plus.",
  "E07198176F6A6405A944": "Importer le pipeline",
  "27B03E5B28CD9031D5C7": "L'extrait ci-dessous importe la bibliothèque Transformers.js et charge le pipeline et le modèle de synthèse.\nVous pouvez spécifier un nom de modèle ou laisser la bibliothèque choisir le dernier et le meilleur.",
  "91ABCF9AAA24225D21D3": "L'allocation et le chargement du modèle peuvent prendre un certain temps, il est donc préférable de le faire au début de votre script et une seule fois.",
  "E65491C73D22191ABF08": "Migrez votre script vers `.mjs`",
  "FAAFD26F28A858488F83": "Pour utiliser la bibliothèque `Transformers.js`, vous devez utiliser l'extension `.mjs` pour votre script (ou `.mts` pour la prise en charge de TypeScript).\nSi votre script se termine par `.genai.js`, renommez-le en `.genai.mjs`.",
  "D3BCC63C20C36EDBB731": "Exécuter le pipeline",
  "3D29268E12F34BCE0723": "Le pipeline de synthèse prend un seul argument, le contenu à résumer. Il renvoie un tableau de résumés que nous devons déballer pour accéder au texte final du résumé. C'est ce que nous faisons ci-dessous et `summary_index` contient le texte du résumé.",
  "5DB473E6B2F54A08AD4A": "Agent d'Outil",
  "9E99D41576EF149F0148": "Apprenez à définir un agent intégré utilisant des fonctions pour la prise de décision et le raisonnement dans les opérations arithmétiques.",
  "96DE1FD87884D5581159": "En utilisant les [outils (anciennement fonctions)](/genaiscript/reference/scripts/tools),\nvous pouvez définir un agent intégré capable de prendre des décisions\net d'effectuer un raisonnement basé sur les outils qui lui sont fournis.",
  "8650DDC9021BE9347EB4": "Illustrons ce concept en utilisant l'[exemple de somme et division de llamaindex](https://ts.llamaindex.ai/examples/agent) :\nun agent capable d'additionner ou de diviser deux nombres et qui doit répondre à des questions arithmétiques basiques.",
  "E2D358BE5CE74AF297C9": "Utilisation des outils",
  "DAF3D42C3AC9AE21EFC7": "En déclarant des outils (et en fournissant une description explicative), vous donnez la possibilité \nau LLM de demander un appel d'outil lors de la génération de la sortie. Dans l'extrait ci-dessous,\nnous déclarons un outil capable d'additionner deux nombres. Il sera appelé par le LLM lorsqu'une opération d'addition\nsera nécessaire.",
  "5BDE8118ED092B442F5D": "Vous pouvez également simplifier la définition des paramètres en fournissant un objet exemple et le schéma sera déduit.",
  "247C5EFE59B65EF98507": "Paramètres",
  "4CCDED37BE66C5EB34EC": "La question arithmétique peut être déclarée comme un [paramètre de script](/genaiscript/reference/scripts/variables) à utiliser dans le script de l'agent.",
  "93FDD12CCD348885FD48": "La valeur du paramètre est renseignée dans l'objet `env.vars`.",
  "C8D68F42AC81B72B76AD": "Pour faire simple, nous définissons un autre outil pour diviser deux nombres\net intégrons en ligne une question arithmétique.",
  "18E02269A0187090138D": "📠 appel d'outil `divide({\"a\":15,\"b\":3})` (`call_9p0oWdWpT6vGyxzwq2vJXHrq`)",
  "AD3B244CF0A50BA487E4": "<summary>🛠️ outil <code>call_9p0oWdWpT6vGyxzwq2vJXHrq</code></summary>",
  "42BB05147F9EEBB7773A": "Utilisation de `system.math`",
  "217DE0E25D785161A717": "L'invite système [system.math](/genaiscript/reference/scripts/system#systemmath)\nenglobe le parseur et évaluateur d'expressions `parsers.math` et l'expose comme un outil.",
  "60089B55A1768B77A681": "Cela simplifie le script de l'agent car il n'est plus nécessaire de définir des outils.",
  "AC314DB62FFB2E0B9A7B": "Résumer plusieurs documents",
  "53DB775A3EE7EE51B11A": "Apprenez comment exécuter un GenAIScript sur plusieurs documents",
  "28EFCD58994A47DCEA76": "Supposons que j'ai un répertoire contenant plusieurs fichiers `.pdf` (ou autres) et que je veux exécuter un GenAIScript sur tous.\nDans cet exemple, je génère un tweet accrocheur pour chaque document et je veux enregistrer le tweet dans un autre fichier.",
  "1408190260688B35CC56": "Développement",
  "4B7332B3F729E2D7384C": "Utilisez la commande `> GenAIScript : Créer un nouveau script...` dans la palette de commandes pour créer un nouveau script.",
  "ACDA4A99532ED7443800": "C'est un script simple. En supposant que le script prenne le fichier en argument,\nvous pouvez référencer cet argument dans `env.files` et indiquer au LLM ce qu'il doit en faire :",
  "57BE7D4045BA67E8AED2": "Faites un clic droit sur le document dans l'explorateur VS Code (cela peut être un fichier `.pdf`, `.docx` ou `.md`\ncar `def` sait lire et analyser tous ces formats).\nSélectionnez **Exécuter GenAIScript**. Sélectionnez le script `gen-tweet` que vous venez d'écrire.",
  "650E1D979CB724C78F9E": "Si l'on donne au GenAIScript un article décrivant GenAIScript, la sortie s'affichera dans un nouvel onglet de document.",
  "793333A5F9E5BFA3DB56": "Comme nous n'avons pas demandé au LLM d'écrire la sortie dans un fichier, elle sera par défaut envoyée vers la sortie standard.",
  "6CB1B37F77C78C63D1DF": "Nous pouvons exécuter le script depuis la [ligne de commande](/genaiscript/reference/cli/) :",
  "CC4A6954068DCE316716": "La sortie sera affichée dans le terminal.",
  "F1E0041F2DAA4B669A3A": "Maintenant que le script fonctionne pour un fichier unique, nous pouvons utiliser la ligne de commande pour l'appliquer à une liste\nde fichiers. Supposons que vous commenciez avec un fichier `ex1.pdf` et que vous souhaitiez la sortie dans un nouveau fichier `ex1.tweet.md`.\nLa façon de procéder dépend du shell ou du script que vous préférez.",
  "674A919FCC03BEA09AE6": "Ce script nécessite [zx](https://github.com/google/zx).",
  "3847B26D415CC015E17E": "Partage de scripts",
  "01A22B94A78A29EB4E28": "Apprenez comment partager des scripts GenAIScript entre projets en utilisant des dépôts Git, des sous-modules et des Gists GitHub.",
  "9D946E9C461B43FD67B2": "Les scripts GenAIScript sont des fichiers et peuvent être partagés comme n'importe quel autre fichier de code.",
  "23C5CC805FAC39A1F8D0": "Tant que les fichiers de script se trouvent dans le dossier du projet, GenAIScript cherchera les fichiers `**/*.genai.js` et `**/*.genai.mjs`.",
  "0E6B9D5940B66E0DC99D": "Voici quelques idées pour partager des fichiers.",
  "2339EE32203423AA0B4C": "Dépôt Git + sous-modules",
  "3F057A8ABD2F12230F2E": "Si vous stockez vos scripts dans un dépôt git, vous pouvez utiliser les sous-modules git pour les partager entre plusieurs projets.",
  "19A12EA6246B7E03A8C8": "dépôt contenant votre script (par exemple `https://.../shared-scripts`)",
  "3D893162AFA6301F9E63": "shared-scripts/ dépôt git `https://.../shared-scripts`",
  "3E4C52CBC724B0E0C2B2": "genaisrc/",
  "522882C030D27A81135B": "my-script.genai.mjs",
  "796F8025DC34EBDC4B22": "référencement de `shared-scritps` comme sous-module git",
  "BE46632248C939798BDC": "my-project/",
  "624C68471D040D189172": "src/",
  "2F167116D5FCB9C506B3": "shared-scripts/ sous-module git [https://github.com/.../shared-scripts](https://github.com/.../shared-scripts)",
  "A190FE50C52D7E4C394E": "my-script.genai.mjs\n          ...",
  "E993B6B6AE1E2054A46A": "Gists GitHub",
  "F8159945FB709DFB3A8B": "[Gists](https://gist.github.com/) est un moyen léger de partager quelques fichiers.",
  "0D95885C47EA5FEC2D00": "Recherche et Transformation",
  "3A31F85C378B550CA40B": "Apprenez à rechercher et transformer des données dans vos sources de données.",
  "E87C378BBD475E8CB31D": "Ce script est une évolution de la fonctionnalité « rechercher et remplacer » d'un éditeur de texte, où l'étape de « remplacement » a été remplacée par une transformation LLM.",
  "14134E6BB5A41997D8C3": "Il peut être utile d'appliquer en batch des transformations de texte qui ne sont pas facilement réalisables avec des expressions régulières.",
  "9FC2522ED87009D79960": "en",
  "2BFD752DBA2A30539FEC": "Il est possible de faire correspondre cet appel de fonction avec une expression régulière",
  "AE900741E316D3D85159": "mais il n'est pas facile de formuler la chaîne de remplacement... à moins que vous ne puissiez la décrire en langage naturel :",
  "6FA03205A744AF4E1D73": "Voici quelques exemples de transformations où le LLM a correctement géré les variables.",
  "474004B493AC39A1F13B": "concaténer les arguments d'un appel de fonction en une seule chaîne",
  "868302DD05EF2DF6C81A": "concaténer les arguments et utiliser la syntaxe `${}` pour interpoler les variables",
  "358C4329BB270D3DB2B4": "Recherche",
  "C1EDABE900D233944C46": "L'étape de recherche est réalisée avec [workspace.grep](/genaiscript/reference/scripts/files) qui permet de rechercher efficacement un motif dans des fichiers (c'est le même moteur de recherche qui alimente la recherche de Visual Studio Code).",
  "874762802C3784628358": "Calculer les transformations",
  "CCAB5C9B45ADB08F803F": "La seconde étape consiste à appliquer l'expression régulière au contenu du fichier et à pré-calculer la transformation LLM de chaque correspondance en utilisant un [prompt en ligne](/genaiscript/reference/scripts/inline-prompts).",
  "67E7A39BD460DF46C61D": "Comme le LLM décide parfois d'entourer la réponse de guillemets, nous devons les supprimer.",
  "C69B2391F18165CF52AB": "Transformation",
  "99416BEA3BDFBB41B1A7": "Enfin, avec les transformations pré-calculées, nous appliquons un remplacement regex final pour corriger l'ancien contenu du fichier avec les chaînes transformées.",
  "EB9D51F4D9BC784C2CCD": "Paramètres",
  "6F6793431E8BAAF89AD2": "Le script prend trois paramètres : un glob de fichiers, un motif à rechercher, et une transformation LLM à appliquer. Nous déclarons ces paramètres dans les métadonnées du `script` et les extrayons de l'objet `env.vars`.",
  "7270F4EFECEC7E78C129": "Pour exécuter ce script, vous pouvez utiliser l'option `--vars` pour passer le motif et la transformation.",
  "2672FA5DC0813301F210": "Recherche et récupération",
  "09142411F1D850E955FE": "Apprenez à exploiter la recherche web et la récupération de pages dans GenAIScript",
  "CFC6F602B6B4CA3E41AD": "Supposons que nous souhaitions planifier un voyage de week-end en utilisant un GenAIScript qui\nnous aidera à organiser ce voyage en utilisant la recherche web pour découvrir des activités à faire et la météo prévue.",
  "23368AD1C92DA23C0BD6": "Vous aurez besoin d'une [clé API Bing Web Search](/genaiscript/reference/scripts/web-search) pour utiliser `webSearch`.",
  "7782D9D5448E9AA6107E": "Commencez le script en définissant le modèle et le titre :",
  "1151BBC45437AFB7095F": "Utilisez la fonction [`webSearch`](/genaiscript/reference/scripts/web-search/) pour\nchercher des informations sur la destination.\nSi vous n'en avez pas, vous pouvez rechercher les pages web manuellement et utiliser les URL directement\ndans l'appel à la fonction `host.fetchText`.",
  "374709771A364DD4BC32": "`webSearch` renvoie une liste d'URL. Utilisez [`fetchText`](/genaiscript/reference/scripts/fetch/)\npour récupérer le contenu de la 1ère URL.",
  "DC2BA781CEBC786B6EE1": "`host.fetchText` retourne beaucoup de balises HTML de formatage, etc.\nUtilisez [`runPrompt`](/genaiscript/reference/scripts/inline-prompts/)\npour appeler le LLM afin de nettoyer ces balises et ne garder que le texte.",
  "6AA175C154494D67D9C0": "Répétez pour obtenir les dernières informations météo sur votre destination.",
  "18BD1527793E18288C3A": "Remplacez le texte `\"TELL THE LLM WHAT TO DO...\"` par le type de\nvacances que vous souhaitez planifier.",
  "FE51EF9095FA22B95F19": "Appuyez sur le bouton \"Run\" en haut à droite de l'éditeur pour exécuter le script.\n(Vous pouvez exécuter ce script de cette manière car il ne nécessite aucune autre entrée dans `env.files`))",
  "30EC0214C1FB97C5024F": "La sortie sera affichée dans un nouvel onglet de document.",
  "DE5993F42E26EB14BA29": "Voici un exemple de sortie que vous pourriez obtenir :",
  "6C7D397DB659E04DA32F": "Voici le GenAIScript complet :",
  "A493FED8762C0DB42756": "Invitez en tant que code",
  "45A83780D4754233A945": "Tutoriel sur l'utilisation du runtime et de la syntaxe GenAIScript pour assembler des invites",
  "941A1E982AF9A323435F": "Cette page est un tutoriel sur la création d'invite avec GenAIScript. Il est conçu pour être ouvert dans Visual Studio Code sous forme de carnet (Notebook).",
  "398F2C7A08216F97DC28": "Pour suivre ce tutoriel dans Visual Studio Code,",
  "BA02B1ADCF39CEC78A2D": "Suivez les étapes dans [installation](/genaiscript/getting-started/installation) et [configuration](/genaiscript/getting-started/configuration) pour configurer votre environnement.",
  "14795BA9F8EDA9A23D2F": "Ouvrez la palette de commandes (Ctrl+Shift+P) et exécutez la commande `GenAIScript: Create GenAIScript Markdown Notebook`.",
  "DE503DFE6AE1811AB66F": "À propos des carnets GenAIScript Markdown",
  "819C6C7E8F8645109A45": "Le [GenAIScript Markdown Notebook](/genaiscript/reference/scripts/notebook) analyse le document markdown en une vue Carnet et utilise le support de Visual Studio Code pour offrir une expérience d'édition enrichie. Il devrait fonctionner avec tout fichier markdown tant que le bloc de code utilise \"\\`\\`\\`\".",
  "DA086A817AC089CCC1DA": "Chaque bloc de code **JavaScript** est un GenAIScript autonome qui peut être exécuté individuellement. Les résultats sont attachés à chaque bloc de code et sauvegardés dans le fichier markdown.",
  "42A3665290E06BF5061A": "Ceci est un noyau sans état, donc les variables ne sont pas partagées entre les blocs de code.",
  "269C9289A806C997D8BF": "D'autres langages ne sont pas pris en charge dans ce carnet et sont simplement ignorés.",
  "ECAB000C79194410F1DD": "`$`",
  "00FD177A8F0D1010E8DE": "Vous pouvez exécuter le bloc de code en cliquant sur le bouton **Exécuter la cellule** en haut à gauche du bloc de code. Par défaut, il utilisera le LLM `openai:gpt-3.5-turbo`. Si vous devez utiliser un modèle différent, mettez à jour le champ `model` dans les métadonnées en tête de document. De nombreuses options sont documentées dans [configuration](/genaiscript/getting-started/configuration).",
  "96E6D450F991D51AAE60": "Dans GenAIScript, la variable [`env.files`](https://microsoft.github.io/genaiscript/reference/scripts/context/#environment-env) contient la [liste des fichiers en contexte](/genaiscript/reference/scripts/files), qui peut être déterminée par une sélection utilisateur dans l'interface, des arguments CLI, ou préconfigurée comme dans ce script. Vous pouvez modifier les fichiers dans `env.files` en éditant le champ `files` dans les métadonnées en début de document.",
  "7DC5A5A5EB9E466802C4": "Filtrage",
  "008A83F04EF30A6497BF": "Présentez Mon Code",
  "8F918D560CA7D3D1AE3A": "Instructions étape par étape pour présenter efficacement du code en utilisant GenAIScript et créer des diapositives attrayantes.",
  "B5B88DDEEF7F02BF9A48": "Enregistrez le script ci-dessous dans votre projet sous le nom `genaisrc/slides.genai.js`.",
  "34902919099581E8776E": "Cliquez avec le bouton droit sur le fichier ou dossier de code, sélectionnez **Run GenAIScript...** puis choisissez **Generate Slides**.",
  "2DFECD62BB88E1FB2FF2": "Appliquez la refactorisation pour enregistrer le fichier de diapositives généré.",
  "8EA99133D1550215E383": "Pour visualiser les diapositives, installez l'[extension vscode-reveal](https://marketplace.visualstudio.com/items?itemName=evilz.vscode-reveal).\nOuvrez le fichier de diapositives et cliquez sur **slides** dans la barre d'état.",
  "E29C438B631E0DE04069": "Apprenez comment intégrer Phi-3 Mini, un modèle performant de 3,8 milliards de paramètres développé par Microsoft, avec Ollama pour exécuter localement des modèles d'IA à la pointe de la technologie.",
  "2C5C71C6C617E017FD7A": "[Phi-3 Mini](https://azure.microsoft.com/en-us/blog/introducing-phi-3-redefining-whats-possible-with-slms/) est un modèle ouvert léger et à la pointe, avec 3,8 milliards de paramètres, développé par Microsoft. Dans ce guide, nous utilisons [Ollama](https://ollama.com/), une application de bureau qui vous permet de télécharger et d'exécuter localement des modèles.",
  "7D176C22335645A3834B": "Lancez l'application Ollama ou exécutez la commande pour démarrer le serveur depuis un terminal.",
  "4E6C1B830AAB965762C9": "(optionnel) Récupérez votre modèle depuis le serveur Ollama (voir la [liste des modèles](https://ollama.com/library)). GenAIScript tentera automatiquement de le récupérer s'il est absent.",
  "D62A68AAE9818A51A6A9": "Mettez à jour votre script pour utiliser le modèle `ollama:phi3`.",
  "9CA04F6FE017FBB49D96": "Appliquez ce script aux fichiers que vous souhaitez résumer !",
  "9FE8B480D12869310B8F": "L'extraction de markdown à partir de fichiers PDF est une tâche délicate... le format de fichier PDF n'a jamais vraiment été conçu pour être relu.",
  "B82E500B6E09509EC63B": "De nombreuses techniques sont utilisées dans le domaine pour obtenir les meilleurs résultats :",
  "152C9C0466F6B81AA375": "on peut lire le texte en utilisant [pdfjs de Mozilla](https://mozilla.github.io/pdf.js/) (GenAIScript utilise cela), ce qui peut donner certains résultats mais le texte peut être brouillé ou pas dans le bon ordre. Et les tableaux sont un défi. Et cela ne fonctionnera pas pour les PDF qui ne contiennent que des images.",
  "A9A5FCE52AE019FBD890": "une autre technique serait d'appliquer un algorithme OCR sur des segments de l'image pour « lire » le texte rendu.",
  "C67074274836FF1D00E5": "Dans ce guide, nous allons construire un GenAIScript qui utilise un LLM avec support visuel pour extraire le texte et les images d'un PDF, en convertissant chaque page en markdown.",
  "EF8A71358E25C9D64750": "Supposons que l'utilisateur exécute notre script sur un fichier PDF, il s'agit donc du premier élément de `env.files`.\nNous utilisons le parseur PDF pour extraire à la fois les pages et les images du fichier PDF. L'option `renderAsImage` est définie sur `true`, ce qui signifie que chaque page est également convertie en image.",
  "1116DA70722F95D629F3": "Nous commençons une boucle qui itère sur chaque page du PDF.",
  "AEF94272D418531950AD": "À chaque itération, nous extrayons la page courante et son image correspondante.\nNous utilisons la fonction `runPrompt` pour traiter à la fois les données textuelles et visuelles.",
  "B22A6EE5CD5505F3FC31": "Le contexte `ctx` est configuré avec des définitions pour la page courante, et éventuellement les pages précédente et suivante. Les images sont définies avec un recadrage automatique et des ajustements en niveaux de gris.",
  "A82F2713601D206E8CAA": "Cette invite demande à GenAI de convertir l'image de la page en markdown. Elle met en avant l'utilisation de `pdfjs-dist` pour l'extraction du texte et indique comment gérer le texte, les tableaux et les images.",
  "1CEC18EA8A720643EC25": "Nous configurons le modèle avec des paramètres spécifiques, tels que l'étiquetage de chaque page, les réglages de cache, et les configurations système pour la sécurité.",
  "4C6B4AB8544CECA51920": "Chaque résultat est traité, reconverti en markdown, puis ajouté au tableau `ocrs`.",
  "C1A7AFBB3EE081A080E0": "Enfin, nous affichons tous les résultats OCR collectés au format markdown.",
  "4B92D43BE970281F4758": "Pour exécuter ce script avec le CLI GenAIScript, ouvrez votre terminal et lancez la commande :",
  "6691C0EA1B5829E513D4": "Pour plus de détails sur l'installation et la configuration du CLI GenAIScript, consultez la [documentation officielle](https://microsoft.github.io/genaiscript/getting-started/installation).",
  "4711491F729B68C44C40": "Ce script offre un moyen simple de convertir des PDF en markdown, facilitant ainsi la manipulation programmatique de leur contenu. Bon codage ! 🚀",
  "0965D9C13B816D919291": "Le code source complet du script est disponible ci-dessous :",
  "A7B6BB7216364CD08BC7": "LLM comme un outil",
  "ADB7ADAE2C4C489D9DCF": "Créer des outils et des invites en ligne utilisant des modèles LLM pour exécuter diverses tâches",
  "E31233FD740B0B3D59F1": "Il est possible [d'outils](/genaiscript/reference/scripts/tools)\net [d'invites en ligne](/genaiscript/reference/scripts/inline-prompts)\nde créer un outil qui utilise un modèle LLM pour exécuter une invite.",
  "D032B5132E5897FD3800": "Le modèle `\"small\"` est un alias qui peut être configuré dans les métadonnées du `script`, les arguments CLI ou les variables d'environnement.",
  "B4530D9E03D19B61C7BF": "Les invites en ligne peuvent déclarer leurs propres outils ou utiliser des invites système en les déclarant.",
  "E0CE5C1EE86F244D18E3": "Agents LLM",
  "A268A1A28ADA7AF78846": "Apprenez comment utiliser les invites en ligne pour créer un agent LLM.",
  "EC7CCC9AEF5A54255D05": "Un **[agent](/genaiscript/reference/scripts/agents)** est un type spécial de [outil](/genaiscript/reference/scripts/tools) qui utilise une [invite en ligne](/genaiscript/reference/scripts/inline-prompts) et des [outils](/genaiscript/reference/scripts/tools) pour accomplir une tâche.",
  "09C3E0452A7BFBA66F70": "Nous voulons créer un script capable d'enquêter sur les échecs des exécutions les plus récentes dans un dépôt GitHub utilisant GitHub Actions.\nPour cela, nous aurons probablement besoin des agents suivants :",
  "1CAAD81624AC91E61370": "interroger l'API GitHub, `agent_github`",
  "6AD6D901F4D35AD47ADB": "calculer un diff git pour déterminer quels changements ont cassé la build, `agent_git`",
  "93EFB850A34DC889B731": "lire ou rechercher des fichiers `agent_fs`",
  "CFF27A7EC4F176467FE7": "Chacun de ces agents est capable d'appeler un LLM avec un ensemble spécifique d'outils pour accomplir une tâche.",
  "CCA9398B4B8E0A448254": "Plusieurs instances du même agent",
  "3B52F6230609A5F32E5F": "Certains agents, comme `agent_git`, peuvent être instanciés avec différents paramètres, comme travailler sur différents dépôts.",
  "A7C0B7648D02D28465AB": "Dans ce cas, assurez-vous de fournir un argument `variant` qui sera utilisé pour générer un nom d'agent unique.",
  "FEC1D19CCEE4249CB45E": "Diviser ou ne pas diviser",
  "3F9BABDFC97E45DC0E1E": "Vous pouvez essayer de charger tous les outils dans le même appel LLM et exécuter la tâche comme une seule conversation LLM.\nLes résultats peuvent varier.",
  "7FBD45B76EE372207116": "Llama Guard vos fichiers",
  "EE7CA115BA8C90EAAE65": "Automatisez le processus de vérification de vos fichiers pour détecter les contenus nuisibles avec Llama-guard3.",
  "01682CF6B83173A09374": "[Llama-guard3](https://ollama.com/library/llama-guard3) est un modèle LLM spécialisé dans la détection de contenus nuisibles dans le texte.\nLe script que nous discutons vise à appliquer en lot llama-guard à vos fichiers.",
  "0162C91B050B7450252A": "En automatisant ce processus, vous pouvez gagner du temps et vous concentrer uniquement sur les fichiers nécessitant une attention particulière.",
  "5555B4FA87FCDD50A84E": "Explication ligne par ligne du script 📜",
  "345B295FB822143B64AE": "Plongeons dans le script GenAI et comprenons ses composants :",
  "FEBAA9F8DA8E628C7774": "Ici, nous parcourons chaque fichier disponible dans le tableau `env.files`, qui contient les fichiers que vous souhaitez vérifier.",
  "BC2CE684829403F0D7DC": "Ce bloc utilise le modèle GenAI [ollama:llama-guard3:8b](https://ollama.com/library/llama-guard3) pour analyser le contenu de chaque fichier. La fonction `prompt` envoie le fichier au modèle, et différentes options sont définies pour spécifier le modèle, étiqueter le fichier, et gérer le cache.",
  "4BF48CF7F533A594740E": "Le script vérifie si l'analyse du modèle considère le fichier comme sûr en recherchant le mot \"safe\" dans le texte de la réponse tout en s'assurant que \"unsafe\" n'y figure pas.",
  "363E32C1D06ECE57DFC3": "Si un fichier est jugé dangereux, ses détails sont affichés dans la console.",
  "2CC042F7E80DACD4EBC3": "Exécution du script avec le CLI GenAIScript 🚀",
  "8F5C5B5719330B1C94D4": "Pour exécuter ce script, vous devez utiliser le CLI GenAIScript. Si vous ne l'avez pas encore installé, suivez le [guide d'installation](https://microsoft.github.io/genaiscript/getting-started/installation).",
  "ED54FD7A26EF42A41570": "Une fois installé, exécutez le script avec la commande suivante :",
  "BA8EA33E2D599D698C48": "Cette commande vérifie tous les fichiers correspondant à \"\\**/*.ts\" et vous informe de ceux qui ne sont pas sûrs.",
  "8E65857C9A1C2CA4562B": "Bon codage et restez en sécurité ! 🛡️",
  "67FE1CC875E1497A1028": "Le Prompting est du codage",
  "ADD59A3EB071DEFB4331": "Boîte à outils JavaScript pour travailler avec les prompts",
  "9D9A2A93F6B3BB74EBFF": "Abstraction pour le rendre facile et productif",
  "C0E6E5480139D9413121": "Intégration transparente avec Visual Studio Code ou console de commande flexible",
  "C585B3B78DFD00D2690E": "Bonjour le monde",
  "07FC107DB3C8B1498AD3": "Installez l'[extension Visual Studio Code ou le CLI](/genaiscript/getting-started/installation/) pour commencer.",
  "E48F5F527238FE08B671": "Configurez les [secrets](/genaiscript/getting-started/configuration) pour accéder à vos LLMs.",
  "D3CA7C077462E00E5404": "Suivez [Getting Started](/genaiscript/getting-started/your-first-genai-script/) pour écrire votre premier script.",
  "976578E7B059F1EDAF47": "Apprenez-en davantage sur GenAIScript dans la [Référence Scripting](/genaiscript/reference/).",
  "4EA0C1B29448F3EFEAEE": "Dernières nouvelles",
  "28646F54A6884B25D060": "Syntaxe minimale pour construire des prompts en utilisant [JavaScript](/genaiscript/reference/scripts/) ou [TypeScript](/genaiscript/reference/scripts/typescript).",
  "6D7A6EBF36CEFFD2E907": "Éditez, [Déboguez](/genaiscript/getting-started/debugging-scripts/), [Exécutez](/genaiscript/getting-started/running-scripts/), [Testez](/genaiscript/getting-started/testing-scripts/) vos scripts dans [Visual Studio Code](/genaiscript/getting-started/installation) ou avec une [console de commande](/genaiscript/getting-started/installation).",
  "311DFDB206F197BF98D5": "Enregistrez des fonctions JavaScript comme [outils LLM](/genaiscript/reference/scripts/tools/) (avec fallback pour les modèles qui ne supportent pas les outils).",
  "43F4E1D0079999922FD9": "Utilisez des [outils](https://modelcontextprotocol.io/docs/concepts/tools) exposés dans des [Serveurs de Fournisseurs de Contexte de Modèle](/genaiscript/reference/scripts/mcp-tools).",
  "A9D2FBD1235E55F639B1": "Chaque script est un [Outil Fournisseur de Contexte de Modèle](/genaiscript/reference/scripts/mcp-server).",
  "B678BCA2EF313CBEF032": "Combinez des [outils](/genaiscript/reference/scripts/tools) et des [prompts en ligne](/genaiscript/reference/scripts/inline-prompts/) dans un [agent](/genaiscript/reference/scripts/agents).",
  "3F8C0C10650EE1F6A2FE": "Les scripts sont des [fichiers](/genaiscript/reference/scripts/) ! Ils peuvent être versionnés, partagés, forkés, ...",
  "CF6F905F955EAE5F28C8": "genaisrc",
  "8FB497E178C825A373FC": "un-autre-super-script.genai.mjs",
  "F096F5D66D4D22E30322": "Définissez, validez, réparez des données en utilisant des [schémas](/genaiscript/reference/scripts/schemas).",
  "0D9F0C1264080827161B": "Manipulez [des PDFs](/genaiscript/reference/scripts/pdf), [des DOCX](/genaiscript/reference/scripts/docx), ...",
  "23E564E1EE3AA88ED917": "Manipulez des données tabulaires provenant de [CSV](/genaiscript/reference/scripts/csv), [XLSX](/genaiscript/reference/scripts/xlsx), ...",
  "8D02667B216FE1CBE71D": "Transcrivez automatiquement des audios ou vidéos en utilisant [OpenAI](/genaiscript/configuration/openai) ou [d'autres solutions](/genaiscript/configuration/whisperasr).",
  "FBAF8D8550C31D8E79E4": "Incluez des images dans les prompts, nous les recadrerons/redimensionnerons automatiquement pour vous.",
  "F9046BB2E60C354F19D1": "Extrayez des images fixes à partir de vidéos en utilisant des timestamps ou même des transcriptions.",
  "0545FFBA9FAA2EBCBCD8": "Extrayez des fichiers et comparez les différences depuis le résultat du LLM. Prévisualisez les modifications dans l'interface de refactorisation.",
  "35593770DE44FDE7AC8B": "poem.txt extrait par genaiscript",
  "BB1E71D4EB47035D2366": "Effectuez des recherches Grep ou Fuzzy dans des [fichiers](/genaiscript/reference/scripts/files).",
  "87A595332CAD0686EEF4": "[Faites des recherches Web](/genaiscript/reference/scripts/web-search) en utilisant Bing ou Tavily.",
  "FAFC21AFAAC22AFFCF2A": "Naviguez et scrappez le web avec [Playwright](/genaiscript/reference/scripts/browser).",
  "5B3D7BFBE76365A13DC3": "[Recherche vectorielle intégrée](/genaiscript/reference/scripts/vector-search/) en utilisant une base de données locale ou [Azure AI Search](https://learn.microsoft.com/en-us/azure/search/search-what-is-azure-search).",
  "F33B590E2B24A0C920CB": "GenAIScript offre des prompts systèmes intégrés pour une IA Responsable ainsi qu'un support de Validation de Sécurité de Contenu Azure pour valider la [sécurité du contenu](/genaiscript/reference/scripts/content-safety).",
  "F356583BADCE456E2EFF": "Exécutez des modèles via GitHub en utilisant [GitHub Models](/genaiscript/configuration/github) ou [GitHub Copilot](/genaiscript/configuration/github-copilot-chat).",
  "6BA1886A9CF0C5DD3885": "Exécutez des modèles issus de [Azure AI Foundry](https://ai.azure.com/), [Google](https://aistudio.google.com/), [Anthropic](https://www.anthropic.com/), [Alibaba](https://www.alibaba.com/), et bien d'autres. Consultez [Configuration](/genaiscript/getting-started/configuration/).",
  "74C691D1ECA16F59C31D": "Exécutez vos scripts avec des [modèles Open Source](/genaiscript/getting-started/configuration/), tels que [Phi-3](https://azure.microsoft.com/en-us/blog/introducing-phi-3-redefining-whats-possible-with-slms/), en utilisant [Ollama](https://ollama.com/), [LocalAI](https://localai.io/), ...",
  "6CEAB386D8B6C4E80AA5": "Laissez le LLM exécuter du code dans un environnement d'exécution isolé.",
  "37FF2484EE0AECCBE5BE": "Exécutez du code dans des [conteneurs Docker](/genaiscript/reference/scripts/container).",
  "7D7455C98AE2DF19B823": "[Exécutez des LLMs](/genaiscript/reference/scripts/inline-prompts/) pour construire vos prompts LLM.",
  "A131BDE26006ABBB3BF2": "[Générez des images](/genaiscript/reference/scripts/image-generation) en utilisant OpenAI DALL-E ou autres outils.",
  "ABD3E10EBE4173955730": "Classifiez du texte, des images ou un mélange des deux.",
  "F5184BC9B091F4192AFA": "Convertissez des fichiers [Prompty](https://prompty.ai/) en utilisant GenAIScript.",
  "BA5E62FB55E3CA7A26E7": "Analysez vos discussions pour détecter la présence de secrets en utilisant le [scanning de secrets](/genaiscript/reference/scripts/secret-scanning).",
  "75C3C7250EA28E6B9DBD": "Automatisez avec le [CLI](/genaiscript/reference/cli), intégrez des rapports à votre pipeline CI/CD.",
  "79EFE3E129F5B7ECD006": "Intégrez des [vérifications Pull Requests](/genaiscript/reference/cli/run/#pull-requests) via commentaires, revues ou mises à jour de descriptions. Prend en charge GitHub Actions et les pipelines Azure DevOps.",
  "48504FD8ABA6F471462E": "Construisez des prompts fiables en utilisant des [tests et évaluations](/genaiscript/reference/scripts/tests) grâce à [promptfoo](https://promptfoo.dev/).",
  "390E4F0EA825CA3237D9": "Études de cas",
  "714661D80B6EE4300160": "Histoires du monde réel utilisant GenAIScript.",
  "B0C0160EFBC37A115B5A": "Scripts complets prêts à être utilisés.",
  "694AD53E47386772C657": "Guides",
  "091242EB74961B6F2659": "Un recueil de recettes pour faire de vous un as du scripting.",
  "E00645F7D31B39573EAF": "Agents",
  "C35CAD7E23C75B58C585": "Documentation adaptée aux LLMs",
  "689FD1BF6AC0E32C1E42": "Si vous êtes un crawler LLM, récupérez [https://microsoft.github.io/genaiscript/llms.txt](https://microsoft.github.io/genaiscript/llms.txt) pour obtenir une carte de la documentation ou ajoutez le suffixe `.md` à toute URL de documentation pour obtenir un contenu brut au format markdown.",
  "4CA01BBA84BA2D6167EE": "Par exemple, [https://microsoft.github.io/genaiscript/guides/prompt-as-code.md](https://microsoft.github.io/genaiscript/guides/prompt-as-code.md) (notez l'extension .md).",
  "80439DCB786307B5709E": "agents-oct2024",
  "E4C48FB464F5E871017F": "ast",
  "57C78989A6BD7DCF06EA": "par défaut",
  "E289BABBFBCE36D26612": "eng-juillet2024",
  "94A1DB9EE345E1AB2709": "février2025",
  "84A95780FC9A25850D5C": "garage-août2024",
  "695AE759F995BD6F5093": "msr-eng-mai2024",
  "FA9BF6431A94434F70DF": "réseautage-avril2024",
  "7AE7C5C762FD27E96254": "aperçu-juin2024",
  "EFEA9D81399E74C2548B": "aperçu-mai2024",
  "D8812B832BAD1DE7DA1F": "pnw-plse-mai2024",
  "9CFEEFD45C796E1A4D31": "seattlejs-janvier2025",
  "CEBC7B5BBC7A4436C45D": "vs-aua",
  "B11D73C013F4D5981302": "l'Extension Visual Studio Code ou le CLI",
  "8ADDC2A38EF584ED4C34": "En savoir plus sur GenAIScript dans la ",
  "B8C8856F207A1231E85D": "Référence du Scripting",
  "B2EB1FE885A2D355BC70": "Syntaxe minimale pour construire des prompts en utilisant ",
  "ECA96E051258FDE72C41": "JavaScript",
  "A8943292A0F243EAB038": "ou ",
  "579D16F54A391FAC0A95": "Exécuter",
  "BA65C0790367D9C45C84": "Tester",
  "B6C0A29A4229EC7951F6": "vos scripts dans ",
  "48CC6731101248947598": "ou avec une ligne de commande ",
  "11BB6D7576532DEBC315": "Inscrire des fonctions JavaScript comme ",
  "EE06A7F806BE2316D177": "outils LLM",
  "B26199BE23EECA25661B": "outils",
  "5744EBC333DA40E3C7A6": "exposés dans ",
  "9CC7A1764C865FEF9201": "les serveurs Model Context Provider",
  "72A91B666662A209FBED": "Chaque script est un ",
  "50D64FD91E98847016F6": "outil de Model Context Provider",
  "F612446BC683C85864F8": "Combiner ",
  "FCDBC4FEBC896E7DA8B3": "prompts en ligne",
  "2816AB500296DD356C18": "dans un ",
  "14EA9660A87EA8B70CA7": "agent",
  "69DF32358B1B532A430D": "Les scripts sont ",
  "E340DB0CC4A4FA759A7C": "fichiers",
  "9865652B0E83FC3FB266": "genaisrc",
  "91BAE9ECC2233BC74FA5": "schémas",
  "709924983FE40AE38AFE": "Manipuler ",
  "32F3C95AAD7EFE3A59CE": "des fichiers PDF",
  "C07200226048DE5AAEF5": "des fichiers DOCX",
  "8E6A9730C1660CD941F1": "Manipuler des données tabulaires issues de ",
  "4C5C01B4E1CF1F3D513A": "CSV",
  "8A925132AD2FC3E10BD7": "XLSX",
  "57FA0DF3DF19B547DAD1": "Transcrire automatiquement des audios ou vidéos en utilisant ",
  "EC6E144537AF4D006851": "OpenAI",
  "5910BB0CCD237322D83E": "d'autres méthodes",
  "BC45E3209D7494EB9429": "Faire des recherches grep ou floues sur des ",
  "ED801E04F1F44C5B0E30": "Recherche Web",
  "2602CE1316AD0997658F": "Naviguer et extraire des données du web avec ",
  "CA099DFFDF7BD981F8F9": "Playwright",
  "BD5420CDB5826E5E3EBC": "Recherche vectorielle",
  "34783660762C00A9AB8A": "en utilisant une base de données locale ou ",
  "CE9EF38A93B73B032768": "GenAIScript fournit des prompts intégrés pour un système d'intelligence artificielle responsable et des supports de sécurité de contenu Azure\npour valider ",
  "4F37F8E7EEE882C5DD3A": "la sécurité du contenu",
  "2DC42FF6559802DEAC5A": "Exécuter des modèles via GitHub en utilisant ",
  "E97D72A00EE452005B7B": "GitHub Copilot",
  "C20A793669BB1F678957": "Exécuter des modèles à partir de ",
  "7E434853C82900BF0AE2": "Google",
  "0B0E077F4CAB6B229A15": "Anthropic",
  "0C00229752D52CE59AC7": "Alibaba",
  "490CC07C5C0B99A97B3D": "Exécuter vos scripts avec des ",
  "9C298AEF038773B18EDD": "modèles Open Source",
  "61C4D2D596783A7D0259": "Phi-3",
  "D60752E0E7610FDAE5F0": "Exécuter du code dans des ",
  "4171E124900620299C95": "conteneurs Docker",
  "08A2E8126D5D3F9B4DD3": "Exécuter des LLMs",
  "E8F114C9DD27607555A1": "Générer des images",
  "128287612F5B2DCBBE20": "Convertir ",
  "DFEB95BFCC6076F2DA5E": "des fichiers Prompty",
  "95A79AF2137D0686C993": "Analyser vos discussions pour détecter des secrets en utilisant ",
  "299E685B8F723AAF8246": "l'analyse de secrets",
  "AD6554CFECCC1B5B8807": "Automatiser en utilisant le ",
  "84CAC3B2E12AAD894195": "Intégrer dans vos ",
  "EF85A920AB77F634A3F5": "vérifications de Pull Requests",
  "C7FE404C8EB8609081F7": "Construire des prompts fiables en utilisant ",
  "BC4CAC94A0853DD43FC1": "des tests et évaluations",
  "ECD94F28B3C6E9E0CE5F": "propulsés par ",
  "8847F37ED0228F528AC5": "Études de Cas",
  "ED27339CFCD5ADF4D57C": "Guides",
  "0350AE905729D2CE7C09": "Agents",
  "9139962789F180F5E319": "Documentation adaptée aux LLM",
  "E91BF19258AD4F6C8AA7": "pour une carte de la documentation\nou ajoutez le ",
  "DEEDCFA46CEB95CBAE09": "Termes",
  "741C4F86E0B23BB0B9B3": "À propos du mélange de fichiers et des variables --vars",
  "1B44734434E37CD64822": "Drapeaux supplémentaires",
  "3E52D8F81FA523E0C258": "Astro est un générateur de sites statiques moderne pour créer des sites Web rapides et optimisés en utilisant n'importe quel framework.",
  "7D22444DA87226A6F4BD": "Activer la catégorie de débogage dans la configuration pour voir plus d'informations sur la résolution de la configuration.",
  "054CA7093449694A822A": "Spécifie le fichier d'environnement pour charger les secrets en tant que variables d'environnement.",
  "E6FA81A759B557E4E7D2": "CLI GenAIScript",
  "9EACB63374055200AB41": "outil en ligne de commande pour exécuter des scripts en dehors de VS Code et ",
  "F2139B23BA8B821CCD64": "inclure",
  "213B90D0A7242B1B4B63": "Depuis la racine de l'espace de travail, exécutez `npx --yes genaiscript serve` et accédez à l'URL fournie (généralement `http://127.0.0.1:8003/`).",
  "6BC8DF31317C663FF629": "Liste des configurations de script",
  "F38B6481CEE1303E222D": "Le Markdown est un langage de balisage léger avec une syntaxe de formatage en texte brut utilisé pour rédiger du contenu, notamment de la documentation et des applications web.",
  "FDB0A005D0758D1F6BAB": "modelAliases",
  "EF1ACA263E69BF0C4CB0": "modelEncodings",
  "0C268B4F1E226A15FB78": "exécution CLI",
  "4BE97C4AC220BF534498": "exemples",
  "DC50036B4CE365B695F1": "fichiers de script",
  "C819C788E4A336877F30": "Starlight",
  "FABE1305288F35054ED3": "modèles d'invite système",
  "502E6A6A255E5897A7A7": "sont ",
  "DA177006F852E3E67204": "vision_script",
  "D0DA84BC224EC6375B03": "extension Visual Studio Code",
  "CF1F97DB8AF9C903B9CD": "fournit la dernière version stable de ",
  "2DB4DB27BC5799F829D9": "WarningCode",
  "E527A888E992A4B63472": "Qu'est-ce que GenAIScript et comment cela fonctionne ?",
  "B4FDF1BB083C6FE5682E": "Qui peut utiliser GenAIScript et dois-je être développeur ?",
  "3C4A1C68C636A9D7F79C": "Quels sont les prérequis pour utiliser GenAIScript ?",
  "2FA7BC343B9D054BEF2B": "Comment installer le framework GenAIScript et son extension pour VS Code ?",
  "AAB104CF67486A4AED09": "instructions d'installation",
  "E9946BC0336B8314D2CF": "Puis-je utiliser GenAIScript dans des IDE autres que VS Code ?",
  "843645E1970959F7B586": "Que sont les modèles de fondation et les LLMs dans le contexte de GenAIScript ?",
  "3A75C909DC80C48A41AA": "Comment écrire mon premier script GenAIScript ?",
  "E82323EC0F009B7D44F7": "Utilisation de GenAIScript",
  "D0012DB5259CD5E3F7F0": "Comment déboguer un script GenAIScript dans VS Code ?",
  "0BA440B0F87E688624D5": "Quelles sont les meilleures pratiques pour rédiger des prompts efficaces dans GenAIScript ?",
  "EC2EEFE69ABC6E0C45A2": "Consultez ",
  "73FE77D8D829D59E5C40": "Meilleures Pratiques",
  "DA88A7AF145D860960FB": "Comment intégrer des appels à plusieurs modèles LLM dans un seul script GenAIScript ?",
  "D8A9B4A885A335543531": "Prompts en Ligne",
  "1C97B20E84732714251D": "GenAIScript peut-il générer des sorties dans des formats autres que JSON ?",
  "5A7AEBC812160CB3DB16": "Comment exécuter un script GenAIScript depuis la ligne de commande ?",
  "5B8B2D98C61BC6D5C843": "PDF",
  "4D8C8364AB753FCF648B": "Fonctionnalités Avancées",
  "E7EA00A8461CACF21EC1": "Comment puis-je utiliser GenAIScript pour automatiser la traduction de documents ?",
  "54CAD04B644117628090": "Étude de Cas sur la Traduction",
  "949C46ADE00832FDE96F": "Puis-je utiliser GenAIScript pour résumer des documents ou créer des dialogues à partir de monologues ?",
  "2404269A40F26EB9A9B8": "Dépannage",
  "D0B2BC4BBA9AA1BA8A9F": "Que faire si je rencontre des erreurs lors de l'exécution d'un script GenAIScript ?",
  "8E5D04F523DDE131A22A": "Comment résoudre les problèmes liés au traitement des sorties LLM dans GenAIScript ?",
  "82DE612E56D353A4EB78": "Où puis-je trouver des exemples de GenAIScript pour mieux comprendre ses capacités ?",
  "4011253AD20149EAB83F": "Documentation GenAIScript",
  "AB2D44262984BEA13E7C": "Sécurité et IA Responsable",
  "79B6F2BB77CB0B156C1E": "Quelles sont les utilisations non intentionnelles de GenAIScript et comment les éviter ?",
  "20EEC379A3F1F91A76FF": "Comment GenAIScript s'aligne-t-il avec les pratiques d'IA Responsable ?",
  "B8516321CAA0344AEF2C": "Quels modèles de fondation et LLMs sont recommandés pour une utilisation avec GenAIScript ?",
  "1970B2EF51982F303FDF": "Fournissez-vous des prompts système pour se protéger contre les problèmes courants tels que les contenus nuisibles ou le contournement de restrictions ?",
  "56746F0DDE67AF33CDD6": "Supportez-vous les services de contenu Azure ?",
  "24482F68EC5A301119A5": "Communauté et Support",
  "7478B836BCB723086005": "Où puis-je trouver la communauté GenAIScript pour des discussions et du support ?",
  "EF31489EAC9738EF218C": "GitHub GenAIScript",
  "6B952F13689F53EEF632": "Comment contribuer au projet GenAIScript ?",
  "1E69929266CB88534487": "Contribuer",
  "133E420B7A120BC26399": "Qui puis-je contacter pour des retours ou des questions sur GenAIScript ?",
  "50A1C9D978DE72C1DA31": "Vous pouvez envoyer un e-mail aux contacts fournis dans la ",
  "DDAA9CE0B02825C2BAB6": "Mises à jour et Feuille de Route",
  "C89321EFBF81564107D4": "À quelle fréquence GenAIScript est-il mis à jour et comment rester informé des nouvelles fonctionnalités ?",
  "C830221EFBCDAB9C2104": "Une feuille de route est-elle disponible pour le développement de GenAIScript ?",
  "DDB906D521EEAA25D81F": "Accédez à ",
  "0534862C42DD5D19E859": "Cliquez sur ",
  "D362129016BD263CE84C": "Code",
  "BB4B53416506689EB1A3": "Sélectionnez Créer un nouveau Codespace",
  "5D3CCB2DBB20A3AA830F": "dev",
  "BC54FFE48FA612712E8B": "branche",
  "BF23627A98A1D50C9A3D": "Configuration manuelle",
  "ECB05FE57FC22AE27BFD": "Exécutez yarn",
  "E9EE8A381AE0E3DF5AF2": "Compilation",
  "ED4127D448664E8E9E43": "ou juste l’interface en ligne de commande (CLI)",
  "7327EC11538589020958": "Pull Requests",
  "9EDFBCA1799B9E54F54C": "Vous devez créer des pull requests sur la branche ",
  "3F518E3F89D47642E78F": "Code de Conduite Microsoft Open Source",
  "91054607D211060C9DA9": "Exécution de scripts locaux",
  "B2390FE785BA940CECB9": "Pour exécuter un script d’exemple dans le dossier ",
  "0CB187667F10AED3CBE7": "fichier pour les variables d’environnement et l’espace de travail sera raciné à ",
  "95433019C54DA075C2DA": "Débogage des scripts locaux",
  "BCFE62A8F7D8C57B001F": "Ouvrez un ",
  "B6EFCDD2C1E8A015B2AD": "et lancez le script en utilisant",
  "42AE965F0C1237EBA312": "ou pour les exemples",
  "DCB1FE87EBCBAF440A24": "debug",
  "22D665FB7AB13E5D74A5": "variable d’environnement à ",
  "5B22B4E692ECE85CA9C6": "Visualiseur Web",
  "00276071BD30240CDD1F": "react-markdown + quelques plugins pour exécuter le markdown",
  "DBF797344DE964418EA7": "vscode-elements",
  "1FA8DE381B0440BF21B1": "Il n’y a ",
  "F23590B49F889E996999": "pas",
  "0F06944A5F59FDBA2BF5": "Développement de l'extension Visual Studio Code",
  "5C86EF29BBB46DB1880A": "désinstallez l’extension officielle de GenAIScript ou il y aura conflit avec celle construite localement",
  "ED9CED22158F1482B033": "vue dans Vs Code",
  "265D2BC6966F00449FA0": "sélectionnez la configuration du débogueur ",
  "817728EDB2DDC4535CF5": "et cliquez sur ",
  "1A61A5ECCE0EED07922F": "Mises en garde",
  "7F5D8E28C60CF31C2437": "Documentation",
  "F7F453A5006511FA2011": "Exécutez ",
  "8BD47A6A5A0075F2820D": "Exécutez cette commande pour détecter les liens cassés",
  "6CC4A12F161A42082D14": "Diapositives",
  "BC9603353A0EAC74C4E8": "Tous les fichiers ",
  "DC4776A4913785C0A0DF": "exécutez ",
  "3A72AE3165D2B6883F37": "En savoir plus sur Slidev dans ",
  "F648C90D9847B3D5B9A7": "documentation",
  "F022CE790C178525577C": "mermaid",
  "0B7B675BFF03E43713A0": "Commitez avec un message généré automatiquement",
  "DB9644CB3DE225363640": "Ajoutez la documentation pour les API nouvelles ou mises à jour",
  "EAA0F73B97837DD77BD1": "Générez des images pour les articles de blog",
  "DFEED2253C3AA251FA17": "Packaging",
  "2397323C5AA9A931A372": "Publication",
  "A8F678C6C608DE1CFD51": "Ce projet a adopté le ",
  "229589B7605DA2CACA9C": "FAQ sur le Code de Conduite",
  "5876D4A70FC9BBF0C61C": "ou contactez ",
  "ABB6532A83326DA57B09": "Rechercher et Transformer",
  "27272166F0D1D94F58ED": "👩‍💻 Comprendre le Code du Script",
  "CD2C78BB9C1CE539267F": "Le script commence par définir son objectif et ses paramètres en utilisant la fonction ",
  "D2451A4ABE36D0A58147": "Extraction et Validation des Paramètres",
  "C469200D920EF0E5797E": "Recherche de Fichiers et Correspondances",
  "B64E95407D88EB66474B": "API pour rechercher les fichiers correspondant au motif ",
  "DCF23727A80550987554": "Transformation des Correspondances",
  "D9EF666993273ECAD9A3": "Nous initialisons un objet appelé ",
  "F50A62376BEAAEA987E4": "Génération de Prompts pour les Transformations",
  "3BC6A3CFA76CBDA08525": "Application de la Transformation",
  "53C6B10A2E42A95FF02D": "Nous extrayons ensuite le texte transformé du résultat du prompt et le stockons dans l'objet ",
  "8C083716DC83C02CE24C": "Enregistrement des Modifications",
  "97ACB45CA3533907693E": "guide d'installation",
  "AF17F82C0ADF85DFE24B": "GitHub",
  "8DE1142A3F28DF8D9BF6": "Le script recueille la liste des fichiers modifiés dans le dernier commit et les filtre pour n'inclure que les fichiers `.md` et `.mdx`.\nIl exécute ensuite une invite pour chaque fichier, demandant au LLM de corriger les fautes d'orthographe et de grammaire tout en préservant le contenu.\n\nL'invite inclut des instructions pour éviter de modifier le frontmatter, les régions de code, les URLs et le code TypeScript inline dans les fichiers `.mdx`.\nLe script utilise la fonction `runPrompt` pour exécuter l'invite et gérer la réponse.\nLa réponse est ensuite écrite dans le fichier si des modifications sont apportées.\nLe script comprend également une section `system` qui définit les invites système à utiliser dans le script. ",
  "B04AE494250D6C9921F6": "En utilisant [GitHub Actions](https://docs.github.com/en/actions) et [GitHub Models](https://docs.github.com/en/github-models),\nvous pouvez automatiser l'exécution du script. Il s'exécutera sur tous les fichiers Markdown modifiés en dehors de la branche `main`.",
  "CA5C485C3A9F635E47FF": "Créer une nouvelle branche",
  "6F641DC5F27FF529FFE9": "créer une nouvelle pull request",
  "FEAE790A6CFA1818AED5": "L'action se déclenche lorsque la pull request est marquée comme ",
  "82DF7E2D0535F3143DEC": "pour mettre à jour la description de la pull request",
  "7002646EC17F9AC9045B": "Nous avons également ajouté ",
  "BBF1C3218F6816C6E0FF": "Lint",
  "C35C7CFAAF7F1BB762DA": "Un linter universel et facile à utiliser",
  "65D4F5A336B909201F64": "Décomposition du script",
  "4AC6116737C11B6527FE": "documentation en ligne",
  "266C800E7516DEE17E8F": "Code source complet",
  "1B5DF48FE4CE22F4B58A": "Le code source complet est disponible à l'adresse ",
  "AE3CF531ACBF576CA020": "Les contributions de la communauté sont les bienvenues et peuvent être trouvées dans la ",
  "E961553D9AAB62F968FA": "Scripts Géniaux",
  "69B9345DCAD05679173D": "Configuration du script",
  "7C8C5B6DB4FED8D9E03A": "Recherche d'images",
  "4CF4CD646EB00AFA2071": "Le script utilise ",
  "A07D138E11E729005284": "Génération de texte alternatif",
  "74E2D84F343D4AF62272": "defImages",
  "54EB0702341179AB3EBB": "Mise à jour des fichiers",
  "9FE6F469C15D045778BC": "💻 Comment exécuter le script",
  "07DCBEF2BA7F5F190601": "Automatiser avec GitHub Actions et GitHub Models",
  "4A23686267CDAB9BCC60": "branche et utilise le ",
  "517A93CBEE09F222EE8D": "Message Git Commit",
  "15786C6852A1B5DC7216": "Générer un message de commit pour toutes les modifications mises en scène",
  "264FD6A2F27489709B84": "Rechercher des modifications",
  "D6CDA6D4596BE31D91B6": "Générer et affiner le message de commit",
  "3D858E4A51E1084ED88A": "Commit et push",
  "73428AFB34350B5EA73E": "Exécution du script avec GenAIScript CLI",
  "91A4E2F7AD05B1C29463": "Stratégie",
  "6257B32F4FAF6AEED8A9": "Les informations collectées dans cette section sont ",
  "B19FE4084938D6617D1D": "pas",
  "B064F041A3E02FDB06CC": "hallucinées par conception et ajoutées à la sortie finale en utilisant l'objet ",
  "E3869DCC2164F364ACF8": "Vous pouvez décider d'activer ou de désactiver la partie agentique du script en commentant la ligne ",
  "5BA7D9692238C711CB0A": "Avons-nous terminé ?",
  "6C9D68167376DB8374AA": "qui est spécifique à votre dépôt",
  "DC2351C4969325125DAE": "Cet exemple analyse tout le code dans le contexte et tente de générer un diagramme à l'aide de ",
  "93795F13F6318FA12047": "Obtention des fichiers à traiter",
  "6A6886F487AEFC29A508": "Traitement de chaque fichier",
  "C90442D621014564DA8E": "Le prompt pour ajouter des commentaires",
  "EDAE72CC15EBEC78F64E": "Dans la fonction `addComments`, nous demandons à GenAI d'ajouter des commentaires.\nNous effectuons cette opération deux fois pour augmenter les chances de générer des commentaires utiles,\ncar le LLM pourrait ne pas avoir été aussi efficace lors du premier essai. ",
  "4B86109323E53B660A8A": "Formater, construire, analyser",
  "CA07053A4B804976F2BE": "Évaluer les résultats avec LLM",
  "ED090FAF0E9CC5496014": "Suivez le guide d'installation ici",
  "809BAB9B6AFA09950DD3": "Formater et construire",
  "E06C6822238FE51B0350": "commande pour exécuter un formateur et une commande ",
  "337B88D55DFBFB5A842C": "Soumettez votre script",
  "7614F54357B6AF14AC6D": "zod est une validation de schéma orientée TypeScript avec inférence de type statique.",
  "56D0F323593C4597AC6C": "Les schémas zod peuvent être utilisés dans `defSchema` pour contraindre la sortie de l'outil.",
  "9CB13CACD2CFA8ABCB2A": "transcription vocale",
  "40618273D8DF4EC48BDD": "extraction des images clés d'une vidéo",
  "8F702CFB5262A4F8E38F": "Texte alternatif pour vidéo",
  "5B4D6560792CC1754582": "L'attribut vidéo en HTML ne possède pas d'attribut ",
  "5703EFF252B8A05DF1E4": "Transcription",
  "6939D2942C715C2D0C06": "Nous utilisons la fonction ",
  "CD8ECF7AAFA6B0F801C5": "Images clés de la vidéo",
  "B1ABB565C6252E5830FA": "Regrouper le tout",
  "ED29E38B740F7FF11912": "Recherche Tavily",
  "E21CB83FE41D207588B3": "est un service de recherche optimisé pour les LLMs qui fournit une ",
  "5DE3614227A226E5D6D8": "API REST",
  "F7632A8B4FFE2DDE1556": "L'API REST peut être appelée en utilisant JavaScript ",
  "96F8E0136D3E984CF37F": "fetch",
  "C87A7E40596D10416749": "Le script utilise la clé `TAVILY_API_KEY`, qui devra être déclarée dans le script en utilisant cette fonction. ",
  "A6B373C4D09C50458784": "Nous définissons une fonction ",
  "96028FC3864271ADE415": "dans ",
  "07A243EF84C76C13EB8F": "qui encapsule l'appel `fetch` et nous ajoutons des annotations de type pour offrir une expérience d'édition agréable. ",
  "84626D9F43FE84D4FD25": "exécuter une invitation pour générer une question basée sur le contenu du document",
  "721DC57DB8B799D60538": "utiliser Tavily pour générer une réponse à la question",
  "AC945C5F857961B74DAA": "exécuter une invitation pour augmenter le document avec la réponse",
  "F2EB7763034955A9BACE": "Le secret ",
  "75B7338B040AEBBF6FBB": "nécessaire à Tavily est déclaré dans l'appel de fonction ",
  "36AD24033F130439FD4E": "fonction est importée à l'aide d'un ",
  "467755C2B7A2366BC91D": "Nous avons temporairement supprimé la prise en charge de `transformers` pour réduire l'empreinte d'installation. ",
  "3C7A619B189A79EBA9FD": "HuggingFace ",
  "E4C9CA8E96FDE288DE6B": "onnxruntime",
  "BAFBC56A787E7C56CA1C": "résumés",
  "9974FBD912B67F15BB59": "avec la bibliothèque ",
  "2A9E9A45D2861E4A5FF1": "Importer le pipeline",
  "A7A872C7A347CFC366D3": "Migrez votre script vers ",
  "6835D1485D4C26DEE51F": "Pour utiliser la bibliothèque `Transformers.js`, vous devez utiliser l'extension `.mjs` pour votre script (ou `.mts` pour la prise en charge de TypeScript). Si votre script se termine par `.genai.js`, renommez-le en `.genai.mjs`. ",
  "841325A36A1FAB879BBC": "Exécuter le pipeline",
  "6451FCD2C53C3BDC5B4F": "Illustrons ce concept en utilisant ",
  "EF664FD1F4EC83113AC2": "un exemple de somme et de division avec llamaindex",
  "0FD5D0B35BA147EF12BB": "Utilisation des outils",
  "ACDD1CC4A14C15940FED": "La question arithmétique peut être déclarée comme ",
  "6932721C6B41EA9ECB03": "paramètre de script",
  "2DA93C05B2DFFAE33A04": "La valeur du paramètre est remplie dans l'objet ",
  "3364FB781099F110BB29": "📠 appel d'outil ",
  "C57C8D12A2B6327CB22E": "outil 🛠️ ",
  "2A610E4A2580F4F5A837": "appel_9p0oWdWpT6vGyxzwq2vJXHrq",
  "681FA54F62B1059A2C50": "L'invite système ",
  "A498E4ADD59885A2E88B": "englobe le parseur d'expression et évaluateur `parsers.math` et l'expose comme un outil. ",
  "EBC4B75D415432C1181D": "Supposons que j'ai un répertoire avec plusieurs fichiers `.pdf` (ou autres) et que je veuille exécuter un GenAIScript sur chacun d'eux.\nDans cet exemple, je génère un tweet accrocheur pour chaque document et je souhaite enregistrer ce tweet dans un autre fichier. ",
  "95FEF930087CD13EA0DE": "Développement",
  "86232A18523F5E3D193E": "car `def` sait comment lire et analyser tous ces types de fichiers. ",
  "A380ADB906D1CF683DFF": "Nous pouvons exécuter le script depuis la ",
  "15074DADC65738358CB0": "et que vous voulez que la sortie soit dans un nouveau fichier ",
  "BA09348D732610C46684": "Ce script nécessite ",
  "363BA347300AF0A3B0D8": "zx",
  "1B1DD27DA8F3EFF7EACB": "tant que les fichiers script sont dans le dossier du projet, GenAIScript recherchera les fichiers `**/*.genai.js` et `**/*.genai.mjs`. ",
  "8373CA5DBCB626947647": "Dépôt Git + sous-modules",
  "A601DD2392FEB1C1BEF7": "shared-scripts/ dépôt git ",
  "3BB2B8E7876047F0E925": "genaisrc/",
  "DF90C1F49D9B907194FA": "référencer ",
  "BB11CE5C9FD4DD39E0DB": "comme un sous-module git",
  "716511625BD956126CB4": "mon-projet/",
  "F378EF35ACAD362405B8": "src/",
  "3D896B411713D67D3ED0": "shared-scripts/ sous-module git ",
  "A26181333E315AC57420": "Gists",
  "BEA3EEEC1C49BD7AF570": "Bien qu'il soit possible de faire correspondre cet appel de fonction avec une expression régulière",
  "AC1BF400AC17FB70FA89": "concaténer les arguments d'un appel de fonction en une seule chaîne",
  "44A15C14A0FA8884B94F": "concaténer les arguments et utiliser la syntaxe ",
  "89841D40783A8045BE3D": "`${}` pour interpoler les variables",
  "04B73CE142E1172C5068": "Recherche",
  "F8451910F811DC69A69C": "L'étape de recherche est effectuée avec [workspace.grep](/genaiscript/reference/scripts/files) \nqui permet de rechercher efficacement un motif dans des fichiers (c'est le même moteur de recherche\nqui alimente la recherche de Visual Studio Code). ",
  "9C9A16DFCA1BB23A64C6": "Calculer les Transformations",
  "7F50A73B88466FB97B7F": "La deuxième étape consiste à appliquer l'expression régulière au contenu du fichier\net à pré-calculer la transformation LLM de chaque correspondance à l'aide d'un [prompt intégré](/genaiscript/reference/scripts/inline-prompts). ",
  "ECA04C6CF4B49B7B6797": "Transformation",
  "AC0FE14BDAC6E8E99B9E": "métadonnées et les extraire de l'objet ",
  "440B39F7FE71E28AEE18": "Vous aurez besoin d'une ",
  "CD4D67D550AE37B625E5": "clé API Bing Web Search",
  "409B9E1EC1F52B41BB8E": "pour utiliser ",
  "939CDD964AE5D10385ED": "Remplacez le texte ",
  "703EDAD4DC45F94F9E62": "installation",
  "C0FAD37423384D235A02": "configuration ",
  "582A2EE2E1058C8C8CF3": "À propos des Carnets Markdown GenAIScript",
  "B92C02392DCA82002E9E": "Carnet Markdown GenAIScript",
  "C21CC0F9D2E1FCBA1CBB": "Chaque ",
  "4A68A44B3234233B06FE": "Filtrage",
  "9D6688EBDB9A905A0D1C": "Enregistrez le script ci-dessous dans votre projet sous `genaisrc/slides.genai.js`. ",
  "5F989A3475CA466E4C0B": "cliquez avec le bouton droit sur le fichier ou le dossier de code, sélectionnez ",
  "5ABA6F395084E2DCACF4": "Générer des diapositives",
  "4C7D4B1B29BEDDCEF643": "extension vscode-reveal",
  "902FCBBA47937744DF50": "diapositives",
  "B1AAA700E31A2AB942F4": "Phi-3 Mini",
  "FA07E61ED4C0719623D6": "liste des modèles",
  "8AD659D9759C68F9390E": "Appliquez ce script aux fichiers que vous souhaitez résumer !",
  "A0A3457076AC36206A94": "Vision PDF",
  "AACA0B477A80593A3E0C": "on peut lire le texte en utilisant ",
  "98C8C78E6F7615B21917": "pdfjs de Mozilla",
  "D4018B8FDB0186F5B1D5": "option est définie sur ",
  "7A3ED25A1225B608BCCD": "Le contexte ",
  "D1D9429DA63E6AFBF3D8": "documentation officielle",
  "A5F78C7B7E5A76F80E35": "Il est possible ",
  "4701AD5E9A23B1A258F5": "modèle est un alias qui peut être configuré dans les métadonnées du `script`, les arguments cli ou les variables d'environnement. ",
  "1963221A712C51D9644E": "Un ",
  "60DBDE5AC96DE8F32370": "est un type spécial de ",
  "ED8BBFFCA044E988DDD1": "qui utilise une invite en ligne et des outils pour résoudre une tâche. ",
  "4AFBBFA525F37B2DB191": "lire ou rechercher des fichiers ",
  "ADF29889AC0AEE916A2E": "Instances multiples du même agent",
  "CA48BB5A9676EAE97EC0": "Diviser ou ne pas diviser",
  "E406C88CB978BAD7E968": "Llama-guard3 est un modèle LLM spécialisé dans la détection de contenus nuisibles dans le texte.\nLe script dont nous discutons vise à appliquer en lot le modèle llama-guard à vos fichiers.",
  "C2FED982EC259075B5EA": "Explication du script ligne par ligne 📜",
  "C160D77F0FD3A68E3185": "Ce bloc utilise le modèle GenAI ollama:llama-guard3:8b pour analyser le contenu de chaque fichier. La fonction `prompt` envoie le fichier au modèle, et diverses options sont définies pour spécifier le modèle, étiqueter le fichier et gérer le cache. ",
  "4F1604BCF68005DC53AB": "Exécution du script avec GenAIScript CLI 🚀",
  "B8EF7E2FF26C931199E2": "Cette commande vérifiera tous les fichiers correspondant à \"\\*/*.ts\" et vous indiquera lesquels sont considérés comme dangereux.",
  "D5805FF9768E888A650F": "Bon codage et restez prudent ! 🛡️",
  "3914E3C18D6D8D680C27": "Relecteur d'issues",
  "A402B683718D7A3C9C3D": "Découvrez comment automatiser la relecture des issues avec un script.",
  "782C27588C547BD0B099": "Ce guide explique comment automatiser la relecture des issues avec un GenAIScript qui fournit des retours et une analyse de code dans GitHub Actions.",
  "0CF44FE401EF406F8AAA": "Résolution de l'issue",
  "26BB28136A72382A2464": "Le script commence par obtenir les informations actuelles de l'issue depuis l'API GitHub.",
  "2B3807860D8210A0E59B": "La fonction `github.getIssue` suppose que GenAIScript s'exécute dans une GitHub Action. Elle aura accès au jeton GitHub (`GITHUB_TOKEN`) et à l'identifiant de l'issue `GITHUB_ISSUE`.",
  "910B19EDE1BF27D24FFC": "Le `GITHUB_ISSUE` doit être configuré dans la GitHub Action à partir de l'objet `github.event.issue`.",
  "734600556A1795B1B069": "La tâche",
  "53BA50531333E2D437B0": "Le prompt définit la tâche et la manière d'effectuer la relecture dans un message système.",
  "6986A6EC16110CA5CF93": "Le contexte",
  "3BB9B6665B6CEA96413F": "Ensuite, il ajoute le titre et le corps de l'issue au prompt.",
  "196DF95A0569CDD5A460": "Automatisation dans GitHub Actions",
  "C61BCC021754F779704D": "Ajoutez cette étape à votre workflow GitHub Actions pour automatiser le processus de relecture des issues. L'option `--pull-request-comment` correspond à [--pull-request-comment](/genaiscript/reference/cli/run#pull-requests) et s'occupe d'ajouter ou de mettre à jour un commentaire dans la conversation de l'issue ou de la pull request.",
  "EB4A71E678F9C3E2A03C": "Images dans Azure Blob Storage",
  "839D7402CAF8A699F3A2": "Exploitez le SDK Azure pour gérer les fichiers d'image dans Blob Storage dans les invites",
  "CF28C8452809401F3D8C": "Il est possible d'utiliser le SDK Azure Node.JS pour télécharger des images depuis Azure Blob Storage et les utiliser dans l'invite. La fonction `defImages` supporte le type [Buffer] de node.js.",
  "4360B4ED29D5D1387466": "Installez les packages [@azure/storage-blob](https://www.npmjs.com/package/@azure/storage-blob) et [@azure/identity](https://www.npmjs.com/package/@azure/identity).",
  "0A14528E44E170AA6FFC": "Assurez-vous de vous connecter avec Azure CLI et de définir l'abonnement.",
  "8EDEC7F183709BA399FC": "Lecture des blobs",
  "1E47653056FF936C9E8A": "Ouvrez une connexion au Azure Blob Storage et obtenez un client pour le conteneur. Nous déconstruisons `account` et `container` de l'objet `env.vars` afin qu'ils puissent être définis via le [cli](/genaiscript/reference/cli).",
  "17B3B9F5AB1C2DBCA483": "Si vous n'avez pas un blob spécifique en tête, vous pouvez parcourir les blobs et les télécharger dans un buffer (`buf`).",
  "B9A16F1E5DB0109A3E93": "Utilisation des images dans l'invite",
  "2F8E5791D0E6ACC1E3D3": "Le buffer `image` peut être passé dans `defImages` pour être utilisé dans l'invite.",
  "44E1C9E45728B021D17B": "Cependant, puisque les images peuvent être \"lourdes\", vous devrez très probablement utiliser des [prompts en ligne](/genaiscript/reference/scripts/inline-prompts) pour les diviser en requêtes plus petites. (Notez l'utilisation de `_.`)",
  "B127DD42B5426869C76D": "Résumer les résultats",
  "8803AD6B8702D20E7F17": "Pour résumer toutes les images, nous stockons chaque résumé d'image en utilisant la fonction `def` et ajoutons une sollicitation pour résumer les descriptions.",
  "2F14B20DA334553A6BD3": "Évaluations avec plusieurs modèles",
  "D335623A72211A9D4B4B": "Évaluation de plusieurs modèles dans un seul script",
  "35ADDFE93C657A1EC7C5": "GenAIScript vous permet d'[évaluer](/genaiscript/reference/scripts/tests) plusieurs modèles dans un seul script contre plusieurs tests.\nCela est utile lorsque vous voulez comparer les performances de différents modèles sur les mêmes entrées.",
  "7FA202579F464AD8DE87": "GenAIScript utilise [PromptFoo](https://www.promptfoo.dev/docs/getting-started/) pour évaluer les sorties des modèles.",
  "6682ACB1D2BDB92F116A": "Dans cet exemple, nous évaluerons les performances de trois modèles sur un script de résumé.",
  "C6B978D08206EA6CD261": "Tout d'abord, vous devez ajouter un ou plusieurs tests en tant que champ `tests` dans la fonction `script`.",
  "1C2DC30FFB8AC39D204A": "Dans ce cas, nous ajoutons une simple assertion de `keyword`, mais vous pouvez trouver de nombreuses autres options dans la référence des [tests](/genaiscript/reference/scripts/tests).",
  "4C4C0108EB0D567CB675": "Définir les modèles de test",
  "68226B981F9C47C98A8B": "Ensuite, ajoutez la liste des identifiants de modèles ou des [alias de modèles](/genaiscript/reference/scripts/model-aliases) que vous souhaitez tester.",
  "E6303A6D1DB2B8FA2EC9": "Les tests peuvent être exécutés en utilisant l'interface en ligne de commande `genaiscript` ou dans Visual Studio Code (voir [scripts de test](/genaiscript/getting-started/testing-scripts)).",
  "DED443395AB896C10864": "Ensuite, ouvrez le tableau de bord PromptFoo pour voir les résultats des tests.",
  "4BC0738462A01D8DE8A5": "Connaissance Générée",
  "B11CBDAE5673201144BA": "Explorez la technique de génération de connaissances dans l'incitation par l'IA pour améliorer l'exactitude des réponses aux questions.",
  "F4A6C56D5705376094DD": "[Connaissance Générée](https://learnprompting.org/docs/intermediate/generated_knowledge)\nest une technique d'incitation où l'on commence par poser une question au LLM pour générer des faits, puis on utilise la réponse générée pour répondre correctement à une question.",
  "F4E27226751A059E8D93": "*production de connaissances*, le LLM est invité à générer un ensemble de faits sur la question.",
  "8E69BCEAB3DD65A4EFEA": "*intégration de connaissances*, le LLM est invité à répondre à une question enrichie par les connaissances générées.",
  "393E3E39EA938E21B7DB": "Cette technique peut être réalisée en utilisant [runPrompt](/genaiscript/reference/scripts/inline-prompts) pour exécuter une requête au LLM et l'utiliser dans l'invite finale.",
  "42BF9A0A6A1965AD0C36": "Exemple",
  "CFE5B7C93C85F99A4B05": "Cet exemple illustre cette technique pour générer un article de blog.",
  "06E7865D1E3B9704F45B": "Détection des descriptions obsolètes",
  "8444E6C5A18DF6AD2B60": "Automatisez la détection des descriptions obsolètes dans la documentation Markdown pour maintenir précision et cohérence.",
  "38AEF0F18F29A8A4236B": "La documentation développeur inclut généralement une description dans chaque fichier. Ces descriptions peuvent devenir obsolètes, entraînant confusion et informations incorrectes. Pour éviter cela, vous pouvez automatiser la détection des descriptions obsolètes dans votre documentation à l'aide de GenAIScript.",
  "1494470C51D5AB794EDC": "Markdown et frontmatter",
  "1604C14B1453159C9856": "De nombreux systèmes de documentation utilisent le format Markdown pour rédiger la documentation et un en-tête 'frontmatter' pour stocker les métadonnées. Voici un exemple de fichier Markdown avec frontmatter :",
  "F5F7484BE3DE3A7895F8": "L'objectif est de créer un script qui détecte lorsque le champ `description` dans le frontmatter est obsolète.",
  "734D98A100F417C669EE": "GenAIScript est conçu pour s'exécuter sur des fichiers et fournit une variable spéciale `env.files` qui contient la liste des fichiers à analyser. Vous pouvez utiliser cette variable pour inclure les fichiers dans le contexte en utilisant la fonction [def](/genaiscript/reference/scripts/context). Nous limitons chaque fichier à 2000 tokens pour éviter d'exploser le contenu sur de gros fichiers.",
  "52AA10EE30A0A3164FE1": "L'étape suivante consiste à donner une tâche au script. Dans ce cas, vérifier que le contenu et le champ `description` dans le frontmatter correspondent.",
  "066490E8C26B17101BDE": "Enfin, nous utilisons la fonctionnalité de génération de diagnostics intégrée pour créer une erreur pour chaque description obsolète.",
  "A837AC807C9523F97E80": "Exécution dans Visual Studio Code",
  "0CF4B2FAC96256473DB8": "Une fois que vous avez enregistré ce script dans votre espace de travail, vous pourrez l'exécuter sur un fichier ou un dossier via le menu contextuel en sélectionnant **Exécuter GenAIScript...**.",
  "9320D0AED390E642D5FD": "![Une fenêtre d'éditeur de code affiche un fichier Markdown avec des métadonnées pour une page de documentation intitulée \"Containers\". Les champs description et mots-clés sont mis en évidence. En bas, des avertissements dans l'onglet des problèmes indiquent des descriptions obsolètes.](../../../assets/detect-outdated-descriptions.png)",
  "F24BE385E4DE038FC8D6": "Vous pouvez exécuter automatiquement cet outil sur vos fichiers de documentation pour identifier les descriptions obsolètes en utilisant le [cli](/genaiscript/reference/cli).",
  "6FC6B0C1429E0FAEDF7E": "Ce script peut être intégré dans votre pipeline CI/CD pour automatiser le processus de détection.",
  "51D81F25F312B55D190C": "DeepSeek R1 et V3",
  "1487D091BD075859C5C1": "DeepSeek est un outil puissant pour rechercher et filtrer des données dans une structure profonde. Il existe plusieurs fournisseurs de LLM qui peuvent exécuter DeepSeek.",
  "2C3A85D1BD3A51C607D1": "Comme le mentionne DeepSeek, [DeepSeek-R1](https://github.com/deepseek-ai/DeepSeek-R1) et [DeepSeek-V3](https://github.com/deepseek-ai/DeepSeek-V3) sont des modèles de langage à grande échelle (LLM) avancés, qui ont attiré une attention significative pour leurs performances et leur rentabilité. Les innovations de DeepSeek mettent en évidence le potentiel d'atteindre des performances d'IA de haut niveau avec moins de ressources, remettant en question les normes existantes de l'industrie et suscitant des discussions sur la direction future du développement de l'IA.",
  "882CDAE54949870BFCC0": "Ces pages documentent les différentes options pour exécuter les LLM de DeepSeek.",
  "705BA69FD0CC8E8097D5": "DeepSeek.com",
  "DEAAA843AD8C301DFEEA": "[DeepSeek.com](https://deepseek.com) est un fournisseur de LLM qui développe les modèles DeepSeek.",
  "7FCC124CC5B18429C048": "[Provider `deepseek`](/genaiscript/configuration/deepseek)",
  "6E5943DB0B3417C1D6BF": "Azure AI Foundry",
  "23D4BE3863F718AF2048": "[Azure AI Foundry](https://ai.azure.com) propose une facturation basée sur les jetons pour les modèles DeepSeek R1 et DeepSeek V3. Voir [Annonce](https://techcommunity.microsoft.com/blog/machinelearningblog/announcing-deepseek-v3-on-azure-ai-foundry-and-github/4390438).",
  "50FD0DCAD8370F3EFE9E": "[Provider `azure_ai_inference`](/genaiscript/configuration/azure-ai-foundry)",
  "BFCFD29739CB8B4B9FF4": "Modèles GitHub Marketplace",
  "DA37A0E195F05C1842F5": "[GitHub Marketplace Models](https://github.com/marketplace/models) offre une expérience gratuite pour expérimenter avec les modèles DeepSeek R1 et DeepSeek V3.",
  "94E61F8887F8C0CCA0D2": "[Provider `github`](/genaiscript/configuration/github)",
  "13B2FD7FB9DAD60DE667": "Et d'autres !",
  "43D332E73C84AC74C449": "Ceci n'est en aucun cas une liste complète et il existe de nombreux autres fournisseurs capables d'exécuter les modèles DeepSeek.",
  "19BD358B28961C284641": "[Ollama](https://ollama.com/library/deepseek-v3) (si votre machine peut le gérer)",
  "BD3B4603727F05D65E57": "[LM Studio](https://lmstudio.ai/models)",
  "4FF819D21DA04D4198B5": "Outils Conteneurisés",
  "FE6FC3B7AAE2A5E9CB1F": "Apprenez à créer et utiliser des outils conteneurisés avec des dépendances exécutables dans un environnement sécurisé en utilisant GCC comme exemple.",
  "78A22D7DA91DC230A3A0": "Ce guide montre comment créer un [outil](/genaiscript/reference/scripts/tools) qui appelle un exécutable dans un [conteneur](/genaiscript/reference/scripts/container). C'est une méthode flexible et sécurisée pour exécuter des outils qui peuvent avoir des dépendances ou des préoccupations de sécurité.",
  "F84D563F6DB2E1B66DF5": "Cela se fait généralement en créant un conteneur avec une image particulière (ici `gcc`).",
  "ECA7F159A2961A31233C": "puis en réutilisant le conteneur dans les invocations de l'outil. Vous pouvez retourner le résultat de `container.exec` à partir de l'outil et il sera géré par le runtime.",
  "298EDA01210E984E5B4D": "Exemple : GCC en tant qu'outil",
  "489022C5134DFCFBA446": "Cet exemple utilise l'image officielle de docker [GCC](https://hub.docker.com/_/gcc) pour compiler un programme en C en tant qu'outil. Le moteur LLM invoquera l'outil pour valider la syntaxe du code généré.",
  "88530A848C1BCCF8254B": "<summary>📠 appel d'outil <code>gcc</code> (<code>call_IH693jAqZaC7i3AkUa3eIFXi</code>)</summary>",
  "C485444D1AA2D1832558": "<summary>🛠️ sortie de l'outil <code>call_IH693jAqZaC7i3AkUa3eIFXi</code></summary>",
  "C16E26EE47424C65B187": "Scanner de cartes de visite",
  "5C508D90F1427FD86555": "Utiliser OpenAI Vision pour scanner des cartes de visite.",
  "82A50EB12F3AC22EF479": "Ce guide montre comment utiliser la vision et les variables d'image pour scanner les informations des cartes de visite dans un format structuré.",
  "A2EB74F8C2523D5D48CF": "Modèle de vision",
  "A08A43E8D3EB82DD208A": "Vous aurez besoin d'un accès à un déploiement du modèle de vision d'OpenAI. Dans cet exemple, il est identifié par `gpt-4o`.\nRéglez également le `maxTokens` à 4000 pour vous assurer que le modèle peut traiter l'intégralité de la carte de visite.",
  "1A297482B02F2F6AA065": "`defImage`",
  "19DCBE74D72BDDAE49FC": "La fonction [defImage](/genaiscript/reference/scripts/images) peut être utilisée pour entrer plusieurs fichiers dans le script.\nLes fichiers non-image seront automatiquement ignorés, vous pouvez donc généralement passer [env.files](/genaiscript/reference/scripts/context) directement à `defImages`.",
  "344961C3C09DCFB66991": "Production de CSV",
  "715FAC0E4579B7E67703": "Dans son ensemble, le script ressemble à ceci :",
  "13831C8ECA4EEEFC7B57": "Utilisation d'un schéma",
  "9C2DB425DB8E1B4A9247": "Nous pouvons ajouter une validation du format des données en ajoutant un schéma pour les lignes de données d'entreprise.",
  "95EE796B7D46C7D68EB0": "Et le script ci-dessus est adapté pour utiliser le schéma au lieu de la description CSV.",
  "00C7338C9935015243C3": "Messages automatisés de commit Git",
  "B14E3DB408E1AA06E4B0": "Simplifiez votre flux de travail Git grâce à un script d'automatisation pour générer des messages de commit",
  "D4AB9A1C95E422875572": "Dans le domaine du développement logiciel, créer des messages de commit cohérents et informatifs est essentiel mais souvent négligé. Cette tâche peut devenir fastidieuse, surtout quand vous êtes concentré sur le codage. Pour vous aider dans cette démarche, nous avons conçu un [script spécialement adapté pour automatiser la génération de messages de commit Git](https://github.com/microsoft/genaiscript/blob/main/packages/sample/genaisrc/samples/gcm.genai.mts), garantissant leur pertinence tout en vous faisant gagner du temps.",
  "1EB48E48135BB5E6E39E": "Le script fonctionne comme un script d'automatisation standard pour Node.js et utilise [runPrompt](/genaiscript/reference/scripts/inline-prompts) pour effectuer des appels au LLM et demander à l'utilisateur de confirmer le texte généré.",
  "B21833C03D096A79A308": "Vous pouvez consulter l'exemple [Git Commit Message](/genaiscript/samples/gcm) pour un script complet, prêt à l'emploi.",
  "29E0B00C80A76C0D847D": "Explication du script",
  "C20890158840F989C4DD": "Tout d'abord, nous vérifions s'il y a des modifications en préparation dans le dépôt Git :",
  "7A1F524AC64CACE20917": "Si aucune modification n'est en préparation, nous demandons à l'utilisateur s'il souhaite préparer toutes les modifications. Si l'utilisateur confirme, nous préparons toutes les modifications. Sinon, nous arrêtons le processus.",
  "998A275F0673C0B8FD94": "Nous générons un message de commit initial à l'aide des modifications en préparation :",
  "368D80B55747458FD89F": "La configuration du prompt ci-dessus indique que le message doit être concis, en rapport avec la sortie de la commande \"git diff --cached\", et qu'il ne doit pas inclure de guillemets.",
  "0D0DFF289047302AD352": "L'utilisateur choisit comment procéder avec le message généré :",
  "A58E768FCA7BF2D39D63": "Des options sont proposées pour modifier ou régénérer le message. Si l'utilisateur choisit de modifier le message, nous lui demandons d'entrer un nouveau message :",
  "58AEC065D30039ACB732": "Si l'utilisateur décide de valider le message, nous effectuons le commit des modifications :",
  "283381D1351C827FA206": "Vous pouvez exécuter ce script en utilisant le [CLI](/genaiscript/reference/cli).",
  "0A548FE92046473A3782": "Vous pouvez encapsuler cette commande dans un fichier `gcm.sh` ou dans la section `script` de votre fichier `package.json` :",
  "22BC66434B48ED51C469": "Ensuite, vous pouvez exécuter le script en utilisant :",
  "2C9E80DE6B4BAF3ADE63": "Utilisation de hooks Git",
  "8991414B16AE6D170780": "Vous pouvez également utiliser le hook Git [commit-msg](https://git-scm.com/docs/githooks#_commit_msg) pour exécuter la génération de messages à la demande. En utilisant le framework [husky](https://typicode.github.io/husky/), nous pouvons enregistrer l'exécution de genaiscript dans le fichier `.husky/commit-msg`.",
  "0954B1A4A15E39DF86E7": "Le hook `commit-msg` reçoit une localisation de fichier où le message est stocké. Nous passons ce paramètre au script afin qu'il soit renseigné dans la variable `env.files`.",
  "E87F43F4D8DA46C94DEF": "Dans le script, nous vérifions si le contenu du fichier contient déjà un message utilisateur, sinon un nouveau message est généré.",
  "C89CECCAE0F515ED543D": "Remerciements",
  "367F03C7B862B1E6D26A": "Ce script a été inspiré par le générateur de messages de commit de Karpathy [commit message generator](https://gist.github.com/karpathy/1dd0294ef9567971c1e4348a90d69285).",
  "3A07E1658F6F658C1C7F": "Demander Mon PDF",
  "7A81CFDF083908D0C09B": "Guide de démarrage rapide pour utiliser GenAIScript afin de résumer et de critiquer des documents PDF avec l'assistance de l'IA.",
  "F9F9BD7BEA53D424FBCB": "Le guide de démarrage rapide illustre comment écrire un GenAIScript qui prend un fichier PDF en entrée.",
  "85E30299421402A8CBDE": "Placez votre document PDF dans un répertoire visible dans l'explorateur de VS Code.",
  "9D052395220B7B394649": "Définissez et nommez le fichier PDF comme une entrée :",
  "D04F3D1C6D93054D3442": "Remplacez le texte `\"DIRE À L'IA CE QU'ELLE DOIT FAIRE...\"` par ce que vous voulez qu'elle fasse avec votre fichier PDF. Utilisez le nom dans la définition pour vous référer au fichier.",
  "173C2FF4F0591A089649": "Faites un clic droit sur le document PDF dans l'explorateur de VS Code. Sélectionnez **Run GenAIScript**. Sélectionnez le script que vous venez d'écrire.",
  "F15E049FA025E34CADCC": "La sortie s'affichera dans un nouvel onglet de document.",
  "2775B5BF20FEF6216582": "Exemple : Lorem Ipsum",
  "813D42C9AEE29F925F4F": "Dans cet exemple, nous allons extraire le texte d'un PDF qui décrit l'histoire de Lorem Ipsum.",
  "2FDB29E367FFE263C325": "Demandez à Mon Image",
  "23CB53BC4FB06C769975": "Découvrez comment appliquer GenAIScript aux images pour l'extraction de données et l'analyse à l'aide de modèles d'IA.",
  "DA63D7D29BBF16C163DF": "Ce guide de démarrage rapide illustre comment écrire un GenAIScript qui prend en entrée un fichier image.",
  "19B8431C2EB3ECA68F67": "Placez votre image dans un répertoire visible dans l'Explorateur de VS Code.",
  "ACBDA8345A30CDAE3C1C": "Mettez à jour le modèle dans l'en-tête du script pour faire référence à un modèle comprenant les images :",
  "DAFB511DB2CA92F12465": "Utilisez [defImages](/genaiscript/reference/scripts/images/) pour intégrer le fichier image dans le contexte du modèle :",
  "7930B836EDE9E45A1955": "Remplacez le texte `\"TELL THE LLM WHAT TO DO...\"` par ce que vous voulez qu'il fasse avec votre fichier image.",
  "FBBF68B4708EBE2288BE": "Faites un clic droit sur le fichier image dans l'Explorateur de VS Code. Sélectionnez **Run GenAIScript**. Choisissez le script que vous venez d'écrire.",
  "02CB270ECAF9B336345C": "La sortie s'affichera dans un nouvel onglet de document.",
  "7DB2B2DECEF2236DA927": "Outils Agentic",
  "2342811AFB76C5D136C6": "Utilisation des outils agentic dans votre script",
  "6107B859F5828145EA01": "[Agentic](https://agentic.so) ([GitHub](https://github.com/transitive-bullshit/agentic)) est une bibliothèque standard de fonctions/outils d'IA optimisées à la fois pour une utilisation normale en TypeScript ainsi que pour une utilisation avec des modèles linguistiques (LLM). Vous pouvez enregistrer tout outil agentic dans votre script en utilisant [defTool](/genaiscript/reference/scripts/tools).",
  "C0D3DE766745221C5701": "La liste complète des outils agentic est disponible à [https://agentic.so/tools/](https://agentic.so/tools). Parmi les outils, vous trouverez :",
  "8E5BEC57EF7ED16C3DF6": "[Bing](https://agentic.so/tools/bing)",
  "840926094FEC9CF7E22E": "[Calculatrice](https://agentic.so/tools/calculator)",
  "84F6F18E05EAD76C01ED": "[Clearbit](https://agentic.so/tools/clearbit)",
  "E6BF9DF5BD122C90B1D7": "[Dexa](https://agentic.so/tools/dexa)",
  "94BD6D1794B6A1877C5A": "[Diffbot](https://agentic.so/tools/diffbot)",
  "EE3AA7B8E2EEC13DAA45": "[E2b](https://agentic.so/tools/e2b)",
  "D8502BB8557CE8C83444": "[Exa](https://agentic.so/tools/exa)",
  "BECAFBD3FBAACE034393": "[Firecrawl](https://agentic.so/tools/firecrawl)",
  "2DDEBEA9088AEBA675D4": "[Hacker News](https://agentic.so/tools/hacker-news)",
  "36CE525519D43D47D51C": "[Hunter](https://agentic.so/tools/hunter)",
  "B01BF3062B21647A9201": "[Jina](https://agentic.so/tools/jina)",
  "62AC8C03CA23C47F4750": "[Midjourney](https://agentic.so/tools/midjourney)",
  "585A0ABEE4E84152D6C9": "[Novu](https://agentic.so/tools/novu)",
  "038BE069AD11F5A1CECA": "[People Data Labs](https://agentic.so/tools/people-data-labs)",
  "43D2D88BB1F87AE96F8B": "[Perigon](https://agentic.so/tools/perigon)",
  "F60AE529CA37DF635379": "[Polygon](https://agentic.so/tools/polygon)",
  "A39EFD33C1CA084E2911": "[Predict Leads](https://agentic.so/tools/predict-leads)",
  "E66A7324B3E87D9EC868": "[Proxycurl](https://agentic.so/tools/proxycurl)",
  "4EE1E7E3770D0A391A41": "[Searxng](https://agentic.so/tools/searxng)",
  "0F96C6E35DF11633F80E": "[Serpapi](https://agentic.so/tools/serpapi)",
  "361B3CC59DC7CC453794": "[Serper](https://agentic.so/tools/serper)",
  "6CE41821834DAC735C2B": "[Slack](https://agentic.so/tools/slack)",
  "81C1DB0C7A98574664B4": "[Données sociales](https://agentic.so/tools/social-data)",
  "6B3D68C11623256CCA59": "[Tavily](https://agentic.so/tools/tavily)",
  "FA9573EA879C6F0CA96B": "[Twilio](https://agentic.so/tools/twilio)",
  "025C5772A32A4753F698": "[Twitter](https://agentic.so/tools/twitter)",
  "12CB2A2B89517F4B16E2": "[Météo](https://agentic.so/tool/weather)",
  "502C1DE1B54322718289": "[Wikidata](https://agentic.so/tools/wikidata)",
  "63E13EBFD8374DFABA45": "[Wikipédia](https://agentic.so/tools/wikipedia)",
  "A0653C57205AE8A5451D": "[Wolfram Alpha](https://agentic.so/tools/wolfram-alpha)",
  "940FAC40613FD3431012": "Utilisation d'un outil",
  "4CBF71F929D37E2C4B6A": "Nous utiliserons l'[outil calculatrice](https://agentic.so/tools/calculator) car il ne nécessite aucun secret.",
  "80F0BB43609C8A98443D": "Trouvez la page de documentation de l'outil ([https://agentic.so/tools/calculator](https://agentic.so/tools/calculator)) et installez les dépendances.",
  "65201BF1C0A3FD70D449": "Configurez les variables d'environnement requises dans votre fichier `.env`. Dans ce cas, l'outil calculatrice ne nécessite aucun secret, mais la plupart en nécessitent.",
  "A556BEE1352A4BABC224": "Importez la fonction de l'outil et enregistrez-la avec `defTool`.",
  "3BF13153DAD444DFD434": "ou dans un sous-prompt",
  "7212D2B3C176AD7D2C9B": "C'est tout ! La fonction agentic contient toutes les métadonnées nécessaires pour enregistrer la fonction avec le LLM et l'exécuter.",
  "9A30924D943E0ECB36AB": "Exemple de météo",
  "B80FD7F80ED5B53E4A2A": "L'[outil météo](https://agentic.so/tools/weather) utilise les API de [https://www.weatherapi.com/](https://www.weatherapi.com/).",
  "7200DE45D3CFCBBD12BD": "Installez le paquet `@agentic/weather`.",
  "E09A5CB9998F52EC2BDE": "Configurez la variable d'environnement `WEATHER_API_KEY` dans votre fichier `.env`.",
  "B85B6ED3035C0BAD05A4": "Importez le type client, créez une instance et enregistrez-le avec `defTool`.",
  "F00D75BDF15CE990BABE": "Exécution des scripts",
  "274D18266E0DAC3F436A": "Découvrez comment exécuter des scripts dans votre environnement de développement, gérer l'exécution des scripts et interpréter les résultats pour améliorer votre productivité.",
  "241FAE217DBD731C67D7": "Les scripts sont exécutés dans le contexte de votre environnement.\n**N'exécutez que des scripts de confiance.**",
  "33041DEDFDA8B84DB8F0": "Visual Studio Code",
  "B0DBA8352B24C723F4F3": "Dans Visual Studio Code, l'emplacement à partir duquel vous commencez à exécuter un script détermine les entrées dans la variable [`env.files`](/genaiscript/reference/scripts/context).",
  "4B1BE453069E92CA861C": "Fichier unique",
  "33B8ECE3354F53DC8DA3": "Cliquez avec le bouton droit sur un fichier dans l'explorateur et sélectionnez **Run GenAIScript...**.",
  "8C4176401FEC064EFAC3": "Ou bien, cliquez avec le bouton droit dans un éditeur de fichier et sélectionnez **Run GenAIScript...**.",
  "53F3F87861E742B9B496": "Le tableau `env.files` contiendra un seul élément correspondant au fichier sélectionné.",
  "7D30F4E7233552CA2154": "Dossier",
  "FBDEDA4D3534C48231C2": "Cliquez avec le bouton droit sur un dossier dans l'explorateur et sélectionnez **Run GenAIScript...**.",
  "EF9711E69E8B326444F2": "Le tableau `env.files` contiendra tous les fichiers imbriqués dans ce dossier.",
  "00E9C3BEE5D5547E2490": "Dossier racine",
  "6C2B734F3C8931AADC15": "Pour exécuter le script sur le dossier racine, effectuez un clic droit sous les fichiers.",
  "44CCECA9A98CEEA5BBD9": "GitHub Copilot Chat",
  "C460947D551838A841DB": "Vous pouvez exécuter des scripts dans [GitHub Copilot Chat](https://code.visualstudio.com/docs/copilot/getting-started-chat) à travers le participant [**@genaiscript**](/genaiscript/reference/vscode/github-copilot-chat).",
  "840ACD24B12E50365AED": "Fichiers par défaut",
  "DF9F6ED8802FC555F2A3": "Vous pouvez spécifier un ou plusieurs fichiers par défaut pour exécuter le script. \nLorsque vous exécutez le script depuis son propre fichier script, ou avec la ligne de commande sans arguments de fichier,\nles fichiers par défaut seront utilisés.",
  "96E77FA5956A1FF446B9": "Tâches",
  "197DCB1E5FEAA83DF0D4": "L'extension GenAIScript expose automatiquement chaque script comme une [Tâche](https://code.visualstudio.com/docs/editor/tasks).",
  "0141ABA4C34481A25E3A": "La tâche lance le [cli](/genaiscript/reference/cli) et exécute le script sélectionné en passant le chemin vers l'éditeur ouvert actuellement.",
  "BC0783CE4FD11A32CEB0": "Ouvrez la palette de commande `Ctrl+Shift+P` et recherchez \"Tasks: Run Task\".",
  "A0F046E455377EB79BAC": "Sélectionnez le fournisseur de tâches `genaiscript`.",
  "326C2C2F1BBB4C309A98": "Choisissez le script que vous souhaitez exécuter.",
  "7CB7433C9FF497F4882C": "Lorsque vous exécutez un script en tant que tâche, le résultat ne sera pas visible dans la fenêtre de traçage de GenAIScript.",
  "FC51E14C8361EA40163B": "Analyser les résultats",
  "1704272A86FD1E775F67": "Par défaut, GenAIScript ouvre l'aperçu de sortie qui montre une vue rendue de la sortie du LLM (en supposant que le LLM produise du Markdown).",
  "AFCEBEB92AA2D12300DB": "La vue GenAIScript fournit un aperçu de la trace de la dernière exécution.",
  "3D4954081897009E137C": "Vous pouvez également utiliser la **Trace** pour examiner chaque étape de transformation de l'exécution du script.",
  "44BB2336DC6BA41A7FEC": "Cliquez sur l'icône de la barre d'état de GenAIScript pour accéder à diverses options permettant d'examiner les résultats.",
  "3669E925572DD2969B09": "Commencez par créer un script en utilisant la [ligne de commande](/genaiscript/reference/cli).",
  "055C4A1E21D60D56A87A": "JavaScript",
  "9307B821310D94B4B0F1": "TypeScript \"--typescript\"",
  "B74EBAE56AD3F84AD660": "La commande `scripts create` génère également un fichier de définition TypeScript (`genaiscript.d.ts` et `tsconfig.json`) pour activer la vérification des types et l'auto-complétion dans votre éditeur. Si vous devez régénérer ce fichier de définition TypeScript, utilisez `scripts fix`.",
  "079FF96DC8226503E245": "Utilisez la commande [run](/genaiscript/reference/cli/run) pour exécuter un script depuis la ligne de commande.",
  "3D1A0A6295DCCC6AE5F7": "Si vous prévoyez d'utiliser fréquemment la [ligne de commande](/genaiscript/reference/cli),\nil est préférable de l'installer localement, car le temps de démarrage de `npx` peut être lent.",
  "927D610030A2174C64A0": "en tant que dépendance de développement",
  "B3CA341C1553D8D472B5": "en tant que package global",
  "A22ED1EB328AD759F8EC": "Vous pouvez démarrer un [bac à sable](/genaiscript/reference/playground) pour exécuter des scripts de manière interactive via une interface web similaire à l'extension Visual Studio Code.",
  "F25FD734383375258D51": "[Déboguez](/genaiscript/getting-started/debugging-scripts) vos scripts en utilisant le débogueur de Visual Studio Code !",
  "4D94C411870494EAC3C1": "Autres intégrations",
  "EFD27418FC83C6541A27": "Celles-ci ne sont pas activement maintenues par l'équipe GenAIScript, mais nous essayons de les faire fonctionner autant que possible. Si vous rencontrez des problèmes, veuillez signaler les erreurs.",
  "86DC5DF3F45A3F62BAE7": "Cursor",
  "20F70E48BA1E97808D79": "Le projet [genaiscript-runner.nvim](https://github.com/ryanramage/genaiscript-runner.nvim) fournit un plugin pour exécuter des scripts GenAIScript.",
  "F7A1D23C102492588587": "Moyen ultra simple de partager et réutiliser des scripts",
  "AA41B45EB8B47D816ADC": "Les GitHub Gists sont un moyen simple de partager et de réutiliser des scripts. Vous pouvez créer un Gist à partir de n'importe quel script dans GenAIScript, puis le partager avec d'autres ou l'utiliser dans vos propres projets.",
  "336EB8B25E214E7BD87F": "Pour de meilleurs résultats, utilisez l'extension [GistPad](https://marketplace.visualstudio.com/items?itemName=GistPad.gistpad) pour Visual Studio Code. GistPad vous permet de créer, éditer et gérer vos Gists directement depuis VS Code.",
  "57FE5BD81DA6584B2D3E": "[Lisez la documentation](/genaiscript/reference/vscode/gists/)",
  "CAAD99C1CBB528ED10F8": "GistPad",
  "5FF3B8BFB57675CB5319": "Alors que nous testons et migrons vers la nouvelle vue, les anciens éléments de menu `Output`/`Trace` sont toujours accessibles depuis le menu de la barre d'état.",
  "E37B79933F0EC7A28629": "Accéder à la vue en dehors de Visual Studio Code",
  "1CCA40CC32795D460E03": "Lancez la commande ",
  "B230D20138D8C4F6FAD3": "serve",
  "4B11952D506F854FB420": "depuis le ",
  "DB2A0BE4D6E48FA27A60": "lien direct",
  "159B506403ED9243C953": "agents",
  "648FBC97D716B6D24226": "url YouTube : [https://youtu.be/ENunZe--7j0](https://youtu.be/ENunZe--7j0)",
  "71965CBC4B79CCDB0EC9": "playlist : [https://www.youtube.com/playlist?list=PLTz1gR9D9ZMVioMqT8y0F6Jr2LizAANIm](https://www.youtube.com/playlist?list=PLTz1gR9D9ZMVioMqT8y0F6Jr2LizAANIm)",
  "3824E76180DCED477B50": "Une refonte majeure",
  "DA722B170B31B33EEF07": "Lorsque ",
  "727131204F7D02760FA1": "Matthew Podwysocki",
  "68FDD2803AB6687DA8A4": "@mattpodwysocki",
  "AF9FBF492D8A8DA44767": "une refonte architecturale complète pour créer un système plus modulaire et maintenable",
  "69DDB7C63DB5C8BD42D9": "Il a dirigé la tâche complexe de ",
  "986B9A65D44FC017EC31": "restructurer complètement notre système de build",
  "FFE5D858D93A464B6003": "Présentation de ",
  "B5448647A2DCD0B32386": "Le nouveau ",
  "CF06C95B736A47412726": "@genaiscript/runtime",
  "C7318F868AC7713E20E1": "paquet fournit un runtime GenAIScript autonome ",
  "734BFB96487FB62F28A8": "runtime",
  "8C6CFB462C59A52362F1": "à partir du ",
  "86E8C86053EF55EB1683": "Le processus d'initialisation charge des analyseurs globaux et ",
  "E1883EB81BF07D01F7C8": "assistants de prompts en ligne",
  "DF97CF5C20BFC03041A9": "Les fonctions de prompt de haut niveau telles que ",
  "407A6DEFB75077657570": "Accès simplifié à l'API avec ",
  "51C5F21CB280BBA30568": "@genaiscript/api",
  "8028A3B25F093F6AA573": "exécution programmatique",
  "1AFDCA24F6EEFBF078B9": "@matthew-podwysocki",
  "89E2264E9075964D5812": "Comment ça fonctionne ?",
  "93865AD7B68338AE9E2F": "Le guide Rechercher et Transformer couvre les détails de cette nouvelle approche...",
  "B043E95985EB8996826E": "🚀 Le [Model Context Protocol (MCP)](https://modelcontextprotocol.io/introduction) révolutionne le monde de la technologie, et nous sommes ravis d'annoncer que GenAIScript est à l'avant-garde de cette révolution ! ",
  "C0F35F3C885CFAE450AA": "Copilot Studio",
  "C35DAA86A99BE56E38CC": "GenAIScript permet désormais de faire apparaître des scripts comme des outils MCP",
  "6318A51A32638F685D35": "Garder votre README frais et attrayant",
  "EC0A3654912820050F1B": "Optimisez la porte d'entrée de votre projet avec notre script pour un README toujours à jour et engageant.",
  "93C74AE53BE6C314A775": "Dans le monde de l'open source, un fichier `README` bien entretenu agit comme la porte d'entrée de votre projet. C'est souvent la première chose que les utilisateurs et contributeurs potentiels voient, et en tant que tel, il doit être à la fois informatif et invitant. Aujourd'hui, nous plongeons dans le GenAIScript qui aide à garder le `README` du [projet GenAI](https://github.com/microsoft/genaiscript) aussi frais qu'une marguerite ! 🌼 Découvrez le [fichier script réel](https://github.com/microsoft/genaiscript/blob/main/packages/sample/genaisrc/readme-updater.genai.mts) pour les détails.",
  "C62A0825ED1784275CBA": "Cet article de blog a été coécrit avec un [script](https://github.com/microsoft/genaiscript/blob/main/packages/sample/genaisrc/blogify-sample.genai.mts).",
  "4422630F2E358D63B923": "L'intention derrière le script",
  "F14070566C2074E6443F": "Le script que nous analysons est un outil de maintenance conçu pour importer des informations pertinentes provenant de la documentation et des exemples dans le `README` afin d'améliorer son attrait pour les utilisateurs. Il garantit que le `README` n'est pas seulement un fichier statique mais un document vibrant et actualisé qui reflète avec précision les fonctionnalités et capacités de GenAI.",
  "07D2FEAC474CB6FA72A2": "Explication ligne par ligne",
  "8CD0640D10550BD75767": "Passons en revue le code du script comme si nous le concevions depuis le début :",
  "DE8F1B5EE2B9AD0CCD45": "Ici, nous définissons les métadonnées du script, y compris une description de son objectif et les outils qu'il utilisera. L'outil `fs` indique que des opérations sur le système de fichiers seront impliquées.",
  "954D9DC8EEBCA13BF8D2": "Ces lignes déclarent deux fichiers importants : le `README` lui-même et un fichier `FEATURES` qui contient des informations à importer dans le `README`.",
  "59CFE560CE2B770C7B99": "Dans ce modèle littéral, nous exposons les tâches pour le script, y compris les directives pour mettre à jour le `README` avec des fonctionnalités, des exemples et des liens vers la documentation tout en préservant certaines sections inchangées.",
  "A953D702A74E06CAA9A0": "Enfin, nous spécifions que la sortie de ce script sera un fichier `README.md` mis à jour.",
  "86FDCDB353CD0C61DAF5": "Pour exécuter ce script de maintenance, vous aurez besoin du CLI GenAIScript. Si vous ne l'avez pas encore installé, dirigez-vous vers la [documentation officielle](https://microsoft.github.io/genaiscript/) pour les instructions d'installation. Une fois que vous avez le CLI prêt, exécutez la commande suivante dans votre terminal :",
  "3BD47AE69614D58F8A60": "Cette commande lancera le script et appliquera les améliorations à votre fichier `README`, garantissant qu'il soit à jour et convivial.",
  "4575C734A2D30E4D025D": "Un `README` méticuleux est un signe distinctif d'un projet open source bien entretenu. Avec ce GenAIScript, le projet GenAI donne un excellent exemple d'automatisation pour la maintenance de la documentation du projet. Adoptez la puissance de l'automatisation pour garder le tapis d'accueil de votre projet propre et attrayant. Bon codage ! 👨‍💻👩‍💻",
  "F367ADEA62CC4680E9A8": "Yohan Lasorsa",
  "2C67F639B7BE6FB22573": "GenAIScript prend en charge les différentes variantes des ",
  "B686067D10B38A339054": "OpenAI o1",
  "621EF150F3E57C7BB1AE": "!",
  "06A7B91404EA1E94758D": "DeepSeek V3",
  "50E9B7C146C5B13DC3A3": "Labs Invariant",
  "8BB454F1C3B4711FD266": "paramètre",
  "92F9D2FB88699128343E": "sans mentionner qu'il a divulgué le numéro de version",
  "B6A7B09A96E09A44141C": "Retour à l'outil météo",
  "3B95CADC5E22E0986881": "validation de l'intention",
  "9722D881A0F5A71B7B82": "l'itération s'arrête !",
  "FCD3D683F74CD17D290E": "Outils MCP",
  "50A16A5A2396FC7227C2": "Agents MCP",
  "391BCCA118E1C4857902": "Découvrez comment augmenter le nombre de serveurs MCP avec des agents.",
  "90AA8F9D00CC8ADF3970": "Nous avons ajouté la prise en charge de la configuration des serveurs MCP dans les métadonnées des scripts et leur encapsulation avec des agents. Par conséquent, vous pouvez désormais exécuter plusieurs serveurs MCP en parallèle, chacun avec son propre agent.",
  "BFC08D7AFFFEAF566EDA": "Vous voulez simplement des serveurs ?",
  "637B23B210ABB5EE2B44": "Vous ne voulez pas utiliser l'abstraction des agents ? Vous pouvez également injecter directement le serveur MCP dans l'invite en utilisant le champ `mcpServers`.",
  "60FECBEF589651D49D6B": "GenAIScript définit un [**agent**](/genaiscript/reference/scripts/agents) comme un [outil](/genaiscript/reference/scripts/tools) qui exécute une [invite intégrée](/genaiscript/reference/scripts/inline-prompts) pour accomplir une tâche. L'agent LLM est généralement complété par des outils supplémentaires.",
  "A16A5CC082D13EF5D7B3": "Dans cet article, nous allons apprendre à construire un `agent d'interaction utilisateur` qui permet à l'agent de poser des questions à l'utilisateur.",
  "E59C8D3B18A1D936BC5C": "Plongeons dans la création d'un \"Agent capable de poser des questions à l'utilisateur\".",
  "F8932D221044FB0A06A7": "Vous pouvez trouver le script complet sur GitHub [ici](https://github.com/microsoft/genaiscript/blob/main/packages/cli/genaisrc/system.agent_user_input.genai.mts).",
  "518C41F8BF7D1296E79E": "Métadonnées",
  "D157C85AF36C9CAE46F7": "Le script est écrit en JavaScript. Il commence par déclarer les métadonnées pour rendre le script disponible en tant que script système, réutilisable dans d'autres scripts.",
  "511436F8D583A21C534D": "Cette ligne configure le titre de notre système, rendant clair qu'il est destiné à interagir avec l'utilisateur en posant des questions.",
  "88261D810BB17B838FF7": "titre et description",
  "2EE31C2EE29F217519E1": "La fonction `defAgent` définit le comportement de notre agent. Elle prend un identifiant d'agent et une description. Ces deux éléments sont très importants, car ils aideront le \"host\" LLM à choisir d'utiliser cet agent.",
  "5E4D124AB862E6C94DC3": "GenAIScript ajoute automatiquement une description de tous les outils utilisés dans l'invite de l'agent, vous n'avez donc pas à vous en soucier dans la description.",
  "3CFF9AF0EDC65E824C58": "invite",
  "5A30E71B939C744D567E": "Le troisième argument est une chaîne ou une fonction pour créer les instructions d'invite pour l'appel de l'agent LLM. L'implémentation de l'agent comprend déjà des invites génériques pour que l'invite se comporte comme un agent, mais vous pouvez en ajouter davantage pour spécifier un rôle, un ton, ainsi que des choses à faire ou à ne pas faire.",
  "38121FDCAFE064905068": "configuration du modèle",
  "ED3350C05CF30DFF2D74": "Le dernier argument est un ensemble d'options de modèle, similaire à [runPrompt](/genaiscript/reference/scripts/inline-prompts), pour configurer l'appel LLM effectué par l'agent. En particulier, c'est ici que vous listez les outils que l'agent peut utiliser.",
  "3BD481932A636C5DC9D1": "Comment utiliser l'agent",
  "9B07E6585131C71E74C2": "L'agent est utilisé comme n'importe quel autre [outil](/genaiscript/reference/scripts/tools) en le référençant dans les options `script`.",
  "88E3A81E59AAF0177F29": "Essayons-le !",
  "C5B1FA9718F373FFAC34": "Essayons l'agent avec :",
  "CD9892655FCB811750AF": "et examinons les résultats...",
  "281FB2F464763AF296F2": "✔ Quelle serait la chose la plus inattendue à trouver dans un réfrigérateur ? un grille-pain",
  "1D3FC30ACA80DB453418": "✔ En fonction de votre réponse, laquelle des options suivantes serait également inattendue à trouver dans un réfrigérateur ? Un téléviseur",
  "809832787B4627E6916F": "✔ Votre sélection de 'Un téléviseur' est-elle l'élément inattendu correct à trouver dans un réfrigérateur ? oui",
  "A139F3D7C84A9A5C6D0F": "Hugging Face Transformers.js",
  "502FFE40F628C84135CE": "Découvrez comment exécuter des LLMs localement en utilisant Hugging Face Transformers.js dans GenAIScript, vous permettant de tirer parti de modèles de langage puissants dans vos projets JavaScript.",
  "C646BA263137FFF82A15": "<span style=\"font-size: 12rem;\">🤗</span>",
  "7FFC19B5A7D490C3AB00": "Nous avons temporairement supprimé la prise en charge du fournisseur de modèles `transformers` dans GenAIScript afin de réduire l'empreinte d'installation.",
  "A87ED56E497E71F5B602": "[Hugging Face Transformers.js](https://huggingface.co/docs/transformers.js/index) est une bibliothèque JavaScript qui offre un moyen simple d'exécuter des LLMs dans le navigateur ou dans node.js (ou Bun, Deno, ...).",
  "61D3321D810EB8C33A88": "GenAIScript téléchargera et mettra en cache le modèle pour vous, et vous pourrez commencer à l'utiliser immédiatement **complètement localement**.",
  "639D171BD2AFDB58A409": "Il existe [de nombreux modèles](https://huggingface.co/models?pipeline_tag=text-generation&library=transformers.js) parmi lesquels choisir, et vous pouvez également suivre la documentation de Hugging Face pour affiner le vôtre.",
  "319FCD8518A0615FF0E1": "GPT-Image-1",
  "06B74F25B55F49E50DD4": "Un nouveau modèle pour générer des images à partir d'invites textuelles",
  "5C34D85D242809A4A5C0": "Nous avons ajouté la prise en charge du nouveau modèle de génération d'images OpenAI `gpt-image-1`. Vous pouvez l'essayer via l'API d'OpenAI ou Azure AI Foundry.",
  "41B194B8C075D298AF8A": "Pour comparer les performances de ce modèle, voici un petit script qui génère une image de chat pixelisé sur DallE-2/3 et `gpt-image-1`.",
  "1D0AD48EA73AC182FC8F": "Modèle : openai:dall-e-2",
  "0E57CBA70F959F961BC0": "![image](./88daddda0cbe49a60fe7b11db44b2f037c0e70f8469884df13e0bbaff8bb66de.png)",
  "900D8E0A85980A9A3213": "Modèle : openai:dall-e-3",
  "8E228922E1C8F2AF8636": "![image](./8ce06ae2b0bd7193701d7914faf3faf9b384ae6d3d8cb1d29113b47900aad66a.png)",
  "DAF8F063A6E35FB863D0": "Modèle : openai:gpt-image-1",
  "26CB6C31F2C3EED3BBAA": "![image](./9c8d4a6bd2b023110b8e716ca48acae431401adf1c8d816c9b986abefa6acafe.png)",
  "EA37C8FD0594E4845C2F": "[Outils](/genaiscript/reference/scripts/tools) est une fonctionnalité puissante des modèles LLM qui permet d'augmenter le raisonnement des LLM avec des outils externes.",
  "421D3111E2AED466314E": "De nos jours, de nombreux modèles LLM intègrent un support intégré pour les outils. Cependant, certains ne le font pas... comme [o1-preview et o1-mini d'OpenAI](https://platform.openai.com/docs/guides/reasoning).",
  "8E53962D766C1DC290D8": "Outils de secours",
  "EC7AD5C5C83B107A8FAE": "Avec GenAIScript 1.72.0, nous introduisons le concept des **outils de secours**. En gros, cela consiste en un [script système](/genaiscript/reference/scripts/system#systemtool_calls) qui \"enseigne\" au modèle LLM les outils disponibles et comment les utiliser.",
  "54F7431F3D4A9CC5FFB6": "La performance de cette fonctionnalité variera considérablement en fonction du modèle LLM que vous décidez d'utiliser.",
  "C94CEE9465616ED8F67B": "Un exemple d'outil",
  "D0D0DD604366ED54C42A": "Voici un exemple d'un outil qui génère un nombre aléatoire compris entre 0 et 1.",
  "214DE7E4CEC91DAD3661": "trace o1-mini (utilisant les modèles GitHub)",
  "464CFC152696CD00160A": "modèle gemma2 (utilisant Ollama)",
  "E88A45903780350557D1": "Activation",
  "359BDD3A292A26B87949": "Le mode outil de secours est automatiquement activé pour les modèles LLM connus qui ne prennent pas en charge les outils nativement. La liste n'est pas complète, alors ouvrez une issue si vous tombez sur un modèle qui devrait avoir les outils de secours activés.",
  "7F204829C22EB2AB6E84": "Il peut être activé manuellement en réglant l'option `fallbackTools` sur `true` dans la configuration du script.",
  "F52203B4C881477FAB62": "ou en définissant l'option `--fallback-tools` dans la CLI.",
  "5A4122ADEB143956619C": "[https://discord.gg/y7HpumjHeB](https://discord.gg/y7HpumjHeB)",
  "C06402F29D3C002C0FE4": "Lancer une nouvelle version d'un produit est toujours excitant ! Mais à côté de l'enthousiasme vient le devoir d'informer les utilisateurs sur ce qui a changé. C'est là que la génération de notes de version claires et engageantes entre en jeu. ✨",
  "454CCBC005F92DDA4975": "Aujourd'hui, nous allons explorer un script qui automatise la création de notes de version pour GenAI. Ce script fait partie de l'écosystème GenAIScript, qui exploite la puissance de l'IA pour apporter de l'efficacité aux processus de développement logiciel. 🚀",
  "8D77C3B8AF6CD52A127C": "Si vous souhaitez plonger directement dans le script, il est disponible sur GitHub juste [ici](https://github.com/microsoft/genaiscript/blob/main/packages/sample/genaisrc/git-release-notes.genai.mjs).",
  "250B35F6CB525A7E32EE": "Ce billet de blog a été co-écrit avec un ",
  "B8FE4FE7B1C8B18586FB": "script",
  "1B5E1A4059E07AA0BD3C": "Décomposition du script",
  "171E0D05E0442B9EBF3B": "Le script est un fichier `.genai.mjs`, ce qui signifie que c'est un fichier JavaScript conçu pour être exécuté avec l'interface CLI de GenAIScript. Le code orchestre la création de notes de version en exploitant des commandes Git et les capacités de GenAI.",
  "3EC046ADC2B28F36BF5B": "Passons en revue le script, étape par étape :",
  "8DED63C3B38B096980B7": "Étape 1 : Initialisation du script",
  "2EE4F8CAE4E8B37F7A36": "Le script commence par une initialisation via une fonction `script`. Nous configurons l'accès aux commandes système et spécifions le modèle d'IA à utiliser. La température contrôle la créativité de l'IA, 0.5 représentant un choix équilibré.",
  "F3B5D0829706DC4B86C0": "Étape 2 : Définir le nom du produit",
  "BE396A2F0352E354DB0A": "Ici, nous utilisons une variable d'environnement pour définir le nom du produit, par défaut \"GenAIScript\" si cela n'est pas fourni.",
  "35CCAE43292AD8417B58": "Étape 3 : Trouver l'étiquette précédente",
  "7CB85F66D85E212AB145": "Nous lisons la version actuelle depuis `package.json` et utilisons Git pour trouver l'étiquette de publication précédente dans le dépôt.",
  "C6F6985066C3176951F2": "Étape 4 : Rassembler les commits",
  "0CDC9EA91524BB06BED3": "Ce bloc exécute une commande Git pour récupérer la liste des commits qui seront inclus dans les notes de version, en excluant tous ceux contenant 'skip ci' dans le message.",
  "43734A25EAFE9EF700FF": "Étape 5 : Obtenir le différentiel",
  "FE6BEA2DE59003585A85": "Ensuite, nous obtenons le différentiel des modifications depuis la dernière version, en excluant certains fichiers et répertoires qui ne sont pas pertinents pour les notes de version destinées à l'utilisateur.",
  "15006FFEE204C0903D96": "Étape 6 : Définir des espaces réservés",
  "FD895C4511C83762B674": "Nous définissons deux espaces réservés, `COMMITS` et `DIFF`, qui seront utilisés pour référencer les commits et les différences dans l'invite.",
  "6DBEE64128800A3ED493": "Étape 7 : Rédiger l'invite",
  "E80F0952006D008CCA9B": "Enfin, le script se termine par une invite qui donne des instructions à GenAI pour générer les notes de version. Elle détaille la tâche, les directives à suivre et le style à respecter.",
  "A08532491463E7191155": "Comment exécuter le script avec l'interface CLI de Genaiscript",
  "26F02EA879DC51A3F4E1": "Une fois le script créé, l'exécuter est un jeu d'enfant avec l'interface CLI de Genaiscript. Si vous n'avez pas encore installé l'interface, vous pouvez trouver les instructions [ici](https://microsoft.github.io/genaiscript/getting-started/installation).",
  "03BA2273AD6657DD29E1": "Pour exécuter le script, naviguez dans le répertoire racine de votre projet via le terminal et exécutez :",
  "07CD828D7708BE6D1CE6": "N'oubliez pas d'utiliser le nom du fichier script sans l'extension `.genai.mjs` lors de son invocation avec l'interface CLI.",
  "0DD58FF30DA83969B83F": "Et voilà ! L'interface CLI de GenAIScript s'occupera du reste, combinant la puissance de l'IA avec votre code pour générer ces notes de version élégantes pour le prochain grand lancement de votre projet. 🌟",
  "CE281C5B5D44CDA6B707": "Avez-vous déjà souhaité une manière simple de créer un résumé et une narration audio pour votre article de blog ?\nCe script vous aide à faire cela grâce à l'IA, transformant le contenu de votre blog en un résumé textuel et un fichier audio vocal.  \n[Voir la source sur GitHub.](https://github.com/microsoft/genaiscript/blob/main/docs/genaisrc/blog-narration.genai.mts)",
  "A9D2B90E257AAF335B32": "Comment fonctionne le script",
  "8389F9B6A7DBD9282D5C": "Passons en revue le script étape par étape en expliquant ce que fait chaque partie.",
  "4A2E38CCCC948EE3F86C": "définit les métadonnées du script : titre, description, quels types de fichiers il traite (`.mdx`, `.md`), et quel modèle d'IA utiliser.",
  "736C0D2C49754D689CA0": "`\"files\"` pointe vers l'article de blog d'exemple à narrer.",
  "47EFB1913BBA51F6CC47": "`\"parameters\"` définit les options facultatives du script.",
  "B829AF325D1C6F36BBC1": "lit les paramètres d'entrée à partir des variables d'environnement et des fichiers.",
  "86D503FEC014C992A868": "Si aucun fichier n'est fourni, le script s'annule immédiatement.",
  "4DD43A0CA2E3FB23B2F9": "prépare le nom et l'emplacement cible pour le fichier audio `.mp3` de sortie.",
  "E95A435AA1D630876435": "Si le fichier existe déjà et que `force` n'est pas défini, le script s'annule.",
  "EC06090292753EF8BF49": "prépare divers styles d'échantillons de voix et de narration pour guider le modèle.",
  "61123EA02880FA07B811": "Exécute un prompt alimenté par l'IA pour générer :",
  "FA513545170E55724801": "Un résumé de l'article de blog",
  "A28B450074DF364FF4DB": "Une description du style de narration",
  "B804CC8AE3121DB16E17": "Un type de voix (parmi les voix TTS d'OpenAI)",
  "F15A14CC0F871B296108": "Le prompt détaille toutes les exigences pour le modèle d'IA, y compris les instructions et des exemples de résultats.",
  "C6A482D7096EF3C0519E": "Appelle la fonction `speak` pour générer une narration audio du résumé en utilisant le type de voix et le style de narration choisi.",
  "7F9B16ECE16BF05DCEB9": "Si la génération du fichier audio échoue, le script s'arrête.",
  "A27ECE8DD20CB8856B20": "Sinon, il enregistre le nom du fichier audio généré.",
  "95065B6C0DA9CED7473D": "Fonctions importées",
  "5579604F8DC51EBD9DB3": "Ce script utilise des utilitaires de `genaiscript/runtime` :",
  "D913E4A71341FDA5FDD4": "`runPrompt` - envoie des prompts au modèle d'IA et retourne des résultats structurés.",
  "C0D5D0066F646E555D0F": "`speak` - génère une narration audio à partir de texte et d'instructions vocales.",
  "8366BBDF89751860FE77": "`workspace` - gère les opérations sur les fichiers en toute sécurité.",
  "871DB6B0BE2346B129B4": "`host.exec` - exécute des commandes shell (comme `ffmpeg`) pour traiter des fichiers.",
  "62083C81AC1F4D09AAC6": "Vous pouvez [consulter la source runtime ici](https://github.com/microsoft/genaiscript/blob/main/packages/cli/src/runtime.ts).",
  "5118E7FB3237C38B15BD": "Résumé",
  "B553AB5613C844902FEB": "Ce script transforme rapidement n'importe quel article de blog en un résumé textuel et une narration vocale, prêt à être partagé en tant qu'audio ou vidéo. Parfait pour rendre votre blog plus accessible et engageant ! 🎤📝",
  "B622B1C99E2E36560853": "Images du blog",
  "21033A4EA2375E13FDCA": "Nous avons ajouté des images au blog, voici comment nous l'avons fait.",
  "72DBA7F91C3517351A0A": "Nous générons des images de couverture pour le blog, ce qui en soi est complètement inintéressant... mais le script qui a généré les images vaut le coup d'œil.",
  "0F9715E6B758E8F750B1": "La génération d'une image de couverture pour un article de blog se fait en 3 étapes :",
  "65F78E3BA3AB1792A908": "convertir le markdown du blog en une invite d'image",
  "076E9B59211E0C1749F2": "générer une image à partir de l'invite d'image",
  "E947A15D3AD97FD7F3F8": "générer une description de texte alternatif à partir de l'invite d'image",
  "DFFBBE1F2EA9D5184FE6": "redimensionner, copier l'image et mettre à jour les métadonnées de l'article de blog",
  "17645CB44064EE5EB4F4": "Une fois que ce script a fonctionné pour quelques articles, nous avons utilisé la commande `convert` pour générer les images pour tous les articles du blog.",
  "726A90AAC3249F2E560B": "Et les images ?",
  "4171A612F00C21778577": "Les images sont quelque peu abstraites, mais elles sont générées à partir du contenu de l'article de blog. L'invite d'image pourrait certainement être améliorée, mais c'est un bon début.",
  "AA30FE95B38A3B3EEE3F": "Recherche IA Azure",
  "1E8DF0A6CAE75253207F": "Support pour Azure AI Search.",
  "EEA95DB29D4776070DFC": "Les API `retrieval` ont été étendues pour prendre en charge [Azure AI Search](https://learn.microsoft.com/en-us/azure/search/search-what-is-azure-search).\nCela vous permet d'indexer des fichiers à l'aide d'embeddings dans une base de données vectorielle pouvant être utilisée pour la recherche de similarité.\nCela est couramment appelé Generation Augmentée par Récupération (RAG).",
  "AFF5ED178FD1823F4AA6": "GenAIScript fournit un moyen simple et efficace d'interagir avec Azure AI Search. Il gère\nle découpage, la vectorisation et l'indexation des fichiers. La fonction `retrieval.index` crée un index\navec le nom et le type spécifiés. La fonction `insertOrUpdate` indexe les fichiers dans la base de données.\nEnfin, la fonction `search` récupère les fichiers qui correspondent à la requête.",
  "04E1A899BC7198600180": "Il est également possible d'utiliser l'interface en ligne de commande pour indexer les fichiers à l'avance.",
  "50565EBA661268EB857F": "Explication détaillée du code",
  "5A702F19209151421995": "1. Navigation vers une page web",
  "E454D9824B574ED300CF": "2. Capture d'écran",
  "6350597097164549B833": "3. Définition des images pour l'analyse",
  "F608DC6467AD89AC5D5B": "4. Extraction du contenu textuel",
  "B6460B2800EEF7ACD7B9": "5. Enregistrement du texte pour une utilisation ultérieure",
  "383132184D21C508CC13": "Le texte extrait est ensuite enregistré sous l'identifiant ",
  "0AA44F7518B97802936A": "6. Analyse du contenu",
  "1AF316F4948E95D8DB34": "Conclusion",
  "EE32128C2D8E52D43D86": "La stratégie de transformation de code basée sur AST",
  "3667963EE73956474F85": "au lieu de vous battre avec les espaces et les nouvelles lignes, vous pouvez simplement localiser le nœud `function_declaration` qui suit un nœud `comment`. ",
  "E97D5F01A4F33A40F446": "Et voilà ! Vous n'avez touché que la partie du fichier que vous souhaitiez mettre à jour !",
  "824DA2DD7186EDA76E4C": "recherche",
  "1CD918D607C8FFBD4D03": "transformer et remplacer",
  "E0BFD743F8B826A8E8AA": "valider",
  "DDB138E7D2757E4C684C": "ast-grep",
  "B3D65BDA26A3F2CA9633": "sg",
  "E9AF2F6D630F3F2115B9": "GenAIScript profite de l'excellente intégration avec Node.JS ",
  "77481A08DCFE12AFAC7E": "Édition",
  "840B6D102EF1291649B5": "Exemple : Générateur / mise à jour de documentation",
  "EF12C8818C5816A3CC2A": "Vous trouverez ci-dessous une explication complète de la réalisation du script de générateur/mise à jour de documentation dans la ",
  "7425E767413A9836F6BF": "si l'option ",
  "775E5A5594775B9AE2BE": "base de code TypeScript",
  "F3F1B52BE2F008A42B06": "base de code GenAIScript",
  "FD5A9A705303D0350677": "source originale",
  "9E286AEE7BBDB9C3C640": "README aussi frais qu'une marguerite ! 🌼 Découvrez le fichier ",
  "BEE6A5D2E3AD624E18D2": "projet GenAI",
  "BC4AF206FFD518ECB58A": "vérifiez-le réellement ",
  "48CC4DF04A8346006488": "fichier de script",
  "9F47CCDD19875FB51DF1": "L'Intention Derrière le Script",
  "B3936E36A72ABEECA52A": "Le script que nous analysons est un outil de maintenance conçu pour importer des informations pertinentes de la documentation et des exemples dans le ",
  "D5C854D7FA6FD2579657": "Explication Ligne par Ligne",
  "C3CC127787F48E86FFDE": "lui-même et un ",
  "84C2D35005F30BB9DC56": "fichier qui contient des informations à importer dans le ",
  "C62657327864220A368D": "Cette commande lancera le script et appliquera les améliorations à votre ",
  "B756A4EEAC1D3CDAB47E": "Un ",
  "F328802B905D26CDE5F9": "Envie uniquement de serveurs ?",
  "658EFC3389A09528B6CE": "Pas envie de passer par l'abstraction des agents ? Vous pouvez également injecter directement le serveur MCP dans l'invite en utilisant le champ `mcpServers`. ",
  "1F8E5D3D931B47EF3CDE": "GenAIScript définit un ",
  "F8E6ECFD07DB38FDB75A": "qui exécute une ",
  "88C2F7D5A08087934845": "Vous pouvez trouver le script complet sur GitHub juste ",
  "FE3BE65656FFC0C9EE51": "ici",
  "F06A1B4DC3144979E086": "titre et description",
  "7E37D8256BE23F015E28": "invitation",
  "DC1D3B8C5F78EB926868": "configuration du modèle",
  "A5F23055A925F5B8B93C": "exécuterInvitation",
  "41C0282DE19B27C236E2": "Comment utiliser l'agent",
  "55FB8E7B7EF2D246FB92": "L'agent est utilisé comme n'importe quel autre ",
  "A6695914DEDE43F74D74": "en le référençant dans les options du ",
  "A1ECE5AE3208DD38DE46": "Essayons-le !",
  "C044135EF0B036DC56D8": "✔ Quelle serait la chose la plus inattendue à trouver dans un réfrigérateur ? grille-pain",
  "C777C7EE6B43CACDF881": "✔ Votre choix de 'Une télévision' est-il l'élément inattendu correct à trouver dans un réfrigérateur ? oui",
  "A3FD120DDE060558565E": "🤗",
  "B319ED2056616448C869": "entièrement localement",
  "9603B75E2394ADE4A9BE": "Il existe ",
  "8C55B1DC1814BC94DB78": "de nombreux modèles",
  "7A7B832458E78505C776": "Nous avons ajouté la prise en charge du nouveau modèle de génération d'images OpenAI ",
  "B0C79D7BA5ACC1BCCDF5": "o1-preview et o1-mini d'OpenAI",
  "20B8B6228A537F243AFE": "Outils de secours",
  "E47EADDEDE593D77EACC": "script système",
  "2868982206EA2ECE2482": "Un exemple d'outil",
  "DA36264A66A1C3C8D6E3": "Activation",
  "4697ADF7D067DA05378D": "Il peut être activé manuellement en définissant l'option ",
  "66BA383CB3B11D1B6BD5": "ou en définissant le drapeau ",
  "A591344DBE145B86A1C7": "Décryptage du script",
  "BE8EC5C5792FE8263524": "Le script est un fichier `.genai.mjs`, ce qui signifie qu'il s'agit d'un fichier JavaScript conçu pour être exécuté avec l'interface CLI de GenAIScript. Le code à l'intérieur orchestre la création des notes de version en utilisant les commandes Git et les capacités de GenAI. ",
  "80036345A37B41A1B66A": "Le script commence par une initialisation avec une fonction `script`. Nous le configurons pour accéder aux commandes système et spécifier le modèle d'IA à utiliser. La température contrôle la créativité de l'IA, 0.5 étant un choix équilibré. ",
  "2D968AE297930999E631": "Nous lisons la version actuelle depuis `package.json` et utilisons Git pour trouver le tag de la version précédente dans le dépôt. ",
  "367BD1C89FA7BD26161C": "Comment exécuter le script avec l'interface CLI de GenAIScript",
  "5CBB025D35918033A258": "Comment fonctionne le script",
  "9D19D016D4D42B231F4B": "prépare le nom et l'emplacement cible pour le fichier audio de sortie ",
  "7727FC84910BC62C3C97": "Si le fichier existe déjà et que \"force\" n'est pas activé, le script s'annule. ",
  "5F8A2ACBA8C16F59545D": "Un résumé de l'article de blog",
  "47E30E2D97E687A5F1D6": "Une description du style de narration",
  "99A0C6AC42A8B9FA8B33": "Appelle la fonction \"speak\" pour générer une narration audio du résumé à l'aide du type de voix et du style de narration choisis. ",
  "273E0919C71CBBC6143A": "Fonctions importées",
  "CB73106CB856DDBAD667": "Ce script utilise des assistants de ",
  "C3B6D40D088F1AE7462B": "Vous pouvez ",
  "42C55C2755831AA3964B": "parcourir la source du runtime ici",
  "E8BDB28C772124A7CFD9": "Résumé",
  "2C0AF666583B77580CE2": "convertir le markdown du blog en une invite d'image",
  "5DDAD10B27CC107F673A": "générer une image à partir de l'invite d'image",
  "9E7E795C48908C3398E5": "générer une description de texte alternatif à partir de l'invite d'image",
  "8A38E008E343D8E3DCF2": "Que dire des images ?",
  "0C5E348AD08001AC189D": "Les API de `retrieval` ont été étendues pour prendre en charge ",
  "F8FD1278D4314D3A0916": "bibliothèque d'automatisation des navigateurs Playwright](https://playwright.dev/) qui permet de charger, interagir et inspecter des pages web.",
  "808004268FF01C293DA6": "Exemple : Générateur / Mise à jour de documentation <a id=\"sample\" href=\"\" />\n\nVous trouverez une description complète de la création du script générateur/mise à jour de documentation ci-dessous\ndans la [documentation](/genaiscript/reference/scripts/ast-grep). Je vous encourage à la lire pour approfondir.\n\nLe script `docs` est un générateur/mise à jour de documentation.\n\n* utilise ast-grep pour trouver et générer la documentation manquante pour les fonctions TypeScript exportées. Une seconde requête LLM-as-Judge\n  est utilisée pour vérifier que la documentation générée est correcte.\n* si l'option `diff` est sélectionnée, il filtrera les fonctions qui n'intersectent pas avec le\n  diff (c'est plutôt naïf mais un bon début...).\n* il peut également être utilisé pour mettre à jour la documentation d'une fonction qui a été modifiée.\n* il fonctionne quel que soit la taille du fichier ou le nombre de fichiers, car la plupart des transformations sont hyper-localisées.\n\n```sh title=\"générer et rafraîchir ma doc STP\"\ngenaiscript run docs -- --diff",
  "84A01F1B546E41A9D463": "Traitement de chaque fichier",
  "C72B75E1AEE4105E3EAA": "Évaluer les résultats avec LLM",
  "CC5C2E75674DF8819583": "Actions personnalisées <a id=\"custom-actions\" />\n\nGitHub prend en charge l'emballage des tâches en tant qu'[actions personnalisées](https://docs.github.com/en/actions/sharing-automations/creating-actions/about-custom-actions), généralement dans un dépôt dédié. C'est un excellent moyen d'emballer un script d'IA et de le partager avec d'autres.\n\n```yaml \"uses: <owner>/<repo>@<tag>\"\n- name: Exécuter le script IA\n  uses: <owner>/<repo>@<tag>\n  with:\n      github_token: ${{ secrets.GITHUB_TOKEN }}",
  "D4C0BDE1486A31625F7A": "Les schémas Zod peuvent être utilisés dans `defSchema` pour contraindre la sortie de l'outil. ",
  "8C305834B2955F5EB67B": "Résolution de l'issue",
  "E7D9D6778D0DF33FAB83": "doit être configuré dans l'Action GitHub à partir de l'objet ",
  "6D3AB25AA642FBC2DF09": "La tâche",
  "8AD27284BE5DBC7AD0F2": "Le contexte",
  "CA891F6D13671D669E57": "Automatisation avec Github Actions",
  "0EC9EE232BE5FB3FD311": "indique ",
  "C0120DFCB7EB7BDA7B3F": "--pull-request-comment",
  "A340CCD44E14159D22D0": "@azure/storage-blob",
  "DEE779A87600BF4803E9": "@azure/identity",
  "F994A734B1BD78AEFC51": "Lecture des blobs",
  "03F265FC41AE3366DA1B": "objet env.vars afin qu'ils puissent être définis via le ",
  "298272C9E590D76F4941": "Utilisation des images dans l'invite",
  "274A33147CB983FA2CA1": "le buffer peut être transmis à ",
  "EA24378D608DFA4C6C53": "Résumer les résultats",
  "10ED4B1D8346AF5E6328": "La \"Génération de Connaissances\"",
  "8F163722CB6945AB623A": "génération de connaissances",
  "6511735B9FB0F5829EC6": "intégration de connaissances",
  "836711ED98867CFF025E": "Cette technique peut être réalisée en utilisant ",
  "9A8E8B606E702435319F": "Exemple",
  "5B5046F2B1287594BAD2": "GenAIScript vous permet de ",
  "46695A4E2540E9888525": "évaluer",
  "7C816B45493458EA1801": "GenAIScript utilise ",
  "27CA4C631813E1CE92A9": "PromptFoo",
  "5455D728F2FB8D8F86FC": "simple mais vous pouvez trouver de nombreuses autres options dans la ",
  "A2359CFFA5C663A37E12": "Définition des modèles de test",
  "57F744EC0F7CBF74275F": "Ensuite, ajoutez la liste des identifiants de modèle ou ",
  "B4459963F93D0817788B": "Les tests peuvent être exécutés en utilisant le ",
  "8E09CB7FC531B89E02E2": "scripts de test",
  "4050205AAD16512E2D5D": "Markdown et frontmatter",
  "525FEBB7AA9299090A42": "L'objectif est de créer un script qui détecte lorsque le champ `description` dans le frontmatter est obsolète. ",
  "BCE06CB4D04CE8680C83": "GenAIScript est conçu pour s'exécuter sur des fichiers et fournit une variable spéciale `env.files` qui contient la liste des fichiers à analyser. Vous pouvez utiliser cette variable pour inclure les fichiers dans le contexte en utilisant la fonction [def](/genaiscript/reference/scripts/context). Nous limitons chaque fichier à 2000 jetons pour éviter de surcharger le contenu sur des fichiers volumineux. ",
  "A941590050C511FA72CD": "def",
  "9DE783460E5091FDCF08": "Exécution dans Visual Studio Code",
  "813974CD4D34F1820A6F": "Vous pouvez exécuter automatiquement cet outil sur vos fichiers de documentation pour identifier les descriptions obsolètes en utilisant le ",
  "D8D719041C9FBA415852": "DeepSeek-R1",
  "C2F9BB0FA8F356563040": "et ",
  "173B53290DADFC40BA9C": "DeepSeek-V3",
  "84733B05DDDE94EE3771": "fournisseur",
  "0E3963F9DF3CD4E1C4BA": "Annonce",
  "6547FFF780BD28FBCDCA": "Modèles du Marketplace GitHub",
  "CD266A69C9F6D9799E79": "Et d'autres !",
  "1520187E838D2BFA53A7": "LM Studio",
  "A8A79E595C4308DA6D00": "Ce guide explique comment créer un ",
  "2278F79F5719F22286BE": "qui appelle un exécutable dans un ",
  "CD5A131B2FB5F38CABB3": "Cet exemple utilise l'image Docker officielle ",
  "A9069ABDC9F923EE58DC": "GCC",
  "F09FE07B00E2683BCA2E": "gcc",
  "0EAE5D7E851B707AD8D7": "appel_IH693jAqZaC7i3AkUa3eIFXi",
  "2747BE93DCEEBF66FE98": "🛠️ sortie de l'outil ",
  "E9CC2083F5B662BA0AC2": "Modèle de Vision",
  "B0415B37FF178A6EB4E6": "defImage",
  "F57473C1C0CFCBE06EF3": "directement à ",
  "E0DBBF1DD10C0CEA69EE": "Génération de CSV",
  "C946D381951DC3AD8FE1": "Utilisation d'un schéma",
  "15F3E7AFA0ECCFAD6812": "script conçu pour automatiser la génération de messages de commit Git",
  "4597594DCAB8D4EE35F4": "Vous pouvez consulter l'exemple ",
  "3C01108A3E84A1415AA1": "Message de Commit Git",
  "5232FC5C48C345C642DF": "Explication du Script",
  "DDC293B07B1C6B44EB0A": "Vous pouvez exécuter ce script en utilisant la ",
  "F11F283720E2CE8209D2": "Vous pouvez encapsuler cette commande dans un ",
  "99F5F03BBC286BB2E89A": "fichier gcm.sh ou dans la ",
  "2740DB5180A77F2077BD": "section script de votre fichier package.json : ",
  "6BB6368AE1A4532EDAE2": "Utilisation des hooks git",
  "DEE33B181CC51153E344": "Vous pouvez également attacher le hook git ",
  "56DD35E6C345793CDB5D": "commit-msg",
  "ED3F965B0FA5118337EF": "husky",
  "6115BB67080356B4D6FE": "Remerciements",
  "542F626069477196CA1E": "Ce script a été inspiré par le générateur de messages de commit de Karpathy ",
  "E0E2895AD3D64B7A3142": "générateur de messages de commit",
  "66E621527A6DE03135E5": "Placez votre document PDF dans un répertoire visible dans l'Explorateur de VS Code.",
  "803D1110642A9F804B77": "Placez votre image dans un répertoire visible dans l'explorateur de VS Code",
  "2D89B994BEA3AB1366B0": "defTool",
  "7C3F61AA6C5492C16555": "La liste complète des outils agentic se trouve ici : ",
  "EAB628FECA95AFE975F4": "Bing",
  "3CC8BF0B580864969E8A": "Calculatrice",
  "BFDC5708B2711CB6F595": "Clearbit",
  "998B2187667A2BB9694A": "Dexa",
  "733E28F2DFFC71F37569": "Diffbot",
  "CAEB38B89AD4FBC89BC5": "E2b",
  "DB6A1557639FBD28BA2A": "Exa",
  "4CCF7F558216171B0D1F": "Firecrawl",
  "C8D444394B6EB92D6FE4": "Hacker News",
  "9D3A8CCFF50BFD2DCBC0": "Hunter",
  "2D6D4A5E359DD30E249E": "Jina",
  "8B0294A09F2049636DAC": "Midjourney",
  "B311E1D06D538B332348": "Novu",
  "D10E8A36EBE5D1153B8D": "People Data Labs",
  "098CBAB73E541CEA97B3": "Perigon",
  "E8F282EE6E9A26056590": "Polygon",
  "1A867AFEA01FC9038976": "Predict Leads",
  "0943460261CE6219A90F": "Proxycurl",
  "5440118F2EB0FDEAD24D": "Searxng",
  "E30CA056D1F5D2190898": "Serpapi",
  "11838295DF830B1B3747": "Serper",
  "65B48E1ED56175F33D85": "Slack",
  "303694C7300961075B70": "Données sociales",
  "2E5DBC89995366F26051": "Utilisation d'un outil",
  "76718547241417164BC1": "Nous allons utiliser l' ",
  "E67D454F294FD8EC298E": "outil calculatrice",
  "F98E91D1BB043FDBD7D3": "Configurez les variables d'environnement requises dans votre ",
  "072AA6A5BC5347CB7E28": "Importez la fonction de l'outil et enregistrez-la avec ",
  "2B2D2F0D62637BCAE8A9": "ou dans un sous-prompt",
  "A82941A718C4823FBEFE": "Exemple de météo",
  "9BD0B9397896888CB8BD": "outil de météo",
  "4972E2CB7771E1C43F2E": "utilise les API de ",
  "982749734E078AA6A603": "Présentations",
  "F3127200630FC80A8FBE": "Traduction réalisée par IA. Veuillez vérifier le contenu pour plus de précision.",
  "C575E0098687039D7CC8": "Scripting IA générative",
  "71AE7264119B5D8C4EDA": "GenAIScript, scripting pour l'intelligence artificielle générative.",
  "AB49D752B24374B7A1D2": "Construire des prompts de manière programmatique pour les LLMs en utilisant JavaScript. Orchestrer les LLMs, les outils et les données dans un seul script.",
  "D25ED75BCA9F4B0195AD": "Un ensemble d'outils JavaScript pour travailler avec les prompts",
  "6A4D92C096AC90F7FCF7": "Des abstractions simples pour une productivité optimale",
  "E84BD2F228A3FBD84B68": "Intégration directe avec Visual Studio Code ou une interface en ligne de commande flexible",
  "CE67AE6F152DBDD31D78": "Support intégré pour GitHub Copilot, GitHub Models, OpenAI, Azure OpenAI, Anthropic, et autres",
  "B2D536C560241B132B73": "Hello world",
  "06113622DDBC3E6CF51D": "Imaginez que vous souhaitez écrire un script LLM qui génère un poème intitulé \"bonjour le monde\". Vous pouvez rédiger le script suivant :",
  "F5F4124298E58367A7C8": "La fonction `$` agit comme une balise de gabarit pour générer un prompt. Ce prompt est ensuite transmis au LLM (que vous avez configuré), qui produit le poème.",
  "722635D7D8AF929D9C18": "Pour aller plus loin, ajoutez des fichiers, des données, et générez une sortie structurée. Par exemple, si vous voulez inclure un fichier dans le prompt et sauvegarder le résultat dans un fichier, vous pouvez rédiger le script suivant :",
  "EFBF19C5854E364186CB": "La fonction `def` insère le contenu du fichier et l'optimise en fonction du LLM sélectionné. GenAIScript analysera également la sortie générée par le LLM et extraira le fichier `data.json` automatiquement.",
  "57C1A6186C34F9529976": "Prochaines étapes",
  "8E417E7049A11D08F85C": "Installez l'[extension Visual Studio Code ou le CLI](/genaiscript/getting-started/installation/) pour démarrer.",
  "2D1DAD594486C181867F": "Configurez les [secrets](/genaiscript/getting-started/configuration) pour accéder à vos LLMs.",
  "3103FD789A051FDF076B": "Suivez le guide [Getting Started](/genaiscript/getting-started/your-first-genai-script/) pour créer votre premier script.",
  "0533BE20424144A6C323": "Pour en savoir plus, consultez la [Référence Scripting](/genaiscript/reference/).",
  "26BF0F502B990895E6D1": "Actualités récentes",
  "91A07229BA7EE4E2F04E": "Fonctions clés",
  "973CBE8179B91BC7ABC4": "GenAIScript offre des outils fondamentaux pour interagir avec les prompts LLM dans un environnement de scripting convivial.",
  "50CA52068A62F312ACEC": "Syntaxe épurée pour construire des prompts avec [JavaScript](/genaiscript/reference/scripts/) ou [TypeScript](/genaiscript/reference/scripts/typescript).",
  "5F814ACE02BB3ED1E91E": "Modifiez, [Déboguez](/genaiscript/getting-started/debugging-scripts/), [Exécutez](/genaiscript/getting-started/running-scripts/), [Testez](/genaiscript/getting-started/testing-scripts/) vos scripts directement dans [Visual Studio Code](/genaiscript/getting-started/installation) ou via une [interface en ligne de commande](/genaiscript/getting-started/installation).",
  "314F3FDD6AB6C960C715": "Enregistrez des fonctions JavaScript comme [outils LLM](/genaiscript/reference/scripts/tools/) (avec prise en charge des modèles qui ne supportent pas les outils).",
  "EA6590B900FA68309A84": "Utilisez des [outils](https://modelcontextprotocol.io/docs/concepts/tools) exposés par des [serveurs de fournisseurs de contexte de modèle](/genaiscript/reference/scripts/mcp-tools).",
  "58B1FC89C783DBE6ADA0": "Chaque script agit comme un [Outil Fournisseur de Contexte de Modèle](/genaiscript/reference/scripts/mcp-server).",
  "799290D08B1F9EFE2D17": "Combinez des [outils](/genaiscript/reference/scripts/tools) et des [prompts en ligne](/genaiscript/reference/scripts/inline-prompts/) dans un [agent](/genaiscript/reference/scripts/agents).",
  "78061B923161809BF604": "Les scripts sont de simples [fichiers](/genaiscript/reference/scripts/). Vous pouvez les versionner, les partager, les bifurquer, ...",
  "8990819CE52DE8F17B6D": "un-super-script-genai.mjs",
  "178C50E03B8B0AD061D4": "Définissez, validez et réparez des données grâce à des [schémas](/genaiscript/reference/scripts/schemas).",
  "EE63BD5523CC12E27A91": "Lisez et manipulez des documents tels que [PDFs](/genaiscript/reference/scripts/pdf), [DOCX](/genaiscript/reference/scripts/docx), ...",
  "CF17AF0E74DA9543F59B": "Traitez des données tabulaires provenant de [CSV](/genaiscript/reference/scripts/csv), [XLSX](/genaiscript/reference/scripts/xlsx), et bien d'autres formats.",
  "88890B86D79500E011C2": "Convertissez automatiquement des audios ou vidéos en texte via [OpenAI](/genaiscript/configuration/openai) ou [autres solutions](/genaiscript/configuration/whisperasr).",
  "4270B01A87D32BB891D6": "Ajoutez des images dans vos prompts. Leur cadrage et redimensionnement se feront automatiquement.",
  "605CFDBD083704A0FAB6": "Générez des captures d'écran à partir de vidéos en spécifiant des timestamps ou par transcription automatique.",
  "99BFB7252F05034D4922": "Créez des fichiers à partir des résultats générés par le LLM et visualisez les différences dans une interface de refactoring.",
  "4DDBD797AAA468FF6897": "poem.txt généré par genaiscript",
  "3EE71D6060FFECED2702": "Recherchez dans vos fichiers à l'aide de Grep ou méthodes floues ([fuzzy search](/genaiscript/reference/scripts/files)).",
  "064B32E1FE3CF58D81D4": "Effectuez des [recherches sur le Web](/genaiscript/reference/scripts/web-search) avec Bing ou Tavily.",
  "DA4069624C210E8BCFC2": "Naviguez et recueillez des données web grâce à [Playwright](/genaiscript/reference/scripts/browser).",
  "14C5BB7383B9B5F25D97": "Intègre un système de [Recherche Vectorielle](/genaiscript/reference/scripts/vector-search/) avec des bases de données locales ou [Azure AI Search](https://learn.microsoft.com/en-us/azure/search/search-what-is-azure-search).",
  "0DDFA573366023A36FA9": "GenAIScript inclut des mécanismes pour garantir une IA responsable et s'assure de la [sécurité du contenu](/genaiscript/reference/scripts/content-safety) avec Azure Content Safety.",
  "F1D665F0437EA8F6E0ED": "Travaillez avec des modèles GitHub via [GitHub Models](/genaiscript/configuration/github) ou [GitHub Copilot](/genaiscript/configuration/github-copilot-chat).",
  "3F9181844E6D51455492": "Accédez à divers modèles externes depuis [Azure AI Foundry](https://ai.azure.com/), [Google](https://aistudio.google.com/), [Anthropic](https://www.anthropic.com/), etc. Consultez les [instructions de configuration](/genaiscript/getting-started/configuration/).",
  "6A5E56B7D14AFB99A035": "Exécutez des modèles locaux Open Source avec GenAIScript, tels que [Phi-3](https://azure.microsoft.com/en-us/blog/introducing-phi-3-redefining-whats-possible-with-slms/) via [Ollama](https://ollama.com/) ou [LocalAI](https://localai.io/).",
  "8C992005C8A75B2F462B": "Permettez au LLM d'exécuter du code dans un environnement isolé.",
  "A458BFD10C44130BC24C": "Lancez du code dans des [conteneurs Docker](/genaiscript/reference/scripts/container).",
  "180319001EF507952342": "[Composez des LLMs](/genaiscript/reference/scripts/inline-prompts/) pour concevoir des prompts complexes.",
  "8DD27D5B25E62FB07664": "[Générez des images](/genaiscript/reference/scripts/image-generation) avec OpenAI DALL-E ou d'autres outils.",
  "5982E78885AB04EA8D05": "Classifiez des textes, des images, ou les deux combinés.",
  "D7B0520C1EE2B6C1DE59": "Convertissez des fichiers [Prompty](https://prompty.ai/) à l'aide de GenAIScript.",
  "975F576C6F8EE2FC3390": "Détectez la présence de secrets dans vos échanges en activant le [scanning de confidentialité](/genaiscript/reference/scripts/secret-scanning).",
  "4862A6D067607EAE93D9": "Exécutez vos automations avec la [CLI](/genaiscript/reference/cli) et intégrez-les à vos pipelines CI/CD.",
  "3E4F4C35EF1EA2B4ECC2": "Ajoutez des [revues de Pull Requests](/genaiscript/reference/cli/run/#pull-requests) par commentaires, suggestions, ou mises à jour sur GitHub Actions et Azure DevOps.",
  "62AB9E750F04895D4217": "Améliorez vos prompts avec des [tests et évaluations](/genaiscript/reference/scripts/tests) via outils comme [promptfoo](https://promptfoo.dev/).",
  "A4AD553B4F9A728F39AC": "Études de cas",
  "714C037345E2266FF19A": "Cas concrets et témoignages démontrant l'utilisation de GenAIScript.",
  "71024B2E11EC27F4E525": "Exemples",
  "03CAEB539250365FB56A": "Scripts pratiques pour démarrer rapidement !",
  "8BBAC187D59E7EA2291E": "Une collection de tutoriels pour maîtriser le scripting GenAIScript.",
  "6436DCE8F80E75F609EB": "Documentation pensée pour les LLMs",
  "0456137FDCCB4D354EED": "Les crawlers LLMs peuvent télécharger le fichier [https://microsoft.github.io/genaiscript/llms.txt](https://microsoft.github.io/genaiscript/llms.txt) pour accéder à une map des documents, ou simplement ajouter `.md` en suffixe à n'importe quelle URL pour obtenir du contenu brut en Markdown.",
  "3961E7B35A43ED489062": "Par exemple : [https://microsoft.github.io/genaiscript/guides/prompt-as-code.md](https://microsoft.github.io/genaiscript/guides/prompt-as-code.md) (notez ici l'utilisation de `.md`).",
  "A2285AF313B2A053D5E6": "Glossaire",
  "5BC18DDC44E229A57674": "Un glossaire des termes utilisés dans le projet GenAI.",
  "FDFB0CD52B6A8FE6F7D8": "Ce glossaire fournit des définitions pour les termes utilisés dans le projet.\nChaque terme est lié à sa section correspondante dans la documentation pour une référence facile.",
  "953DC9754596086E5ED3": "Ce glossaire est généré automatiquement à partir des fichiers sources.",
  "773DB9F7C9E34FFA1D52": "Termes",
  "90F96D797FF2586A21FB": "**À propos du mélange des fichiers et --vars** : Ordre des arguments CLI pour spécifier les fichiers et variables.",
  "13044166C4209AE9FF32": "**Drapeaux supplémentaires** : Drapeaux de clonage de dépôt : `--remote-branch <branche>` pour spécifier la branche, `--remote-force` pour forcer l'écrasement, `--remote-install` pour installer les dépendances après clonage.",
  "B251B98DFBE779F4C7AA": "**Astro** : Astro est un générateur de sites statiques moderne pour construire des sites web rapides et optimisés utilisant n'importe quel framework.",
  "C214D9DFE595BE786CC1": "**Authentification** : Supporte les secrets via des variables d'environnement et l'authentification Microsoft Entra.",
  "2B009D9E1740C420C42C": "**Azure AI Foundry** : Plateforme pour construire et déployer des modèles d'IA.",
  "26A9BB404DB85E2D60D1": "**Azure AI Inference** : [Azure AI Inference](/genaiscript/getting-started/configuration/)",
  "1E294D1EF8F95DFB2147": "**Azure AI Search** : Moteur de recherche hybride vecteur et mot-clé.",
  "53A12B5699803D3217D4": "**Azure AI Serverless Models** : [Azure AI Serverless Models](/genaiscript/getting-started/configuration/)",
  "CEB41817357BDC9682DE": "**Azure Content Safety** : Service pour détecter et filtrer les contenus nuisibles dans les applications.",
  "7488F12F50970C46D32A": "**Azure OpenAI and AI services** : Permet à GenAIScript d'exécuter l'inférence de LLM dans Azure AI Foundry.",
  "17BB1D7BEAD8A5AFF818": "**Azure OpenAI Serverless** : [Azure OpenAI Serverless](/genaiscript/getting-started/configuration/)",
  "0488C9166DC343FDD165": "**Capacités** : Permet aux équipes, y compris les non-développeurs, de créer et déboguer des scripts JavaScript enrichis par l'IA appelant des LLMs et des modèles de base.",
  "BD1FC4AB40138BC00117": "**Compilation des scripts** : Exécute le compilateur TypeScript pour vérifier les erreurs dans les scripts.",
  "84F70E79925644A741A7": "**Résolution des fichiers de configuration** : Processus par lequel GenAIScript analyse et fusionne les paramètres des fichiers de configuration.",
  "935852B9AED99F1C1CF7": "**Configuration** : La CLI charge les secrets depuis les variables d'environnement ou un fichier `./.env`.",
  "BBD674AA6FC602ACF661": "**Créer un nouveau script** : Commande pour générer un nouveau fichier de script dans le dossier `genaisrc`.",
  "4C9D15F2E0E561973294": "**Débogage** : Activez la catégorie debug dans la configuration pour voir plus d'informations sur la résolution de la configuration.",
  "2759CC7E6AE97EDF10D9": "**envFile** : Spécifie le fichier d'environnement à charger pour les secrets en tant que variables d'environnement.",
  "B855BB74B9CC69F3E390": "**Modèles de base et LLMs** : GenAIScript supporte plusieurs LLMs et prévoit d'inclure d'autres modèles de base au-delà des modèles de langage.",
  "0EF785B08092063ECA99": "**GenAIScript** : GenAIScript est un langage de script qui fait des LLMs une partie à part entière du processus de scripting, permettant aux utilisateurs de créer, déboguer et déployer des scripts alimentés par LLM pour des tâches au-delà du code conventionnel.",
  "F89501D3E9DD8EFBCE73": "**CLI GenAIScript** : Outil en ligne de commande `genaiscript` pour exécuter des scripts hors VS Code et [automatisation](/genaiscript/getting-started/automating-scripts).",
  "C953EEE431C1BB20A389": "**GPVM** : Système d'exécution pour GenAIScript intégrant le contexte dans les invites, appelant les LLMs spécifiés et extrayant les résultats.",
  "690ECAB9454F89A144D6": "**Scripts d'aide** : Entrées `package.json` garantissant la génération correcte des fichiers de définition TypeScript pour les scripts.",
  "E8CEC46E3F0B4CA275C3": "**include** : Motif glob pour inclure des scripts supplémentaires et permettre le partage entre projets.",
  "095501D8061C9BE8FF51": "**Lancement** : Depuis la racine de l'espace de travail, exécutez `npx --yes genaiscript serve` et accédez à l'URL fournie (typiquement `http://127.0.0.1:8003/`).",
  "EA3FECEDBCB6E129B985": "**Liste de la configuration des scripts** : Liste les scripts et les configurations de modèles pour le dépannage CI/CD.",
  "0D32B9802A8BB97C251E": "**Liste des configurations de modèles** : Liste les scripts et configurations de modèles disponibles pour le dépannage CI/CD.",
  "65C67E0E1564B2D0A96A": "**Installation locale** : Pour éviter la lenteur de `npx`, installez localement avec `npm install -g genaiscript`.",
  "42A38139CA6652A04E20": "**Markdown** : Markdown est un langage de balisage léger avec une syntaxe de formatage en texte brut utilisé pour la création de contenus, notamment la documentation et les applications web.",
  "21D404FA87AB48E87190": "**modelAliases** : Permet des alias pour les noms de modèles dans la configuration GenAIScript.",
  "5DBA30EEF378ACE75269": "**modelEncodings** : Définit des encodages spécifiques aux modèles pour les LLMs.",
  "529434474971EF9FF226": "**Sans installation (npx)** : Exécutez la CLI GenAIScript avec npx sans installation préalable.",
  "572AF5A80E31402D655A": "**API d'exécution Node.JS** : API pour exécuter GenAIScript dans des threads de travail Node isolés, évitant la pollution du scope global.",
  "0C35087997F54580264D": "**Playground** : Application web auto-hébergée pour exécuter des scripts GenAIScript via une interface utilisateur conviviale, faisant le lien entre la CLI et les intégrations VS Code.",
  "465EC268C3148AB5ED25": "**Prérequis** : Exigences pour utiliser la CLI GenAIScript, comme l'installation de Node.JS.",
  "23D3A413FC34FE5CD6A7": "**Dépôt distant** : Le Playground peut exécuter des scripts à partir d'un dépôt distant en utilisant les secrets `.env` actuels.",
  "83782DC67CFFA0E25915": "**run** : La fonction `run` encapsule la commande [CLI run](/genaiscript/reference/cli/run) pour exécuter des scripts.",
  "CE77574D16B476955D5F": "**Exécuter un script** : Exécute un script en diffusant la sortie LLM vers stdout depuis la racine de l'espace de travail.",
  "B7A93449740EDAFEDC5C": "**Exécution des scripts depuis un dépôt distant** : Utilisez `--remote` pour charger et exécuter des scripts depuis un dépôt distant via un clonage superficiel.",
  "330717050AC0B5700C95": "**Exemples** : Les scripts d'exemple sont pleinement fonctionnels et prêts à l'usage, mais peuvent être modifiés ou adaptés selon vos besoins.",
  "0CE7DD280951D9A7CD46": "**Fichiers de script** : GenAIScript identifie tout fichier `*.genai.mjs`, `*.genai.js` ou `*.genai.mts` dans votre espace de travail comme script, lesquels peuvent être placés n'importe où.",
  "FBAD66C35E5E29458F54": "**Starlight** : Starlight est un projet pour construire et rédiger des sites web de documentation utilisant Astro et des principes de design spécifiques.",
  "7762DF8CF65DF784F5A9": "**Comportement du système** : Cadre pour intégrer l'exécution de code et les invocations de modèles de base/LLM, permettant aux utilisateurs de spécifier le contexte LLM, d'invoquer les modèles et d'analyser les résultats.",
  "3D7971200AB4C9FC51C8": "**templates d'invite système** : Les fichiers `system.*.genai.mjs` sont des [templates d'invite système](/genaiscript/reference/scripts/system), cachés par défaut.",
  "8209AB03B6B8FF174008": "**system.\\*.genai.mjs** : Les fichiers `system.*.genai.mjs` sont des [templates d'invite système](/genaiscript/reference/scripts/system), non listés par défaut.",
  "8DDEB6151433C21B1120": "**Note de transparence** : Informations pour aider les utilisateurs à comprendre les capacités et limites de GenAIScript.",
  "A6FD4E83FBA4386405B4": "**Utilisation de la CLI comme API Node.JS** : Importez et utilisez la CLI GenAIScript comme une API dans Node.JS.",
  "9E7650DFB1D69876088F": "**Recherche vectorielle** : [Recherche vectorielle](/genaiscript/reference/scripts/vector-search/)",
  "835F5094AB01809E0260": "**vision\\_script** : Fichiers de script (`*.genai.mjs` ou `*.genai.mts`) utilisant le prompting LLM pour la construction d'invites.",
  "C1E02C0EDC92A8EC3892": "**Extension Visual Studio Code** : Plugin pour VS Code pour créer, déboguer et déployer des scripts GenAIScript.",
  "BCB85F944D261E72E478": "**Aperçu Markdown de Visual Studio Code** : Utilise l'aperçu Markdown intégré de VS Code pour la sortie LLM et la trace, limitant l'affichage de certains contenus.",
  "077A66B7D1F904FDD847": "**Marketplace Visual Studio Code** : Le [Marketplace Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=genaiscript.genaiscript-vscode) fournit la dernière version stable de l'[extension GenAIScript pour VS Code](https://marketplace.visualstudio.com/items?itemName=genaiscript.genaiscript-vscode).",
  "9D7362FF539753706B1E": "**Confiance de l'espace de travail Visual Studio Code** : Désactive l'extension en [mode restreint](https://code.visualstudio.com/docs/editor/workspace-trust).",
  "00AA3BDD0A1A2A32F9AF": "**Extension VS Code GenAIScript** : Extension VS Code pour créer, éditer, exécuter et déboguer des scripts GenAIScript.",
  "6A9AB2C0C9BC4C8B7181": "**WarningCode** : Composant pour afficher des avertissements de sécurité et des solutions dans la documentation.",
  "510731EBC642F0071EAA": "**Travail derrière un proxy** : Instructions pour utiliser la CLI dans des environnements avec un proxy HTTP.",
  "9BF4DAAC6C31607C95C0": "Find answers to frequently asked questions about AI script generation, its uses, performance, and best practices for effective application.",
  "BAD0D4CD54A39ECFBCD0": "Getting Started",
  "1AA45E4DD96B6C98736B": "**What is GenAIScript and how does it work?**\\\nGenAIScript is a framework that allows users to create AI-enhanced scripts for task automation. It uses simple commands and integrates with AI models to perform tasks based on user-written prompts.",
  "C9C70F003D9E8A94128F": "**Who can use GenAIScript and do I need to be a developer?**\\\nAnyone can use GenAIScript, including non-developers. It is designed to be user-friendly, but basic knowledge of scripting or programming can be helpful.",
  "4F46EAE62041EB04D0B3": "**What are the prerequisites for using GenAIScript?**\\\nYou need to have VS Code installed to use the GenAIScript extension, and some familiarity with programming concepts is beneficial but not mandatory.",
  "C41D59AA53602F2D04E2": "**How do I install the GenAIScript framework and its VS Code extension?**\\\nSpecific installation steps are documented here: [Installation](/genaiscript/getting-started/installation)",
  "DC056AD1AD18FBEE808E": "**Do I need to install Node.JS?**\\\nYes. To install it, follow the [installation instructions](/genaiscript/reference/cli/).",
  "00B44ABC40E83E4FED21": "**Can I use GenAIScript in IDEs other than VS Code?**\\\nCurrently, GenAIScript is integrated with VS Code, but it can be written in any IDE. The VS Code extension, however, provides additional support for script creation and debugging. Although not fully tested, you can use GenAIScript in VS Code variants like Cursor.",
  "30DE448E7E05E3EFFB84": "**What are foundation models and LLMs in the context of GenAIScript?**\\\nFoundation models and LLMs (Large Language Models) are AI models with which GenAIScript can interact to perform tasks such as text generation or information processing.",
  "C62F86F764FCD543BF2B": "**How do I write my first GenAIScript?**\\\nStart by learning the basics of JavaScript and the GenAIScript framework, then use the VS Code extension to create a script that defines the task, calls the LLM, and processes the output. More information is available here: [Getting Started](/genaiscript/getting-started)",
  "B386C0763B9A2C30609F": "Using GenAIScript",
  "54CF4342893ACD73A033": "**How do I debug a GenAIScript in VS Code?**\\\nUse the GenAIScript extension in VS Code, which provides tools to run, debug, and trace your script's execution. Debugging instructions are here: [Debugging](/genaiscript/getting-started/debugging-scripts)",
  "3A45D152EBED965B92DB": "**What are best practices for crafting effective GenAIScript prompts?**\\\nSee [Best Practices](/genaiscript/getting-started/best-practices)",
  "30AD30E09E7DEFE38581": "**How do I integrate calls to multiple LLM models in a single GenAIScript?**\\\nThe framework allows you to parameterize calls to different models, so you can include multiple model invocations in your script and manage them accordingly using the runPrompt function documented here: [Inline Prompts](/genaiscript/reference/scripts/inline-prompts)",
  "E8D8DB4588D5A4435710": "**Can GenAIScript generate outputs in formats other than JSON?**\\\nYes, GenAIScript supports multiple output formats, including file modifications, JSON, and user-defined schemas. More information here: [Schemas](/genaiscript/reference/scripts/schemas)",
  "3203CD72A2BD2A30514F": "**How do I run a GenAIScript from the command line?**\\\nOnce you've packaged a GenAIScript, you can run it from the command line like any other script. More information here: [Command Line](/genaiscript/getting-started/automating-scripts)",
  "7247374A82D5331EE67E": "**Can GenAIScripts take file inputs in multiple formats, such as .pdf or .docx?**\\\nYes, the GenAIScript framework natively supports reading .pdf and .docx formats. Refer to the documentation pages [PDF](/genaiscript/reference/scripts/pdf) and [DOCX](/genaiscript/reference/scripts/docx) for more information.",
  "2FD5BBD242A3FEF35E70": "Advanced Features",
  "E4D382E15CB48FA1D57E": "**How do I use GenAIScript to automate document translation?**\\\nOne of our case studies demonstrates using GenAIScript to translate fragments of documents between languages: [Translation Use Case](/genaiscript/case-studies/documentation-translations)",
  "4F530BF96AF810DA875E": "**Can I use GenAIScript to summarize documents or create dialogues from monologues?**\\\nYes, LLMs are effective for summarization and can be used in GenAIScript to summarize documents or convert monologues into dialogues.",
  "22787F385B8F5500E410": "Troubleshooting",
  "07F61E54A9CAC104B84B": "**What should I do if I encounter errors while running a GenAIScript?**\\\nCheck the error messages, consult the documentation, and use the debugging tools in the VS Code extension to identify and resolve issues.",
  "3E5B48AC3C60FCED7F19": "**How do I troubleshoot issues with parsing LLM outputs in GenAIScript?**\\\nReview the prompt and output, ensure your script handles the LLM response correctly, and adjust your parsing logic if needed.",
  "151CFE67FDFC8AD3B26C": "**Where can I find examples of GenAIScript to better understand its capabilities?**\\\nVisit the GenAIScript GitHub repository for examples and documentation. [GenAIScript Documentation](/genaiscript/)",
  "2017214167CB0F4FDBD5": "Responsible AI and Security",
  "1BF1C107940249ADC15B": "**What are unintended uses of GenAIScript and how can they be avoided?**\\\nUnintended uses include any malicious applications. To avoid them, follow responsible AI practices and use recommended models with built-in security features.",
  "C555DD522598C533F63E": "**How does GenAIScript align with responsible AI practices?**\\\nGenAIScript encourages the use of models with robust mitigations for responsible AI and provides guidance for secure and ethical use.\\\nFor more information, see the [Transparency Note](/genaiscript/reference/transparency-note)",
  "20A099199A1B63B649FE": "**What foundation models and LLMs are recommended for use with GenAIScript?**\\\nServices like Azure Open AI with updated security and responsible AI features are recommended. GenAIScript can also be used with existing open-source LLMs.",
  "01D706991BAF32359694": "**Do you provide system prompts to guard against common issues like harmful content or jailbreaking?**\\\nYes, GenAIScript includes system prompts to protect against harmful content and jailbreaking. For more information, see the [Content Safety Documentation](/genaiscript/reference/scripts/content-safety).",
  "417089A67480103E962F": "**Do you support Azure Content services?**\\\nYes, GenAIScript provides APIs to interact with Azure Content Safety services. For more information, see the [Content Safety Documentation](/genaiscript/reference/scripts/content-safety).",
  "4AC45E00E8969411FC3E": "Community and Support",
  "233F5DA79EED98834900": "**Where can I find the GenAIScript community for discussions and support?**\\\nThe GenAIScript GitHub repository is a good starting point for community discussions and support. [GenAIScript GitHub](https://github.com/microsoft/genaiscript/)",
  "BA376111CCFB8F4A17AD": "**How can I contribute to the GenAIScript project?**\\\nCheck the repository for contribution guidelines and consider providing feedback, submitting issues, or contributing code. Visit the [Contributing Page](https://github.com/microsoft/genaiscript/blob/main/CONTRIBUTING.md) for more information.",
  "2AE613993A8F24DDD074": "**Who do I contact for feedback or questions about GenAIScript?**\\\nYou can email the contacts provided in the [Transparency Note](/genaiscript/reference/transparency-note/) for feedback or questions.",
  "6B9E487641A15BC9561A": "Updates and Roadmap",
  "0236D82AB25B9D33E2E9": "**How often is GenAIScript updated and how can I stay informed about new features?**\\\nYou can follow the GitHub repository for updates and announcements.",
  "78C086F0AE996F288655": "**Is there a roadmap for GenAIScript development?**\\\nThe GitHub repository provides information on future development plans.",
  "A2A3A559EA07B5737C6B": "Guide du développeur",
  "A909408C2FA09A181261": "Directives de contribution pour la création et l'ajout de fonctionnalités à GenAIScript",
  "855A2849FC44A09BB65E": "GenAIScript accueille les contributions de la communauté. Ce document fournit des directives pour la configuration de l'environnement de développement, la compilation du projet, et la contribution à la base de code.",
  "00B7AB072CE6F7EFDF31": "Vous pouvez ouvrir ce dépôt dans GitHub CodeSpace/Docker pour obtenir l'environnement de compilation nécessaire.",
  "EA375B9356708FFE0211": "[![Ouvrir dans GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://github.com/codespaces/new?hide_repo_select=true\\&ref=main\\&repo=679784368)",
  "3D24188BBC514DFBFCA7": "Allez sur [https://github.com/microsoft/genaiscript](https://github.com/microsoft/genaiscript)",
  "AF0ECF5828452C9DCF8D": "Cliquez sur **Code**",
  "DE4FC672A9968B933F08": "Sélectionnez Créer un nouveau Codespace",
  "C919162A9F2C32AC6211": "Sélectionnez la branche **dev**",
  "ED5C76A9E2F08E963B56": "Configuration manuelle",
  "8A902F1D3A56E88C4698": "Installez [Node.JS LTS](https://docs.npmjs.com/downloading-and-installing-node-js-and-npm)",
  "B8A661740E27327B31C2": "Exécutez yarn",
  "D2D404BE845C2F3A21EB": "Compilation",
  "08B1C6DD055ED4B54628": "Vous pouvez effectuer une compilation complète avec esbuild.",
  "130AD46E0C33F75AA7C2": "ou seulement l'interface en ligne de commande (cli)",
  "E6364B63AB2F912767CF": "Demandes de tirage (Pull Requests)",
  "575F5BDC7FB957ABC72F": "Vous devez créer des pull requests contre la branche `dev`. La branche `main` est réservée aux versions.\nLa branche `dev` est la branche principale de développement. C'est là que toutes les nouvelles fonctionnalités et corrections de bugs sont fusionnées avant d'être publiées.",
  "2E38C14D7660CF41B671": "Lors de la création d'une pull request, veuillez vous assurer que votre code respecte les directives suivantes :",
  "EF95F434A4FE08C4358F": "Respectez le [Code de conduite open source Microsoft](https://opensource.microsoft.com/codeofconduct/).",
  "E6AD4EAD8C987F902056": "Assurez-vous que votre code est bien documenté et respecte le style de codage du projet.",
  "1646A9A44952AF40671D": "Si possible, ajoutez des tests pour toutes nouvelles fonctionnalités ou corrections de bugs.",
  "15CF261E0EAEE1B608B8": "Exécution de scripts locaux",
  "8290367D91DC9BD09A72": "Pour exécuter un script avec l'interface de commande localement compilée,",
  "AEC78316EF81AB84FB2B": "Pour exécuter un script d'exemple dans le dossier `packages/sample` :",
  "6F431D4341F1462B6918": "Dans ce cas, le fichier `packages/sample/.env` sera utilisé pour les variables d'environnement et l'espace de travail sera raciné à `packages/sample`.",
  "F16A1B9332844C073E7F": "Débogage des scripts locaux",
  "D82DF91C5AECD9F59D6B": "Ouvrez un `Terminal de débogage JavaScript` et lancez le script avec",
  "967AA6ED2F5D13C54827": "ou pour les exemples",
  "B4C5D5D887DBFD52416A": "Journalisation",
  "998D382CDA1CCEEC5752": "GenAIScript utilise la bibliothèque [debug](https://www.npmjs.com/package/debug) pour la journalisation. Vous pouvez activer la journalisation en définissant la variable d'environnement `DEBUG` à `genai:*`.",
  "237B04A0ACC5531DEA67": "Visionneuse web",
  "38004FDE8692690D4335": "L'application web (React 19) est conçue pour fonctionner à la fois comme un panneau Visual Studio Code et comme un visualiseur autonome (**playground**). Pour des tests, le mode autonome est le plus simple.",
  "EFDBD9DA99D1CC299F77": "React 19, avec très peu de dépendances actuellement",
  "9ECA69F06AC53869C83D": "react-markdown + quelques plugins pour interpréter le markdown",
  "1FAEB536F91A05E0606C": "[vscode-elements](https://vscode-elements.github.io/) est le système de design que nous utilisons car il imite l'apparence de vscode.",
  "2E2D984E724912C86D46": "Utilisez la commande suivante pour démarrer le serveur web local :",
  "60EA49C9B458221C2A9C": "Il démarrera un serveur local et reconstruira le client react lors des modifications de fichiers. **Il ne reconstruira/niera pas le serveur lors des modifications.**\nIl n'y a **pas** de rechargement à chaud, vous devez actualiser le navigateur. Si un état doit être sérialisé, nous devrions commencer à l'ajouter au hash.",
  "34E3D5B5BCF4F745247B": "Développement de l'extension Visual Studio Code",
  "114FD39D870EE05BB505": "Travailler sur VSCode implique de lancer le débogueur principal du projet, qui ouvre une seconde instance de VSCode avec l'extension GenAIScript.",
  "DC984C4D67439D74C838": "Vous pouvez placer des points d'arrêt dans les fichiers TypeScript de GenAIScript et ils seront pris en compte.",
  "1A42F9CA3528FC59A668": "désinstallez l'extension officielle GenAIScript sinon elle entrera en conflit avec celle compilée localement",
  "143D00BBF2C6F5D60CA1": "ouvrez la vue `Débogage` dans Vs Code",
  "C604F169FB14B3246B49": "sélectionnez la configuration de débogage **Samples** et cliquez sur **Exécuter**",
  "588565F1810BC16FB9FF": "N'oubliez pas que le débogueur est seulement attaché à l'extension ; pas au serveur GenAIScript.",
  "AFDC35D1E84FD257085D": "Précautions",
  "DDEAED8B242ECD932B70": "Le lancement du débogueur échoue parfois pour des raisons encore inconnues. Pour contourner ce problème, ouvrez un terminal et exécutez `pnpm build` une fois. Puis relancez le débogueur.",
  "49DDBFAFA2AC26AF1667": "Documentation",
  "4C4CBF5932AB48479BEC": "Exécutez `docs` pour lancer le site de documentation.",
  "0F29A6AA08B2AEB3BB43": "Exécutez cette commande pour détecter les liens brisés",
  "88090F7D911CC9F62BAF": "Tous les fichiers `slides/*slides.md` seront compilés et déployés lors de la compilation.",
  "21348F84AABA765CFD43": "exécutez `slides` pour lancer la présentation (ajoutez le nom du fichier ou il prendra `slides.md` par défaut)",
  "493F20FA39141C5750C0": "En savoir plus sur Slidev dans la [documentation](https://sli.dev/). Pour les diagrammes, utilisez [mermaid](https://sli.dev/guide/syntax#diagrams) ou draw\\.io, tldraw.",
  "8B983937E16D248D39B2": "Commettre avec un message généré automatiquement",
  "36DACF0ADE3FAB4FD6BB": "Ajouter la documentation aux nouvelles APIs ou mises à jour",
  "9519508C5A8F8E8C8667": "Générer des images pour les articles de blog",
  "FD446D077519D3F30F27": "Emballage",
  "05D62905ADC7373FF368": "Pour compiler et empaqueter l'extension Visual Studio Code, exécutez le script `package`.",
  "E2C5A7296C0221B9F0A7": "Vous trouverez les fichiers du paquet compilé, `genaiscript.vsix`,\ndans le dossier `packages/vscode`.",
  "0B2A1E641A786134EF1D": "Publication",
  "CF16867D0957D6B45BD0": "Exécutez le script `release`.",
  "291CCC7CFB1BE0EFF07F": "Les pages GitHub sont automatiquement mises à jour lors d'une nouvelle version ; ou via un déclenchement manuel sur\n[https://github.com/microsoft/genaiscript/actions/workflows/docs.yml](https://github.com/microsoft/genaiscript/actions/workflows/docs.yml) .",
  "A59AC4F56CBA15FDBE44": "Contribution",
  "9E0D4EA9B9C19A123329": "Ce projet accepte les contributions et suggestions. La plupart des contributions exigent que vous acceptiez un Accord de Licence de Contributeur (CLA) déclarant que vous avez le droit, et accordez effectivement, les droits pour utiliser votre contribution. Pour plus de détails, visitez [https://cla.opensource.microsoft.com](https://cla.opensource.microsoft.com).",
  "C3288B9B3F275FD6B4E6": "Lorsque vous soumettez une pull request, un bot CLA déterminera automatiquement si vous devez fournir un CLA et décorera la PR en conséquence (par ex., vérification de statut, commentaire). Suivez simplement les instructions fournies par le bot. Vous ne devrez faire cela qu'une seule fois sur tous les dépôts utilisant notre CLA.",
  "021AEE34749AE07FAA93": "Ce projet a adopté le [Code de conduite open source Microsoft](https://opensource.microsoft.com/codeofconduct/).\nPour plus d'informations, consultez la [FAQ du Code de conduite](https://opensource.microsoft.com/codeofconduct/faq/) ou contactez [opencode@microsoft.com](mailto\\:opencode@microsoft.com) pour toute question ou remarque.",
  "DC1000F0A9A363409597": "TLA+ est un langage de haut niveau pour modéliser des programmes et des systèmes -- en particulier ceux qui sont concurrents et distribués. Il est basé sur l'idée que la meilleure manière de décrire les choses de manière précise est d'utiliser des mathématiques simples.",
  "724A888126DDFDB289DA": "Spécifications TLA+",
  "F6EF089C0E53D1CBA5D0": "Ce qui suit est une spécification TLA+ qui modélise une solution historique au problème de ",
  "3E3AAAD64C8B6F204F09": "la détection de terminaison dans les systèmes distribués",
  "19ED4E3C9AC3C7F701B9": "le script utilise une prise en charge intégrée pour les ",
  "3709F4B9A228B1A97D0F": "Action Github",
  "940F23D8A81DA2B92A49": "sous forme de rapport SARIF, et ",
  "2F55F9CBE246C44B1586": "téléchargées",
  "0C5EB36735458AB1F0BA": "Traitement par lots de tous les fichiers",
  "F57A40AA648869D8F5F3": "--apply-edits",
  "6E4C1076EE3B82A85D32": "Ajoutez cette commande à votre ",
  "5489CDF2FB77026A8973": "Il existe de nombreux générateurs automatisés de ",
  "33981FE02E910CC748D5": "qui utilise à la fois l'historique des commits et le diff des modifications",
  "3D51BBF8BC04FFDDD63E": "Vous pouvez voir l'une des premières notes de version générées par le prototype pour ",
  "285A4E560102C36A5377": "Historique des commits et diff",
  "EE34885DC48C432D7D62": "Nous commençons notre script en appelant ",
  "C17FC39D2506932633FE": "fonction avec ",
  "F3849624FB08AB6B93FE": "Rôle et tâche",
  "02173D83504417B0CCF4": "Intégration à Release-it",
  "2129C6BF91E89048A857": "GenAIScript utilise ",
  "0D06DC1AC60781B325F6": "release-it",
  "7AB048ED32781D66F804": "en ajoutant un champ ",
  "D6BB511289B679FEC49D": "Il est recommandé de fournir un attribut `alt` pour les images. Cet attribut est utilisé pour décrire l'image aux utilisateurs incapables de la voir. Il est également utilisé par les moteurs de recherche pour comprendre le contenu de l'image. ",
  "CBAE7ED62947EBB712CA": "defFileOutput",
  "BD79BADF00B1FEF99754": "Utilisation dans Astro",
  "333F425312B855019816": "MDX",
  "A6A80AB99CB2FB004F3F": "En utilisant la commande ",
  "47F4626FC9C80D520492": "Microsoft MakeCode est une plateforme web",
  "A4EADB08870DC167F311": "La documentation et les tutoriels MakeCode utilisent ",
  "82FD069964E7478A9F77": "markdown avec de nombreux macros supplémentaires et micro-syntaxes",
  "E1336B6B997FE02B2434": "tutoriel Pierre Papier Ciseaux",
  "304544EB1B07F74627D5": "Défi de localisation",
  "25F00A0B6783459BEA40": "devient ",
  "EC796B494BBBD230CC5C": "Apprendre au LLM comment traduire",
  "C418E2369E5AB3F7DC9C": "Notez que nous utilisons ",
  "8C20C70ABEAF9AED7C1A": "variable",
  "C12B75E16421663E2E92": "Validation et téléchargement",
  "9DD9B55CE0C48A968B90": "exécuter le compilateur MakeCode pour valider les traductions",
  "FA8C23F302C205A5D2EB": "téléverser/mettre à jour la base de données de traduction",
  "92D4927B66BAF624A12F": "Traduction de la Documentation",
  "B5C1FB7C09CB3578DDD7": "MakeCode",
  "08D588133DEAD19C3CC7": "utilise un ",
  "F070249A76973989C93B": "microformat",
  "335380ED394769F90A78": "Ne cassez pas les blocs !",
  "90AD13B20CD393C24596": "chaînes de localisation",
  "D904BBF2307F16FFFC24": "bloc de lecture de tonalité du buzzer Jacdac",
  "72536CBCA8083A43E48C": "et Bing Translate donne la traduction suivante",
  "6B7375FB97C3D6D39C53": "traduction GenAIScript",
  "ADE4F1BC0196C9C3189E": "Format de données personnalisé",
  "2CBAF905A3FD568BFBAF": "Paramétrage pour l'automatisation",
  "0886C0A5F129F610A248": "Le code de langue ",
  "C5D0E968D7AD7CEF8E00": "est extrait des ",
  "883ABA053A38A80DE3CB": "ou par défaut à ",
  "E03DD270DD538F8E770E": "Cette technique permet de reconfigurer ces variables depuis la ligne de commande\nen utilisant l'argument ",
  "3997B3AF58B985D0E9CF": "Le résultat de ce script peut être inspecté\ndans cette ",
  "4DBEA78905A265BC190B": "demande de tirage",
  "CCB44EFA46C12549BAA0": "Azure Bicep est un langage spécifique au domaine (DSL) pour déployer des ressources Azure de manière déclarative.\nC'est un langage conçu pour être une manière plus lisible et maintenable de définir des ressources Azure.",
  "A084F261CEB3780E5439": "Bicep est accompagné d'un ",
  "6E3F7CFE5D0E1D2B954C": "linter",
  "C9356026799CE13CE10F": "Application Web Linux Basique",
  "5606714550A4C3FEDBFE": "modèle d'exemple dans le ",
  "405F012D28E1C68716C7": "bac à sable Bicep",
  "F28EBF2B89E6EB90941C": "Le fichier est \"linter\" propre, mais certaines améliorations pourraient être apportées avec les meilleures pratiques. ",
  "2531F62625A77A49D75D": "ajouté un support pour ignorer les faux positifs en utilisant le ",
  "F737B6A16181E18E52B1": "commentaire",
  "F351F516A617FFDE06D7": "Windows IA",
  "3EE0399EE2AB02C6CACF": "Mistral IA",
  "70CFABFD512FA28DDE3E": "Hugging Face",
  "B50342A000319A418BA2": "limites de taux",
  "9BECA93EA98827A5F550": "Configuration de Codespace",
  "E8C9C74BE727EB4934CD": "Si vous utilisez un ",
  "D4CDF469F87C83832369": "Configuration de GitHub Actions",
  "9329CD30B679E71D27B9": "À partir de ",
  "B4EFBD6C034647DD7FF6": "Avril 2025",
  "7C2B325B79868E21E7DD": "Assurez-vous que l'autorisation ",
  "27C33EC28ADBC45B9259": "Passez le ",
  "512B9B499CE32F6415CE": "lors de l'exécution de ",
  "C85A2C9BC43232EEEBF4": "Lisez-en plus dans la ",
  "8437463B2CCB5066CE7C": "Documentation GitHub",
  "CE174C5A22CCCC160EEF": "Configuration avec votre propre jeton",
  "3427C3AE5604F246CF4F": "jeton d'accès personnel GitHub",
  "4D87B92E17330D687004": "Marketplace GitHub",
  "DEF4A7F5B05CAFDEEBC3": "Copiez le nom du modèle depuis les exemples en Javascript/Python",
  "E30289744FA123F46A38": "Si vous utilisez déjà la variable ",
  "9F9E5023BA030340D6DF": "modèles",
  "232026FD2A0606F2F824": "Si vous avez accès à ",
  "5E1629E2693260663098": "GitHub Copilot Chat dans Visual Studio Code",
  "65F5A5E7C852DF3ADC7E": "modèles de langage",
  "665E71FDA555BEE2C836": "Vous pouvez forcer l'utilisation de ce modèle en utilisant ",
  "3D28A36FD27D350BF186": "comme nom de modèle ou en définissant le paramètre **GenAIScript > Language Chat Models Provider** sur true. Cela configurera par défaut GenAIScript pour utiliser ce fournisseur pour les alias de modèles. ",
  "F99BF45CF1A287E0C93A": "Chat",
  "F7B4FC41A7174C95A8AD": "exécutez votre script",
  "A448C6957B3939A22A34": "sélectionnez le meilleur modèle de chat correspondant à celui que vous avez dans votre script",
  "48FE186C4C2ABD8950A2": "Exécuteur de Modèle Docker",
  "030AAD9AAD4BA10E7EBF": "Exécuteur de Modèle Docker",
  "C9CA3C3493A942AF8AC7": "Docker",
  "54C6AEF1C8EBED30B226": "DeepSeek",
  "486917CCB46D56E75DA4": "est le fournisseur de modèle de chat ",
  "FE61E69FA6FF46F8D107": "Clés API DeepSeek\nportail",
  "22B39F0DC4E0D81A8822": "Azure OpenAI",
  "B020A8DEE6D643F0D394": "utilise les variables d'environnement ",
  "E6D0DA111B1E6DB6CDC3": "obtenir des crédits Azure gratuits",
  "42EF3936A4B5EC49FB94": "Ouvrez votre ressource Azure OpenAI dans le ",
  "8BB21D0FFA47C13525EE": "Portail Azure",
  "D2D7538B380727188010": "Assurez-vous de supprimer toute ",
  "B56A8BDFD5506812F43F": "entrée dans le fichier ",
  "3264D897215CB7A05351": "déploiements",
  "863B6DD4DCA1BEF78014": "et assurez-vous que votre LLM est déployé et copiez ",
  "E3BFC3F696A0DFB9D6E2": "Ouvrez un terminal et ",
  "D9C834407E6CBB16C819": "connectez-vous",
  "71E702B4BAC128846907": "Azure CLI",
  "E07EE25DE021CA30C0EE": "pour activer la ",
  "0976A61A5E5ABBE2E536": "Lister les modèles",
  "57EF2885F01363A95FFC": "et vous devez utiliser Microsoft Entra !",
  "054EAEE999DE591D973C": "Ouvrez la ressource Azure OpenAI dans le ",
  "79ADF1F884FE28E3DE3C": "Aperçu",
  "685DF244BFFD561D2105": "et copiez l'identifiant ",
  "E130851CCDF1FFCF80F7": "d'abonnement (Subscription ID)",
  "E4CBF7BF35FE2961A99B": "Testez votre configuration en exécutant",
  "1F6C87A2B52601323B63": "Cette fonctionnalité ne fonctionnera probablement pas avec ",
  "F29A088D53897F94AB92": "point de terminaison",
  "03E2469793C007DEF686": "Cette approche suppose que vous avez défini un point de terminaison `/models` compatible OpenAI ",
  "61CA61F58A85BF968551": "variable d'environnement pour pointer vers ",
  "1D98C15DC647F1912F4D": "Identifiants personnalisés",
  "8AF419BCE306EF3FEDA1": "Les types sont directement mappés à leurs ",
  "073378263AB83F01AB11": "- `ManagedIdentityCredential` ",
  "C1FC2AA651539C08A590": "Définissez ",
  "6D8C169EE614E2631854": "pour utiliser la ",
  "B6EAA7098C5E93908781": "Portées de jeton personnalisées",
  "4A420E822BDF7C2C85F7": "La portée par défaut du jeton pour l'accès à Azure OpenAI est ",
  "557C37B85786FFF65D6B": "Version de l'API",
  "5C7B2080EC32C62E756A": "GenAIScript maintient une ",
  "03CDAEAFC94BFE08C84B": "version d'API par défaut",
  "6A61296BE90075F06E6E": "Vous pouvez remplacer cette valeur à l'aide de la ",
  "5EA3FCA2895C0DEE2524": "Vous pouvez également remplacer la version de l'API sur une base par déploiement en configurant la variable d'environnement ",
  "B2845061E9EAD283F28F": "Clé 1",
  "A88C7B7EDB68205DE300": "Clé 2",
  "ADDE1517F2822985F9FD": "recherche vectorielle",
  "049CFA30441F7BE92322": "de vos documents en utilisant ",
  "41957EEA336C0D4939A3": "Le service est configuré via les variables d'environnement ",
  "33DE437002FBDAC6332D": "et la ",
  "1545B734A2AC8DEA5787": "configuration de l'identité managée",
  "C694013425DFE50DF506": "ressource dans le ",
  "B739498CBF61636C360B": "et cliquez sur ",
  "FBF3A5739F992CC88AF3": "Propriétés",
  "9AAE2AF78E6150F194D8": "Contrôle d'accès API",
  "6182E036DD39339BFD7F": "et activez ",
  "E5B412BD033F2076884C": "Contrôle d'accès basé sur les rôles",
  "AE7F1E1FBB13289230D5": "les deux",
  "B9987A6DFF010D428003": "onglet et assurez-vous que votre utilisateur ou principal de service dispose du rôle ",
  "D696200B3B28BC788578": "Contributeur au service de recherche",
  "5659C04486F497D5E3F8": "Azure AI Modèle d'Inférence",
  "9AF0518D057991BE6C7C": "Azure AI OpenAI Sans Serveur",
  "31DC842F0D17611B055D": "Vous pouvez déployer des modèles \"sans serveur\" via ",
  "2848F19984E9083914C2": "catalogue des modèles Azure AI Foundry",
  "6399CD0E9719D3F7B408": "et utilisez le ",
  "537540214398BC903684": "filtre API sans serveur",
  "81D2960ACB69C128CF2C": "sont déployés sur des points de terminaison ",
  "450FDABA659E06F8B5BA": "Azure AI Modèle d'Inférence ",
  "D33B54D49329ABE91257": "API Azure AI Modèle d'Inférence",
  "265232E94A5D3C799CB3": "ces étapes",
  "ACE83B9F94A5CF1C22D4": "soigneusement",
  "B5C8AD549C5F9A5C6774": "et ouvrez votre projet",
  "6167AE6B1EBFE3795504": "URL cible du point de terminaison",
  "0C9EB609E783CC736E26": "comme l' ",
  "ACF690678DF381E695C3": "Trouvez le nom du modèle dans le catalogue des modèles avec le ",
  "F9329280A923C59AB8A9": "Options de déploiement = API sans serveur",
  "F7C6BFFBB2C34C494071": "variable et la clé dans le ",
  "38C4E69442F621ACFADA": "fichier \\*",
  "8A0F2C04536F65536F7A": "La version par défaut de l'API pour l'Inférence Azure AI est {AZURE_AI_INFERENCE_VERSION}. Vous pouvez la modifier en définissant la variable d'environnement `AZURE_AI_INFERENCE_API_VERSION` (voir [Documentation Azure AI](https://learn.microsoft.com/en-us/azure/ai-services/openai/api-version-deprecation)).",
  "C2E4E28AFD56457D10B8": "Azure AI OpenAI Sans Serveur",
  "CB4DB8B7048592B5BDF7": "Ce type de déploiement est différent des déploiements ",
  "9FB14B2D5D07CD7EEA6E": "page Déploiements",
  "50A29E14F8927C509273": "Déployez un ",
  "B612F414D87D703FF3C3": "modèle de base",
  "A485AA0F5D2A469E450C": "fichier avec le point de terminaison du déploiement dans la variable ",
  "C33397755169C55BBC65": "Revenez à l'onglet ",
  "4A1DC82F992637784FA4": "dans votre projet Azure AI Foundry et cliquez sur ",
  "F357B3D3B7004308C3C7": "Ouvrir dans le centre de gestion",
  "316822D783F67A9E073A": "Azure OpenAI Service",
  "494D680BFCE37E74B349": "Ressource",
  "08DF0A97B99807F126CA": "Tous les ressources",
  "22A07469C791E4729488": "Gérer la vue",
  "2F2E29459846832DD16F": "et sélectionnez ",
  "940BE4229DE83BD72DF2": "Afficher les types cachés",
  "C73FAB8929FB81BA0300": "Ouvrez un terminal et connectez-vous",
  "44DEFE1BF778652AB300": "Azure AI Modèles Sans Serveur",
  "DF53FAF712FBA585C00A": "Projet Azure AI",
  "B0CD1B26F726CA83EF5C": "Développeur Azure AI",
  "C948CD6CF4FBDECF927E": "et ouvrez la ",
  "7162477C27FEA29B7C65": "Prise en charge de plusieurs déploiements d'inférence",
  "E8A8BC7D62EB327B29EF": "Vous pouvez mettre à jour le ",
  "1CE563EAA005ECBFCBF5": "avec une liste de paires `deploymentid=key` pour prendre en charge plusieurs déploiements (chaque déploiement ayant une clé différente). ",
  "210A0AE96A2B4A2915BD": "Anthropic",
  "9189FEE87CB876BB60AD": "fournisseur donne accès aux modèles ",
  "EBD98A400585F9092486": "Inscrivez-vous pour un compte Anthropic et obtenez une clé API depuis leur ",
  "D7D3DC4339B217770F81": "Ajoutez votre clé API Anthropic au fichier ",
  "2CAD814247ED1A0F1DC5": "documentation des modèles Anthropic",
  "DA8FF532423A648B8DC7": "Anthropic Bedrock",
  "86E8324FBACFB2CBF8D2": "le SDK Node d'AWS pourra reconnaître",
  "5B791FA521500FF4CFD5": "Alibaba Cloud",
  "81791A76112DB12DBF99": "Le fournisseur `alibaba` permet d'accéder aux modèles ",
  "4CF8E2739C8399732F73": "Alibaba Cloud",
  "5EE0C62B32327EC2CD5B": "un compte Alibaba Cloud",
  "BB329A8ADD780ED50B4E": "Ajoutez votre clé API Alibaba au fichier ",
  "9F0BE1AAABB1A1739245": "modèles Alibaba",
  "7058ECD6F1C5A6C54E4E": "Fichier unique",
  "7ED52EE3958248B4F18D": "Clic droit sur un fichier dans l'Explorer et sélectionnez ",
  "7BA30DE937D0F8373183": "Ou clic droit dans un éditeur de fichiers et sélectionnez ",
  "D4A63303FD10D03C708A": "Dossier",
  "0F773D7C356D540D6D6B": "Dossier racine",
  "217FFFC86C7915CA282E": "Vous pouvez exécuter des scripts dans le ",
  "6D5D60E5CD2B2430FBCE": "via le ",
  "41A0F178E69F7273730D": "@genaiscript",
  "3E99686966428DC42A35": "Fichiers par défaut",
  "7E7FF8FB2F563BFD24F6": "Tâches",
  "3A90A53868C2B3B7C2DA": "L'extension GenAIScript expose chaque script comme une ",
  "32A8A164756CAE0FEF20": "Tâche",
  "A938D2229C15B30773D1": "La tâche lance le ",
  "CE118D6910D1725E37DC": "Ouvrez la palette de commandes ",
  "B72429ED0BF2B3DBBC45": "fournisseur de tâches genaiscript",
  "E20B8C31B7AD0697398B": "Sélectionnez le script que vous souhaitez exécuter",
  "68E57F1688718DEAEBCB": "Analyser les résultats",
  "E390957E8B29DE9BAD60": "Trace",
  "CD2CE5D5D696380C0739": "Commencez par créer un script en utilisant la ",
  "EAC1E420ACD299CFB996": "TypeScript \"--typescript\"",
  "67624C587061506D6D31": "Si vous prévoyez d'utiliser la ",
  "B1B9EF2EFC3456001540": "comme dépendance de développement",
  "E417CA7957ECA6E3B0DB": "comme package global",
  "6BDA3D496BF8AFA9876D": "Vous pouvez démarrer un ",
  "6F2DE22FDE9D32C18FA9": "vos scripts en utilisant le débogueur de Visual Studio Code !",
  "1EFF6FF46884E23A720C": "Autres intégrations",
  "7488F1ED2F90893B552C": "Neovim",
  "4C1CD4854A9D61A5024A": "Extension Visual Studio Code <a id=\"visual-studio-code-extension\" href=\"\" />\n\nLe [Visual Studio Code Marketplace](https://marketplace.visualstudio.com/items?itemName=genaiscript.genaiscript-vscode)\ncontient la dernière version stable de l'[extension](https://marketplace.visualstudio.com/items?itemName=genaiscript.genaiscript-vscode).\n\n<Steps>\n  <ol>\n    <li>\n      Installez [Visual Studio Code](https://code.visualstudio.com/Download).\n\n      Visual Studio Code est un éditeur de code source léger mais puissant qui fonctionne sur votre bureau et est disponible pour Windows, macOS et Linux.\n    </li>\n\n    <li>\n      Ouvrez le dossier de votre projet dans Visual Studio Code.\n    </li>\n\n    <li>\n      Cliquez sur la vue **Extensions**\n\n      <Image src={extensionViewSrc} alt={extensionViewAlt} />\n    </li>\n\n    <li>\n      Recherchez **genaiscript** et cliquez sur **Installer**.\n\n      <Image src={marketplaceSrc} alt={marketplaceAlt} />\n    </li>\n\n    <li>\n      Si l'installation est réussie, vous verrez l'icône dans la vue **Extensions**.\n\n      <Image src={vscodeViewSrc} alt={vscodeViewAlt} />\n    </li>\n\n    <li>\n      (Facultatif) Cliquez sur l'icône ⚙️ sur la page de l'extension et sélectionnez **Ajouter aux recommandations de l'espace de travail**.\n    </li>\n  </ol>\n</Steps>\n\nPour installer une version spécifique de l'extension, nous recommandons de stocker le fichier `genaiscript.vsix`\ndans votre dépôt et d'utiliser les étapes d'installation manuelle.\n\n### Profil par défaut pour le terminal\n\nGenAIScript lance un serveur Node dans le terminal par défaut. Si le terminal par défaut n'est pas configuré\nou ne prend pas en charge Node.js, vous devrez peut-être le mettre à jour dans vos paramètres utilisateur/espace de travail.\n\n* Ouvrez la palette de commandes `Ctrl+Shift+P` et recherchez `Terminal: Sélectionner le profil par défaut`.\n* Sélectionnez le profil de terminal comme **Git Bash**",
  "D729716A2DF6E7B14A5C": "Ligne de commande <a id=\"command-line\" href=\"\" />\n\nL'outil en ligne de commande [genaiscript](/genaiscript/reference/cli/) vous permet d'exécuter votre GenAIScript\ndepuis n'importe quel terminal.\n\n```sh\nnpx genaiscript run my-script some/path/*.pdf",
  "4A5339853316F3D12027": "Commencer",
  "B59803282C64DBC3CD0B": "Commencez à développer avec l'extension GenAIScript pour VS Code afin de créer des scripts IA efficacement.",
  "7CD15446D60D2DFAB9B4": "GenAIScript est un langage de script qui intègre les LLM dans le processus de script en utilisant une syntaxe JavaScript simplifiée.\nPris en charge par notre extension VS Code GenAIScript, il permet aux utilisateurs de créer, déboguer et automatiser des scripts basés sur LLM.",
  "42FBD893AA9A93AD9F70": "Préambule",
  "C5D5217E2ACAB705AF4B": "Avant de commencer à écrire des GenAIScripts, vous devez configurer votre environnement pour avoir accès à un LLM.\nLa [configuration](/genaiscript/getting-started/configuration) traite ce sujet en détail, car il y a de nombreuses options à considérer.",
  "C467266D04C8A96C1BE2": "Si vous exécutez GenAIScript depuis un [GitHub CodeSpaces](https://github.com/features/codespaces), vous pouvez ignorer l'étape de configuration, car l'extension utilisera automatiquement les [modèles GitHub](/genaiscript/configuration/github).",
  "622252D6AB188A61A7D3": "Bonjour le Monde",
  "040BD16199B918125ACB": "Un GenAIScript est un programme JavaScript qui construit un LLM, ensuite exécuté par le runtime de GenAIScript.\nCommençons avec un script simple qui demande au LLM de générer un poème. En utilisation typique, les fichiers GenAIScript\nont comme convention de nommage `<scriptname>.genai.mjs` et sont stockés dans le répertoire `genaisrc`\nd’un dépôt. Appelons ce script `poem.genai.mjs`.",
  "B83EB911F9C2CA9D4EF7": "La syntaxe `$...` est un [template literal](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals)\nqui se traduit par un message utilisateur dans l’invite LLM. Dans cet exemple, ce serait :",
  "FE3C19C38CC9C27CA153": "En pratique, votre script peut également importer des [scripts système](/genaiscript/reference/scripts/system) (spécifiés automatiquement ou manuellement) qui ajoutent plus de messages aux requêtes.\nAinsi, la charge utile JSON finale envoyée au serveur LLM pourrait ressembler à ceci :",
  "789706A19BDC1B3547D8": "Les GenAIScripts peuvent être exécutés depuis la [ligne de commande](/genaiscript/reference/cli) ou via une sélection du menu contextuel par clic droit à l'intérieur de Visual Studio Code. Étant donné qu'un GenAIScript est simplement du JavaScript,\nl'exécution d'un script suit les règles normales d'évaluation du JavaScript.\nUne fois le script exécuté, les messages générés sont envoyés au serveur LLM, et la réponse est traitée par le runtime de GenAIScript.",
  "054BCD486355E568F917": "Voici un exemple de sortie pour cette invite (abrégée) qui a été retournée par OpenAI gpt-4o.",
  "4B8C6944167A39ED7D8D": "GenAIScript prend en charge l'extraction de données structurées et de fichiers à partir de la sortie LLM, comme nous le verrons plus tard.",
  "C45A5FBB55ADE0DCD18C": "L'interface CLI analysera votre projet pour les fichiers `*.genai.mjs/mts`, et vous pouvez utiliser le nom de fichier sans l'extension pour vous y référer.",
  "6669C25E1080E0875841": "Variables",
  "13450992626CBD4234B4": "GenAIScripts prennent en charge une manière de déclarer des [variables d’invite](/genaiscript/reference/scripts/context), permettant d’inclure du contenu dans l’invite et de s’y référer plus tard dans le script.",
  "6068ED722F2B66321082": "Examinons un script `summarize` qui inclut le contenu d’un fichier et demande au LLM de le résumer.",
  "9C29C6505CD54BA6B853": "Dans cet extrait, nous utilisons `workspace.readText` pour lire le contenu d’un fichier (chemin relatif à la racine de l’espace de travail)\net nous utilisons `def` pour l’inclure dans l’invite en tant que `variable d’invite`. Nous avons ensuite \"référencé\" cette variable dans l’invite.",
  "CEEC9E77E41F449E843A": "La fonction `def` prend en charge de nombreuses options de configuration pour contrôler comment le contenu est inclus dans l’invite. Par exemple, vous pouvez insérer des numéros de ligne ou limiter le nombre de tokens.",
  "B78DBF82D55C4845A760": "Le nom de la variable (FILE) est important ! Assurez-vous qu’il représente le contenu de la variable, sinon cela pourrait perturber le LLM.",
  "122EEF1BC568FAC0FAB3": "Paramètres de fichiers",
  "741C43FB6138E14E2D5E": "Les GenAIScripts sont conçus pour fonctionner sur un fichier ou un ensemble de fichiers. Lorsque vous exécutez un script dans Visual Studio Code sur un fichier ou un dossier, ces fichiers sont transmis au script à l’aide de la variable `env.files`. Vous pouvez utiliser ce `env.files` pour remplacer des chemins codés en dur et rendre vos scripts\nplus réutilisables.",
  "DA265E118DFD4B78294F": "Et maintenant, appliquez-le à plusieurs fichiers",
  "D543B96627505D2013C1": "Traitement des sorties",
  "537AE9CF006984BCCD9C": "GenAIScript traite les sorties du LLM et extrait les fichiers, diagnostics et sections de code lorsque cela est possible.",
  "6257E4D90B6429191DFF": "Mettons à jour le script de synthèse pour spécifier un modèle de fichier de sortie.",
  "A2D5175905124612C82F": "Étant donné cette entrée, le modèle retourne une chaîne, que\nle runtime GenAIScript interprète en fonction de ce que l'invite demandait au modèle :",
  "861D58046BC11D55D51B": "Étant donné que l'invite a demandé qu’un fichier soit créé,\nle modèle a répondu avec un contenu décrivant le contenu du fichier qui devrait être créé.\nDans ce cas, le modèle a choisi d’appeler ce fichier `markdown-small.txt.summary`.",
  "6EF443C490E1316AC94D": "Notre bibliothèque GenAIScript analyse la sortie LLM, l’interprète et dans ce cas\ncrée le fichier. Si le script est invoqué dans VS Code, la\ncréation de fichier est exposée à l’utilisateur via une [aperçu de refactoring](https://code.visualstudio.com/docs/editor/refactoring#_refactor-preview) ou directement enregistrée dans le système de fichiers.",
  "B639488578823F10B110": "Bien sûr, les choses peuvent devenir plus complexes - avec des fonctions, des schémas, etc. -, mais ceci est le flux de base d’un script GenAIScript.\nSi vous recherchez une liste exhaustive de techniques d'invites, consultez [le rapport sur les invites](https://learnprompting.org/).",
  "2FF5E0FA78894B40DC1E": "[Les outils](/genaiscript/reference/scripts/tools) sont un moyen d’enregistrer des rappels JavaScript avec le LLM, ils peuvent être utilisés\npour exécuter du code, rechercher sur le Web, ... ou lire des fichiers !\nVoici un exemple de script qui utilise l’outil [`fs_read_file`](/genaiscript/reference/scripts/system#systemfs_read_file) pour lire un fichier et le résumer :",
  "5AFC386A89698FEC9EE6": "Une trace possible ressemble à ceci :",
  "439A4B8925DB6315D825": "<summary>Trace</summary>",
  "A382A59CCCFF6F5BDAAF": "Comme vous pouvez le voir, nous n'utilisons plus la fonction `def`, nous attendons que le LLM émette un appel à l'outil `fs_read_file` pour lire le fichier `markdown.md` afin que son contenu soit reçu.",
  "23455651FC9DBA8E171F": "Notez que cette approche est moins déterministe que l’utilisation de `def`, car le LLM pourrait ne pas appeler l’outil. De plus, elle utilise plus de tokens, car le LLM doit générer le code pour appeler l’outil. Néanmoins, c’est un moyen puissant d’interagir avec le LLM.",
  "03707762742176A241D9": "Utilisation des agents",
  "DE5C7A1B9105CE57A1ED": "Vous pouvez ajouter une couche d’indirection supplémentaire et utiliser [agent_fs](/genaiscript/reference/scripts/system#systemagent_fs), un [agent](/genaiscript/reference/scripts/agents) du système de fichiers, pour lire le fichier. L'agent combine un appel au LLM et un ensemble d'outils liés aux requêtes système de fichiers.",
  "25FE30775DF3EADC9BD2": "Bien que les GenAIScripts puissent être écrits avec n’importe quel IDE et exécutés depuis la ligne de commande,\nles utilisateurs de l’[extension dans Visual Studio Code](/genaiscript/getting-started/installation)\nbénéficient grandement du support supplémentaire pour l’écriture, le débogage et l’exécution\ndes GenAIScripts fourni. Nous recommandons vivement de commencer par installer l’extension.",
  "DAE707EBCC04330977A6": "Si vous recherchez un package runtime GenAIScript pouvant être utilisé dans un projet Node.JS existant,\nlisez la [documentation runtime](/genaiscript/reference/runtime).",
  "E4F2DF59AA835EFDDD04": "Script par défaut\n\nLe script suivant peut être utilisé comme modèle de départ pour créer le script par défaut lorsque l'utilisateur ne saisit pas la commande `/run`.",
  "4742E00B152F6B2637D4": "instructions personnalisées `genaiscript`\n\nGenAIScript enregistrera automatiquement un fichier instructions.md dans le dossier `.genaiscript/instructions` lorsque vous exécutez un script. Ce fichier contient les instructions utilisées pour générer le script.",
  "EBE50232C7AB3E4C11AE": "Demandes de tirage et problèmes <a href=\"\" id=\"pull-requests\" />\n\nLe CLI peut mettre à jour la description et les commentaires d'une demande de tirage/problème lorsqu'il s'exécute dans une action GitHub ou un pipeline Azure DevOps.",
  "EC5B2163D9939B638909": "`--pull-request-reviews` <a href=\"\" id=\"pull-request-reviews\" />\n\nCréer des commentaires de révision de demande de tirage à partir de chaque [annotation](/genaiscript/reference/scripts/annotations) ([exemple](https://github.com/microsoft/genaiscript/pull/564#pullrequestreview-2151692644)).",
  "6419A11DD0286FAE7F26": "est sauvegardé dans un fichier ",
  "A8D46FE1E5430D0CB5CA": "Le contenu converti dans ",
  "2613C84A7C7B0D6C5179": "sera ",
  "7B428145A94DE700581C": "--réécrire",
  "570EE8D8F1DEA1999556": "Ce drapeau remplace ",
  "AD71BAF84BFAED74A0C0": "LLMs",
  "E79E2FE7EA807DD8B6D3": "génère l'ossature des fichiers nécessaires pour publier un script en tant qu' ",
  "6C8D946BD3D31FA2D289": "GitHub Action conteneurisé personnalisé",
  "2C307ECDD5F0A32A2DCE": "Intégration continue",
  "0386A8242D2004762FC6": "Vous pouvez enregistrer des **outils** (également appelés **fonctions**) que le LLM peut décider d'appeler dans le cadre de l'assemblage de la réponse.\nVoir [fonctions OpenAI](https://platform.openai.com/docs/guides/function-calling), [outils Ollama](https://ollama.com/blog/tool-support),\nou [utilisation des outils Anthropic](https://docs.anthropic.com/en/docs/build-with-claude/tool-use).",
  "7ABC624D91B83B9EEB9D": "Tous les modèles LLM ne supportent pas les outils. Dans ces cas, GenAIScript prend également en charge un mécanisme de secours pour implémenter l'appel d'outils via des invites système (voir [Fallback Tools](#fallbacktools)).",
  "7C95631FC824AAEA607A": "`defTool`",
  "4552C43362FD3E16CC7A": "`defTool` est utilisé pour définir un outil qui peut être appelé par le LLM.\nIl prend un schéma JSON pour définir l'entrée et s'attend à une sortie sous forme de chaîne.\nLes paramètres sont définis en utilisant le [schéma des paramètres](/genaiscript/reference/scripts/parameters).",
  "1327AA1E6F794637C6C7": "**Le LLM décide lui-même d'appeler cet outil !**",
  "8BF4B3A271E70AB10587": "Dans l'exemple ci-dessus, nous définissons un outil appelé `current_weather`\nqui prend un lieu en entrée et retourne la météo.",
  "180B9A2DB4E5AAD40A66": "Exemple d'outil météo",
  "68F08AA2B29D9912A496": "Cet exemple utilise l'outil `current_weather` pour obtenir la météo à Bruxelles.",
  "750C10E59DC653190952": "Exemple d'outil mathématique",
  "6266C57148E02EF3E871": "Cet exemple utilise l'évaluateur d'expressions mathématiques\npour évaluer une expression mathématique.",
  "F86373ABAEF58238719D": "Réutilisation des outils dans des scripts système",
  "F22ACD627B9C003224F2": "Vous pouvez définir des outils dans un script système et les inclure dans votre script principal comme n'importe quel autre script système ou outil.",
  "27FE95204285D9383C86": "Assurez-vous d'utiliser `system` au lieu de `script` dans le script système.",
  "F77A74FEA1F219C17C7D": "Instances multiples du même script système",
  "DA945CC878E9E6958ABD": "Vous pouvez inclure plusieurs fois le même script système dans un script\navec différents paramètres.",
  "B059F659405883955909": "Outils du protocole Model Context",
  "8FF8B936DF7658F645C9": "[Model Context Provider](https://modelcontextprotocol.io/) (MCP) est un protocole ouvert\nqui permet une intégration transparente entre les applications LLM et les sources de données et [outils](https://modelcontextprotocol.io/docs/concepts/tools) externes.",
  "2888F0CAB9ADA1075187": "Vous pouvez utiliser des [serveurs MCP](https://github.com/modelcontextprotocol/servers) pour fournir des outils à votre LLM.",
  "373032E90116C54786DE": "Voir [Outils du protocole Model Context](/genaiscript/reference/scripts/mcp-tools) pour plus d'informations.",
  "4604F8C8F89CF48BDE2C": "Prise en charge des outils de secours <a href=\"\" id=\"fallbacktools\" />",
  "58CEBA8557828397003D": "Certains modèles LLM ne disposent pas de prise en charge intégrée des outils.\nPour ces modèles, il est possible d'activer la prise en charge des outils via des invites système. Les performances peuvent être inférieures à celles des outils intégrés, mais il est toujours possible d'utiliser des outils.",
  "262378D8FCD6B742E289": "La prise en charge des outils est mise en œuvre dans [system.tool_calls](/genaiscript/reference/scripts/system#systemtool_calls)\net \"apprend\" au LLM comment appeler des outils. Lorsque ce mode est activé, vous verrez\nles jetons d'appel d'outil auxquels répond le LLM.",
  "2BC9542BE1C8B37BEEEE": "GenAIScript maintient une liste des modèles bien connus qui ne supportent pas\nles outils, de sorte que cela se produira automatiquement pour ces modèles.",
  "0B62D4B4326722D12FFD": "Pour activer ce mode, vous pouvez soit",
  "46AF72FCC73C2E976BD8": "ajouter l'option `fallbackTools` au script",
  "E10CDFC6E264EF0C07A4": "ou ajouter le flag `--fallback-tools` à la CLI",
  "9DCCAA633BEDDBB235E8": "Détection d'injection d'invite",
  "B3BF8CDBFDD4993225D1": "Un outil peut récupérer des données contenant des attaques d'injection d'invite. Par exemple, un outil qui récupère une URL peut renvoyer une page contenant des attaques d'injection d'invite.",
  "27C0712219C296B078D6": "Pour éviter cela, vous pouvez activer l'option `detectPromptInjection`. Cela exécutera vos services [d'analyse de sécurité de contenu](/genaiscript/reference/scripts/content-safety)\nsur la sortie de l'outil et effacera la réponse si une attaque est détectée.",
  "5914AA812FE10B4D9C1F": "Validation de l'intention de sortie",
  "82DC0D50B8973C3F4F22": "Vous pouvez configurer GenAIScript pour exécuter une validation LLM-as-a-Judge du résultat de l'outil en fonction de la description ou d'une intention personnalisée.\nLa validation LLM-as-a-Judge se produira sur chaque réponse de l'outil en utilisant l'alias de modèle `intent`, qui est mappé à `small` par défaut.",
  "15412DA8E295BD8B4953": "L'intention `description` est une valeur spéciale qui est développée à la description de l'outil.",
  "98599BB9A3579FA99864": "Regroupement en scripts système",
  "CF0BF1CBAD6AC0587450": "Pour choisir quels outils inclure dans un script,\nvous pouvez les regrouper dans des scripts système. Par exemple,\nl'outil `current_weather` peut être inclus dans le script `system.current_weather.genai.mjs`.",
  "1482C864CE94EDE8399C": "puis utilisez l'identifiant de l'outil dans le champ `tools`.",
  "CD2200F10138CD76BB52": "Exemple",
  "748FAC7192D4DE2DA623": "Illustrons comment les outils se combinent avec un script de réponses aux questions.",
  "FCCCC5034D41489369D6": "Dans le script ci-dessous, nous ajoutons l'outil `retrieval_web_search`. Cet outil\nappellera `retrieval.webSearch` si nécessaire.",
  "A9488477ED5D2A9E103A": "Nous pouvons ensuite appliquer ce script au fichier `questions.md` ci-dessous.",
  "8F59764A288827B65982": "Après la première requête, le LLM demande d'appeler le `web_search` pour chaque question.\nLes réponses de la recherche web sont ensuite ajoutées à l'historique des messages du LLM et la requête est faite à nouveau.\nLa seconde donne le résultat final qui inclut les résultats de la recherche web.",
  "905F034D6377C88504C9": "GenAIScript fournit divers outils pour récupérer du contenu et enrichir le prompt.\nCette technique est généralement appelée **RAG** (Retrieval-Augmentation-Generation) dans la littérature.",
  "1AAD135EF8D32AC3BD85": "Recherche par vecteurs",
  "BA0527A4BCDC5239ED53": "GenAIScript propose diverses bases de données vectorielles pour prendre en charge la recherche par embeddings (vecteurs).",
  "B0C027117A98103D2E75": "Lisez-en plus sur la [recherche par vecteurs](/genaiscript/reference/scripts/vector-search) et comment l'utiliser.",
  "B494E4D585E4F4458669": "Recherche floue",
  "679C9D47ADB3A10AB18E": "La fonction `retrieve.fuzzSearch` effectue une recherche floue \"traditionnelle\" pour trouver les documents les plus similaires au prompt.",
  "426C8809DBDA22BB6C29": "Recherche sur le Web",
  "76A63C10E0084F4A03D2": "La fonction `retrieval.webSearch` lance une recherche sur le Web en utilisant une API de moteur de recherche. Vous devez fournir des clés API pour le moteur de recherche que vous souhaitez utiliser.",
  "83154A75CCC013A3DA90": "Bing",
  "A402C0085ED5560EFEF7": "Pour activer la recherche Bing, configurez le secret `BING_SEARCH_API_KEY` dans votre fichier `.env`. En savoir plus sur [la configuration de l'API Bing Search](https://www.microsoft.com/en-us/bing/apis/bing-web-search-api).",
  "A108D92BFDDA9F5F6902": "Mise en forme des réponses",
  "72E47F1FEB3028A34068": "Apprenez à façonner les réponses des LLM avec une syntaxe ou un format spécifique en utilisant la fonction writeText dans les scripts.",
  "FF6AF4CFF943BEE769AD": "Il est possible de fournir le début de la réponse du LLM (message `assistant`) dans le script.\nCela permet d’orienter la réponse du LLM vers une syntaxe ou un format spécifique.",
  "446AAA4D751A5D055477": "Utilisez la fonction `assistant` pour fournir le texte de l’assistant.",
  "047D5C81643E66C65120": "Cette fonctionnalité n’est **pas** prise en charge par tous les modèles.",
  "321DDE2EAADC77B177CE": "Comment ça fonctionne ?",
  "3E7716C4C4D86AC0B58F": "En interne, lors de l’invocation du LLM, un message supplémentaire est ajouté à la requête comme si le LLM avait généré ce contenu.",
  "25678132630258B2C099": "Équipe Rouge",
  "FBEBC98FE54C62D093AF": "Découvrez comment mettre en œuvre une équipe rouge pour les modèles de langage (LLM) afin d’identifier les vulnérabilités dans les systèmes d’IA à l’aide de PromptFoo, y compris la configuration, les plugins comme OWASP Top 10 et des stratégies efficaces pour les tests d’attaque.",
  "517E042A024F46B6B859": "Le red teaming pour les modèles de langage (LLM) est une méthode permettant de trouver des vulnérabilités dans les systèmes d'IA avant leur déploiement en utilisant des entrées adverses simulées. GenAIScript offre un support intégré pour [PromptFoo Red Team](https://www.promptfoo.dev/docs/red-team/).",
  "64E8634EA91D28AD0863": "Le red teaming dans PromptFoo utilise des modèles LLM personnalisés pour générer des entrées adverses. Cette fonctionnalité repose sur le cloud Promptfoo.",
  "EC29385711AA9C0E6404": "Ajout du Red Teaming aux scripts",
  "C963D1440743F523B312": "Ajoutez `redteam` à la fonction `script` pour activer le red teaming.",
  "7BAA5AD0708FD91A7B79": "La propriété `purpose` est utilisée pour guider le processus de génération d'attaques. Elle doit être aussi claire et spécifique que possible.\nIncluez les informations suivantes :",
  "D236A8B35225DE6BC9B7": "Qui est l'utilisateur et quelle est sa relation avec l'entreprise",
  "BC525E90D8084BD40EA0": "À quelles données l'utilisateur a accès",
  "FD36082DBDCD545475DE": "À quelles données l'utilisateur n'a pas accès",
  "B42ED9BEBAD7FDFB841E": "Quelles actions l'utilisateur peut effectuer",
  "3FC63421E667BA2AC1BD": "Quelles actions l'utilisateur ne peut pas effectuer",
  "2A28D08EF0B9BB2A73D2": "À quels systèmes l'agent a accès",
  "678DB09301019746913C": "Plugins",
  "3EB43F83B2E0F7669901": "[Les Plugins](https://www.promptfoo.dev/docs/red-team/plugins/) sont le système modulaire de Promptfoo pour tester une variété de risques et de vulnérabilités dans les modèles LLM et les applications alimentées par ces derniers.\nSi aucun plugin n'est spécifié, GenAIScript permettra à PromptFoo d'utiliser l'ensemble `default` de plugins.",
  "AEDD5BC16B5D9ACCC3DF": "Cet exemple charge les plugins [OWASP Top 10 pour les modèles de langage](https://www.promptfoo.dev/docs/red-team/owasp-llm-top-10/).",
  "6A618CC31EFE52208664": "Stratégies",
  "AD59359DAA985A409606": "[Les Stratégies](https://www.promptfoo.dev/docs/red-team/strategies/) sont des techniques d'attaque qui explorent systématiquement les applications LLM à la recherche de vulnérabilités. Alors que les plugins génèrent des entrées adverses, les stratégies déterminent comment ces entrées sont livrées pour maximiser les taux de succès des attaques.",
  "860E5694462D01B68DB2": "Il existe des limitations concernant les fournisseurs pris en charge pour exécuter le processus de Red Team (qui nécessite un accès LLM).",
  "64D983C1CE72E2CAFCC1": "Le grader nécessite un fournisseur OpenAI ou Azure OpenAI.",
  "822AC8A04B0D66D759FD": "Par défaut, la [génération à distance](https://www.promptfoo.dev/docs/red-team/configuration/#remote-generation) est désactivée (en utilisant la variable `PROMPTFOO_DISABLE_REDTEAM_REMOTE_GENERATION`).\nSi vous devez exécuter ce service activé, utilisez l'outil en ligne de commande `promptfoo` avec le fichier de configuration redteam généré.",
  "30E658FD4FC91FF42312": "Voir aussi",
  "F1966931593A4D71E8E2": "[Configuration](https://www.promptfoo.dev/docs/red-team/configuration/)",
  "DFB2414B5B58C2EFA857": "[Résolution des problèmes](https://www.promptfoo.dev/docs/red-team/troubleshooting/attack-generation/)",
  "B5AE4913C20F219F154B": "Modèles de Raisonnement",
  "048D9C63644AA44931BC": "Informations spécifiques sur les modèles de raisonnement d'OpenAI.",
  "D4A2FABB3AF4B16E0417": "Les modèles de raisonnement d'OpenAI, les modèles `o1, o3`, DeepSeek R1 ou Anthropic Sonnet 3.7, sont optimisés pour les tâches de raisonnement.",
  "B532D13EC9684CAA11E5": "Vous pouvez expérimenter avec ces modèles sur Github Models également, mais la fenêtre contextuelle est assez petite.",
  "77BF9F34BBAB31A00EDC": "Alias de Modèle",
  "2F0EDF2D0E7FFD190044": "Les alias de modèles `reasoning` et `reasoning-small` [sont disponibles](/genaiscript/reference/scripts/model-aliases) pour les modèles de raisonnement.",
  "26043DE6B6ECC50F50EF": "Raisonnement, réflexion",
  "3D66C7CD383CB85B7493": "GenAIScript extrait automatiquement le contenu de raisonnement/réflexion des réponses des modèles LLM.",
  "4DB01B8AC4CE0ABE674A": "Effort de raisonnement",
  "1162523018EB942DE1C1": "Le paramètre d'effort de raisonnement peut être défini sur `low`, `medium` ou `high`.",
  "45D4DED613F1AC8217F0": "configuré avec le paramètre `reasoningEffort`",
  "7CBE65E8EC9B378AFED5": "en tant qu'étiquette au nom du modèle",
  "432345BB39B8074273ED": "Pour Anthropic Sonnet 3.7, les efforts de raisonnement sont mappés aux valeurs `budget_token` suivantes :",
  "85D7298DA522604DE35F": "faible : 2048",
  "E934F73C7C1A8F795800": "moyen : 4096",
  "5057DF6FF265C4E651CD": "élevé : 16384",
  "FE4446D40B0DDBAFA005": "`o1-preview`, `o1-mini` ne prennent pas en charge le streaming",
  "7FF3FACB4C80A076D88F": "les modèles `o1` ne prennent pas en charge l'appel d'outils, donc GenAIScript utilise des [outils de secours](/genaiscript/reference/scripts/tools).",
  "683DCB9D7BD088B744C9": "Conseils pour l'élaboration d'invites",
  "0614A2D246FF61E7460B": "OpenAI fournit des [conseils détaillés pour l'élaboration d'invites](https://platform.openai.com/docs/guides/reasoning#advice-on-prompting)\npour les modèles de raisonnement.",
  "9F3A10D10BDCFC22708B": "Pyodide",
  "3801C76465D46C4C4E2A": "Exécuter du code Python dans l'environnement JavaScript en utilisant Pyodide.",
  "4FDA27EF7D2623536D65": "[Pyodide](https://pyodide.org/) est une distribution de Python pour Node.js (et le navigateur).",
  "8D79CF1173E39349E26A": "Pyodide est un port de CPython vers WebAssembly/Emscripten.\nPyodide permet d'installer et d'exécuter des packages Python dans le navigateur avec [micropip](https://micropip.pyodide.org/en/stable/project/usage.html).",
  "170D50F55ABD093CB055": "GenAIScript fournit une couche de commodité pour démarrer des environnements d'exécution Python Pyodide.",
  "B23A46679B80AE09B655": "Le `host.python` démarre une instance de Pyodide.",
  "A54F76FE2F54D8326917": "Chaque instance de Pyodide dispose d'une méthode `run` qui peut être utilisée pour exécuter du code Python.",
  "D4363074FB483B3797E8": "Vous pouvez lire et écrire des variables globales dans l'environnement Pyodide.",
  "41EA0610D8DD6BB57997": "Système de fichiers de l'espace de travail",
  "565A39FEC753C4BA5B96": "Le système de fichiers d'espace de travail actuel est monté dans le répertoire `/workspace` dans l'environnement Pyodide.",
  "ACE088529BF3943984FD": "En savoir plus sur Pyodide",
  "247A7E13454070B94CF3": "Cette fonctionnalité est alimentée par [Pyodide](https://pyodide.org/). Pour plus d'informations, veuillez consulter la [documentation de Pyodide](https://pyodide.org/docs/).",
  "CE1910E63F68D2137960": "Prompty",
  "5344D193F64056178416": "Découvrez le format de fichier .prompty pour les invites paramétrées et son intégration avec GenAIScript pour le script AI.",
  "154C09976592862AC4D4": "GenAIScript prend en charge l'exécution des fichiers [.prompty](https://prompty.ai/) en tant que scripts (avec certaines limitations) ou leur importation dans un script. Il fournit également un analyseur pour ces fichiers.",
  "0975A330A44143C1C77C": "Qu'est-ce que Prompty ?",
  "064CEFA78D7AD7AC0D23": "[Prompty](https://prompty.ai/) est un format de fichier similaire au markdown pour stocker des invites paramétrées ainsi que des informations sur le modèle.",
  "7B0480890173AF36539E": "Il existe deux manières d'utiliser les fichiers prompty avec GenAIScript :",
  "9F96C0BE8939B30D7866": "les exécuter directement via GenAIScript",
  "11FC073B0F34658D3319": "les importer dans un script à l'aide de `importTemplate`",
  "B19CBF70E3BCD4FF5B5E": "Exécution de .prompty avec GenAIScript",
  "6723AE06D1624A1ACDE8": "Vous pouvez exécuter un fichier `.prompty` à partir de la [cli](/genaiscript/reference/cli) ou de Visual Studio Code comme n'importe quel autre script `.genai.mjs`.",
  "185C2E52BA49BBA4F28A": "GenAIScript convertira le contenu du `.prompty` en script et l'exécutera. Il prend en charge la plupart des options de la section des métadonnées, mais ignore en grande partie la section de configuration du modèle.",
  "D5263BA0BB65535B8F4B": "Voici à quoi le fichier `basic.prompty` est compilé :",
  "F732F11CDDA08BF689A8": "Importation de .prompty",
  "8A54F5E85C726C17C284": "Vous pouvez également importer et rendre un fichier .prompty au moment de l'exécution tout en générant l'invite à l'aide de `importTemplate`.",
  "F4323B2BE2907E864AB9": "Dans ce scénario, le fichier `.prompty` n'est pas exécuté comme un script mais importé comme un modèle. La fonction `importTemplate` rendra le modèle avec les paramètres fournis.",
  "27B7E81F5521E141B3D9": "Analyse de .prompty",
  "DF4137081F31FA22B8E6": "Utilisez `parsers.prompty` pour analyser un fichier `.prompty`.",
  "7D5A6A2C843D9177729B": "Fonctionnalités prises en charge",
  "3FDE60DD7B2F96FDDFCB": "`name`, `description`, `temperature`, `max_tokens`, `top_p`, ...0",
  "4011FFD11BE718AC1CB0": "`inputs` converti en `parameters`",
  "F1A86351F1F0AEDFE907": "la valeur `sample` alimente la section `default` des paramètres",
  "3DDF5387F6D9E3967AC9": "`outputs` converti en `responseSchema`",
  "C5E2695EAE9BE149A037": "Moteur de modèle [Jinja2](https://www.npmjs.com/package/@huggingface/jinja)",
  "919E891C4B7277C663EF": "Limitations",
  "CA870BD3A10ABCEB388C": "La configuration du modèle utilise le fichier `.env` de GenAIScript (voir [configuration](/genaiscript/getting-started/configuration)).",
  "65C31C1E00F896A3B220": "les images ne sont pas encore supportées",
  "EADF81D141E57FDE7588": "Extensions",
  "AB1EB916A3B2829FE676": "Champs supplémentaires utilisés par GenAIScript :",
  "AA4A5DB61D5F22D5FB8A": "`files` pour spécifier un ou plusieurs fichiers pour peupler `env.files`",
  "34C3EDF313F3131C7A14": "`tests` pour spécifier un ou plusieurs tests",
  "B2A7106450A52D545901": "Invite ($)",
  "C525FE2CA34262315C3A": "Apprenez à utiliser le template littéral tagué pour la génération dynamique de prompt dans les scripts GenAI.",
  "565916ED045165AFB215": "Le `$` est un [template littéral tagué](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#tagged_templates) en JavaScript qui développe la chaîne de caractères en un prompt final.",
  "15F977ADA4DDC5AD6E73": "Expressions en ligne",
  "9FA33F40B6B876CF846A": "Vous pouvez intégrer des expressions dans le template en utilisant `${...}`. Les expressions peuvent être des promesses et seront attendues lors du rendu final du prompt.",
  "BE7CE3732DFE03FB09ED": "Templating de chaînes",
  "7A39D2B5974D107095A7": "La sortie du `$` peut être traitée davantage en utilisant des moteurs de template populaires comme [jinja](https://www.npmjs.com/package/@huggingface/jinja) ou [mustache](https://mustache.github.io/).",
  "557604DCD90F1080925D": "Prompts en ligne",
  "264C29C4FD511EFB1CDB": "Lors de l'exécution d'un [prompt en ligne](/genaiscript/reference/scripts/inline-prompts), vous pouvez utiliser le `$` pour générer le prompt dynamiquement, mais vous devez l'appeler dans le contexte de génération.",
  "53A8554972B9EECC8D82": "PDF",
  "8E38F2F4E6F6886E2485": "Apprenez à extraire du texte à partir de fichiers PDF pour générer des invites en utilisant les capacités d'analyse de PDF de GenAIScript.",
  "EA0E1F66BDC4886B1109": "La fonction `def` analysera automatiquement les fichiers PDF et en extraira le texte. Cela est utile pour générer des invites à partir de fichiers PDF.",
  "FD78FE52E89B76FC517E": "Analyseurs",
  "848BB3A90FC2E976FDBF": "La fonction `parsers.PDF` lit un fichier PDF et tente de le convertir proprement en un format texte adapté aux LLM.",
  "EBB8A54E4505367CEE11": "Une fois analysés, vous pouvez utiliser les variables `file` et `pages` pour générer des invites. Si l'analyse échoue, la variable `file` sera `undefined`.",
  "76F58C571FEEEC8CF48F": "Images et figures",
  "7464C2F0C0C46F9797E4": "GenAIScript extrait automatiquement les images bitmap des fichiers PDF et les stocke dans le tableau de données. Vous pouvez utiliser ces images pour générer des invites. Les images sont encodées en PNG et peuvent être volumineuses.",
  "A373A67AE8EDB8AAF88D": "Rendre les pages en images",
  "24F9C98AA510724C8BDB": "Ajoutez l'option `renderAsImage` pour convertir également chaque page en une image PNG (sous forme de buffer). Ce buffer peut être utilisé avec un modèle de vision pour effectuer une opération OCR.",
  "846DFD9364E981F82F5A": "Vous pouvez contrôler la qualité de l'image rendue à l'aide du paramètre `scale` (par défaut, 3).",
  "4E16C44ADC303035C57D": "Les fichiers PDF sont complexes",
  "2BF381489CD6754980BE": "Le format PDF n'a jamais vraiment été conçu pour permettre une extraction de texte propre. La fonction `parsers.PDF` utilise le paquet `pdf-parse` pour extraire le texte des fichiers PDF. Ce paquet n'est pas parfait et peut ne pas réussir à extraire du texte de certains PDF. Si vous avez accès au document original, il est recommandé d'utiliser un format plus adapté au texte tel que Markdown ou un fichier texte brut.",
  "07FDE56D3C75E3193F1E": "Mise en cache des invites",
  "C04CF258A45E1A70518C": "Découvrez comment la mise en cache des invites peut réduire le temps de traitement et les coûts pour les invites répétitives des LLM, avec des détails sur la configuration et la prise en charge des fournisseurs, notamment OpenAI et Anthropic.",
  "25862CE0F280D74F7CBB": "La mise en cache des invites est une fonctionnalité qui peut réduire le temps de traitement et les coûts pour les invites répétitives. Elle est prise en charge par divers fournisseurs de LLM, mais l'implémentation peut varier.",
  "9C7BF37A3F6BBDD955A0": "`éphémère`",
  "7C4DD12000560CFA7AB8": "Vous pouvez marquer la section `def` ou la fonction `$` avec `cacheControl` défini comme `\"éphémère\"` pour activer l'optimisation de la mise en cache des invites. Cela signifie essentiellement qu'il est acceptable pour le fournisseur LLM de mettre en cache l'invite pendant une courte période.",
  "DE0AE99701240DDE74ED": "Prise en charge par les fournisseurs de LLM",
  "16A953B22C30B5D00565": "Dans la plupart des cas, l'indication `éphémère` est ignorée par les fournisseurs de LLM. Cependant, les cas suivants sont pris en charge :",
  "43AF61278EEC93292B19": "OpenAI, Azure OpenAI",
  "86C17499C99EC4F6A16A": "La [mise en cache des invites](https://platform.openai.com/docs/guides/prompt-caching) du préfixe de l'invite est automatiquement activée par OpenAI. Toutes les annotations éphémères sont supprimées.",
  "B804D222A745ED13E610": "[Documentation OpenAI](https://openai.com/index/api-prompt-caching/).",
  "E585085AAF5F03177911": "Anthropic",
  "47703AE19E78D553C87E": "L'annotation `éphémère` est convertie en un champ `'cache-control': { ... }` dans l'objet message.",
  "15E5DFB312FF75922C51": "Notez que la mise en cache des invites est toujours marquée comme bêta et n'est pas prise en charge dans tous les modèles (en particulier les plus anciens).",
  "CACF6E014CF2F57891D2": "[Documentation Anthropic](https://docs.anthropic.com/en/docs/build-with-claude/prompt-caching)",
  "0F818FCEB75755174FDA": "Analyseurs",
  "FEC62C9B60D5BC3C7775": "Guide complet sur divers analyseurs de formats de données, y compris JSON5, YAML, TOML, CSV, PDF, DOCX, et l'estimation des tokens pour LLM.",
  "3C4F8B494465C93CC3C1": "L'objet `parsers` fournit divers analyseurs pour les formats de données communs.",
  "E752ED735889AA5F1978": "JSON5",
  "274F8A7DB2BF56C78CDB": "La fonction `parsers.json5` analyse le format JSON5.\n[JSON5](https://json5.org/) est une extension du format de fichier JSON populaire, visant à être plus facile à écrire et à maintenir manuellement (par exemple, pour les fichiers de configuration).",
  "12AA652C0C60F027F04B": "En général, analyser un fichier JSON comme JSON5 ne cause pas de problème, mais cela peut être plus tolérant aux erreurs de syntaxe. En plus de JSON5, une [réparation JSON](https://www.npmjs.com/package/jsonrepair) est appliquée si l'analyse initiale échoue.",
  "E52AB1ED29DBAC45E574": "Exemple de JSON5",
  "D492253CBD4B2DEDB511": "Pour analyser, utilisez `parsers.JSON5`. Cela prend en charge à la fois un contenu texte ou un fichier comme entrée.",
  "C4F97BFBC28C130073C0": "YAML",
  "918DBD75B1AFD667C321": "La fonction `parsers.YAML` analyse le [format YAML](/genaiscript/reference/scripts/yaml). YAML est plus convivial pour le tokenizer LLM que JSON et est couramment utilisé dans les fichiers de configuration.",
  "DCDF7E7A75580A91D118": "Pour analyser, utilisez `parsers.YAML`. Cela prend en charge à la fois un contenu texte ou un fichier comme entrée.",
  "49729AEAEA1F0288FF88": "TOML",
  "F1A0BA88A468BBF4759C": "La fonction `parsers.TOML` analyse le [format TOML](https://toml.io/). TOML est plus convivial pour le tokenizer LLM que JSON et est couramment utilisé dans les fichiers de configuration.",
  "6818BAECF45CEC9397AB": "Pour analyser, utilisez `parsers.TOML`. Cela prend en charge à la fois un contenu texte ou un fichier comme entrée.",
  "A5F082094AB76EF242A4": "JSONL",
  "CE48905D5229A67ADBE3": "JSON**L** est un format qui stocke les objets JSON dans un format ligne par ligne. Chaque ligne est un objet JSON(5) valide (nous utilisons l'analyseur JSON5 pour une meilleure résilience aux erreurs).",
  "5F0E67EB53FB9A502C47": "Vous pouvez utiliser `parsers.JSONL` pour analyser les fichiers JSONL en un tableau d'objets (`any[]`).",
  "3D69C875CA6329381CE6": "[XML](/genaiscript/reference/scripts/xml)",
  "0740207B5D3CE53990C3": "La fonction `parsers.XML` analyse le [format XML](https://en.wikipedia.org/wiki/XML).",
  "CC4839DEB0DD636E9693": "Front matter",
  "7EEE48A907871086BC53": "[Front matter](https://jekyllrb.com/docs/front-matter/) est une section de métadonnées en tête d'un fichier, généralement formatée en YAML.",
  "B0B32EDFF7C6C9454EEA": "Vous pouvez utiliser le `parsers.frontmatter` ou [MD](/genaiscript/reference/scripts/md) pour extraire les métadonnées dans un objet.",
  "87495C65444A160F5A36": "[CSV](/genaiscript/reference/scripts/csv)",
  "303285F3DB92BB216AA5": "La fonction `parsers.CSV` analyse le [format CSV](https://en.wikipedia.org/wiki/Comma-separated_values). Si l'analyse réussit, la fonction renvoie un tableau d'objets où chaque objet représente une ligne du fichier CSV.",
  "47E6B7D859368C2C2442": "Les analyseurs détecteront automatiquement les noms d'en-tête s'ils sont présents ; sinon, vous devez fournir un tableau de noms d'en-tête dans les options.",
  "4A09225D977622838DA5": "[PDF](/genaiscript/reference/scripts/pdf)",
  "DFC7121D3A5451B5CB85": "La fonction `parsers.PDF` lit un fichier PDF et tente de le convertir proprement en un format texte. Lisez la documentation [/genaiscript/reference/scripts/pdf](/genaiscript/reference/scripts/pdf) pour plus d'informations.",
  "1630113EEC82F9996169": "[DOCX](/genaiscript/reference/scripts/docx)",
  "86D420EE4AA355587D6A": "La fonction `parsers.DOCX` lit un fichier .docx comme texte brut.",
  "6ABE67065999EC458A60": "[INI](/genaiscript/reference/scripts/ini)",
  "5E343D2DB23141A3B473": "La fonction `parsers.INI` analyse les fichiers [.ini](https://en.wikipedia.org/wiki/INI_file), généralement utilisés pour les fichiers de configuration. Ce format est similaire au format `clé=valeur`.",
  "DB680C13A3E1D625EC4C": "[XLSX](/genaiscript/reference/scripts/xlsx)",
  "B0DAA3B352B1896F9DEF": "La fonction `parsers.XLSX` lit un fichier .xlsx et renvoie un tableau d'objets où chaque objet représente une ligne de la feuille de calcul. La première ligne est utilisée comme en-têtes. La fonction utilise la bibliothèque [xlsx](https://www.npmjs.com/package/xlsx).",
  "4981E87D5D75BE487B53": "Par défaut, elle lit la première feuille et la première ligne comme en-têtes. Vous pouvez passer un nom de feuille de calcul et/ou une plage à traiter en tant qu'options.",
  "CC5F343A8A2C83A78132": "VTT, SRT",
  "2D3F7EBF527BBCAC5C15": "La fonction `parsers.transcription` analyse les fichiers de transcription VTT ou SRT en une séquence de segments.",
  "CD0479415745ADC735A1": "Décompression",
  "06E4ED7B001BCBAD10FF": "Décompresse le contenu d'un fichier zip et renvoie un tableau de fichiers.",
  "3BD627A9C783B6A8CD0A": "HTML vers Texte",
  "3E1F1655D516BE03BDFE": "La fonction `parsers.HTMLToText` convertit le HTML en texte brut à l'aide de [html-to-text](https://www.npmjs.com/package/html-to-text).",
  "216DF0A08E4C5EDA9E5F": "Prompty",
  "608D6013336A271AC792": "[Prompty](/genaiscript/reference/scripts/prompty) est un format de modèle de prompt basé sur Markdown. GenAIScript fournit un analyseur pour les modèles prompty, avec quelques champs de métadonnées supplémentaires pour définir des tests et des exemples.",
  "DB4BE9BE895036142362": "Pour analyser ce fichier, utilisez la fonction `parsers.prompty`.",
  "8B07DFFF406CC363CAC4": "Expression mathématique",
  "888557B2E9D64C3BD2D8": "La fonction `parsers.math` utilise [mathjs](https://mathjs.org/) pour analyser une expression mathématique.",
  "C428C952D58921C8429C": ".env",
  "AEF0C47A338523BCC630": "La fonction `parsers.dotEnv` analyse les fichiers [.env](https://www.dotenv.org/), généralement utilisés pour les fichiers de configuration. Ce format est similaire au format `clé=valeur`.",
  "2D01D50C97ED88464B42": "fences",
  "90EE88B652196B02B9C2": "Analyse la sortie de LLM similaire à la sortie de la fonction genaiscript def(). Le texte attendu ressemble à ceci :",
  "6D46001983335F1488E9": "Également pris en charge.\n...",
  "7A2801FC7E9D5EFDFC18": "Renvoie une liste de sections de code analysées.",
  "882AA45D454B18F789C3": "annotations",
  "8F2B5FECAF1546F6C25F": "Analyse les annotations d'erreurs et d'avertissements dans divers formats en une liste d'objets.",
  "E7B95B7E1F3FF6B92617": "[GitHub Actions](https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions)",
  "5719D0B521533A3DFFFC": "[Azure DevOps Pipeline](https://learn.microsoft.com/en-us/azure/devops/pipelines/scripts/logging-commands?view=azure-devops&tabs=bash#example-log-a-warning-about-a-specific-place-in-a-file)",
  "5F909FB79C57E9427034": "tokens",
  "898346DC28359D709C3B": "La fonction `parsers.tokens` estime le nombre de tokens dans une chaîne pour le modèle actuel. Cela est utile pour estimer le nombre d'invites pouvant être générées à partir d'une chaîne.",
  "E10508B2584BE168BCF6": "validateJSON",
  "20E55F5104E302C3DD87": "La fonction `parsers.validateJSON` valide une chaîne JSON par rapport à un schéma.",
  "22089BBA0DF7E9A9DCE8": "mustache",
  "969DD86A07C14B32A18A": "Exécute le moteur de modèle [mustache](https://mustache.github.io/) dans la chaîne et les arguments.",
  "9B31C6247AD83C3FF7C1": "jinja",
  "6A1FEEEAA5F2B02F52BA": "Exécute le modèle [jinja](https://jinja.palletsprojects.com/en/3.1.x/) (en utilisant [@huggingface/jinja](https://www.npmjs.com/package/@huggingface/jinja)).",
  "5DB91DA754B34D4F2F80": "tidyData",
  "43CF74FF843B7B044632": "Un ensemble d'options de manipulation de données utilisées en interne avec `defData`.",
  "7CE97CDBFD858FC8DEB3": "GROQ",
  "7C38DD6134774B8B273D": "Applique une requête [GROQ](https://groq.dev/) sur un objet JSON.",
  "5FF566DA17B7973E990B": "hachage",
  "C8812783723110F6870D": "Utilitaire pour hacher un objet ou un tableau en une chaîne adaptée aux fins de hachage.",
  "E822FCECD776B800D47F": "Par défaut, utilise `sha-1`, mais `sha-256` peut également être utilisé. La logique de conditionnement du hachage peut changer entre les versions de genaiscript.",
  "3F33F06E5B4CEE0B0CC5": "désenseigner",
  "8D5612EB1C5B099E00E7": "Certains modèles renvoient leur raisonnement interne à l'intérieur des balises `",
  "6A94D78F56BA3114EC30": "Schéma des paramètres",
  "53AF878B5694289ABAC7": "Les schémas de paramètres sont utilisés pour définir les signatures des scripts et des outils.",
  "66AD0EE139F215DB5A48": "Cette page décrit la manière dont les signatures des paramètres sont définies dans GenAIScripts. Diverses entités dans GenAIScript peuvent être paramétrées, et le `PromptParametersSchema` fournit un moyen flexible de définir le schéma des paramètres avec un mélange d'inférences de types intégrées.",
  "DCB340FF7712A0FA8AAA": "En interne, GenAIScript convertit un objet `parameters` (`PromptParametersSchema`) en un schéma JSON (`JSONSchema`) à diverses fins. Par exemple, l'API des outils OpenAI utilise JSONSchema pour définir la signature des outils.",
  "2657DAAAA5AC87F30855": "`JSONSchema` est plus expressif mais aussi plus verbeux à rédiger et peut être fastidieux à écrire manuellement pour des cas d'utilisation simples.",
  "108557FA60A0D9EA0EDE": "Syntaxe",
  "240DEAD0865467C8DD18": "Les règles de transformation suivantes sont appliquées pour convertir les données de paramètres en un JSONSchema :",
  "195D1B38D0F5B8E35066": "si la valeur est un objet et possède une propriété `type`, elle est traitée comme un objet JSONSchema déjà existant (et les objets imbriqués sont également convertis)",
  "F9BD3AEADB473451A9E9": "si la valeur est une chaîne de caractères, elle est convertie en `{ type: \"string\" }`. Si la chaîne est '\"\"', elle sera requise ; sinon, la valeur sert de `default`.",
  "738286ADC57B6146B883": "si la valeur est un nombre, elle est convertie en `{ type: \"number\" }`. Si le nombre est `NaN`, il sera requis.",
  "749A616472D2B5433ABC": "si la valeur est un booléen, elle est convertie en `{ type: \"boolean\" }`. Il n'existe pas encore de méthode pour encoder un booléen requis.",
  "F63DBC98D83B92DE2129": "si la valeur est un tableau, le type des éléments est déduit à partir du premier élément du tableau.",
  "2AA66FAB3950D688D7BB": "si la valeur est un objet, elle est convertie en un schéma `type: 'object'`. Les champs avec des valeurs `\"\"` ou `NaN` sont requis.",
  "806FFC4ABB7DFFC3E982": "Indications pour l'interface utilisateur",
  "B05822210BC6E7A1E006": "Certaines propriétés supplémentaires, non standard, sont utilisées pour fournir des informations complémentaires à l'interface utilisateur :",
  "99E115EAE8795431672A": "`uiGroup` sur toute propriété d'objet regroupe cet élément dans une section repliée dans l'interface utilisateur.",
  "84BB03FA8D8CA9A47B66": "`uiType` `textarea` pour indiquer que le champ doit être rendu sous la forme d'une zone de texte.",
  "4A13FBF64CB460B9B7E5": "`uiSuggestions` pour fournir une liste de suggestions pour un type `string`. Les suggestions remplissent le menu déroulant dans l'interface utilisateur tout en permettant d'autres valeurs.",
  "CDB70A1132B10707613D": "`uiType`: `runOption` pour un booléen place la case à cocher sous le bouton `Run`.",
  "80B709687174983AD3B5": "`accept`",
  "A1995B29872819253B9F": "Vous pouvez spécifier la liste des extensions de fichiers prises en charge, séparées par des virgules, pour les variables `env.files`.",
  "FC699D5AF2FCEB6481B9": "Pour supprimer la prise en charge de tous les fichiers, définissez `accept` comme `none`.",
  "A4A5CF020B17C18063B4": "Scripts et Scripts système",
  "8B5C56128F979D6BEA14": "Les `parameters` d'une entrée `script` sont utilisés pour remplir les entrées `env.vars`. Le schéma des paramètres est utilisé par Visual Studio Code lors du lancement du script, dans le [playground](/genaiscript/reference/playground) pour remplir les champs du formulaire.",
  "6B26636525E22CBD9A59": "les noms des paramètres de script au niveau supérieur sont utilisés tels quels dans `env.vars`",
  "07A606BDDBA260CCC04B": "les `parameters` d'un [script système](/genaiscript/reference/scripts/system) sont préfixés par l'identifiant du script système.",
  "C354F856741017635965": "Inférence à l'exécution",
  "17C12E5DFC65EB3729A6": "Vous pouvez exécuter l'assistant de conversion en utilisant la fonction `JSONSchema.infer`.",
  "F8DC2BCC6DFA1480E4F5": "Constructeur de sortie",
  "B74A465E27B6640F3518": "Apprenez à créer une sortie markdown pour l'exécution de votre script",
  "D4DA4F25A94C0F4EDF5A": "L'objet `env.output` est utilisé pour créer une sortie markdown pour l'exécution de votre script. Il fournit des méthodes pour ajouter du texte, des images, des tableaux et d'autres éléments à la sortie.",
  "673F5B56C37B34D93667": "La réponse LLM du script principal est également ajoutée automatiquement à la sortie.",
  "9642801651A73EB5CD2F": "Support Markdown",
  "799BEAE151F4D03AA1E1": "titre",
  "BB2679F59F3036AC5B79": "bloc de code entouré",
  "A52A3238220828F9B027": "bloc de code entouré dans une section de détails",
  "C2E9FB2AF554DDB83666": "avertissement, note, mise en garde",
  "478E9A82F0C18F4DE0C6": "image",
  "B72843700731E12324AE": "exemple de tableau",
  "136BB6BF51258E8D2181": "élément de résultat",
  "55F135D5F04E85F9C75D": "détails",
  "DD50977FFAE7E5522E75": "Il existe d'autres fonctions disponibles dans l'interface `OutputBuilder`.",
  "30D313962F97B711668C": "cli",
  "37C82EB2B07A17CB4B63": "Vous pouvez spécifier un emplacement de fichier pour le fichier de sortie à l'aide du drapeau `--out-output` dans la commande [run](/genaiscript/reference/cli/run).",
  "DE8AE6EB531A174B2983": "Bloc-notes",
  "B15D1207F720742D4D7E": "Explorez les fonctionnalités du Bloc-notes Markdown pour rédiger de la documentation avec des extraits de script et des résultats en ligne.",
  "D8A83E1EDE7E4F9DC793": "Le Bloc-notes Markdown de GenAIScript est actuellement utilisé pour rédiger la documentation de GenAIScript.",
  "1229C2FDEAF0FEDDCBBF": "Il permet d’exécuter des extraits de script et d’afficher le résultat directement en ligne dans le markdown, comme ceci :",
  "78A17F0BE74DED8B16EC": "Modifier le Markdown comme un Bloc-notes",
  "A6323E78C667A6C2C609": "La première étape consiste à ouvrir le fichier markdown afin de le modifier à l'aide du bloc-notes GenAIScript.",
  "11815EBA5E64F340233B": "Dans Visual Studio Code, faites un clic droit sur un fichier Markdown (`.md`) ou MDX (`.mdx`)",
  "ABE1F2BD1C7D45557ABF": "Sélectionnez **Ouvrir avec...**",
  "9FA5AF5B3C7FAC0B36A8": "Sélectionnez **Bloc-notes Markdown GenAIScript**",
  "52BF6771F92DEC9A1C15": "Exécuter des extraits",
  "7D71684E372E98676D65": "Vous pouvez exécuter n'importe quelle cellule **JavaScript** en cliquant sur le bouton **Exécuter la cellule** ou en appuyant sur `Shift+Entrée`. Cela exécutera le code comme s'il s'agissait d'un script GenAIScript dans l'espace de travail.",
  "F7AB3488EEE26ADE0E74": "Le journal des messages de discussion (`system`, `user`, `assistant`, ...) a été généré et inséré en utilisant un bloc-notes.",
  "14CF058DEF5E8ABA0354": "Configuration de la page",
  "834BA5932571558F63FD": "Vous pouvez fournir des paramètres de configuration globaux dans le front matter. Le front matter commence et se termine par trois tirets `---` et se trouve en haut du fichier markdown.",
  "ECBC282D6BC6065168C9": "Modèle, fournisseur, température, ...",
  "0FA7DB673CE7AC9B4C0E": "Vous pouvez spécifier les métadonnées de configuration du modèle LLM depuis `script`.",
  "CB3E7F1FACC97F67CD16": "Fichiers",
  "1969D8C34625D076CD81": "Vous pouvez spécifier les fichiers à inclure dans le bloc-notes, soit en tant qu'entrée unique, soit en tant que tableau. Les glob patterns sont pris en charge. Les fichiers sont relatifs à la racine de l'espace de travail.",
  "78D5AD31220E8B298010": "La variable `env.files` est disponible pour référencer les fichiers dans le bloc-notes.",
  "BE0AE52E3C43EA819C87": "Alias de Modèles",
  "C7514FFB4F62B8FA1311": "Donner des noms conviviaux aux modèles",
  "757EE9AF60A61FC94980": "Vous pouvez définir des **alias de modèles** dans votre projet pour donner des noms conviviaux aux modèles et les abstraire d'une version/étiquette spécifique de modèle.",
  "EF13900B6EAD59B42DB2": "Ainsi, au lieu de coder en dur un type de modèle,",
  "AB414AFEE3F4E275EAF5": "Vous pouvez utiliser/définir un alias comme `large`.",
  "52319B6DF80CCEADF230": "Les alias de modèles peuvent être définis comme des variables d'environnement (via le fichier `.env`), dans un fichier de configuration, via le [cli](/genaiscript/reference/cli/run) ou dans la fonction `script`.",
  "8FB8025DF51FB89D1FB5": "Ce fichier `.env` définit un alias `llama32` pour le modèle `ollama:llama3.2:1b`.",
  "4C714274F0D80DEB7BAA": "Vous pouvez alors utiliser l'alias `llama32` dans vos scripts.",
  "E2323008CA07A5BA8067": "Définir des alias",
  "78290317DC6A26E1902D": "Les configurations suivantes sont prises en charge par ordre d'importance (le dernier l'emporte) :",
  "C13829D88299E0D55B2D": "[fichier de configuration](/genaiscript/reference/configuration-files) avec le champ `modelAliases`",
  "812E2DFD0FB62DDA0E1C": "variables d'environnement avec des clés du pattern `GENAISCRIPT_MODEL_ALIAS=...`",
  "F0EB1A6758780C10CF10": "[cli](/genaiscript/reference/cli/run) avec l'option `--model-alias`",
  "7087A5B723297632801E": "dans la fonction `script`",
  "DD54354583508093BF0F": "Alias d'alias",
  "626A32496A2BE36869C5": "Un alias de modèle peut référencer un autre alias à condition de ne pas créer de cycles.",
  "BAA8FCEAFA82ADC017FB": "Alias intégrés",
  "F249B34D3892291C84FE": "Par défaut, GenAIScript prend en charge les alias de modèles suivants, ainsi que divers candidats chez différents fournisseurs de LLM.",
  "E284546C5F9FB510C58A": "`large` : modèle de type `gpt-4o`",
  "EAAFA5ABC01612A9EDE8": "`small` : modèle `gpt-4o-mini` ou similaire. Un modèle plus petit, moins cher et plus rapide",
  "AC6721DD4B8986BA06AE": "`vision` : `gpt-4o-mini`. Un modèle capable d'analyser des images",
  "214D42D56576BF103725": "`reasoning` : `o1` ou `o1-preview`.",
  "C15242452028A146FD0E": "`reasoning_small` : `o1-mini`.",
  "EEAF81A9E5530E70D3BB": "Les alias suivants sont également définis pour que vous puissiez remplacer les LLM utilisés par GenAIScript lui-même.",
  "F00BBF5C2FFB095CEB25": "`agent` : `large`. Modèle utilisé par l'Agent LLM.",
  "7EC8D93796C35C8A29A7": "`memory` : `small`. Modèle utilisé par la mémoire à court terme de l'agent.",
  "650D731CC993A661EF75": "Les alias par défaut pour un fournisseur donné peuvent être chargés en utilisant l'option `provider` dans le [cli](/genaiscript/reference/cli/run).",
  "45EE3FEE772BE9005B60": "Métadonnées",
  "013F30C0716949E29908": "Découvrez comment configurer les métadonnées des scripts pour améliorer la fonctionnalité et l'expérience utilisateur dans GenAIScript.",
  "75AD7442AF45075743BF": "Les invites utilisent l'appel de fonction `script({ ... })`\npour configurer le titre et d'autres éléments de l'interface utilisateur.",
  "DDD039B7BD201B196576": "L'appel à `script` est optionnel et peut être omis si vous n'avez pas besoin de configurer l'invite.\nCependant, l'argument `script` doit être un littéral [JSON5](https://json5.org/) valide, car le script est analysé et non exécuté lors de l'extraction des métadonnées.",
  "91B8DAB11D04EDA79CD6": "Titre, description, groupe",
  "223E43F3764CE89594C1": "Les champs `title`, `description` et `group` sont (facultatifs) utilisés dans l'interface utilisateur pour afficher l'invite.",
  "A8C0A2D420A4C82AFB58": "système",
  "A60190CB4D62B6963266": "Remplacez les invites système incluses dans le script. L'ensemble par défaut d'invites système est inféré dynamiquement à partir du contenu du script.",
  "0A3A34C5A2AFFA899B18": "modèle",
  "F35355CE05CE9FD9E675": "Vous pouvez spécifier l'identifiant du modèle LLM dans le script.\nL'IntelliSense fourni par `genaiscript.g.ts` vous aidera à découvrir la liste des modèles pris en charge.\nUtilisez les alias `large` et `small` pour sélectionner les modèles par défaut, quelle que soit la configuration.",
  "7EC1611F31EFF1AAF99C": "Vous pouvez remplacer le modèle à partir de la [CLI](/genaiscript/reference/cli/)",
  "B06A53860C18F7BF5E88": "maxTokens",
  "85CC8956DBF993D822F2": "Vous pouvez spécifier le nombre maximum de **tokens de complétion** LLM dans le script. La valeur par défaut n'est pas spécifiée.",
  "67C37289BAAEF69D10D0": "maxToolCalls",
  "0FE1CF35FCFBA4DE8B43": "Limite le nombre d'appels de fonction/outils autorisés pendant une génération. Cela est utile pour prévenir les boucles infinies.",
  "4D0546B39B1BF92E3AD1": "température",
  "CE59AB739D3BA3F7CA6A": "Vous pouvez spécifier la `température` LLM dans le script, entre `0` et `2`. La valeur par défaut est `0,8`.",
  "F277F027958A1BDD2916": "top_p",
  "443109AA7437914DC6D5": "Vous pouvez spécifier le paramètre `top_p` LLM dans le script. La valeur par défaut n'est pas spécifiée.",
  "9CBF9D0BC3AA3D7AC633": "graine",
  "6EC390D5ECB72CFFCF09": "Pour certains modèles, vous pouvez spécifier la `graine` LLM dans le script, pour les modèles qui la prennent en charge. La valeur par défaut n'est pas spécifiée.",
  "497CBB0219254EFA10ED": "métadonnées",
  "BEF888F976783C025075": "Vous pouvez spécifier un ensemble de paires clé-valeur de métadonnées dans le script. Cela activera les [complétions enregistrées](/genaiscript/reference/scripts/stored-completions) dans OpenAI et Azure OpenAI. Cela est utilisé à des fins de distillation et d'évaluation.",
  "4DA93D72CE7EC0A2350E": "Autres paramètres",
  "41BE2A2D8C7D6EA29F2C": "`unlisted: true`, ne pas l'afficher dans les listes pour l'utilisateur. Les modèles `system.*` sont automatiquement masqués.",
  "65B2F5D595E9C577F660": "Voir `genaiscript.d.ts` dans les sources pour plus de détails.",
  "13D6CCE2A72C840179FA": "`env.meta`",
  "24EE92E1A01C8AFFB8E8": "Vous pouvez consulter les métadonnées du script de niveau supérieur dans l'objet `env.meta`.",
  "15914C11DBCABEEDEF7E": "Résolution du modèle",
  "304D54E02CE72F8DEA62": "Utilisez la fonction `host.resolveModel` pour résoudre un nom ou un alias de modèle vers son fournisseur et son nom de modèle.",
  "0198A63E713CC8DD8665": "Outils du protocole Model Context",
  "0307FAF9DA8759AFB0E2": "Apprenez à configurer et à utiliser en toute sécurité les outils et serveurs du protocole Model Context (MCP), y compris la validation des sorties d'outils, la détection de secrets et les meilleures pratiques de sécurité pour les scripts d'IA.",
  "70A528F6B7CB2CAC7216": "Le [Model Context Protocol](https://modelcontextprotocol.io/) (MCP) définit un protocole permettant de partager des [outils](https://modelcontextprotocol.io/docs/concepts/tools) et de les utiliser quel que soit le framework ou l'environnement d'exécution sous-jacent.",
  "31D72EAE17C388BDAF6F": "**GenAIScript implémente un client pour les serveurs/outils MCP**.",
  "3198B19ACE28D650B595": "GenAIScript implémente également un serveur pour MCP, qui expose tout script comme un outil. Consultez [Serveur MCP](/genaiscript/reference/scripts/mcp-server) pour plus de détails.",
  "E6E73959FCA9477D2AAB": "Configuration des serveurs",
  "2963074FEFA7AE9A155A": "Vous pouvez déclarer la configuration du serveur MCP dans la fonction `script` (en tant qu'outils ou agents) ou les charger dynamiquement à l'aide de `defTool`.",
  "526DC8A4613210635937": "`mcpServers`",
  "C7C9100A98B0291D0567": "Vous pouvez déclarer la configuration du serveur MCP dans le champ `mcpServers` de `script` ou `runPrompt`. Cela correspond à la même configuration que le fichier de configuration de Claude.",
  "AFEFE281484B43D254AD": "Si vous recherchez un sous-ensemble d'outils, vous pouvez fournir une liste d'identifiants d'outils.",
  "F14256596EF0B3F3E386": "Consultez la section [Sécurité](#security) pour les options permettant de sécuriser l'utilisation des serveurs MCP.",
  "1DC989EA1D1FA1B8A489": "`mcpAgentServers`",
  "2F0E4CD4880DDFFDD16A": "Le `mcpAgentServers` déclare un ensemble de serveurs MCP qui seront encapsulés dans des agents distincts et injectés dans la liste des outils. C'est une manière efficace de charger et d'organiser les serveurs MCP comme agents dédiés à des tâches spécifiques.",
  "123B301E7C192A9D96D9": "Cela utilise la même configuration avec un paramètre supplémentaire `description` et un paramètre optionnel `instructions`. La description est injectée dans la description de l'agent et les instructions sont injectées dans l'agent prompt.",
  "AA56A10E617BE4F71F79": "Définir le champ `env` dans la configuration `mcpServers` ou `mcpAgentServers` vous permet de passer des variables d'environnement au serveur MCP. Laissez la valeur vide et GenAIScript injectera automatiquement les variables d'environnement du processus en cours.",
  "F1FB0C5DB9BDD77ED6BF": "`defTool`",
  "A7D4EE5701590DB72D37": "Vous pouvez utiliser [defTool](/genaiscript/reference/scripts/tools) pour déclarer un ensemble de configurations de serveurs, en utilisant la même syntaxe que dans le [fichier de configuration Claude](https://github.com/modelcontextprotocol/servers?tab=readme-ov-file#using-an-mcp-client).",
  "A59DBD1DB3292A973792": "GenAIScript lancera le serveur et enregistrera tous les outils répertoriés par le serveur. L'identifiant de l'outil sera `server_tool_name` pour éviter les conflits.",
  "CE14287EAB863C32432A": "Si votre outil a un nom qui n'est pas un identifiant valide, vous pouvez utiliser la syntaxe `[\"tool-name\"]`.",
  "F89925EFD22BCAA2BA09": "Cycle de vie des serveurs",
  "224085D5876D99E741AD": "Les serveurs se lancent lors du rendu du prompt et s'arrêtent une fois la session de chat terminée.",
  "2895DE3593A0D7980AE2": "Cela signifie que si vous définissez des serveurs dans un [prompt en ligne](/genaiscript/reference/scripts/inline-prompts), le serveur sera démarré/arrêté pour chaque prompt en ligne.",
  "3E53DEDC2865698C494E": "Trouver des serveurs",
  "1CD1F82DE960F78D5142": "La liste des serveurs disponibles peut être trouvée dans le projet [Model Context Protocol Servers](https://github.com/modelcontextprotocol/servers).",
  "ACAFDA328B3B3939B6B5": "Sécurité",
  "58C1E04550D993729CAC": "Le [Model Context Protocol](https://modelcontextprotocol.io/) est un protocole puissant qui comporte également un certain nombre de risques de sécurité dont il faut être conscient. GenAIScript implémente divers mécanismes de protection pour atténuer ces risques. Cependant, il est important de comprendre les risques et comment les utiliser.",
  "93958F2ADA63DDA44CA4": "Packages Dockerisés",
  "05C5228FB6D388641305": "De nombreux packages sont disponibles sous forme d'images Docker. C'est un bon moyen d'exécuter un package dans un environnement isolé. Cela résout également les problèmes de configuration/de l'installation d'outils.",
  "C1F7BA63614144178ECE": "Fixation des versions des packages",
  "A6C16F04534C5C833B39": "Vous pouvez fixer la version du serveur MCP exécuté avec `npx` ou d'autres gestionnaires de packages. Cela permet de garantir que le serveur ne sera pas mis à jour vers une nouvelle version pouvant casser votre script ou introduire une vulnérabilité.",
  "F5F338E9FA1E6E2E3B51": "Validation de la signature des outils",
  "81B2094A63DCA9D3A017": "GenAIScript prend en charge la définition de la `signature` des outils déclarés par un serveur. Si la signature des outils ne correspond pas, GenAIScript refusera de charger le serveur (et générera une erreur).",
  "22E48BF2D47CA9ABA7F9": "Cela empêche les **attaques de type rug pull**, où un serveur MCP changerait les outils en fonction de certaines conditions externes (par exemple, lors d'une deuxième exécution).",
  "6BAD88811BF3C27819FC": "Pour activer cette fonctionnalité, commencez par définir `toolsSha` avec une valeur vide pour déclencher la validation.",
  "26CB44BD14DE38F3B5AF": "Ensuite, exécutez votre script, et le chargement du serveur MCP échouera. Le journal du terminal contiendra la signature calculée des outils et un fichier mis en cache contenant le contenu des outils afin que vous puissiez l'examiner de plus près. Si tout semble correct, vous pouvez régler la signature sur `toolsSha` et relancer le script.",
  "947B48BDA0286FABA81A": "Détection de secrets dans les sorties d'outils",
  "979F2C2BFE1B8D1B3751": "Un outil peut accidentellement lire un secret provenant de l'environnement ou de l'entrée. Par exemple, un outil qui récupère une URL peut renvoyer une page contenant un secret.",
  "6F7309715CB730951131": "Pour empêcher cela, utilisez le [scanner de secrets](/genaiscript/reference/scripts/secret-scanning) sur toutes les sorties d'outils.",
  "C66FBC0A0215004599B9": "Injection de Prompt dans les sorties d'outils",
  "8B06C9708188FFC73238": "Un outil peut renvoyer des données contenant des attaques d'injection de prompts. Par exemple, un outil qui récupère une URL peut renvoyer une page contenant des attaques d'injection de prompts.",
  "2264198953B278588CD9": "Validation de l'intention des résultats d'outils",
  "6B55042DA8FE9A08A5C1": "Markdown",
  "118F580BDE83BFF521DC": "Améliorez vos capacités en markdown avec les utilitaires de la classe MD pour analyser et gérer efficacement les frontmatters.",
  "DCE9D64AFEB161CEE86D": "La classe `MD` fournit un ensemble d'utilitaires pour travailler avec [Markdown](https://www.markdownguide.org/cheat-sheet/) et [le texte frontmatter](https://jekyllrb.com/docs/front-matter/).",
  "596A2A442858C963D0A0": "Le parseur prend également en charge des variantes de markdown comme [MDX](https://mdxjs.com/).",
  "D57ACCF1F397D3AEC4C2": "`frontmatter`",
  "4E8AEDB8A0BD69FE24D4": "Extrait et analyse le texte frontmatter d'un fichier markdown. Renvoie `undefined` si aucun frontmatter n'est trouvé ou si l'analyse échoue. Le format par défaut est `yaml`.",
  "E99A4EAEF432945B9E69": "`content`",
  "288C4EDEED8091EE6FB6": "Extrait la source markdown sans le frontmatter.",
  "3983EB7209248E8A6A97": "`updateFrontmatter`",
  "8965917511E8293F5E1D": "Fusionne les valeurs du frontmatter dans le fichier markdown existant. Utilisez la valeur `null` pour supprimer des champs.",
  "EE9BDAF6319B6D5BBA4F": "Serveur du Protocole de Contexte Modèle",
  "3C55731F41372FE8779D": "Transforme des scripts en outils du Protocole de Contexte Modèle",
  "C1B225E353272D5F1FF4": "Protocole de Contexte Modèle",
  "202FD211B5D93C7EF26F": "**GenAIScript implémente un serveur qui transforme des scripts en outils MCP**.",
  "E7CAAFADC6642AD8FF90": "GenAIScript implémente également un client pour les outils MCP, qui vous permet de consommer des outils MCP dans un script.\nVoir [outils MCP](/genaiscript/reference/scripts/mcp-tools) pour plus de détails.",
  "EF1AA6699757ED1A4DC1": "Scripts comme outils MCP",
  "DCE8877E1F337F0E3A14": "GenAIScript lance un serveur MCP qui expose chaque script GenAIScript comme un outil MCP (à ne pas confondre avec `defTool`).",
  "3FE90AC0F358AF690AFD": "La description de l'outil MCP correspond à la description du script.\n**Assurez-vous de bien élaborer la description**, car c'est ainsi que le LLM décide quel outil utiliser lors de l'exécution d'un script. Si votre outil n'est pas sélectionné par le LLM, c'est probablement un problème de description.",
  "5F7CF31E724469AAAA9C": "Les paramètres de l'outil MCP sont déduits automatiquement à partir des [paramètres de script](/genaiscript/reference/scripts/parameters) et des fichiers.\nLes paramètres MCP rempliront alors l'objet `env.vars` dans le script comme d'habitude.",
  "4900A7C69EA8CE08663F": "La sortie de l'outil MCP correspond à la sortie du script. C'est-à-dire, typiquement, le dernier message de l'assistant pour un script qui utilise le contexte de haut niveau. \nOu tout contenu passé dans [env.output](/genaiscript/reference/scripts/output-builder).",
  "CA3133E652716F10951A": "Annotations",
  "4B72071C53F2538F5DFE": "[Les annotations d'outils](https://modelcontextprotocol.io/docs/concepts/tools#tool-annotations) fournissent des métadonnées supplémentaires sur le comportement d’un outil, \naidant les clients à comprendre comment présenter et gérer les outils. Ces annotations sont des indications qui décrivent la nature et l'impact d'un outil, mais ne doivent pas être utilisées pour des décisions de sécurité.",
  "FEF0CBF29237634930A0": "`title` est renseigné à partir du titre du script.",
  "F3918B341FB88190DDB5": "`readOnlyHint` : `boolean`, défaut : `false`  \nSi vrai, indique que l'outil ne modifie pas son environnement.",
  "55BB44A21789D08664A3": "`destructiveHint` : `boolean`, défaut : `true`  \nSi vrai, l'outil peut effectuer des mises à jour destructives (ceci n’est significatif que lorsque `readOnlyHint` est faux).",
  "4F2618F0C75C34D6A132": "`idempotentHint` : `boolean`, défaut : `false`  \nSi vrai, appeler l'outil à plusieurs reprises avec les mêmes arguments n'a pas d'effet supplémentaire (ceci n’est significatif que lorsque `readOnlyHint` est faux).",
  "7264D0F167F8E236F241": "`openWorldHint` : `boolean`, défaut : `true`  \nSi vrai, l'outil peut interagir avec un “monde ouvert” d’entités externes.",
  "BC14BD7974297F0EC0CE": "Ressources",
  "20B16D2B70B60262690D": "[Les ressources](https://modelcontextprotocol.io/docs/concepts/resources) sont une primitive centrale dans le Protocole de Contexte Modèle (MCP) qui permet aux serveurs d'exposer des données\net du contenu qui peuvent être lus par les clients et utilisés comme contexte pour les interactions LLM.",
  "DE1E6F0FB42599695936": "Dans GenAIScript, vous pouvez créer une ressource en utilisant `host.publishResource` et elle sera automatiquement exposée en tant que ressource MCP.",
  "2BCF21FB849588CC108A": "La valeur de retour est l'URI de la ressource, qui peut être utilisée dans le résultat de l'invite. \n`publishResource` prend en charge les fichiers, les buffers et les chaînes de caractères.",
  "5E5A9E1DA296C2F58322": "La ressource sera disponible pendant toute la durée de vie du serveur MCP.",
  "539280E0DEF874E87412": "En utilisant `env.output.image`, un script peut produire des images qui feront partie de la réponse de l'outil.",
  "54F3FFFBB432F0D29DC2": "Analyse de secrets",
  "46A6F8D7479327B4336E": "GenAIScript dispose d'une [fonctionnalité intégrée d'analyse de secrets](/genaiscript/reference/scripts/secret-scanning)\nqui analysera vos ressources pour détecter des secrets. Pour désactiver cette fonctionnalité, \nvous pouvez définir l'option `secretScanning` sur `false` dans `publishResource`.",
  "051637052FD2CE6C00CA": "Configuration de l'IDE",
  "B6B12C67393601ECCBB9": "La commande `mcp` lance le serveur MCP en utilisant le transport stdio.",
  "BA8DE5BF0AD519E1F96A": "[@modelcontextprotocol/inspector](https://www.npmjs.com/package/@modelcontextprotocol/inspector)\nest un client MCP qui peut être utilisé pour inspecter le serveur et lister les outils disponibles.",
  "CA8A33B42C2648C73DE0": "Visual Studio Code Insiders avec GitHub Copilot Chat",
  "7D2DCF56EF55AECAC79A": "Vous aurez besoin de Visual Studio Code v1.99 ou supérieur et de l'extension [GitHub Copilot Chat](https://marketplace.visualstudio.com/items?itemName=GitHub.copilot-chat) installée.",
  "DAD753E2C6EB27084C02": "Claude Desktop",
  "5F4E7423AF6098F486FD": "Si vous devez filtrer les scripts exposés en tant qu'outils MCP, vous pouvez utiliser l'option `--groups` et définir le groupe `mcp` dans vos scripts.",
  "4AB15E822EAC4925BE06": "Clients du protocole Model Context",
  "ADE25EDC9296BD1FF466": "Clients MCP",
  "C1B225222C7F4E6D70A5": "Le [Model Context Protocol](https://modelcontextprotocol.io/) (MCP) définit un protocole pour partager des [outils](https://modelcontextprotocol.io/docs/concepts/tools)\net les consommer indépendamment du framework ou du runtime sous-jacent.",
  "5601AA1844387CFABFFC": "GenAIScript vous permet de démarrer et d'interagir de manière programmable avec un serveur Model Context Protocol (MCP),\nd’invoquer des outils et de résoudre des ressources. Bien que cela soit généralement réservé à l'orchestration des LLM, il peut également être utile d’utiliser JavaScript pour effectuer quelques appels à des serveurs avant de faire une requête.",
  "18CF04CD8D86449BC708": "Cette fonctionnalité est fournie comme une couche légère par-dessus le SDK TypeScript MCP.",
  "4D509FA8400B9CF8FBB3": "Mais pourquoi ne pas simplement utiliser des API ?",
  "8CD21FCA0412156D2299": "Choisissez le meilleur outil pour la tâche. Dans de nombreux cas, les API sont plus simples, plus légères et plus rapides à utiliser que les MCP, et vous pouvez tirer parti de la puissance de Node.js pour faire presque tout.",
  "0048E3E6273B3F3FF818": "Cependant, les MCP sont des API emballées pour une consommation facile par les clients LLM. Leurs auteurs les ont conçues pour être faciles à utiliser et pertinentes lorsqu’on travaille avec des LLM.",
  "19959F367CCA34DE57E6": "Par exemple, lors de la consommation d’outils Python depuis GenAIScript, vous pourriez rencontrer des problèmes avec l’exécution Python ou le versionnage des paquets\nsi vous essayez de les exécuter directement (et cela peut être peu sûr). Avec les MCP, il y a souvent une version containerisée de l’outil prête à être utilisée.",
  "0456D92ED34BFB55BE1F": "Démarrage d’un serveur",
  "9F9FA08AA6310A2351D6": "Vous démarrez un serveur en utilisant la même syntaxe que les fichiers de configuration MCP, mais vous devez fournir un identifiant pour le serveur.\nCet identifiant est utilisé pour référencer le serveur dans le `mcpClient`.",
  "296042F4F2BCEF9D03C7": "Le serveur est automatiquement arrêté lorsque l’invite se termine.",
  "94CE9C2766718B880C43": "Vous pouvez effectuer des opérations sur les outils. Les requêtes ne sont pas mises en cache et communiquent toujours avec le serveur.",
  "80F456044A094E4CDBCC": "Lister les outils (métadonnées) :",
  "181D351CE6ED49D9C9B4": "Appeler un outil :",
  "D349F3BE7CB1A5C04394": "Utiliser le résultat :",
  "93B8F9034B39E089387E": "La structure de la sortie dépend de l’outil, mais elle est conçue pour être consommée par un LLM. Vous souhaiterez probablement utiliser `def` pour le stocker dans votre invite :",
  "DDFB92F7C92B05A3BCBA": "Exemple : Transcription YouTube",
  "3A036A0FB59B5BB09E6A": "Le serveur MCP [mcp/youtube-transcript](https://hub.docker.com/r/mcp/youtube-transcript) peut extraire la transcription\nd'une vidéo YouTube. Il est répertorié dans le [catalogue Docker MCP](https://hub.docker.com/u/mcp).",
  "68B5DADE44F2CBE5B644": "Partage des MCP",
  "9FC0D057060AEAE41855": "Par défaut, les serveurs MCP ne sont pas partagés entre les invites. Si vous voulez utiliser le même serveur MCP dans plusieurs invites,\nvous pouvez utiliser la fonction `host.mcpClient` pour créer un client qui peut être réutilisé dans plusieurs invites.",
  "2E0F78C3027A63D3CA15": "Vous pouvez également obtenir des outils sous une forme qui peut être utilisée dans `defTool` et les réutiliser dans plusieurs invites :",
  "E4D67503032D2B54A312": "LogProbs",
  "6188DECFC8ABE315249F": "Apprenez à utiliser les logprobs pour diagnostiquer les performances de vos scripts.",
  "ACDF88901141E37CE80E": "`logprobs` est un mode où les modèles LLM retournent la probabilité de chaque jeton. `topLogProbs` retourne également une liste de jetons alternatifs et leurs probabilités logarithmiques. Cela peut être utile pour le débogage et pour comprendre le comportement du modèle.",
  "9C7D3D2B9A9EF3C55842": "Voir [OpenAI Logprobs](https://cookbook.openai.com/examples/using_logprobs)",
  "5771A2BBD60A05D984EC": "La fonctionnalité `logprobs` n'est pas disponible dans tous les modèles ou chez tous les fournisseurs.",
  "A43E3B1B310669F590FF": "Logprobs",
  "AAB555BF1E3DB4763A97": "Vous pouvez activer logprobs de la manière suivante :",
  "C6CF3B44CA1267ABD4E9": "Utilisez l'option `logprobs` lors de la commande d'exécution.",
  "7A6038C166B8AB015D03": "Ajoutez l'option `logprobs` aux métadonnées du `script`.",
  "8A38941B346A07834361": "Sortie colorée",
  "B7DCE1F4DA9299E05409": "Quand `logprobs` est activé, le [cli](/genaiscript/reference/cli) colorera la sortie en fonction de la probabilité de chaque jeton. Une couleur bleue indique une probabilité élevée et une couleur rouge indique une probabilité faible.",
  "D908C8E4F9446B7DC026": "Voici un exemple de logprobs en action lors de l'exécution d'une commande de poème avec gpt-4o.",
  "0DE99CF52A1992EEDC04": "Top logprobs",
  "9D4B86568CAD3D32415B": "Vous pouvez activer `top-logprobs` de la manière suivante :",
  "05F3BCDA189D0A235EDB": "Utilisez l'option `top-logprobs` lors de la commande d'exécution. Elle active également `logprobs`.",
  "3846CF123014D799C04E": "Ajoutez l'option `topLogprobs` aux métadonnées du `script`.",
  "39040B843EBF3315F498": "Quand `top-logprobs` est activé, la fenêtre de console est colorée avec l'[entropie](https://people.math.harvard.edu/~ctm/home/text/others/shannon/entropy/entropy.pdf) des jetons alternatifs.",
  "236BC9E80C54ABBD425C": "Jetons alternatifs",
  "F1AE8EEC083F60C75FD5": "La trace contient un rendu des jetons alternatifs avec une sortie colorée basée sur les logprobs.",
  "80C9D2A3A1DF877BE4E2": "Consultez l'exemple suivant dans le tableau pour illustrer la probabilité des jetons alternatifs.",
  "95C29CB5E6E0E9A92C37": "Extrait illustrant des suggestions de jetons alternatifs et leurs probabilités associées.",
  "C4F91D0A2E800F676203": "Les probabilités logarithmiques affichent les autres jetons possibles pour chaque segment d'un texte proposé.",
  "519EFFAE405D2292AA2F": "Des exemples additionnels de tokens alternatifs sont affichés ci-dessous avec des probabilités logarithmiques.",
  "8C8BE06747BCFA3ABB96": "Journalisation",
  "1961C243FD9B9EE2F3A2": "Mécanisme de journalisation pour les scripts.",
  "468D0A8BE600F24C98EF": "GenAIScript utilise la bibliothèque [debug](https://www.npmjs.com/package/debug) pour la journalisation. C'est une bibliothèque de journalisation très flexible et puissante qui vous permet d'activer ou de désactiver la journalisation pour des espaces de noms spécifiques.",
  "8EF29369F9DC364F8868": "Journaliseur de script",
  "7246A5FF6048C76AC679": "Le `env.dbg` est un journaliseur de débogage avec `script` comme espace de noms. Les messages du journaliseur de débogage ne sont *pas* envoyés à la trace en markdown.",
  "50593E591B7E65CCDB52": "Voir les logs",
  "9619C22C59CA01CE7D06": "Par défaut, la journalisation de débogage est désactivée. Vous devez l'activer avec des modèles d'espaces de noms.",
  "48639DCC76C4F9E92770": "Les messages de script sont visibles en exécutant avec `DEBUG=<scriptid>`.",
  "7919CD3BA881608AD7EE": "ou en utilisant la variable d'environnement `DEBUG`.",
  "28F715737E364BD935F6": "Vous pouvez spécifier plusieurs catégories en les séparant par une virgule.",
  "A3A1A02C4581FF3124C8": "caractères génériques",
  "BFD928A6DB19DA838193": "Le caractère `*` peut être utilisé comme caractère générique. Supposons, par exemple, que votre bibliothèque dispose de journaux nommés `connect:bodyParser`, `connect:compress`, `connect:session`. Au lieu de lister les trois avec `DEBUG=connect:bodyParser,connect:compress,connect:session`, vous pouvez simplement utiliser `DEBUG=connect:*`, ou pour exécuter tout avec ce module simplement utiliser `DEBUG=*`.",
  "77735E7C5E2475779D32": "Vous pouvez également exclure des journaux spécifiques en les préfixant avec un caractère `-`. Par exemple, `DEBUG=*,-connect:*` inclurait tous les journaux sauf ceux commençant par `connect:`.",
  "7647796EA6456E9DA6E1": "Ouvrez les paramètres de script GenAIScript et activez \"Diagnostics\" (équivalent à définir '*' comme espace de noms) ou définissez spécifiquement le paramètre **DEBUG** sur l'espace de noms que vous souhaitez activer.",
  "4761C1CC712DDCEF2CA6": "La valeur par défaut est `script`.",
  "09172F32C0867F648E2B": "Pour activer la journalisation avec le [cli](/genaiscript/reference/cli), vous devez définir la variable d'environnement `DEBUG` sur l'espace de noms que vous souhaitez activer. Par exemple, pour activer la journalisation pour l'espace de noms `sample`, vous pouvez exécuter le script comme ceci :",
  "20D50F1C6BFE7B5F6AE2": "Et vous verrez la sortie suivante :",
  "473ACBD9F5C16E2CE450": "Journaliseurs personnalisés",
  "8CA70461D42D6AD5F602": "Vous pouvez utiliser `host.logger` pour créer un journaliseur personnalisé avec un espace de noms spécifique.",
  "F91773ED7959CDB13F33": "et mettez à jour la valeur de la variable d'environnement `DEBUG` avec l'espace de noms que vous souhaitez activer.",
  "70063514973DAACC3EA2": "Journalisation intégrée à GenAIScript",
  "98B6206B499D10E15670": "toute journalisation interne dans GenAIScript est préfixée par `genaiscript:`.",
  "1797208130C09395B50E": "la journalisation des agents est préfixée par `agent:name`.",
  "E789B5CE664CB3F705EB": "Invite intégrées",
  "992DFF6F223B266D323D": "Apprenez à utiliser les invites intégrées avec la fonction runPrompt pour les invocations internes de LLM dans les scripts.",
  "D7CF10CC4D58333C1392": "La fonction `prompt` ou `runPrompt` permet de construire une invocation interne de LLM. Elle retourne le résultat de l'invite.",
  "1C1EBCE8047C9761582D": "`prompt` est une simplification syntaxique pour `runPrompt` qui utilise un littéral de chaîne de caractères comme texte d'invite.",
  "F6E060A88F4217BCEA23": "Vous pouvez passer une fonction à `runPrompt` prenant un seul argument `_`, qui est le générateur d'invite.\nIl utilise les mêmes aides comme `$`, `def`, mais s'applique à l'invite interne.",
  "8F6822292CD809440A51": "Vous pouvez également simplifier la fonction et passer directement le texte de l'invite.",
  "D2EFEC03D8A3E3B05976": "Ne mélangez pas les aides globales dans les invites internes",
  "0AA9AAD16CDEE3065DDB": "C'est une erreur très courante lors de l'utilisation des invites internes.",
  "41174B9A4ACC194CE105": "Une erreur fréquente est d'utiliser les aides globales `def`, `$` et autres dans l'invite interne.\nCes aides ne sont pas disponibles dans l'invite interne, et vous devez utiliser `_.$`, `_.def` et les autres aides spécifiques.",
  "C620D58B1733F829E5CF": "**pas bien**",
  "CA41070E5E8F2FFD7C93": "**bien**",
  "D4C12B405727DA5FAE14": "Options",
  "F9EF971C06DD21606EB2": "Les fonctions `prompt` et `runPrompt` prennent en charge diverses options similaires à la fonction `script`.",
  "DCADBF73BDFA3EEC208B": "Vous pouvez utiliser des invites internes dans les [outils](/genaiscript/reference/scripts/tools).",
  "B198EE55350F07B0F5C9": "Concurrence",
  "9936EF89C6BE85D5E86B": "Les fonctions `prompt` et `runPrompt` sont des fonctions asynchrones qui peuvent être utilisées dans une boucle pour exécuter plusieurs invites simultanément.",
  "484D1F3E85F0D6318ADF": "En interne, GenAIScript applique une limite de concurrence par modèle de 8 par défaut. Vous pouvez modifier cette limite en utilisant l'option `modelConcurrency`.",
  "11E9C5110BDC0886071C": "Si vous avez besoin de plus de contrôle sur les files d'attente concurrentes,\nvous pouvez essayer [p-all](https://www.npmjs.com/package/p-all),\n[p-limit](https://www.npmjs.com/package/p-limit) ou des bibliothèques similaires.",
  "BFF9A1CCA7252AAAE414": "Scripts uniquement en ligne",
  "693B6C799950AD276A9B": "Si vos scripts appellent uniquement des invites intégrées et ne génèrent jamais l'invite principale, vous pouvez les configurer pour utiliser le fournisseur LLM `none`.\nCela empêchera GenAIScript d'essayer de résoudre les informations de connexion et générera une erreur si vous essayez de créer des invites dans l'exécution principale.",
  "D3AA268D56D150641EE9": "Exemple : Résumé des résumés de fichiers utilisant Phi-3",
  "44082CE5D7D304C8E137": "L'extrait ci-dessous utilise [Phi-3](https://azure.microsoft.com/en-us/blog/introducing-phi-3-redefining-whats-possible-with-slms/)\nvia [Ollama](https://ollama.com/) pour résumer individuellement les fichiers avant de les ajouter à l'invite principale.",
  "727423A8BFF61FD864A6": "INI",
  "6672BECD9EB7A1447C28": "Apprenez à analyser et à formater les fichiers INI dans GenAIScript avec la classe INI, y compris les méthodes et des exemples d'utilisation.",
  "B8E90B57090A4D4E8336": "Analyse et formatage des données `.ini`.",
  "80B15AFCC9D703F4F3E7": "`INI`",
  "45BDD978D6AD47D9FF7E": "De manière similaire à la classe `JSON` en JavaScript, la classe `INI` fournit des méthodes pour analyser et formater les [fichiers `.ini`](https://en.wikipedia.org/wiki/INI_file).",
  "86CD968F9463D2B60194": "Les [parsers](/genaiscript/reference/scripts/parsers) fournissent également un analyseur tolérant pour les fichiers `.env`. Retourne `undefined` pour les entrées non valides.",
  "9D80A322248B18C3DA91": "Apprenez à utiliser et personnaliser les modèles GenAIScript pour une expansion efficace des invites IA.",
  "BEDBCD982E6122A38537": "GenAIScript sont des fichiers JavaScript nommés `*.genai.mjs` ou des fichiers TypeScript nommés `*.genai.mts`, avec un moteur de création d'invites conçu pour les LLM.",
  "FF377ADDDCECE1BEA1ED": "Fichiers Script",
  "37451A9252F93BFA64C0": "GenAIScript détectera tout fichier correspondant à `*.genai.mjs`, `*.genai.js`, `*.genai.mts` dans votre espace de travail.",
  "858312FD623B359A59FA": "Les fichiers GenAIScript peuvent être placés n'importe où dans votre espace de travail ; cependant, l'extension les placera par défaut dans un dossier `genaisrc`.",
  "CA121E8F08C6943FEF92": "`.genai.mjs` utilise la syntaxe de module JavaScript et prend en charge les [imports](/genaiscript/reference/scripts/imports).",
  "935E4BB97CBE12BCD570": "`.genai.js` sont évalués et ne prennent pas en charge les imports.",
  "A98BC8D09797E365972D": "`.genai.mts` sont des [fichiers module TypeScript](/genaiscript/reference/scripts/typescript) et prennent en charge les [imports](/genaiscript/reference/scripts/imports), y compris les imports dynamiques d'autres fichiers TypeScript.",
  "2C9174D80DC524609997": "/genaisrc",
  "AFF175F1EE572C629D28": "jsconfig.json     // Configuration du compilateur TypeScript",
  "E0B469D857DE2F1C8356": "genaiscript.d.ts  // Définitions TypeScript",
  "86FA97921632834E73E0": "myscript.genai.mjs // votre script !",
  "DF694BFA23FF609827E8": "`system.*.genai.mjs` sont considérés comme des [modèles d'invites système](/genaiscript/reference/scripts/system) et ne sont pas listés par défaut.",
  "F88FAA5F43C9F1643535": "Importations",
  "F9AFF2B0E676D96A8CFA": "Découvrez comment activer les importations de modules dans les scripts GenAI en les convertissant au format .mjs et en utilisant des importations statiques ou dynamiques.",
  "3C7B8791203A13E1F65F": "Les scripts utilisant l'extension `.mjs` peuvent utiliser des importations statiques ou dynamiques comme tout autre fichier module. Vous pouvez renommer n'importe quel fichier `.genai.js` en `.genai.mjs` pour activer les importations de modules.",
  "86FFDAB3C956EF5CF986": "Importations de modules",
  "AECE275E533336C44FE9": "Vous pouvez importer des packages Node installés dans votre projet avec l'extension `.mjs` ou `.mts`.",
  "7D13E5EA4E1DD88B3704": "Importations JavaScript",
  "754F5621220E14D02739": "Vous pouvez également importer d'autres fichiers modules JavaScript locaux (en utilisant des importations statiques ou dynamiques). **Utilisez l'extension `.mjs` pour les fichiers modules JavaScript.**",
  "AB44D3108AA17BB8A228": "importation statique (`import ... from ...`)",
  "B298AFF131C3BCDE70FF": "importation dynamique (`async import(...)`)",
  "BA012ECED6F9FA02FA44": "Importations TypeScript",
  "40232E321CBB6B5E8EAE": "Vous pouvez importer des [fichiers modules TypeScript](/genaiscript/reference/scripts/typescript) (`.mts`). **Utilisez l'extension `.mts` pour les fichiers modules TypeScript.**",
  "CF0642C1739A60B7BFF6": "`env.generator`",
  "9B5D50CDCD106FDFB59C": "Le `env.generator` fait référence au contexte du générateur de prompt racine, les fonctions `$`, `def` de niveau supérieur... Il peut être utilisé pour créer une fonction utilisable avec ces fonctions ou également avec `runPrompt`.",
  "D368F93C84352F36EB1B": "Modules JSON",
  "9DEF7A75EF5944032512": "Vous pouvez importer des fichiers JSON en utilisant l'instruction `import` et obtenir une inférence de type automatique.",
  "4614077CD180B5350699": "Utilisez la syntaxe `with { type: \"json\" }` pour importer des fichiers JSON dans des fichiers `.mjs` ou `.mts`. Le chemin du fichier est relatif au fichier source genaiscript.",
  "988C7BD21F60E5509340": "Exportation de fonction par défaut",
  "EFEE974230141A61D2C9": "Si vous définissez une fonction comme exportation par défaut, GenAIScript l'appellera. La fonction peut être asynchrone.",
  "9A1A4E4FBFBDE719FB88": "Type de package",
  "C6C6CC5ED4865A7DC265": "Si vous avez un fichier `package.json` dans votre projet, vous pouvez définir le champ `type` sur `module` pour activer les importations de modules dans tous les fichiers `.js`.",
  "98468018C1F2F400D09E": "Cela vous permettra d'utiliser des importations de modules dans tous les fichiers `.js` de votre projet.",
  "4ADECF209C9BE005B07D": "Fichier de script actuel",
  "0CD87D7223F2FBB5BD6D": "Vous pouvez utiliser `import.meta.url` pour obtenir l'URL du fichier de script actuel. Cela est utile pour obtenir le chemin du fichier de script actuel et l'utiliser dans votre script.",
  "D647569EC387EC2A150A": "Importer un Modèle",
  "786E50880D87ED949426": "Découvrez comment importer des modèles d'invite dans GenAIScript en utilisant `importTemplate` avec la prise en charge de l'interpolation des variables mustache et des modèles de fichiers glob.",
  "5E7F25C4358F2138CAEF": "Divers outils LLM permettent de stocker des invites dans des fichiers texte ou markdown. Vous pouvez utiliser `importTemplate` pour importer ces fichiers dans une invite.",
  "82D6F5D9A61A8892D41C": "Interpolation de variables",
  "F27A5384CD7F7DDF79F5": "`importTemplate` prend en charge [mustache](https://mustache.github.io/) (par défaut), l'interpolation de variables [Jinja](https://www.npmjs.com/package/@huggingface/jinja) et le format de fichier [Prompty](https://prompty.ai/). Vous pouvez utiliser des variables dans le modèle importé et les passer en tant qu'arguments à la fonction `importTemplate`.",
  "6C54FB4FE35BA53B1BD6": "Mustache prend en charge les arguments comme fonctions. Ceci vous permet de passer des valeurs dynamiques au modèle.",
  "3F9E6FD47CECE0E2F4B5": "Davantage de façons de spécifier des fichiers",
  "570486A404E1BF08837A": "Vous pouvez utiliser les résultats de `workspace.readText`.",
  "35FA50DEEB5E5B2FE5EA": "Vous pouvez spécifier un tableau de fichiers ou des motifs glob.",
  "FAE4395E6559A95051C2": "[Prompty](https://prompty.ai/) fournit un format simple basé sur markdown pour les invites. Il ajoute le concept de sections de rôle au format markdown.",
  "941B085D3176F81FFF81": "Images",
  "D117A284725BFF84B81D": "Découvrez comment ajouter des images aux invites pour les modèles d'IA prenant en charge les entrées visuelles, y compris les formats d'image et leur utilisation.",
  "3BFC864F19A26BB1604D": "Les images peuvent être ajoutées à l'invite pour les modèles qui prennent en charge cette fonctionnalité (comme `gpt-4o`). Utilisez la fonction `defImages` pour déclarer les images. Les images prises en charge varient selon les modèles mais incluent généralement `PNG`, `JPEG`, `WEBP` et `GIF`. Les fichiers locaux et les URL sont tous deux compatibles.",
  "4F2B4CD77BFC71ACCA83": "En savoir plus sur [OpenAI Vision](https://platform.openai.com/docs/guides/vision/limitations).",
  "5D355EBFF1AAE07CE3EA": "URLs",
  "3B358C82186D705FAF69": "Les URL publiques (qui ne nécessitent pas d'authentification) seront transmises directement à OpenAI.",
  "1A4E72DC82DC00B9E320": "Les fichiers locaux sont chargés et encodés sous forme de données URI.",
  "59F9CF3E5F51EB117C86": "Buffer, Blob, ReadableStream",
  "87E86607C46C8D834B30": "La fonction `defImages` prend également en charge [Buffer](https://nodejs.org/api/buffer.html), [Blob](https://developer.mozilla.org/en-US/docs/Web/API/Blob), [ReadableStream](https://nodejs.org/api/stream.html).",
  "A4BC3E01B55D37180B4E": "Cet exemple prend une capture d'écran de bing.com et l'ajoute aux images.",
  "E61366D39350D65E2B26": "Détail",
  "ACAE724B9F81D8FAE035": "OpenAI prend en charge un champ \"low\" / \"high\". Une image avec un détail \"low\" sera réduite à une résolution de 512x512 pixels.",
  "8C8A02178F95258477B9": "Rognage",
  "D3FE1E7E81F038689611": "Vous pouvez rogner une région d'intérêt à partir de l'image.",
  "51688C5377CEBA17EC09": "Rogner automatiquement",
  "13B42003CD6C880B47A3": "Vous pouvez également supprimer automatiquement les couleurs uniformes sur les bords de l'image.",
  "BC74360F6895EA06FE86": "Niveaux de gris",
  "E1D600F938AC69F6B0BE": "Vous pouvez convertir l'image en niveaux de gris.",
  "4E72C6376AD58E8C94D9": "Rotation",
  "246C8A47AFD1A9558535": "Vous pouvez faire pivoter l'image.",
  "B72D5E8730747B0AD0FA": "Échelle",
  "4767F6B2D3A82C8CFA43": "Vous pouvez redimensionner l'image.",
  "042A78D7D186EDB83C11": "Renverser",
  "C73143389AB18A80049A": "Vous pouvez renverser l'image.",
  "7B8B2FE09C4E5A1F9389": "Largeur maximale, hauteur maximale",
  "74563E67F08EB8711476": "Vous pouvez spécifier une largeur maximale, une hauteur maximale. GenAIScript redimensionnera l'image pour s'adapter aux contraintes.",
  "02B0294144EDFBF82A58": "Génération d'images",
  "E66CCD54C7B9E5A351C8": "Utilisez la génération d'images comme OpenAI DALL-E Stable Diffusion pour générer des images à partir de texte.",
  "BEFBA156EB1F1A941007": "GenAIScript prend en charge les fournisseurs de modèles de langage (LLM) avec des [API de génération d'images compatibles avec OpenAI](https://platform.openai.com/docs/guides/images).",
  "146814E5C6D08F600BAC": "Fournisseurs supportés",
  "58DA009147AC2E10BFE4": "Vous devrez configurer un fournisseur de LLM prenant en charge la génération d'images.",
  "0652AB7669B467F1A3CE": "[OpenAI](/genaiscript/configuration/openai)",
  "0A2D1683B5A4F2FF0E72": "[Azure AI Foundry](/genaiscript/configuration/azure-ai-foundry)",
  "63879E795745E10364B8": "Générer une image",
  "4072D6215EADCDD29490": "Le script principal (top-level) ne peut pas être configuré pour générer une image pour l'instant ; cela doit être fait via un appel à la fonction `generateImage`.",
  "63D3232394BD19291080": "`generateImage` prend une commande (prompt) et retourne une URL d'image ainsi qu'une commande révisée (optionnelle).",
  "F9A5C92B575B0F62E93B": "L'objet `image` est un fichier image qui peut être utilisé pour d'autres traitements.",
  "204A6C2893E254D3FCC9": "Les images peuvent être ajoutées à l'invite pour les modèles qui prennent en charge cette fonctionnalité (comme `gpt-4o`).\nUtilisez la fonction **`defImages`** pour déclarer les images. Les images prises en charge varient\nselon les modèles mais incluent généralement `PNG`, `JPEG`, `WEBP` et `GIF`. Les fichiers locaux et les URL sont pris en charge.",
  "469799FD86991640EDB4": "OpenAI Vision",
  "80A130FA445B92ACEBC8": "URL",
  "9A126739F1AD1E97B7F6": "fonction prend également en charge ",
  "D102A12C465DAE410A63": "Buffer",
  "CC46D7D962ED9F885A1B": "Blob",
  "5FE7E95FE080CEA84C68": "ReadableStream",
  "33829E2F1BC687E178AB": "Détail",
  "0117E1BA31C4222F1171": "Rognage",
  "497601C2B894F612E19B": "Rognage automatique",
  "863493717D3B4F6D42AE": "Niveaux de gris",
  "A09DDE92B92B1242CECD": "Rotation",
  "B0DDEBF72B0C5BE315F6": "Échelle",
  "0B2EBF394819B6B40E3E": "Inversion",
  "892630A9004E64E14DAE": "Carrelage",
  "C83483AE82E92C78F55F": "Lorsque vous spécifiez l'option `tiled: true`, toutes les images seront\nregroupées dans une seule image, après que toutes les transformations ont été appliquées.",
  "F3D56596A46C3ADF3FE3": "L'image résultante sera ensuite redimensionnée pour respecter les contraintes de taille maximale de l'image.",
  "84AB62AC053FAC034F44": "La création de prompts, c'est du code",
  "8341FB9FFA42FA0927A6": "Installez l'[extension Visual Studio Code ou le CLI](./getting-started/installation/) pour commencer.",
  "0DCA4BC89C0CD2A58F09": "Configurez les [secrets](./getting-started/configuration/) pour accéder à vos LLMs.",
  "56B989E597EBCDA81F69": "Suivez le guide [Premiers pas](./getting-started/your-first-genai-script/) pour écrire votre\npremier script.",
  "23230B5DED1A460C9483": "Découvrez-en plus sur GenAIScript dans la [Référence du scripting](./reference/).",
  "15239EA866F9BB2957C9": "Syntaxe minimale pour créer des prompts avec [JavaScript](./reference/scripts/)\nou [TypeScript](./reference/scripts/typescrip/).",
  "D8289BFBFDF3F3526EFF": "Éditez, [déboguez](./getting-started/debugging-scripts/),\n[exécutez](./getting-started/running-scripts/),\n[testez](./getting-started/testing-scripts/) vos scripts dans [Visual Studio Code](./getting-started/installation/)\nou avec une [ligne de commande](./getting-started/installatio/).",
  "4A6CF45DF87ECEBFCAD2": "Enregistrez des fonctions JavaScript comme [outils LLM](./reference/scripts/tools/)\n(avec fallback pour les modèles qui ne prennent pas en charge les outils).",
  "CA54EB9045254AC876B3": "Utilisez des [outils](https://modelcontextprotocol.io/docs/concepts/tool/) exposés par les [serveurs Model Context Provider](./reference/scripts/mcp-tool/)",
  "8867270C3855277DC368": "Chaque script est un [outil Model Context Provider](./reference/scripts/mcp-serve/).",
  "4DFED4E17724B89DD474": "Combinez [outils](./reference/scripts/tool/) et [prompts inlines](./reference/scripts/inline-prompts/)\ndans un [agent](./reference/scripts/agent/).",
  "6B7935C768C5AEF0D450": "Les scripts sont des [fichiers](./reference/scripts/)! Ils peuvent être versionnés, partagés, forkés, ...",
  "DEAF4FF52DFAFA7BD484": "Définissez, validez, réparez des données grâce aux [schémas](./reference/scripts/schema/).",
  "86E6EECB8891833BCB5E": "Manipulez\n[PDFs](./reference/scripts/pd/),\n[DOCX](./reference/scripts/doc/),\n...",
  "6FB95220DAE7F5775877": "Manipulez des données tabulaires issues de\n[CSV](./reference/scripts/cs/),\n[XLSX](./reference/scripts/xls/),\n...",
  "BAACECEA553420ABC494": "Transcrivez automatiquement de l'audio ou de la vidéo avec [OpenAI](./configuration/opena/)\nou [d'autres](./configuration/whisperas/).",
  "6C068FD8686A5963C974": "Greppez ou recherchez sur plusieurs [fichiers](./reference/scripts/file/)",
  "397DD52FD4E05505D34A": "[Recherchez sur le web](./reference/scripts/web-searc/) avec Bing ou Tavily.",
  "1DC6917D24901D8DE6E8": "Naviguez et scrapez le web avec [Playwright](./reference/scripts/browse/).",
  "1A721A863802AE8A6DC5": "[Recherche vectorielle](./reference/scripts/vector-search/)\navec une base de données locale ou [Azure AI Search](https://learn.microsoft.com/en-us/azure/search/search-what-is-azure-searc/).",
  "A9B7CAAE4B2178868025": "GenAIScript fournit des prompts système de Responsible AI intégrés et une prise en charge Azure Content Safety\npour valider la [sécurité du contenu](./reference/scripts/content-safet/).",
  "25A9D682BBB336FCFF34": "Exécutez des modèles via GitHub à l'aide de [GitHub Models](./configuration/githu/)\nou [GitHub Copilot](./configuration/github-copilot-cha/).",
  "2BE2E1246B5362D5757F": "Exécutez des modèles depuis [Azure AI Foundry](https://ai.azure.com/), [Google](https://aistudio.google.com/), [Anthropic](https://www.anthropic.com/), [Alibaba](https://www.alibaba.com/), et d'autres.\nVoir [Configuration](./getting-started/configuration/).",
  "F84B8C133326EF4654FA": "Exécutez vos scripts avec des [modèles open source](./getting-started/configuration/),\ncomme [Phi-3](https://azure.microsoft.com/en-us/blog/introducing-phi-3-redefining-whats-possible-with-slms/),\nvia [Ollama](https://ollama.com/), [LocalAI](https://localai.io/)...",
  "1B8993008F2DC97DB26A": "Exécutez du code dans des [containers Docker](./reference/scripts/containe/).",
  "47D7BE3D7DF00023E681": "[Exécutez des LLMs](./reference/scripts/inline-prompts/) pour composer vos prompts LLM.",
  "DA32456C4EDFA5D58823": "[Générez des images](./reference/scripts/image-generatio/) avec OpenAI DALL-E ou autres.",
  "CDA1D1D0246BB06EB41D": "Scannez vos discussions pour y détecter des secrets grâce au [secret scanning](./reference/scripts/secret-scannin/).",
  "BCAD11F05D7F468FEF2B": "Automatisez via le [CLI](./reference/cl/),\nintégrez des rapports dans votre pipeline CI/CD.",
  "44076A6F33F888A5F8D6": "Intégrez aux [vérifications de Pull Requests](./reference/cli/run/#pull-request/) à travers des commentaires,\nrevues ou modifications de description. Supporte GitHub Actions et Azure DevOps pipelines.",
  "31F3EC1EF0D7532BB410": "Construisez des prompts fiables à l'aide de [tests et évaluations](./reference/scripts/test/)\nalimentés par [promptfoo](https://promptfoo.dev/)."
}