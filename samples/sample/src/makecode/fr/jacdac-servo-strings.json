{
  "jacdac.ServoReg.ActualAngle": "Lecture seule ° i16.16 (int32_t). La position physique actuelle du bras, si l'appareil peut détecter la position.",
  "jacdac.ServoReg.Angle": "Lecture-écriture ° i16.16 (int32_t). Spécifie l'angle du bras (demande).",
  "jacdac.ServoReg.Enabled": "Lecture-écriture bool (uint8_t). Active/désactive l'alimentation du servo.",
  "jacdac.ServoReg.MaxAngle": "Constante ° i16.16 (int32_t). Angle maximal pouvant être réglé, typiquement 180°.",
  "jacdac.ServoReg.MaxPulse": "Lecture-écriture μs uint16_t. Longueur de l'impulsion correspondant à l'angle le plus élevé.",
  "jacdac.ServoReg.MinAngle": "Constante ° i16.16 (int32_t). Angle minimal pouvant être réglé, typiquement 0°.",
  "jacdac.ServoReg.MinPulse": "Lecture-écriture μs uint16_t. Longueur de l'impulsion correspondant à l'angle le plus bas.",
  "jacdac.ServoReg.StallTorque": "Constante kg/cm u16.16 (uint32_t). Le moteur du servo s'arrêtera de tourner lorsqu'il essaie de déplacer un poids de `stall_torque` à une distance radiale de `1.0` cm.",
  "modules.ServoClient.actualAngle|block": "angle actuel du %servo (°)",
  "modules.ServoClient.angle|block": "angle du %servo (°)",
  "modules.ServoClient.enabled|block": "%servo activé",
  "modules.ServoClient.onActualAngleChangedBy|block": "lorsque l'angle actuel du %servo change de %threshold (°)",
  "modules.ServoClient.setAngle|block": "définir l'angle du %servo à %value (°)",
  "modules.ServoClient.setEnabled|block": "définir %servo %value=toggleOnOff",
  "modules.ServoClient.stop|block": "servo continu %servo arrêt",
  "modules.servo1|block": "servo1",
  "modules.servo4|block": "servo4",
  "modules|block": "modules",
  "{id:category}Jacdac": "Jacdac",
  "{id:group}Servo": "Servo",
  "{id:group}Servo (Continuous)": "Servo (Continu)",
  "jacdac.ServoReg.Offset": "Lecture-écriture ° i16.16 (int32_t). Correction appliquée à l'angle pour compenser la dérive du bras du servo.",
  "jacdac.ServoReg.ResponseSpeed": "Constante s/60° u16.16 (uint32_t). Temps pour déplacer de 60°.",
  "modules.ServoClient.run|block": "servo continu %servo fonctionne à la vitesse %speed=speedPicker \\%",
  "modules.servo2|block": "servo2",
  "modules.servo3|block": "servo3"
}