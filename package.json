{
  "name": "@genaiscript/monorepo",
  "displayName": "GenAIScript",
  "description": "Programmatically assemble prompts for LLMs using JavaScript. Orchestrate LLMs, tools, and data in code.",
  "version": "2.1.0",
  "license": "MIT",
  "private": true,
  "author": "microsoft",
  "packageManager": "pnpm@10.12.3",
  "type": "module",
  "scripts": {
    "az:login": "az login --scope api://trapi/.default",
    "prebuild": "pnpm run build:ruler",
    "build": "turbo build",
    "postbuild": "pnpm test:fix && pnpm build:commands",
    "build:cli": "pnpm --filter=!docs --filter=!genaiscript-vscode --filter=!@genaiscript/web build",
    "build:ci": "pnpm --filter=!docs build",
    "build:ruler": "ruler apply --mcp-overwrite",
    "build:commands": "node packages/cli/dist/src/index.js info help > docs/src/content/docs/reference/cli/commands.md",
    "clean": "git prune && git gc && rm -Rf slides/node_modules && rm -Rf docs/dist && rm -Rf docs/distasw && rm -Rf docs/node_modules && rm -Rf .genaiscript && rm -Rf packages/sample/.genaiscript && git checkout -- .",
    "cli": "node packages/cli/dist/src/index.js",
    "commit": "pnpm pretty && pnpm build && pnpm test:core && pnpm gcm",
    "commit-versions": "git add packages/**/package.json && git add examples/action/package.json && git add docs/package.json && git add slides/package.json && git commit -m '[skip ci] updated version numbers' && git push",
    "compile": "pnpm compile:ext && pnpm build:cli && pnpm test:fix && pnpm build:commands",
    "compile-debug": "pnpm --filter=genaiscript run compile-debug",
    "compile:ext": "pnpm --filter=@genaiscript/core build && pnpm --filter=genaiscript-vscode build && pnpm --filter=@genaiscript/web build",
    "compile:web": "pnpm --filter=@genaiscript/web build",
    "debug:mcp": "pnpm dlx @modelcontextprotocol/inspector node packages/cli/dist/src/index.js mcp --groups mcp --cwd packages/sample --startup resources",
    "disk:check": "du -h --max-depth=2 | sort -hr | head -n 10",
    "docs": "cd docs && pnpm run dev",
    "install:ffmpeg": "sudo apt-get update && sudo apt-get install ffmpeg -y",
    "install:uv": "curl -LsSf https://astral.sh/uv/install.sh | sh",
    "devproxy:install": "sudo bash -c \"$(curl -sL https://aka.ms/devproxy/setup.sh)\"",
    "devproxy:start": "cd packages/sample && devproxy",
    "devproxy:test": "curl -ikx http://127.0.0.1:8000 https://raw.githubusercontent.com/microsoft/genaiscript/refs/heads/main/SUPPORT.md",
    "format:check": "turbo format:check",
    "format:fix": "turbo format:fix",
    "gcm": "node packages/cli/dist/src/index.js run gcm --model gcm --no-run-trace --no-output-trace",
    "gen:licenses": "pnpm dlx generate-license-file --input ./package.json --output ./THIRD_PARTY_LICENSES.md --overwrite",
    "genai": "node --trace-deprecation packages/cli/dist/src/index.js run",
    "genai:perf": "node --cpu-prof packages/cli/dist/src/index.js run",
    "genai:alt": "cd docs && pnpm genai:alt-text -p github",
    "genai:blog-images": "node packages/cli/dist/src/index.js convert blog-image \"docs/src/content/docs/blog/*.md*\" --no-run-trace --no-output-trace",
    "genai:blog-post": "node packages/cli/dist/src/index.js run blog-generator",
    "genai:blogify": "node packages/cli/dist/src/index.js run blogify-sample",
    "genai:convert": "node packages/cli/dist/src/index.js convert",
    "genai:debug": "pnpm compile-debug && node packages/cli/dist/src/index.js run",
    "genai:debugify": "node packages/cli/dist/src/index.js run dbg-if",
    "genai:docify": "node packages/cli/dist/src/index.js run docify",
    "genai:docs": "pnpm genai docs \"packages/cli/src/**.ts\" \"packages/core/src/**.ts\" --vars diff=true --vars applyEdits=true",
    "genai:docs-images": "node packages/cli/dist/src/index.js convert docs-image \"docs/src/content/docs/getting-started/**/*.md*\" \"docs/src/content/docs/reference/**/*.md*\" --no-run-trace --no-output-trace",
    "genai:frontmatter": "pnpm genai:convert frontmatter \"docs/src/content/docs/reference/**/*.md*\" -- -p github --no-run-trace --no-output-trace",
    "genai:readme": "node packages/cli/dist/src/index.js run readme-updater",
    "genai:technical": "cd docs && pnpm genai:technical",
    "genai:test": "node packages/cli/dist/src/index.js run test-gen",
    "genai:tweetify": "node packages/cli/dist/src/index.js run tweetify",
    "install:playwright": "pnpm playwright install --with-deps chromium",
    "lint:check": "turbo lint:check",
    "lint:fix": "turbo lint:fix",
    "ollama": "pnpm ollama:stop && pnpm ollama:start",
    "ollama:start": "docker run -d -v ollama:/root/.ollama -p 11434:11434 --name ollama -e OLLAMA_FLASH_ATTENTION=1 -e OLLAMA_KV_CACHE_TYPE=q8_0 ollama/ollama",
    "ollama:stop": "docker stop ollama && docker rm ollama",
    "pack": "turbo pack",
    "prepack": "turbo prepack",
    "package": "cd packages/vscode && pnpm package",
    "patch-versions": "pnpm dlx zx scripts/patch-version.mjs",
    "prd": "pnpm prd:text && pnpm prd:sketch",
    "prd:dev": "node packages/cli/dist/src/index.js run prd --pull-request-description --model azure:gpt-4.1_2025-04-14 --vars maxTokens=500000",
    "prd:meme": "node packages/cli/dist/src/index.js run prd-meme --pull-request-description --model github:gpt-4.1 --vars base=dev",
    "prd:narration": "node packages/cli/dist/src/index.js run prd-narration --pull-request-description --model github:gpt-4.1 --vars base=dev",
    "prd:sketch": "node packages/cli/dist/src/index.js run prd-sketch --pull-request-description --model github:gpt-4.1 --vars base=dev",
    "prd:text": "node packages/cli/dist/src/index.js run prd --pull-request-description --model github:gpt-4.1 --vars base=dev --no-run-trace --no-output-trace",
    "prd:visuals": "node packages/cli/dist/src/index.js run prd-visuals --pull-request-description --model github:gpt-4.1 --vars base=dev",
    "prd:zine": "node packages/cli/dist/src/index.js run prd-zine --pull-request-description --model github:gpt-4.1 --vars base=dev",
    "prr": "node packages/cli/dist/src/index.js run prr --pull-request-reviews --model github:gpt-4.1 --vars base=dev",
    "release": "pnpm release:github && pnpm release:npm",
    "release:github": "pnpm compile && pnpm dlx release-it && pnpm patch-versions && pnpm compile && pnpm package && pnpm release:vsix && pnpm commit-versions",
    "release:npm": "zx scripts/npm-publish.mjs",
    "release:vsix": "pnpm dlx release-it --no-increment --no-git --github.release --github.update --github.assets=packages/vscode/genaiscript.vsix --no-github.draft",
    "retrieval:codequery": "node packages/cli/dist/src/index.js code query packages/core/src/progress.ts \"(interface_declaration) @i\"",
    "retrieval:index": "node packages/cli/dist/src/index.js retrieval index \"packages/sample/src/rag/*\"",
    "retrieval:search": "node packages/cli/dist/src/index.js retrieval search lorem \"packages/sample/src/rag/*\"",
    "run:script": "cd packages/sample/ && pnpm run:script",
    "run:script:devproxy": "cd packages/sample/ && HTTP_PROXY=http://127.0.0.1:8000 DEBUG=script,genaiscript:fetch* NODE_TLS_REJECT_UNAUTHORIZED=0 pnpm run:script",
    "serve": "pnpm build:cli && run-p serve:*",
    "serve:cli": "node --watch --watch-path=packages/cli/dist packages/cli/dist/src/index.js serve --dispatch-progress",
    "serve:web": "pnpm --filter=@genaiscript/web watch",
    "serve:webapi": "node --watch --watch-path=packages/cli/dist packages/cli/dist/src/index.js webapi --network --cors \"*\"",
    "setup": "git submodule update --init --recursive",
    "setup:az": "curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash",
    "setup:bicep": "az bicep upgrade",
    "slides": "cd slides && pnpm run dev",
    "test:ci": "node packages/cli/dist/src/index.js run poem --no-run-trace --no-output-trace",
    "test:cli": "node packages/cli/dist/src/index.js run code-annotator packages/sample/src/counting.py -l Test -o .genaiscript/tmp/tests/cli -ot .genaiscript/tmp/tests/cli/outtrace.md -oa .genaiscript/tmp/tests/cli/diags.sarif",
    "test:compile": "node packages/cli/dist/src/index.js scripts compile",
    "test:core": "pnpm --filter=@genaiscript/core test",
    "test:docx": "node packages/cli/dist/src/index.js parse docx packages/sample/src/rag/Document.docx",
    "test:fix": "node packages/cli/dist/src/index.js scripts fix --force && node packages/cli/dist/src/index.js configure action action-poem --force --python --ffmpeg --out examples/action --provider echo",
    "test:modulesamples": "cd packages/modulesample && pnpm run test",
    "test:pdf": "DEBUG=genaiscript:pdf node packages/cli/dist/src/index.js parse pdf packages/sample/src/rag/loremipsum.pdf",
    "test:pyodide": "DEBUG=genaiscript:pyodide node packages/cli/dist/src/index.js run pyodide --no-run-trace --no-output-trace",
    "test:samples": "cd packages/sample && pnpm test",
    "test:scripts": "cd packages/sample/ && pnpm test:scripts",
    "test:scripts:view": "cd packages/sample/ && pnpm test:scripts:view",
    "test:system": "cd packages/core && node ../cli/dist/src/index.js scripts compile",
    "test:runtime": "cd packages/runtime && pnpm run test",
    "tsx": "tsx",
    "typecheck": "echo skipped",
    "typecheck:web": "pnpm --filter=@genaiscript/web run typecheck",
    "whisper": "pnpm whisper:stop && pnpm whisper:start",
    "whisper:start": "docker run -d -p 9000:9000 -e ASR_MODEL=base -e ASR_ENGINE=openai_whisper onerahmet/openai-whisper-asr-webservice:latest",
    "whisper:stop": "docker stop whisper && docker rm ollama"
  },
  "release-it": {
    "github": {
      "release": true,
      "releaseName": "v${version}",
      "releaseNotes": "node packages/cli/dist/src/index.js run git-release-notes --cache --cache-name releases --no-run-trace --no-output-trace"
    }
  },
  "devDependencies": {
    "@inquirer/prompts": "catalog:",
    "@intellectronica/ruler": "^0.2.5",
    "npm-check-updates": "^18.0.1",
    "playwright": "^1.53.1",
    "prettier": "catalog:",
    "prettier-plugin-curly": "^0.3.2",
    "tsx": "catalog:",
    "turbo": "^2.5.4",
    "zx": "catalog:"
  }
}
