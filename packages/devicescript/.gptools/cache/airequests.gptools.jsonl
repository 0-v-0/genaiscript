{"sha":"0a0639d63455ce09c83ca0b85538b11b0fd3da3923ca3f34ea1fd04aafb07e93","key":{"template":{"id":"front-matter","title":"SEO front matter"},"fragment":{"fullId":"src/README.md.gpspec.md:0:0","hash":"2a37d8ccac6b48d9"}},"val":{"response":{"edits":[],"fileEdits":{},"trace":"\n# Prompt trace\n\n\n\n## Prompt template \"SEO front matter\" (`front-matter`)\n\n```````````````js\n  1: gptool({\n  2:     title: \"SEO front matter\",\n  3:     description: \"Update or generate SEO-optimized front matter for a markdown file.\",\n  4:     categories: [\"markdown\"],\n  5:     system: [\"system\", \"system.files\"],\n  6:     maxTokens: 2000,\n  7:     temperature: 0,\n  8: })\n  9: \n 10: def(\"SOURCE\", env.links.filter(f => f.filename.endsWith(\".md\")))\n 11: \n 12: $`\n 13: You are a search engine optimization expert at creating front matter for markdown document.\n 14: \n 15: Update or generate front matter of SOURCE files:\n 16: - Update fields title, description and keywords as needed\n 17: - use yaml format, do not use quotes\n 18: - only 5 keywords or less\n 19: - optimize for search engine optimization.\n 20: - Do not modify the markdown content after the front matter\n 21: \n 22: If no front matter is present, generate it.\n 23: `\n 24: \n```````````````\n\n\n\n## Inline prompts\n\nAdded as comment at the end of a fragment: \n\n```markdown\nLorem ipsum...\n\n<!-- @prompt.NAME \nYou are concise.\n!-->\n```\n        \n\n-   **@prompt** missing\n-   **@prompt.markdown** missing\n\n\n## console output\n> tip: use `console.log()` from gptool.js files\n## Expanded prompt\n\n```````````````markdown\nSOURCE:\n````` file=src/README.md\n# PCF8563 Real-Time Clock Driver\n\nThis is a DeviceScript driver for the PCF8563 real-time clock (RTC) peripheral.\n\n## Usage\n\n```typescript\nimport { PCF8563 } from \"./pcf8563\";\n\nconst rtc = new PCF8563(0x51);\nawait rtc.init();\n\nconst currentTime = await rtc.readTime();\nconsole.log(\"Current time:\", currentTime);\n\nconst newTime = new Date();\nawait rtc.writeTime(newTime);\nconsole.log(\"Time updated to:\", newTime);\n```\n\n## Sources\n\n- [PCF8563 Datasheet](https://files.seeedstudio.com/wiki/round_display_for_xiao/RTC-PCF8563-datasheet.pdf)\n- [Adafruit CircuitPython PCF8563](https://github.com/adafruit/Adafruit_CircuitPython_PCF8563)\n- [tuupola/pcf8563](https://github.com/tuupola/pcf8563)\n`````\n\nYou are a search engine optimization expert at creating front matter for markdown document.\n\nUpdate or generate front matter of SOURCE files:\n- Update fields title, description and keywords as needed\n- use yaml format, do not use quotes\n- only 5 keywords or less\n- optimize for search engine optimization.\n- Do not modify the markdown content after the front matter\n\nIf no front matter is present, generate it.\n```````````````\n\n\n## Variables\nVariables are referenced through `env.NAME` in prompts.\n\n-   env.**error**: `ERROR-QTFPOY`\n\n-   env.**file**\n```````````````js\n{ filename: \"src/README.md.gpspec.md\",\nlabel: \"current\",\ncontent: \"# README.md\\n\\n-   [README.md](./README.md)\\n\" }\n```````````````\n\n-   env.**links**\n```````````````js\n[ { label: \"README.md\",\n  filename: \"src/README.md\",\n  content: \"# PCF8563 Real-Time Clock Driver\\n\\nThis is a DeviceScript dri\"... } ]\n```````````````\n\n-   env.**parents**\n```````````````js\n[  ]\n```````````````\n\n-   env.**fence**\n```````````````\n`````\n```````````````\n\n-   env.**promptOptions**\n```````````````js\n{  }\n```````````````\n\n-   env.**vars**\n```````````````js\n{  }\n```````````````\n\n-   env.**templates**\n```````````````js\n[ { id: \"addboard\",\n  title: \"Add board\",\n  description: \"Updates a DeviceScript board.json generic file with informat\"... },\n{ id: \"summarizecode\",\n  title: \"Code Summarizer\",\n  description: \"Given a source file in a programming language, extract the s\"... },\n{ id: \"todo\",\n  title: \"TODOs\",\n  description: \"Try to implement TODOs found in source code.\" },\n{ id: \"firmware\",\n  title: \"firmware\",\n  description: \"Compile information about various sources to generate Device\"... },\n{ id: \"core.default\",\n  title: \"Run gpspec directly\",\n  description: \"This is the default gptool that assumes the gpspec contains \"... },\n{ id: \"front-matter\",\n  title: \"SEO front matter\",\n  description: \"Update or generate SEO-optimized front matter for a markdown\"... } ]\n```````````````\n\n-   env.**template**\n```````````````js\n{ id: \"front-matter\",\ntitle: \"SEO front matter\",\ntext: \"<nothing yet>\",\njsSource: \"gptool({\\n    title: \\\"SEO front matter\\\",\\n    description: \\\"Up\"...,\ndescription: \"Update or generate SEO-optimized front matter for a markdown\"...,\ncategories: [ \"markdown\" ],\nsystem: [ \"system\",\n  \"system.files\" ],\nmaxTokens: 2000,\ntemperature: 0,\ninput: \".md\" }\n```````````````\n\n## System prompt\n###  template: `system`\n\n```````````````js\n  1: system({ title: \"System prompt\" })\n  2: $`You are concise. Answer in markdown.`\n```````````````\n#### Expanded system prompt\n```````````````markdown\nYou are concise. Answer in markdown.\n```````````````\n###  template: `system.files`\n\n```````````````js\n  1: system({ title: \"File generation\", description: \"Teaches the file format supported by CoArch\" })\n  2: \n  3: const folder =\n  4:     env.vars[\"system.multifile.outputFolder\"] ||\n  5:     env.template.outputFolder\n  6: $`When generating or updating files you will use the following syntax:`\n  7: \n  8: def(`File ${folder || \".\"}/file1.ts`, `What goes in\\n${folder || \".\"}/file1.ts.`)\n  9: def(`File /path_to_file/file2.md`, `What goes in\\n/path_to_file/file2.md.`)\n 10: \n 11: $`Make sure to use precisely ${env.fence} to guard file code sections.`\n 12: $`Use full path of filename in code section header.`\n 13: if (folder)\n 14:     $`When generating new files, place files in folder \"${folder}\".`\n 15: $`If a file does not have changes, do not regenerate.`\n 16: \n```````````````\n#### Expanded system prompt\n```````````````markdown\nWhen generating or updating files you will use the following syntax:\n\nFile ./file1.ts:\n`````\nWhat goes in\n./file1.ts.\n`````\n\nFile /path_to_file/file2.md:\n`````\nWhat goes in\n/path_to_file/file2.md.\n`````\n\nMake sure to use precisely ````` to guard file code sections.\n\nUse full path of filename in code section header.\n\nIf a file does not have changes, do not regenerate.\n```````````````\n\n\n## Final prompt\n\n-  model: `gpt-4`\n-  temperature: \n-  max tokens: 2000\n\n```````````````markdown\nSOURCE:\n````` file=src/README.md\n# PCF8563 Real-Time Clock Driver\n\nThis is a DeviceScript driver for the PCF8563 real-time clock (RTC) peripheral.\n\n## Usage\n\n```typescript\nimport { PCF8563 } from \"./pcf8563\";\n\nconst rtc = new PCF8563(0x51);\nawait rtc.init();\n\nconst currentTime = await rtc.readTime();\nconsole.log(\"Current time:\", currentTime);\n\nconst newTime = new Date();\nawait rtc.writeTime(newTime);\nconsole.log(\"Time updated to:\", newTime);\n```\n\n## Sources\n\n- [PCF8563 Datasheet](https://files.seeedstudio.com/wiki/round_display_for_xiao/RTC-PCF8563-datasheet.pdf)\n- [Adafruit CircuitPython PCF8563](https://github.com/adafruit/Adafruit_CircuitPython_PCF8563)\n- [tuupola/pcf8563](https://github.com/tuupola/pcf8563)\n`````\n\nYou are a search engine optimization expert at creating front matter for markdown document.\n\nUpdate or generate front matter of SOURCE files:\n- Update fields title, description and keywords as needed\n- use yaml format, do not use quotes\n- only 5 keywords or less\n- optimize for search engine optimization.\n- Do not modify the markdown content after the front matter\n\nIf no front matter is present, generate it.\n```````````````\n\n\n## AI Output\n\n\n```````````````markdown\n````` file=src/README.md\n---\ntitle: PCF8563 Real-Time Clock Driver\ndescription: DeviceScript driver for the PCF8563 real-time clock (RTC) peripheral.\nkeywords: PCF8563, Real-Time Clock, RTC, DeviceScript driver, peripheral\n---\n\n# PCF8563 Real-Time Clock Driver\n\nThis is a DeviceScript driver for the PCF8563 real-time clock (RTC) peripheral.\n\n## Usage\n\n```typescript\nimport { PCF8563 } from \"./pcf8563\";\n\nconst rtc = new PCF8563(0x51);\nawait rtc.init();\n\nconst currentTime = await rtc.readTime();\nconsole.log(\"Current time:\", currentTime);\n\nconst newTime = new Date();\nawait rtc.writeTime(newTime);\nconsole.log(\"Time updated to:\", newTime);\n```\n\n## Sources\n\n- [PCF8563 Datasheet](https://files.seeedstudio.com/wiki/round_display_for_xiao/RTC-PCF8563-datasheet.pdf)\n- [Adafruit CircuitPython PCF8563](https://github.com/adafruit/Adafruit_CircuitPython_PCF8563)\n- [tuupola/pcf8563](https://github.com/tuupola/pcf8563)\n`````\n```````````````\n\n\n### Extracted Variables\n\n-   `*`\n`````\n\n## Sources\n\n- [PCF8563 Datasheet](https://files.seeedstudio.com/wiki/round_display_for_xiao/RTC-PCF8563-datasheet.pdf)\n- [Adafruit CircuitPython PCF8563](https://github.com/adafruit/Adafruit_CircuitPython_PCF8563)\n- [tuupola/pcf8563](https://github.com/tuupola/pcf8563)\n`````\n\n\n`````\n\n","text":"````` file=src/README.md\n---\ntitle: PCF8563 Real-Time Clock Driver\ndescription: DeviceScript driver for the PCF8563 real-time clock (RTC) peripheral.\nkeywords: PCF8563, Real-Time Clock, RTC, DeviceScript driver, peripheral\n---\n\n# PCF8563 Real-Time Clock Driver\n\nThis is a DeviceScript driver for the PCF8563 real-time clock (RTC) peripheral.\n\n## Usage\n\n```typescript\nimport { PCF8563 } from \"./pcf8563\";\n\nconst rtc = new PCF8563(0x51);\nawait rtc.init();\n\nconst currentTime = await rtc.readTime();\nconsole.log(\"Current time:\", currentTime);\n\nconst newTime = new Date();\nawait rtc.writeTime(newTime);\nconsole.log(\"Time updated to:\", newTime);\n```\n\n## Sources\n\n- [PCF8563 Datasheet](https://files.seeedstudio.com/wiki/round_display_for_xiao/RTC-PCF8563-datasheet.pdf)\n- [Adafruit CircuitPython PCF8563](https://github.com/adafruit/Adafruit_CircuitPython_PCF8563)\n- [tuupola/pcf8563](https://github.com/tuupola/pcf8563)\n`````\n"}}}
{"sha":"0a0639d63455ce09c83ca0b85538b11b0fd3da3923ca3f34ea1fd04aafb07e93","key":{"template":{"id":"front-matter","title":"SEO front matter"},"fragment":{"fullId":"src/README.md.gpspec.md:0:0","hash":"2a37d8ccac6b48d9"}},"val":{"response":{"edits":[{"label":"Update /workspaces/coarch/packages/devicescript/src/README.md","filename":"/workspaces/coarch/packages/devicescript/src/README.md","type":"replace","range":[[0,0],[31,0]],"text":"---\ntitle: PCF8563 Real-Time Clock Driver\ndescription: DeviceScript driver for the PCF8563 real-time clock (RTC) peripheral.\nkeywords: PCF8563, Real-Time Clock, RTC, DeviceScript, Driver\n---\n\n# PCF8563 Real-Time Clock Driver\n\nThis is a DeviceScript driver for the PCF8563 real-time clock (RTC) peripheral.\n\n## Usage\n\n```typescript\nimport { PCF8563 } from \"./pcf8563\";\n\nconst rtc = new PCF8563(0x51);\nawait rtc.init();\n\nconst currentTime = await rtc.readTime();\nconsole.log(\"Current time:\", currentTime);\n\nconst newTime = new Date();\nawait rtc.writeTime(newTime);\nconsole.log(\"Time updated to:\", newTime);\n```\n\n## Sources\n\n- [PCF8563 Datasheet](https://files.seeedstudio.com/wiki/round_display_for_xiao/RTC-PCF8563-datasheet.pdf)\n- [Adafruit CircuitPython PCF8563](https://github.com/adafruit/Adafruit_CircuitPython_PCF8563)\n- [tuupola/pcf8563](https://github.com/tuupola/pcf8563)\n"}],"fileEdits":{"/workspaces/coarch/packages/devicescript/src/README.md":{"before":"# PCF8563 Real-Time Clock Driver\n\nThis is a DeviceScript driver for the PCF8563 real-time clock (RTC) peripheral.\n\n## Usage\n\n```typescript\nimport { PCF8563 } from \"./pcf8563\";\n\nconst rtc = new PCF8563(0x51);\nawait rtc.init();\n\nconst currentTime = await rtc.readTime();\nconsole.log(\"Current time:\", currentTime);\n\nconst newTime = new Date();\nawait rtc.writeTime(newTime);\nconsole.log(\"Time updated to:\", newTime);\n```\n\n## Sources\n\n- [PCF8563 Datasheet](https://files.seeedstudio.com/wiki/round_display_for_xiao/RTC-PCF8563-datasheet.pdf)\n- [Adafruit CircuitPython PCF8563](https://github.com/adafruit/Adafruit_CircuitPython_PCF8563)\n- [tuupola/pcf8563](https://github.com/tuupola/pcf8563)\n","after":"---\ntitle: PCF8563 Real-Time Clock Driver\ndescription: DeviceScript driver for the PCF8563 real-time clock (RTC) peripheral.\nkeywords: PCF8563, Real-Time Clock, RTC, DeviceScript, Driver\n---\n\n# PCF8563 Real-Time Clock Driver\n\nThis is a DeviceScript driver for the PCF8563 real-time clock (RTC) peripheral.\n\n## Usage\n\n```typescript\nimport { PCF8563 } from \"./pcf8563\";\n\nconst rtc = new PCF8563(0x51);\nawait rtc.init();\n\nconst currentTime = await rtc.readTime();\nconsole.log(\"Current time:\", currentTime);\n\nconst newTime = new Date();\nawait rtc.writeTime(newTime);\nconsole.log(\"Time updated to:\", newTime);\n```\n\n## Sources\n\n- [PCF8563 Datasheet](https://files.seeedstudio.com/wiki/round_display_for_xiao/RTC-PCF8563-datasheet.pdf)\n- [Adafruit CircuitPython PCF8563](https://github.com/adafruit/Adafruit_CircuitPython_PCF8563)\n- [tuupola/pcf8563](https://github.com/tuupola/pcf8563)\n"}},"trace":"\n# Prompt trace\n\n\n\n## Prompt template \"SEO front matter\" (`front-matter`)\n\n```````````````js\n  1: gptool({\n  2:     title: \"SEO front matter\",\n  3:     description: \"Update or generate SEO-optimized front matter for a markdown file.\",\n  4:     categories: [\"markdown\"],\n  5:     system: [\"system\", \"system.files\"],\n  6:     maxTokens: 2000,\n  7:     temperature: 0,\n  8: })\n  9: \n 10: def(\"FILE\", env.links.filter(f => f.filename.endsWith(\".md\")))\n 11: \n 12: $`\n 13: You are a search engine optimization expert at creating front matter for markdown document.\n 14: \n 15: Update or generate front matter in FILE:\n 16: - Update fields title, description and keywords as needed\n 17: - use yaml format, do not use quotes\n 18: - only 5 keywords or less\n 19: - optimize for search engine optimization.\n 20: - Do not modify the markdown content after the front matter\n 21: \n 22: If no front matter is present, generate it.\n 23: `\n 24: \n```````````````\n\n\n\n## Inline prompts\n\nAdded as comment at the end of a fragment: \n\n```markdown\nLorem ipsum...\n\n<!-- @prompt.NAME \nYou are concise.\n!-->\n```\n        \n\n-   **@prompt** missing\n-   **@prompt.markdown** missing\n\n\n## console output\n> tip: use `console.log()` from gptool.js files\n## Expanded prompt\n\n```````````````markdown\nFILE:\n````` file=src/README.md\n# PCF8563 Real-Time Clock Driver\n\nThis is a DeviceScript driver for the PCF8563 real-time clock (RTC) peripheral.\n\n## Usage\n\n```typescript\nimport { PCF8563 } from \"./pcf8563\";\n\nconst rtc = new PCF8563(0x51);\nawait rtc.init();\n\nconst currentTime = await rtc.readTime();\nconsole.log(\"Current time:\", currentTime);\n\nconst newTime = new Date();\nawait rtc.writeTime(newTime);\nconsole.log(\"Time updated to:\", newTime);\n```\n\n## Sources\n\n- [PCF8563 Datasheet](https://files.seeedstudio.com/wiki/round_display_for_xiao/RTC-PCF8563-datasheet.pdf)\n- [Adafruit CircuitPython PCF8563](https://github.com/adafruit/Adafruit_CircuitPython_PCF8563)\n- [tuupola/pcf8563](https://github.com/tuupola/pcf8563)\n`````\n\nYou are a search engine optimization expert at creating front matter for markdown document.\n\nUpdate or generate front matter in FILE:\n- Update fields title, description and keywords as needed\n- use yaml format, do not use quotes\n- only 5 keywords or less\n- optimize for search engine optimization.\n- Do not modify the markdown content after the front matter\n\nIf no front matter is present, generate it.\n```````````````\n\n\n## Variables\nVariables are referenced through `env.NAME` in prompts.\n\n-   env.**error**: `ERROR-ZUYVEQ`\n\n-   env.**file**\n```````````````js\n{ filename: \"src/README.md.gpspec.md\",\nlabel: \"current\",\ncontent: \"# README.md\\n\\n-   [README.md](./README.md)\\n\" }\n```````````````\n\n-   env.**links**\n```````````````js\n[ { label: \"README.md\",\n  filename: \"src/README.md\",\n  content: \"# PCF8563 Real-Time Clock Driver\\n\\nThis is a DeviceScript dri\"... } ]\n```````````````\n\n-   env.**parents**\n```````````````js\n[  ]\n```````````````\n\n-   env.**fence**\n```````````````\n`````\n```````````````\n\n-   env.**promptOptions**\n```````````````js\n{  }\n```````````````\n\n-   env.**vars**\n```````````````js\n{  }\n```````````````\n\n-   env.**templates**\n```````````````js\n[ { id: \"addboard\",\n  title: \"Add board\",\n  description: \"Updates a DeviceScript board.json generic file with informat\"... },\n{ id: \"summarizecode\",\n  title: \"Code Summarizer\",\n  description: \"Given a source file in a programming language, extract the s\"... },\n{ id: \"todo\",\n  title: \"TODOs\",\n  description: \"Try to implement TODOs found in source code.\" },\n{ id: \"firmware\",\n  title: \"firmware\",\n  description: \"Compile information about various sources to generate Device\"... },\n{ id: \"core.default\",\n  title: \"Run gpspec directly\",\n  description: \"This is the default gptool that assumes the gpspec contains \"... },\n{ id: \"front-matter\",\n  title: \"SEO front matter\",\n  description: \"Update or generate SEO-optimized front matter for a markdown\"... } ]\n```````````````\n\n-   env.**template**\n```````````````js\n{ id: \"front-matter\",\ntitle: \"SEO front matter\",\ntext: \"<nothing yet>\",\njsSource: \"gptool({\\n    title: \\\"SEO front matter\\\",\\n    description: \\\"Up\"...,\ndescription: \"Update or generate SEO-optimized front matter for a markdown\"...,\ncategories: [ \"markdown\" ],\nsystem: [ \"system\",\n  \"system.files\" ],\nmaxTokens: 2000,\ntemperature: 0,\ninput: \".md\" }\n```````````````\n\n## System prompt\n###  template: `system`\n\n```````````````js\n  1: system({ title: \"System prompt\" })\n  2: $`You are concise. Answer in markdown.`\n```````````````\n#### Expanded system prompt\n```````````````markdown\nYou are concise. Answer in markdown.\n```````````````\n###  template: `system.files`\n\n```````````````js\n  1: system({ title: \"File generation\", description: \"Teaches the file format supported by CoArch\" })\n  2: \n  3: const folder =\n  4:     env.vars[\"system.multifile.outputFolder\"] ||\n  5:     env.template.outputFolder\n  6: $`When generating or updating files you will use the following syntax:`\n  7: \n  8: def(`File ${folder || \".\"}/file1.ts`, `What goes in\\n${folder || \".\"}/file1.ts.`)\n  9: def(`File /path_to_file/file2.md`, `What goes in\\n/path_to_file/file2.md.`)\n 10: \n 11: $`Make sure to use precisely ${env.fence} to guard file code sections.`\n 12: $`Use full path of filename in code section header.`\n 13: if (folder)\n 14:     $`When generating new files, place files in folder \"${folder}\".`\n 15: $`If a file does not have changes, do not regenerate.`\n 16: \n```````````````\n#### Expanded system prompt\n```````````````markdown\nWhen generating or updating files you will use the following syntax:\n\nFile ./file1.ts:\n`````\nWhat goes in\n./file1.ts.\n`````\n\nFile /path_to_file/file2.md:\n`````\nWhat goes in\n/path_to_file/file2.md.\n`````\n\nMake sure to use precisely ````` to guard file code sections.\n\nUse full path of filename in code section header.\n\nIf a file does not have changes, do not regenerate.\n```````````````\n\n\n## Final prompt\n\n-  model: `gpt-4`\n-  temperature: \n-  max tokens: 2000\n\n```````````````markdown\nFILE:\n````` file=src/README.md\n# PCF8563 Real-Time Clock Driver\n\nThis is a DeviceScript driver for the PCF8563 real-time clock (RTC) peripheral.\n\n## Usage\n\n```typescript\nimport { PCF8563 } from \"./pcf8563\";\n\nconst rtc = new PCF8563(0x51);\nawait rtc.init();\n\nconst currentTime = await rtc.readTime();\nconsole.log(\"Current time:\", currentTime);\n\nconst newTime = new Date();\nawait rtc.writeTime(newTime);\nconsole.log(\"Time updated to:\", newTime);\n```\n\n## Sources\n\n- [PCF8563 Datasheet](https://files.seeedstudio.com/wiki/round_display_for_xiao/RTC-PCF8563-datasheet.pdf)\n- [Adafruit CircuitPython PCF8563](https://github.com/adafruit/Adafruit_CircuitPython_PCF8563)\n- [tuupola/pcf8563](https://github.com/tuupola/pcf8563)\n`````\n\nYou are a search engine optimization expert at creating front matter for markdown document.\n\nUpdate or generate front matter in FILE:\n- Update fields title, description and keywords as needed\n- use yaml format, do not use quotes\n- only 5 keywords or less\n- optimize for search engine optimization.\n- Do not modify the markdown content after the front matter\n\nIf no front matter is present, generate it.\n```````````````\n\n\n## AI Output\n\n\n```````````````markdown\nFILE:\n````` file=src/README.md\n---\ntitle: PCF8563 Real-Time Clock Driver\ndescription: DeviceScript driver for the PCF8563 real-time clock (RTC) peripheral.\nkeywords: PCF8563, Real-Time Clock, RTC, DeviceScript, Driver\n---\n\n# PCF8563 Real-Time Clock Driver\n\nThis is a DeviceScript driver for the PCF8563 real-time clock (RTC) peripheral.\n\n## Usage\n\n```typescript\nimport { PCF8563 } from \"./pcf8563\";\n\nconst rtc = new PCF8563(0x51);\nawait rtc.init();\n\nconst currentTime = await rtc.readTime();\nconsole.log(\"Current time:\", currentTime);\n\nconst newTime = new Date();\nawait rtc.writeTime(newTime);\nconsole.log(\"Time updated to:\", newTime);\n```\n\n## Sources\n\n- [PCF8563 Datasheet](https://files.seeedstudio.com/wiki/round_display_for_xiao/RTC-PCF8563-datasheet.pdf)\n- [Adafruit CircuitPython PCF8563](https://github.com/adafruit/Adafruit_CircuitPython_PCF8563)\n- [tuupola/pcf8563](https://github.com/tuupola/pcf8563)\n`````\n```````````````\n\n\n### Extracted Variables\n\n-   `FILE src/README.md`\n`````\n---\ntitle: PCF8563 Real-Time Clock Driver\ndescription: DeviceScript driver for the PCF8563 real-time clock (RTC) peripheral.\nkeywords: PCF8563, Real-Time Clock, RTC, DeviceScript, Driver\n---\n\n# PCF8563 Real-Time Clock Driver\n\nThis is a DeviceScript driver for the PCF8563 real-time clock (RTC) peripheral.\n\n## Usage\n\n```typescript\nimport { PCF8563 } from \"./pcf8563\";\n\nconst rtc = new PCF8563(0x51);\nawait rtc.init();\n\nconst currentTime = await rtc.readTime();\nconsole.log(\"Current time:\", currentTime);\n\nconst newTime = new Date();\nawait rtc.writeTime(newTime);\nconsole.log(\"Time updated to:\", newTime);\n```\n\n## Sources\n\n- [PCF8563 Datasheet](https://files.seeedstudio.com/wiki/round_display_for_xiao/RTC-PCF8563-datasheet.pdf)\n- [Adafruit CircuitPython PCF8563](https://github.com/adafruit/Adafruit_CircuitPython_PCF8563)\n- [tuupola/pcf8563](https://github.com/tuupola/pcf8563)\n\n`````\n\n","text":"FILE:\n````` file=src/README.md\n---\ntitle: PCF8563 Real-Time Clock Driver\ndescription: DeviceScript driver for the PCF8563 real-time clock (RTC) peripheral.\nkeywords: PCF8563, Real-Time Clock, RTC, DeviceScript, Driver\n---\n\n# PCF8563 Real-Time Clock Driver\n\nThis is a DeviceScript driver for the PCF8563 real-time clock (RTC) peripheral.\n\n## Usage\n\n```typescript\nimport { PCF8563 } from \"./pcf8563\";\n\nconst rtc = new PCF8563(0x51);\nawait rtc.init();\n\nconst currentTime = await rtc.readTime();\nconsole.log(\"Current time:\", currentTime);\n\nconst newTime = new Date();\nawait rtc.writeTime(newTime);\nconsole.log(\"Time updated to:\", newTime);\n```\n\n## Sources\n\n- [PCF8563 Datasheet](https://files.seeedstudio.com/wiki/round_display_for_xiao/RTC-PCF8563-datasheet.pdf)\n- [Adafruit CircuitPython PCF8563](https://github.com/adafruit/Adafruit_CircuitPython_PCF8563)\n- [tuupola/pcf8563](https://github.com/tuupola/pcf8563)\n`````\n"}}}
